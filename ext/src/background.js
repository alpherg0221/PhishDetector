import{h as wN,L as tp,u as vN,d as kN}from"../assets/utils.js";import{g as SN,c as Ko,a as CN}from"../assets/_commonjsHelpers.js";function IN(n,e){for(var t=0;t<e.length;t++){const s=e[t];if(typeof s!="string"&&!Array.isArray(s)){for(const r in s)if(r!=="default"&&!(r in n)){const o=Object.getOwnPropertyDescriptor(s,r);o&&Object.defineProperty(n,r,o.get?o:{enumerable:!0,get:()=>s[r]})}}}return Object.freeze(Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}))}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const NN=1e-7,$N=1e-4;class V0{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}}class Qp{refCount(e){return Zn("refCount")}incRef(e){return Zn("incRef")}timerAvailable(){return!0}time(e){return Zn("time")}read(e){return Zn("read")}readSync(e){return Zn("readSync")}readToGPU(e,t){return Zn("readToGPU")}numDataIds(){return Zn("numDataIds")}disposeData(e,t){return Zn("disposeData")}write(e,t,s){return Zn("write")}move(e,t,s,r,o){return Zn("move")}createTensorFromGPUData(e,t,s){return Zn("createTensorFromGPUData")}memory(){return Zn("memory")}floatPrecision(){return Zn("floatPrecision")}epsilon(){return this.floatPrecision()===32?NN:$N}dispose(){return Zn("dispose")}}function Zn(n){throw new Error(`'${n}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TN(n){let e=n.length,t=0;for(;e>0;)t=Math.random()*e|0,e--,ga(n,e,t)}function Ro(n,e,t){return Math.max(n,Math.min(e,t))}function ef(n){return n%2===0?n:n+1}function ga(n,e,t){const s=n[e];n[e]=n[t],n[t]=s}function _N(n){let e=0;for(let t=0;t<n.length;t++)e+=n[t];return e}function P(n,e){if(!n)throw new Error(typeof e=="string"?e:e())}function cs(n,e,t=""){P(ft(n,e),()=>t+` Shapes ${n} and ${e} must match`)}function Wa(n){P(n!=null,()=>"The input to the tensor constructor must be a non-null value.")}function me(n){if(n.length===0)return 1;let e=n[0];for(let t=1;t<n.length;t++)e*=n[t];return e}function EN(n,e){if(n===e)return!0;if(n==null||e==null||n.length!==e.length)return!1;for(let t=0;t<n.length;t++)if(n[t]!==null&&e[t]!==null&&n[t]!==e[t])return!1;return!0}function ft(n,e){if(n===e)return!0;if(n==null||e==null||n.length!==e.length)return!1;for(let t=0;t<n.length;t++)if(n[t]!==e[t])return!1;return!0}function _a(n){return n%1===0}function np(n){const e=Math.ceil(Math.sqrt(n));return[e,Math.ceil(n/e)]}function va(n,e){return e<=n.length?n:n+" ".repeat(e-n.length)}function Jy(n,e=r=>0,t,s){return new Promise((r,o)=>{let a=0;const l=()=>{if(n()){r();return}a++;const i=e(a);if(t!=null&&a>=t){o();return}s!=null?s(l,i):setTimeout(l,i)};l()})}function W0(n,e){let t=1,s=-1;for(let o=0;o<n.length;++o)if(n[o]>=0)t*=n[o];else if(n[o]===-1){if(s!==-1)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${s} and dim ${o}`);s=o}else if(n[o]<0)throw Error(`Shapes can not be < 0. Found ${n[o]} at dim ${o}`);if(s===-1){if(e>0&&e!==t)throw Error(`Size(${e}) must match the product of shape ${n}`);return n}if(t===0)throw Error(`Cannot infer the missing size in [${n}] when there are 0 elements`);if(e%t!==0)throw Error(`The implicit shape can't be a fractional number. Got ${e} / ${t}`);const r=n.slice();return r[s]=e/t,r}function ct(n,e){const t=e.length;return n=n==null?e.map((s,r)=>r):[].concat(n),P(n.every(s=>s>=-t&&s<t),()=>`All values in axis param must be in range [-${t}, ${t}) but got axis ${n}`),P(n.every(s=>_a(s)),()=>`All values in axis param must be integers but got axis ${n}`),n.map(s=>s<0?t+s:s)}function so(n,e){const t=[],s=[],r=e!=null&&Array.isArray(e)&&e.length===0,o=e==null||r?null:ct(e,n).sort();let a=0;for(let l=0;l<n.length;++l){if(o!=null){if(o[a]===l&&n[l]!==1)throw new Error(`Can't squeeze axis ${l} since its dim '${n[l]}' is not 1`);(o[a]==null||o[a]>l)&&n[l]===1&&(t.push(n[l]),s.push(l)),o[a]<=l&&a++}n[l]!==1&&(t.push(n[l]),s.push(l))}return{newShape:t,keptDims:s}}function Sn(n,e){return Zt(n,e)}function Zt(n,e){let t=null;if(n==null||n==="float32")t=new Float32Array(e);else if(n==="int32")t=new Int32Array(e);else if(n==="bool")t=new Uint8Array(e);else if(n==="string")t=new Array(e);else throw new Error(`Unknown data type ${n}`);return t}function AN(n,e){for(let t=0;t<n.length;t++){const s=n[t];if(isNaN(s)||!isFinite(s))throw Error(`A tensor of type ${e} being uploaded contains ${s}.`)}}function DN(n){return n==="bool"||n==="complex64"||n==="float32"||n==="int32"||n==="string"}function U0(n,e){return!(e==="complex64"||e==="float32"&&n!=="complex64"||e==="int32"&&n!=="float32"&&n!=="complex64"||e==="bool"&&n==="bool")}function qu(n){if(n==="float32"||n==="int32")return 4;if(n==="complex64")return 8;if(n==="bool")return 1;throw new Error(`Unknown dtype ${n}`)}function RN(n){if(n==null)return 0;let e=0;return n.forEach(t=>e+=t.length),e}function Vi(n){return typeof n=="string"||n instanceof String}function FN(n){return typeof n=="boolean"}function sp(n){return typeof n=="number"}function Ua(n){return Array.isArray(n)?Ua(n[0]):n instanceof Float32Array?"float32":n instanceof Int32Array||n instanceof Uint8Array||n instanceof Uint8ClampedArray?"int32":sp(n)?"float32":Vi(n)?"string":FN(n)?"bool":"float32"}function rp(n){return!!(n&&n.constructor&&n.call&&n.apply)}function op(n,e){for(let t=e;t<n;++t)if(n%t===0)return t;return n}function Ze(n){const e=n.length;if(e<2)return[];const t=new Array(e-1);t[e-2]=n[e-1];for(let s=e-3;s>=0;--s)t[s]=t[s+1]*n[s+1];return t}function G0(n,e,t,s=!1){const r=new Array;if(e.length===1){const o=e[0]*(s?2:1);for(let a=0;a<o;a++)r[a]=t[n+a]}else{const o=e[0],a=e.slice(1),l=a.reduce((i,u)=>i*u)*(s?2:1);for(let i=0;i<o;i++)r[i]=G0(n+i*l,a,t,s)}return r}function Rs(n,e,t=!1){if(n.length===0)return e[0];const s=n.reduce((r,o)=>r*o)*(t?2:1);if(s===0)return[];if(s!==e.length)throw new Error(`[${n}] does not match the input size ${e.length}${t?" for a complex tensor":""}.`);return G0(0,n,e,t)}function ON(n,e){if(Array.isArray(n))return n;if(e==="float32")return n instanceof Float32Array?n:new Float32Array(n);if(e==="int32")return n instanceof Int32Array?n:new Int32Array(n);if(e==="bool"||e==="string")return Uint8Array.from(new Int32Array(n));throw new Error(`Unknown dtype ${e}`)}function tf(n,e){const t=Dn(n,e);for(let s=0;s<t.length;s++)t[s]=1;return t}function Dn(n,e){if(e==null||e==="float32"||e==="complex64")return new Float32Array(n);if(e==="int32")return new Int32Array(n);if(e==="bool")return new Uint8Array(n);throw new Error(`Unknown data type ${e}`)}function H0(n,e){const t=n.reduce((s,r)=>s*r,1);if(e==null||e==="float32")return Rs(n,new Float32Array(t));if(e==="int32")return Rs(n,new Int32Array(t));if(e==="bool")return Rs(n,new Uint8Array(t));throw new Error(`Unknown data type ${e}`)}function xs(n){n.forEach(e=>{P(Number.isInteger(e)&&e>=0,()=>`Tensor must have a shape comprised of positive integers but got shape [${n}].`)})}function ur(n,e,t){if(e===0)return 0;if(e===1)return n[0];let s=n[n.length-1];for(let r=0;r<n.length-1;++r)s+=t[r]*n[r];return s}function Ga(n,e,t){if(e===0)return[];if(e===1)return[n];const s=new Array(e);for(let r=0;r<s.length-1;++r)s[r]=Math.floor(n/t[r]),n-=s[r]*t[r];return s[s.length-1]=n,s}function Fo(n){return n&&n.then&&typeof n.then=="function"}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Qy="tfjsflags";class LN{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=PN,this.populateURLFlags()}setPlatform(e,t){this.platform!=null&&(de().getBool("IS_TEST")||de().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${e}.`)),this.platformName=e,this.platform=t}registerFlag(e,t,s){if(this.flagRegistry[e]={evaluationFn:t,setHook:s},this.urlFlags[e]!=null){const r=this.urlFlags[e];de().getBool("IS_TEST")||de().getBool("PROD")||console.warn(`Setting feature override from URL ${e}: ${r}.`),this.set(e,r)}}async getAsync(e){return e in this.flags?this.flags[e]:(this.flags[e]=await this.evaluateFlag(e),this.flags[e])}get(e){if(e in this.flags)return this.flags[e];const t=this.evaluateFlag(e);if(Fo(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getString(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(this.flagRegistry[e]==null)throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,this.flagRegistry[e].setHook!=null&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(this.flagRegistry[e]==null)throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(typeof this.global>"u"||typeof this.global.location>"u"||typeof this.global.location.search>"u")return;const e=this.getQueryParams(this.global.location.search);Qy in e&&e[Qy].split(",").forEach(s=>{const[r,o]=s.split(":");this.urlFlags[r]=BN(r,o)})}}function PN(n){const e={};return n.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(t,...s)=>(zN(e,s[0],s[1]),s.join("="))),e}function zN(n,e,t){n[decodeURIComponent(e)]=decodeURIComponent(t||"")}function BN(n,e){const t=e.toLowerCase();return t==="true"||t==="false"?t==="true":`${+t}`===t?+t:e}function de(){return j0}let j0=null;function MN(n){j0=n}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Fd;function q0(){if(Fd==null){let n;if(typeof window<"u")n=window;else if(typeof global<"u")n=global;else if(typeof process<"u")n=process;else if(typeof self<"u")n=self;else throw new Error("Could not find a global object");Fd=n}return Fd}function VN(){const n=q0();return n._tfGlobals==null&&(n._tfGlobals=new Map),n._tfGlobals}function nf(n,e){const t=VN();if(t.has(n))return t.get(n);{const s=e();return t.set(n,s),t.get(n)}}const Sc="Abs",Wi="Acos",Ui="Acosh",Ha="Add",Cc="AddN",sf="All",rf="Any",Ic="ArgMax",Nc="ArgMin",Gi="Asin",Hi="Asinh",ji="Atan",qi="Atanh",Ki="Atan2",$c="AvgPool",of="AvgPoolGrad",Tc="AvgPool3D",af="AvgPool3DGrad",_c="BatchMatMul",Ec="BatchToSpaceND",lf="Bincount",Ac="BitwiseAnd",WN="BroadcastTo",uf="BroadcastArgs",Xi="Cast",Yi="Ceil",Zi="ClipByValue",cf="Complex",Dc="ComplexAbs",Rc="Concat",Fc="Conv2D",hf="Conv2DBackpropFilter",Oc="Conv2DBackpropInput",Lc="Conv3D",df="Conv3DBackpropFilterV2",pf="Conv3DBackpropInputV2",Ji="Cos",Qi="Cosh",ff="Cumprod",Pc="Cumsum",mf="CropAndResize",gf="DenseBincount",yf="DepthToSpace",zc="DepthwiseConv2dNative",bf="DepthwiseConv2dNativeBackpropFilter",xf="DepthwiseConv2dNativeBackpropInput",wf="Diag",Bc="Dilation2D",ap="Dilation2DBackpropInput",ip="Dilation2DBackpropFilter",UN="Draw",el="RealDiv",vf="Einsum",tl="Elu",kf="EluGrad",nl="Erf",Mc="Equal",sl="Exp",Vc="ExpandDims",rl="Expm1",Sf="FFT",Cf="Fill",If="FlipLeftRight",ol="Floor",al="FloorDiv",Wc="FusedBatchNorm",Uc="GatherV2",Nf="GatherNd",Gc="Greater",il="GreaterEqual",ll="Identity",$f="IFFT",Tf="Imag",ul="IsFinite",cl="IsInf",hl="IsNan",Hc="LeakyRelu",jc="Less",qc="LessEqual",_f="LinSpace",dl="Log",pl="Log1p",Kc="LogicalAnd",Xc="LogicalNot",Yc="LogicalOr",GN="LogSoftmax",Zc="LRN",Ef="LRNGrad",Jc="Max",fl="Maximum",Qc="MaxPool",Af="MaxPoolGrad",eh="MaxPool3D",Df="MaxPool3DGrad",Rf="MaxPoolWithArgmax",th="Mean",nh="Min",ml="Minimum",sh="MirrorPad",gl="Mod",Ff="Multinomial",yl="Multiply",rh="Neg",oh="NotEqual",Of="NonMaxSuppressionV3",Lf="NonMaxSuppressionV4",Pf="NonMaxSuppressionV5",ah="OnesLike",ih="OneHot",lh="Pack",uh="PadV2",bl="Pow",ch="Prelu",hh="Prod",zf="RaggedGather",Bf="RaggedRange",Mf="RaggedTensorToTensor",Vf="Range",Wf="Real",xl="Reciprocal",wl="Relu",dh="Reshape",ph="ResizeNearestNeighbor",Uf="ResizeNearestNeighborGrad",fh="ResizeBilinear",Gf="ResizeBilinearGrad",vl="Relu6",mh="Reverse",kl="Round",Sl="Rsqrt",Hf="ScatterNd",jf="TensorScatterUpdate",qf="SearchSorted",gh="Select",Cl="Selu",yh="Slice",Il="Sin",Nl="Sinh",$l="Sign",Tl="Sigmoid",_l="Softplus",El="Sqrt",bh="Sum",xh="SpaceToBatchND",wh="SplitV",vh="Softmax",Kf="SparseFillEmptyRows",Xf="SparseReshape",Yf="SparseSegmentMean",Zf="SparseSegmentSum",Jf="SparseToDense",Al="SquaredDifference",Qf="Square",kh="StaticRegexReplace",em="StridedSlice",tm="StringNGrams",nm="StringSplit",sm="StringToHashBucketFast",Dl="Sub",Rl="Tan",Fl="Tanh",Ol="Tile",rm="TopK",om="Transform",ka="Transpose",am="Unique",Sh="Unpack",Ch="UnsortedSegmentSum",Ih="ZerosLike",Ll="Step",HN="FromPixels",im="RotateWithOffset",Ku="_FusedMatMul",Xu="FusedConv2D",Yu="FusedDepthwiseConv2D";/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ms(...n){de().getBool("IS_TEST")||de().getBool("PROD")||console.warn(...n)}function jN(...n){de().getBool("IS_TEST")||de().getBool("PROD")||console.log(...n)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Zu=nf("kernelRegistry",()=>new Map),lp=nf("gradRegistry",()=>new Map);function eb(n,e){const t=X0(n,e);return Zu.get(t)}function tb(n){return lp.get(n)}function nb(n){const e=Zu.entries(),t=[];for(;;){const{done:s,value:r}=e.next();if(s)break;const[o,a]=r,[l]=o.split("_");l===n&&t.push(a)}return t}function K0(n){const{kernelName:e,backendName:t}=n,s=X0(e,t);Zu.has(s)&&ms(`The kernel '${e}' for backend '${t}' is already registered`),Zu.set(s,n)}function qN(n){const{kernelName:e}=n;lp.has(e)&&de().getBool("DEBUG")&&ms(`Overriding the gradient for '${e}'`),lp.set(e,n)}function X0(n,e){return`${e}_${n}`}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Y0(n){return n instanceof Float32Array||n instanceof Int32Array||n instanceof Uint8Array||n instanceof Uint8ClampedArray}var Z0=Ot,$s=null;try{$s=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch{}function Ot(n,e,t){this.low=n|0,this.high=e|0,this.unsigned=!!t}Ot.prototype.__isLong__;Object.defineProperty(Ot.prototype,"__isLong__",{value:!0});function hs(n){return(n&&n.__isLong__)===!0}Ot.isLong=hs;var sb={},rb={};function Xo(n,e){var t,s,r;return e?(n>>>=0,(r=0<=n&&n<256)&&(s=rb[n],s)?s:(t=Lt(n,(n|0)<0?-1:0,!0),r&&(rb[n]=t),t)):(n|=0,(r=-128<=n&&n<128)&&(s=sb[n],s)?s:(t=Lt(n,n<0?-1:0,!1),r&&(sb[n]=t),t))}Ot.fromInt=Xo;function Ts(n,e){if(isNaN(n))return e?To:_s;if(e){if(n<0)return To;if(n>=J0)return tx}else{if(n<=-ab)return ts;if(n+1>=ab)return ex}return n<0?Ts(-n,e).neg():Lt(n%Ea|0,n/Ea|0,e)}Ot.fromNumber=Ts;function Lt(n,e,t){return new Ot(n,e,t)}Ot.fromBits=Lt;var Ju=Math.pow;function lm(n,e,t){if(n.length===0)throw Error("empty string");if(n==="NaN"||n==="Infinity"||n==="+Infinity"||n==="-Infinity")return _s;if(typeof e=="number"?(t=e,e=!1):e=!!e,t=t||10,t<2||36<t)throw RangeError("radix");var s;if((s=n.indexOf("-"))>0)throw Error("interior hyphen");if(s===0)return lm(n.substring(1),e,t).neg();for(var r=Ts(Ju(t,8)),o=_s,a=0;a<n.length;a+=8){var l=Math.min(8,n.length-a),i=parseInt(n.substring(a,a+l),t);if(l<8){var u=Ts(Ju(t,l));o=o.mul(u).add(Ts(i))}else o=o.mul(r),o=o.add(Ts(i))}return o.unsigned=e,o}Ot.fromString=lm;function Zs(n,e){return typeof n=="number"?Ts(n,e):typeof n=="string"?lm(n,e):Lt(n.low,n.high,typeof e=="boolean"?e:n.unsigned)}Ot.fromValue=Zs;var ob=65536,KN=1<<24,Ea=ob*ob,J0=Ea*Ea,ab=J0/2,ib=Xo(KN),_s=Xo(0);Ot.ZERO=_s;var To=Xo(0,!0);Ot.UZERO=To;var wa=Xo(1);Ot.ONE=wa;var Q0=Xo(1,!0);Ot.UONE=Q0;var up=Xo(-1);Ot.NEG_ONE=up;var ex=Lt(-1,2147483647,!1);Ot.MAX_VALUE=ex;var tx=Lt(-1,-1,!0);Ot.MAX_UNSIGNED_VALUE=tx;var ts=Lt(0,-2147483648,!1);Ot.MIN_VALUE=ts;var Oe=Ot.prototype;Oe.toInt=function(){return this.unsigned?this.low>>>0:this.low};Oe.toNumber=function(){return this.unsigned?(this.high>>>0)*Ea+(this.low>>>0):this.high*Ea+(this.low>>>0)};Oe.toString=function(e){if(e=e||10,e<2||36<e)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative())if(this.eq(ts)){var t=Ts(e),s=this.div(t),r=s.mul(t).sub(this);return s.toString(e)+r.toInt().toString(e)}else return"-"+this.neg().toString(e);for(var o=Ts(Ju(e,6),this.unsigned),a=this,l="";;){var i=a.div(o),u=a.sub(i.mul(o)).toInt()>>>0,c=u.toString(e);if(a=i,a.isZero())return c+l;for(;c.length<6;)c="0"+c;l=""+c+l}};Oe.getHighBits=function(){return this.high};Oe.getHighBitsUnsigned=function(){return this.high>>>0};Oe.getLowBits=function(){return this.low};Oe.getLowBitsUnsigned=function(){return this.low>>>0};Oe.getNumBitsAbs=function(){if(this.isNegative())return this.eq(ts)?64:this.neg().getNumBitsAbs();for(var e=this.high!=0?this.high:this.low,t=31;t>0&&!(e&1<<t);t--);return this.high!=0?t+33:t+1};Oe.isZero=function(){return this.high===0&&this.low===0};Oe.eqz=Oe.isZero;Oe.isNegative=function(){return!this.unsigned&&this.high<0};Oe.isPositive=function(){return this.unsigned||this.high>=0};Oe.isOdd=function(){return(this.low&1)===1};Oe.isEven=function(){return(this.low&1)===0};Oe.equals=function(e){return hs(e)||(e=Zs(e)),this.unsigned!==e.unsigned&&this.high>>>31===1&&e.high>>>31===1?!1:this.high===e.high&&this.low===e.low};Oe.eq=Oe.equals;Oe.notEquals=function(e){return!this.eq(e)};Oe.neq=Oe.notEquals;Oe.ne=Oe.notEquals;Oe.lessThan=function(e){return this.comp(e)<0};Oe.lt=Oe.lessThan;Oe.lessThanOrEqual=function(e){return this.comp(e)<=0};Oe.lte=Oe.lessThanOrEqual;Oe.le=Oe.lessThanOrEqual;Oe.greaterThan=function(e){return this.comp(e)>0};Oe.gt=Oe.greaterThan;Oe.greaterThanOrEqual=function(e){return this.comp(e)>=0};Oe.gte=Oe.greaterThanOrEqual;Oe.ge=Oe.greaterThanOrEqual;Oe.compare=function(e){if(hs(e)||(e=Zs(e)),this.eq(e))return 0;var t=this.isNegative(),s=e.isNegative();return t&&!s?-1:!t&&s?1:this.unsigned?e.high>>>0>this.high>>>0||e.high===this.high&&e.low>>>0>this.low>>>0?-1:1:this.sub(e).isNegative()?-1:1};Oe.comp=Oe.compare;Oe.negate=function(){return!this.unsigned&&this.eq(ts)?ts:this.not().add(wa)};Oe.neg=Oe.negate;Oe.add=function(e){hs(e)||(e=Zs(e));var t=this.high>>>16,s=this.high&65535,r=this.low>>>16,o=this.low&65535,a=e.high>>>16,l=e.high&65535,i=e.low>>>16,u=e.low&65535,c=0,h=0,d=0,p=0;return p+=o+u,d+=p>>>16,p&=65535,d+=r+i,h+=d>>>16,d&=65535,h+=s+l,c+=h>>>16,h&=65535,c+=t+a,c&=65535,Lt(d<<16|p,c<<16|h,this.unsigned)};Oe.subtract=function(e){return hs(e)||(e=Zs(e)),this.add(e.neg())};Oe.sub=Oe.subtract;Oe.multiply=function(e){if(this.isZero())return _s;if(hs(e)||(e=Zs(e)),$s){var t=$s.mul(this.low,this.high,e.low,e.high);return Lt(t,$s.get_high(),this.unsigned)}if(e.isZero())return _s;if(this.eq(ts))return e.isOdd()?ts:_s;if(e.eq(ts))return this.isOdd()?ts:_s;if(this.isNegative())return e.isNegative()?this.neg().mul(e.neg()):this.neg().mul(e).neg();if(e.isNegative())return this.mul(e.neg()).neg();if(this.lt(ib)&&e.lt(ib))return Ts(this.toNumber()*e.toNumber(),this.unsigned);var s=this.high>>>16,r=this.high&65535,o=this.low>>>16,a=this.low&65535,l=e.high>>>16,i=e.high&65535,u=e.low>>>16,c=e.low&65535,h=0,d=0,p=0,f=0;return f+=a*c,p+=f>>>16,f&=65535,p+=o*c,d+=p>>>16,p&=65535,p+=a*u,d+=p>>>16,p&=65535,d+=r*c,h+=d>>>16,d&=65535,d+=o*u,h+=d>>>16,d&=65535,d+=a*i,h+=d>>>16,d&=65535,h+=s*c+r*u+o*i+a*l,h&=65535,Lt(p<<16|f,h<<16|d,this.unsigned)};Oe.mul=Oe.multiply;Oe.divide=function(e){if(hs(e)||(e=Zs(e)),e.isZero())throw Error("division by zero");if($s){if(!this.unsigned&&this.high===-2147483648&&e.low===-1&&e.high===-1)return this;var t=(this.unsigned?$s.div_u:$s.div_s)(this.low,this.high,e.low,e.high);return Lt(t,$s.get_high(),this.unsigned)}if(this.isZero())return this.unsigned?To:_s;var s,r,o;if(this.unsigned){if(e.unsigned||(e=e.toUnsigned()),e.gt(this))return To;if(e.gt(this.shru(1)))return Q0;o=To}else{if(this.eq(ts)){if(e.eq(wa)||e.eq(up))return ts;if(e.eq(ts))return wa;var a=this.shr(1);return s=a.div(e).shl(1),s.eq(_s)?e.isNegative()?wa:up:(r=this.sub(e.mul(s)),o=s.add(r.div(e)),o)}else if(e.eq(ts))return this.unsigned?To:_s;if(this.isNegative())return e.isNegative()?this.neg().div(e.neg()):this.neg().div(e).neg();if(e.isNegative())return this.div(e.neg()).neg();o=_s}for(r=this;r.gte(e);){s=Math.max(1,Math.floor(r.toNumber()/e.toNumber()));for(var l=Math.ceil(Math.log(s)/Math.LN2),i=l<=48?1:Ju(2,l-48),u=Ts(s),c=u.mul(e);c.isNegative()||c.gt(r);)s-=i,u=Ts(s,this.unsigned),c=u.mul(e);u.isZero()&&(u=wa),o=o.add(u),r=r.sub(c)}return o};Oe.div=Oe.divide;Oe.modulo=function(e){if(hs(e)||(e=Zs(e)),$s){var t=(this.unsigned?$s.rem_u:$s.rem_s)(this.low,this.high,e.low,e.high);return Lt(t,$s.get_high(),this.unsigned)}return this.sub(this.div(e).mul(e))};Oe.mod=Oe.modulo;Oe.rem=Oe.modulo;Oe.not=function(){return Lt(~this.low,~this.high,this.unsigned)};Oe.and=function(e){return hs(e)||(e=Zs(e)),Lt(this.low&e.low,this.high&e.high,this.unsigned)};Oe.or=function(e){return hs(e)||(e=Zs(e)),Lt(this.low|e.low,this.high|e.high,this.unsigned)};Oe.xor=function(e){return hs(e)||(e=Zs(e)),Lt(this.low^e.low,this.high^e.high,this.unsigned)};Oe.shiftLeft=function(e){return hs(e)&&(e=e.toInt()),(e&=63)===0?this:e<32?Lt(this.low<<e,this.high<<e|this.low>>>32-e,this.unsigned):Lt(0,this.low<<e-32,this.unsigned)};Oe.shl=Oe.shiftLeft;Oe.shiftRight=function(e){return hs(e)&&(e=e.toInt()),(e&=63)===0?this:e<32?Lt(this.low>>>e|this.high<<32-e,this.high>>e,this.unsigned):Lt(this.high>>e-32,this.high>=0?0:-1,this.unsigned)};Oe.shr=Oe.shiftRight;Oe.shiftRightUnsigned=function(e){if(hs(e)&&(e=e.toInt()),e&=63,e===0)return this;var t=this.high;if(e<32){var s=this.low;return Lt(s>>>e|t<<32-e,t>>>e,this.unsigned)}else return e===32?Lt(t,0,this.unsigned):Lt(t>>>e-32,0,this.unsigned)};Oe.shru=Oe.shiftRightUnsigned;Oe.shr_u=Oe.shiftRightUnsigned;Oe.toSigned=function(){return this.unsigned?Lt(this.low,this.high,!1):this};Oe.toUnsigned=function(){return this.unsigned?this:Lt(this.low,this.high,!0)};Oe.toBytes=function(e){return e?this.toBytesLE():this.toBytesBE()};Oe.toBytesLE=function(){var e=this.high,t=this.low;return[t&255,t>>>8&255,t>>>16&255,t>>>24,e&255,e>>>8&255,e>>>16&255,e>>>24]};Oe.toBytesBE=function(){var e=this.high,t=this.low;return[e>>>24,e>>>16&255,e>>>8&255,e&255,t>>>24,t>>>16&255,t>>>8&255,t&255]};Ot.fromBytes=function(e,t,s){return s?Ot.fromBytesLE(e,t):Ot.fromBytesBE(e,t)};Ot.fromBytesLE=function(e,t){return new Ot(e[0]|e[1]<<8|e[2]<<16|e[3]<<24,e[4]|e[5]<<8|e[6]<<16|e[7]<<24,t)};Ot.fromBytesBE=function(e,t){return new Ot(e[4]<<24|e[5]<<16|e[6]<<8|e[7],e[0]<<24|e[1]<<16|e[2]<<8|e[3],t)};const nx=SN(Z0),XN=IN({__proto__:null,default:nx},[Z0]);/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Co=nx||XN;function Nh(n){return Co.fromString(n,!0,16)}const sx=Nh("c3a5c85c97cb3127"),So=Nh("b492b66fbe98f273"),Pn=Nh("9ae16a3b2f90404f");function cp(n){return n.xor(n.shru(47))}function rx(n,e,t){const s=n.slice(e,e+t);return Co.fromBytes(Array.from(s),!0,!0)}function Dt(n,e){return rx(n,e,8)}function lb(n,e){return rx(n,e,4)}function fn(n,e){return e===0?n:n.shru(e).or(n.shl(64-e))}function Ur(n,e,t=Nh("9ddfea08eb382d69")){let s=n.xor(e).mul(t);s=s.xor(s.shru(47));let r=e.xor(s).mul(t);return r=r.xor(r.shru(47)),r=r.mul(t),r}function YN(n,e,t,s,r,o){r=r.add(n),o=fn(o.add(r).add(s),21);const a=r;return r=r.add(e),r=r.add(t),o=o.add(fn(r,44)),[r.add(s),o.add(a)]}function Nu(n,e,t,s){return YN(Dt(n,e),Dt(n,e+8),Dt(n,e+16),Dt(n,e+24),t,s)}function ZN(n,e=n.length){if(e>=8){const t=Pn.add(e*2),s=Dt(n,0).add(Pn),r=Dt(n,e-8),o=fn(r,37).mul(t).add(s),a=fn(s,25).add(r).mul(t);return Ur(o,a,t)}if(e>=4){const t=Pn.add(e*2),s=lb(n,0);return Ur(s.shl(3).add(e),lb(n,e-4),t)}if(e>0){const t=n[0],s=n[e>>1],r=n[e-1],o=t+(s<<8),a=e+(r<<2);return cp(Pn.mul(o).xor(sx.mul(a))).mul(Pn)}return Pn}function JN(n,e=n.length){const t=Pn.add(e*2),s=Dt(n,0).mul(So),r=Dt(n,8),o=Dt(n,e-8).mul(t),a=Dt(n,e-16).mul(Pn);return Ur(fn(s.add(r),43).add(fn(o,30)).add(a),s.add(fn(r.add(Pn),18)).add(o),t)}function QN(n,e=n.length){const t=Pn.add(e*2),s=Dt(n,0).mul(Pn),r=Dt(n,8),o=Dt(n,e-8).mul(t),a=Dt(n,e-16).mul(Pn),l=fn(s.add(r),43).add(fn(o,30)).add(a),i=Ur(l,s.add(fn(r.add(Pn),18)).add(o),t),u=Dt(n,16).mul(t),c=Dt(n,24),h=l.add(Dt(n,e-32)).mul(t),d=i.add(Dt(n,e-24)).mul(t);return Ur(fn(u.add(c),43).add(fn(h,30)).add(d),u.add(fn(c.add(s),18)).add(h),t)}function e$(n,e=n.length){const t=Co.fromNumber(81,!0);if(e<=32)return e<=16?ZN(n,e):JN(n,e);if(e<=64)return QN(n,e);let s=t,r=t.mul(So).add(113),o=cp(r.mul(Pn).add(113)).mul(Pn),a=[Co.UZERO,Co.UZERO],l=[Co.UZERO,Co.UZERO];s=s.mul(Pn).add(Dt(n,0));let i=0;const u=(e-1>>6)*64,c=u+(e-1&63)-63;do s=fn(s.add(r).add(a[0]).add(Dt(n,i+8)),37).mul(So),r=fn(r.add(a[1]).add(Dt(n,i+48)),42).mul(So),s=s.xor(l[1]),r=r.add(a[0]).add(Dt(n,i+40)),o=fn(o.add(l[0]),33).mul(So),a=Nu(n,i,a[1].mul(So),s.add(l[0])),l=Nu(n,i+32,o.add(l[1]),r.add(Dt(n,i+16))),[o,s]=[s,o],i+=64;while(i!==u);const h=So.add(o.and(255).shl(1));return i=c,l[0]=l[0].add(e-1&63),a[0]=a[0].add(l[0]),l[0]=l[0].add(a[0]),s=fn(s.add(r).add(a[0]).add(Dt(n,i+8)),37).mul(h),r=fn(r.add(a[1]).add(Dt(n,i+48)),42).mul(h),s=s.xor(l[1].mul(9)),r=r.add(a[0].mul(9).add(Dt(n,i+40))),o=fn(o.add(l[0]),33).mul(h),a=Nu(n,i,a[1].mul(h),s.add(l[0])),l=Nu(n,i+32,o.add(l[1]),r.add(Dt(n,i+16))),[o,s]=[s,o],Ur(Ur(a[0],l[0],h).add(cp(r).mul(sx)).add(o),Ur(a[1],l[1],h).add(s),h)}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ro(n,e){return e==="string"?Gr(n):Yo([n],e)}function t$(n,e){return n instanceof Float32Array&&e==="float32"||n instanceof Int32Array&&e==="int32"||n instanceof Uint8Array&&e==="bool"}function Yo(n,e){if(e==="string")throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(n)&&(n=Oo(n)),de().getBool("DEBUG")&&AN(n,e),t$(n,e))return n;if(e==null||e==="float32"||e==="complex64")return new Float32Array(n);if(e==="int32")return new Int32Array(n);if(e==="bool"){const t=new Uint8Array(n.length);for(let s=0;s<t.length;++s)Math.round(n[s])!==0&&(t[s]=1);return t}else throw new Error(`Unknown data type ${e}`)}function Hn(){return de().platform.now()}function Gr(n,e="utf-8"){return e=e||"utf-8",de().platform.encode(n,e)}function qr(n,e="utf-8"){return e=e||"utf-8",de().platform.decode(n,e)}function Os(n){return de().platform.isTypedArray!=null?de().platform.isTypedArray(n):Y0(n)}function Oo(n,e=[],t=!1){if(e==null&&(e=[]),typeof n=="boolean"||typeof n=="number"||typeof n=="string"||Fo(n)||n==null||Os(n)&&t)e.push(n);else if(Array.isArray(n)||Os(n))for(let s=0;s<n.length;++s)Oo(n[s],e,t);else{let s=-1;for(const r of Object.keys(n))/^([1-9]+[0-9]*|0)$/.test(r)&&(s=Math.max(s,Number(r)));for(let r=0;r<=s;r++)Oo(n[r],e,t)}return e}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class n${constructor(e,t){this.backendTimer=e,this.logger=t,t==null&&(this.logger=new r$)}profileKernel(e,t,s){let r;const o=()=>{r=s()};let a;const l=Hn();if(this.backendTimer.timerAvailable())a=this.backendTimer.time(o);else{o();for(const u of r)u.dataSync();a=Promise.resolve({kernelMs:Hn()-l})}if(de().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let u=0;u<r.length;u++){const c=r[u];c.data().then(h=>{s$(h,c.dtype,e)})}return{kernelName:e,outputs:r,inputs:t,timeMs:a.then(u=>u.kernelMs),extraInfo:a.then(u=>u.getExtraProfileInfo!=null?u.getExtraProfileInfo():"")}}logKernelProfile(e){const{kernelName:t,outputs:s,timeMs:r,inputs:o,extraInfo:a}=e;s.forEach(l=>{Promise.all([l.data(),r,a]).then(i=>{this.logger.logKernelProfile(t,l,i[0],i[1],o,i[2])})})}}function s$(n,e,t){if(e!=="float32")return!1;for(let s=0;s<n.length;s++){const r=n[s];if(isNaN(r)||!isFinite(r))return console.warn(`Found ${r} in the result of '${t}'`),!0}return!1}class r${logKernelProfile(e,t,s,r,o,a){const l=typeof r=="number"?va(`${r}ms`,9):r.error,i=va(e,25),u=t.rank,c=t.size,h=va(t.shape.toString(),14);let d="";for(const p in o){const f=o[p];if(f!=null){const g=f.shape||t.shape,y=g.length;d+=`${p}: ${y}D ${y>0?g:""} `}}console.log(`%c${i}	%c${l}	%c${u}D ${h}	%c${c}	%c${d}	%c${a}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function o$(n,e,t){const s={},r={};for(let i=0;i<e.length;i++)s[e[i].id]=!0;for(let i=0;i<n.length;i++){const u=n[i],c=u.inputs;for(const h in c){const d=c[h];let p=!1;for(let f=0;f<e.length;f++)if(s[d.id]){u.outputs.forEach(g=>s[g.id]=!0),p=!0,r[u.id]=!0;break}if(p)break}}const o={};o[t.id]=!0;const a={};for(let i=n.length-1;i>=0;i--){const u=n[i],c=u.inputs;for(let h=0;h<u.outputs.length;h++)if(o[u.outputs[h].id]){for(const d in c)o[c[d].id]=!0,a[u.id]=!0;break}}const l=[];for(let i=0;i<n.length;i++){const u=n[i];if(r[u.id]&&a[u.id]){const c={};for(const d in u.inputs){const p=u.inputs[d];s[p.id]&&(c[d]=p)}const h=Object.assign({},u);h.inputs=c,h.outputs=u.outputs,l.push(h)}}return l}function a$(n,e,t,s){for(let r=e.length-1;r>=0;r--){const o=e[r],a=[];if(o.outputs.forEach(i=>{const u=n[i.id];u!=null?a.push(u):a.push(null)}),o.gradient==null)throw new Error(`Cannot compute gradient: gradient function not found for ${o.kernelName}.`);const l=o.gradient(a);for(const i in o.inputs){if(!(i in l))throw new Error(`Cannot backprop through input ${i}. Available gradients found: ${Object.keys(l)}.`);const u=t(()=>l[i]());if(u.dtype!=="float32")throw new Error(`Error in gradient for op ${o.kernelName}. The gradient of input ${i} must have 'float32' dtype, but has '${u.dtype}'`);const c=o.inputs[i];if(!ft(u.shape,c.shape))throw new Error(`Error in gradient for op ${o.kernelName}. The gradient of input '${i}' has shape '${u.shape}', which does not match the shape of the input '${c.shape}'`);if(n[c.id]==null)n[c.id]=u;else{const h=n[c.id];n[c.id]=s(h,u),h.dispose()}}}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ub=20,mi=3,Od=7;function i$(n,e,t,s){const r=Ze(e),o=l$(n,e,t,r),a=e.length,l=Wu(n,e,t,r,o),i=["Tensor"];return s&&(i.push(`  dtype: ${t}`),i.push(`  rank: ${a}`),i.push(`  shape: [${e}]`),i.push("  values:")),i.push(l.map(u=>"    "+u).join(`
`)),i.join(`
`)}function l$(n,e,t,s){const r=me(e),o=s[s.length-1],a=new Array(o).fill(0),l=e.length,i=t==="complex64"?wi(n):n;if(l>1)for(let u=0;u<r/o;u++){const c=u*o;for(let h=0;h<o;h++)a[h]=Math.max(a[h],xi(i[c+h],0,t).length)}return a}function xi(n,e,t){let s;return Array.isArray(n)?s=`${parseFloat(n[0].toFixed(Od))} + ${parseFloat(n[1].toFixed(Od))}j`:Vi(n)?s=`'${n}'`:t==="bool"?s=ox(n):s=parseFloat(n.toFixed(Od)).toString(),va(s,e)}function ox(n){return n===0?"false":"true"}function Wu(n,e,t,s,r,o=!0){const a=t==="complex64"?2:1,l=e[0],i=e.length;if(i===0){if(t==="complex64"){const g=wi(n);return[xi(g[0],0,t)]}return t==="bool"?[ox(n[0])]:[n[0].toString()]}if(i===1){if(l>ub){const y=mi*a;let x=Array.from(n.slice(0,y)),w=Array.from(n.slice((l-mi)*a,l*a));return t==="complex64"&&(x=wi(x),w=wi(w)),["["+x.map((v,k)=>xi(v,r[k],t)).join(", ")+", ..., "+w.map((v,k)=>xi(v,r[l-mi+k],t)).join(", ")+"]"]}return["["+(t==="complex64"?wi(n):Array.from(n)).map((y,x)=>xi(y,r[x],t)).join(", ")+"]"]}const u=e.slice(1),c=s.slice(1),h=s[0]*a,d=[];if(l>ub){for(let g=0;g<mi;g++){const y=g*h,x=y+h;d.push(...Wu(n.slice(y,x),u,t,c,r,!1))}d.push("...");for(let g=l-mi;g<l;g++){const y=g*h,x=y+h;d.push(...Wu(n.slice(y,x),u,t,c,r,g===l-1))}}else for(let g=0;g<l;g++){const y=g*h,x=y+h;d.push(...Wu(n.slice(y,x),u,t,c,r,g===l-1))}const p=i===2?",":"";d[0]="["+(l>0?d[0]+p:"");for(let g=1;g<d.length-1;g++)d[g]=" "+d[g]+p;let f=`,
`;for(let g=2;g<i;g++)f+=`
`;return d[d.length-1]=" "+d[d.length-1]+"]"+(o?"":f),d}function wi(n){const e=[];for(let t=0;t<n.length;t+=2)e.push([n[t],n[t+1]]);return e}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ln{constructor(e,t,s){if(this.dtype=t,this.shape=e.slice(),this.size=me(e),s!=null){const r=s.length;P(r===this.size,()=>`Length of values '${r}' does not match the size inferred by the shape '${this.size}'.`)}if(t==="complex64")throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=s||Zt(t,this.size),this.strides=Ze(e)}set(e,...t){t.length===0&&(t=[0]),P(t.length===this.rank,()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`);const s=this.locToIndex(t);this.values[s]=e}get(...e){e.length===0&&(e=[0]);let t=0;for(const r of e){if(r<0||r>=this.shape[t]){const o=`Requested out of range element at ${e}.   Buffer shape=${this.shape}`;throw new Error(o)}t++}let s=e[e.length-1];for(let r=0;r<e.length-1;++r)s+=this.strides[r]*e[r];return this.values[s]}locToIndex(e){if(this.rank===0)return 0;if(this.rank===1)return e[0];let t=e[e.length-1];for(let s=0;s<e.length-1;++s)t+=this.strides[s]*e[s];return t}indexToLoc(e){if(this.rank===0)return[];if(this.rank===1)return[e];const t=new Array(this.shape.length);for(let s=0;s<t.length-1;++s)t[s]=Math.floor(e/this.strides[s]),e-=t[s]*this.strides[s];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return Gs().makeTensor(this.values,this.shape,this.dtype)}}let Gs=null,ya=null;function u$(n){Gs=n}function c$(n){ya=n}class Gt{constructor(e,t,s,r){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=me(e),this.strides=Ze(e),this.dataId=s,this.id=r,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const e=await this.data();return ya.buffer(this.shape,this.dtype,e)}bufferSync(){return ya.buffer(this.shape,this.dtype,this.dataSync())}async array(){const e=await this.data();return Rs(this.shape,e,this.dtype==="complex64")}arraySync(){return Rs(this.shape,this.dataSync(),this.dtype==="complex64")}async data(){this.throwIfDisposed();const e=Gs().read(this.dataId);if(this.dtype==="string"){const t=await e;try{return t.map(s=>qr(s))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataToGPU(e){return this.throwIfDisposed(),Gs().readToGPU(this.dataId,e)}dataSync(){this.throwIfDisposed();const e=Gs().readSync(this.dataId);if(this.dtype==="string")try{return e.map(t=>qr(t))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();const e=await Gs().read(this.dataId);return this.dtype==="string"?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(this.kerasMask&&this.kerasMask.dispose(),Gs().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return ya.print(this,e)}clone(){return this.throwIfDisposed(),ya.clone(this)}toString(e=!1){const t=this.dataSync();return i$(t,this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),ya.cast(this,e)}variable(e=!0,t,s){return this.throwIfDisposed(),Gs().makeVariable(this,e,t,s)}}Object.defineProperty(Gt,Symbol.hasInstance,{value:n=>!!n&&n.data!=null&&n.dataSync!=null&&n.throwIfDisposed!=null});function ge(){return nf("Tensor",()=>Gt)}ge();class Qu extends Gt{constructor(e,t,s,r){super(e.shape,e.dtype,e.dataId,r),this.trainable=t,this.name=s}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!ft(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);Gs().disposeTensor(this),this.dataId=e.dataId,Gs().incRef(this,null)}dispose(){Gs().disposeVariable(this),this.isDisposedInternal=!0}}Object.defineProperty(Qu,Symbol.hasInstance,{value:n=>n instanceof Gt&&n.assign!=null&&n.assign instanceof Function});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var cb;(function(n){n.R0="R0",n.R1="R1",n.R2="R2",n.R3="R3",n.R4="R4",n.R5="R5",n.R6="R6"})(cb||(cb={}));var hp;(function(n){n.float32="float32",n.int32="int32",n.bool="int32",n.complex64="complex64"})(hp||(hp={}));var dp;(function(n){n.float32="float32",n.int32="int32",n.bool="bool",n.complex64="complex64"})(dp||(dp={}));var pp;(function(n){n.float32="float32",n.int32="float32",n.bool="float32",n.complex64="complex64"})(pp||(pp={}));var fp;(function(n){n.float32="complex64",n.int32="complex64",n.bool="complex64",n.complex64="complex64"})(fp||(fp={}));const h$={float32:pp,int32:hp,bool:dp,complex64:fp};function rs(n,e){if(n==="string"||e==="string"){if(n==="string"&&e==="string")return"string";throw new Error(`Can not upcast ${n} with ${e}`)}return h$[n][e]}function um(n){return rs(n,"int32")}function ax(n){return n!=null&&typeof n=="object"&&"texture"in n&&n.texture instanceof WebGLTexture}function ix(n){return typeof GPUBuffer<"u"&&n!=null&&typeof n=="object"&&"buffer"in n&&n.buffer instanceof GPUBuffer}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xt(n,e){if(n.dtype===e.dtype)return[n,e];const t=rs(n.dtype,e.dtype);return[n.cast(t),e.cast(t)]}function d$(n,e){P(n.dtype===e.dtype,()=>`The dtypes of the first(${n.dtype}) and second(${e.dtype}) input must match`)}function lx(n){const e=[];return ux(n,e,new Set),e}function ux(n,e,t){if(n==null)return;if(n instanceof Gt){e.push(n);return}if(!p$(n))return;const s=n;for(const r in s){const o=s[r];t.has(o)||(t.add(o),ux(o,e,t))}}function p$(n){return Array.isArray(n)||typeof n=="object"}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ld(n){return n.kernelName!=null}class hb{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map(e=>e.name)))}}}dispose(){for(const e in this.registeredVariables)this.registeredVariables[e].dispose()}}class Aa{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new hb}async ready(){if(this.pendingBackendInit!=null)return this.pendingBackendInit.then(()=>{});if(this.backendInstance!=null)return;const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const s=e[t];if(await this.initializeBackend(s).success){await this.setBackend(s);return}}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(this.pendingBackendInit!=null)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(this.backendInstance==null){const{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry))if(e in this.registryFactory){const{asyncInit:t}=this.initializeBackend(e);if(t)return null}else return null;return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,s=1){return e in this.registryFactory?(ms(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:t,priority:s},!0)}async setBackend(e){if(this.registryFactory[e]==null)throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,this.registry[e]==null){this.backendInstance=null;const{success:t,asyncInit:s}=this.initializeBackend(e);if(!(s?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new n$(this.backendInstance),!0}setupRegisteredKernels(){nb(this.backendName).forEach(t=>{t.setupFunc!=null&&t.setupFunc(this.backendInstance)})}disposeRegisteredKernels(e){nb(e).forEach(s=>{s.disposeFunc!=null&&s.disposeFunc(this.registry[e])})}initializeBackend(e){const t=this.registryFactory[e];if(t==null)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{const s=t.factory();if(s&&!(s instanceof Qp)&&typeof s.then=="function"){const r=++this.pendingBackendInitId,o=s.then(a=>r<this.pendingBackendInitId?!1:(this.registry[e]=a,this.pendingBackendInit=null,!0)).catch(a=>(r<this.pendingBackendInitId||(this.pendingBackendInit=null,ms(`Initialization of backend ${e} failed`),ms(a.stack||a.message)),!1));return this.pendingBackendInit=o,{success:o,asyncInit:!0}}else return this.registry[e]=s,{success:!0,asyncInit:!1}}catch(s){return ms(`Initialization of backend ${e} failed`),ms(s.stack||s.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&this.pendingBackendInit!=null&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(Object.keys(this.registryFactory).length===0)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority)}initializeBackendsAndReturnBest(){const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const s=e[t],{success:r,asyncInit:o}=this.initializeBackend(s);if(o||r)return{name:s,asyncInit:o}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){const s=this.state.tensorInfo.get(t),r=s.backend,o=this.readSync(t),a=r.refCount(t);r.disposeData(t,!0),s.backend=e,e.move(t,o,s.shape,s.dtype,a),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let s=null;if(t==null){if(typeof e!="function")throw new Error("Please provide a function to tidy()");t=e}else{if(typeof e!="string"&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if(typeof t!="function")throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");s=e}let r;return this.scopedRun(()=>this.startScope(s),()=>this.endScope(r),()=>(r=t(),r instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),r))}scopedRun(e,t,s){e();try{const r=s();return t(),r}catch(r){throw t(),r}}nextTensorId(){return Aa.nextTensorId++}nextVariableId(){return Aa.nextVariableId++}clone(e){const t=Q.runKernel(ll,{x:e}),s={x:e},r=a=>({x:()=>{const l="float32",i={x:a},u={dtype:l};return Q.runKernel(Xi,i,u)}}),o=[];return this.addTapeNode(this.state.activeScope.name,s,[t],r,o,{}),t}runKernel(e,t,s){if(this.backendName==null&&this.backend,!(eb(e,this.backendName)!=null))throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:s})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,s){const r=this.backend.numDataIds();let o=0;s.forEach(i=>{o+=i.dtype==="complex64"?3:1});const a=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],l=r-t-o-a;if(l>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${l} data ids) after running '${e}'`)}runKernelFunc(e){let t,s=[];const r=this.isTapeOn(),o=this.state.numBytes,a=this.state.numTensors;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0);let l;this.backendName==null&&this.backend;let i;const u=Ld(e)?e.kernelName:this.state.activeScope!=null?this.state.activeScope.name:"";if(Ld(e)){const{kernelName:f,inputs:g,attrs:y}=e;this.backendName==null&&this.backend;const x=eb(f,this.backendName);P(x!=null,()=>`Cannot find registered kernel '${f}' for backend '${this.backendName}'`),l=()=>{const w=this.backend.numDataIds();i=x.kernelFunc({inputs:g,attrs:y,backend:this.backend});const v=Array.isArray(i)?i:[i];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(f,w,v);const k=v.map(C=>C.rank!=null?C:this.makeTensorFromTensorInfo(C));if(r){const C=this.getTensorsForGradient(f,g,k);s=this.saveTensorsForBackwardMode(C)}return k}}else{const{forwardFunc:f}=e,g=y=>{r&&(s=y.map(x=>this.keep(this.clone(x))))};l=()=>{const y=this.backend.numDataIds();i=this.tidy(()=>f(this.backend,g));const x=Array.isArray(i)?i:[i];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(u,y,x),x}}const{inputs:c,attrs:h}=e,d=Ld(e)?null:e.backwardsFunc;let p;return this.scopedRun(()=>this.state.kernelDepth++,()=>this.state.kernelDepth--,()=>{!this.ENV.getBool("DEBUG")&&!this.state.profiling?t=l():(p=this.profiler.profileKernel(u,c,()=>l()),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(p),t=p.outputs)}),r&&this.addTapeNode(u,c,t,d,s,h),this.state.profiling&&this.state.activeProfile.kernels.push({name:u,bytesAdded:this.state.numBytes-o,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-a,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(c).map(f=>c[f]!=null?c[f].shape:null),outputShapes:t.map(f=>f.shape),kernelTimeMs:p.timeMs,extraInfo:p.extraInfo}),Array.isArray(i)?t:t[0]}saveTensorsForBackwardMode(e){return e.map(s=>this.keep(this.clone(s)))}getTensorsForGradient(e,t,s){const r=tb(e);if(r!=null){const o=r.inputsToSave||[],a=r.outputsToSave||[];let l;r.saveAllInputs?(P(Array.isArray(t),()=>"saveAllInputs is true, expected inputs to be an array."),l=Object.keys(t).map(u=>t[u])):l=o.map(u=>t[u]);const i=s.filter((u,c)=>a[c]);return l.concat(i)}return[]}makeTensor(e,t,s,r){if(e==null)throw new Error("Values passed to engine.makeTensor() are null");s=s||"float32",r=r||this.backend;let o=e;s==="string"&&Vi(e[0])&&(o=e.map(i=>Gr(i)));const a=r.write(o,t,s),l=new Gt(t,s,a,this.nextTensorId());if(this.trackTensor(l,r),s==="string"){const i=this.state.tensorInfo.get(a),u=RN(o);this.state.numBytes+=u-i.bytes,i.bytes=u}return l}makeTensorFromDataId(e,t,s,r){s=s||"float32";const o={dataId:e,shape:t,dtype:s};return this.makeTensorFromTensorInfo(o,r)}makeTensorFromTensorInfo(e,t){const{dataId:s,shape:r,dtype:o}=e,a=new Gt(r,o,s,this.nextTensorId());return this.trackTensor(a,t),a}makeVariable(e,t=!0,s,r){s=s||this.nextVariableId().toString(),r!=null&&r!==e.dtype&&(e=e.cast(r));const o=new Qu(e,t,s,this.nextTensorId());if(this.state.registeredVariables[o.name]!=null)throw new Error(`Variable with name ${o.name} was already registered`);return this.state.registeredVariables[o.name]=o,this.incRef(o,this.backend),o}trackTensor(e,t){this.state.numTensors++,e.dtype==="string"&&this.state.numStringTensors++;let s=0;e.dtype!=="complex64"&&e.dtype!=="string"&&(s=e.size*qu(e.dtype)),this.state.numBytes+=s,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:s})),e instanceof Qu||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;const t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,e.dtype==="string"&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),e.dtype!=="complex64"&&e.dtype!=="string"){const s=e.size*qu(e.dtype);this.state.numBytes-=s}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(const e in this.state.registeredVariables){const t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),this.state.registeredVariables[e.name]!=null&&delete this.state.registeredVariables[e.name]}memory(){const e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,e.reasons==null&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;const t=this.state.numBytes,s=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map(r=>r.totalBytesSnapshot)),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-s;for(const r of this.state.activeProfile.kernels)r.kernelTimeMs=await r.kernelTimeMs,r.extraInfo=await r.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&this.state.kernelDepth===0}addTapeNode(e,t,s,r,o,a){const l={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:s,saved:o},i=tb(e);i!=null&&(r=i.gradFunc),r!=null&&(l.gradient=u=>(u=u.map((c,h)=>{if(c==null){const d=s[h],p=Dn(d.size,d.dtype);return this.makeTensor(p,d.shape,d.dtype)}return c}),r(u.length>1?u:u[0],o,a))),this.state.activeTape.push(l)}keep(e){return e.kept=!0,e}startTape(){this.state.gradientDepth===0&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){const t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){const t=lx(e),s=new Set(t.map(o=>o.id));for(let o=0;o<this.state.activeScope.track.length;o++){const a=this.state.activeScope.track[o];!a.kept&&!s.has(a.id)&&a.dispose()}const r=this.state.scopeStack.pop();this.state.activeScope=this.state.scopeStack.length===0?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach(o=>{!o.kept&&o.scopeId===r.id&&this.track(o)})}gradients(e,t,s,r=!1){if(P(t.length>0,()=>"gradients() received an empty list of xs."),s!=null&&s.dtype!=="float32")throw new Error(`dy must have 'float32' dtype, but has '${s.dtype}'`);const o=this.scopedRun(()=>this.startTape(),()=>this.endTape(),()=>this.tidy("forward",e));P(o instanceof Gt,()=>"The result y returned by f() must be a tensor.");const a=o$(this.state.activeTape,t,o);if(!r&&a.length===0&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",()=>{const l={};l[o.id]=s??f$(o.shape),a$(l,a,u=>this.tidy(u),m$);const i=t.map(u=>l[u.id]);return this.state.gradientDepth===0&&(this.state.activeTape.forEach(u=>{for(const c of u.saved)c.dispose()}),this.state.activeTape=null),{value:o,grads:i}})}customGrad(e){return P(rp(e),()=>"The f passed in customGrad(f) must be a function."),(...t)=>{P(t.every(l=>l instanceof Gt),()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors");let s;const r={};t.forEach((l,i)=>{r[i]=l});const o=(l,i)=>(s=e(...t,i),P(s.value instanceof Gt,()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor"),P(rp(s.gradFunc),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function."),s.value),a=(l,i)=>{const u=s.gradFunc(l,i),c=Array.isArray(u)?u:[u];P(c.length===t.length,()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)."),P(c.every(d=>d instanceof Gt),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors.");const h={};return c.forEach((d,p)=>{h[p]=()=>d}),h};return this.runKernelFunc({forwardFunc:o,backwardsFunc:a,inputs:r})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}readToGPU(e,t){return this.state.tensorInfo.get(e).backend.readToGPU(e,t)}async time(e){const t=Hn(),s=await this.backend.time(e);return s.wallMs=Hn()-t,s}track(e){return this.state.activeScope!=null&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new hb;for(const e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}Aa.nextTensorId=0;Aa.nextVariableId=0;function f$(n){const e=tf(me(n),"float32");return Q.makeTensor(e,n,"float32")}function cx(){const n=q0();if(n._tfengine==null){const e=new LN(n);n._tfengine=new Aa(e)}return MN(n._tfengine.ENV),u$(()=>n._tfengine),n._tfengine}const Q=cx();function m$(n,e){const t={a:n,b:e};return Q.runKernel(Ha,t)}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function g$(){return typeof navigator<"u"&&navigator!=null}function hx(n){if(n||g$()){if(n||(n=navigator),n.product==="ReactNative")return!0;const e=n.userAgent||n.vendor||(typeof window<"u"?window.opera:"");if(!e){const t=n;return t.userAgentData&&t.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(e)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(e.substr(0,4))}return!1}function dx(){return typeof window<"u"&&window.document!=null||typeof WorkerGlobalScope<"u"}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Kn=de();Kn.registerFlag("DEBUG",()=>!1,n=>{n&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")});Kn.registerFlag("IS_BROWSER",()=>dx());Kn.registerFlag("IS_NODE",()=>typeof process<"u"&&typeof process.versions<"u"&&typeof process.versions.node<"u");Kn.registerFlag("IS_CHROME",()=>typeof navigator<"u"&&navigator!=null&&navigator.userAgent!=null&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor));Kn.registerFlag("IS_SAFARI",()=>typeof navigator<"u"&&navigator!=null&&navigator.userAgent!=null&&/Safari/.test(navigator.userAgent)&&/Apple/.test(navigator.vendor));Kn.registerFlag("PROD",()=>!1);Kn.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",()=>Kn.getBool("DEBUG"));Kn.registerFlag("DEPRECATION_WARNINGS_ENABLED",()=>!0);Kn.registerFlag("IS_TEST",()=>!1);Kn.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",()=>Kn.getBool("DEBUG"));Kn.registerFlag("WRAP_TO_IMAGEBITMAP",()=>!1);Kn.registerFlag("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU",()=>!1);Kn.registerFlag("USE_SETTIMEOUTCUSTOM",()=>!1);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oo(n,e){let t=n;if(Os(n))return e==="string"?[]:[n.length];if(ax(n)){const r=n.channels||"RGBA";return[n.height,n.width*r.length]}else if(ix(n))return[n.buffer.size/(e==null?4:qu(e))];if(!Array.isArray(n))return[];const s=[];for(;Array.isArray(t)||Os(t)&&e!=="string";)s.push(t.length),t=t[0];return Array.isArray(n)&&de().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&px(n,s,[]),s}function px(n,e,t){if(t=t||[],!Array.isArray(n)&&!Os(n)){P(e.length===0,()=>`Element arr[${t.join("][")}] is a primitive, but should be an array/TypedArray of ${e[0]} elements`);return}P(e.length>0,()=>`Element arr[${t.join("][")}] should be a primitive, but is an array of ${n.length} elements`),P(n.length===e[0],()=>`Element arr[${t.join("][")}] should have ${e[0]} elements, but has ${n.length} elements`);const s=e.slice(1);for(let r=0;r<n.length;++r)px(n[r],s,t.concat(r))}function db(n,e,t,s){if(n!=="string_or_numeric"){if(n==null)throw new Error("Expected dtype cannot be null.");if(n!=="numeric"&&n!==e||n==="numeric"&&e==="string")throw new Error(`Argument '${t}' passed to '${s}' must be ${n} tensor, but got ${e} tensor`)}}function z(n,e,t,s="numeric"){if(n instanceof ge())return db(s,n.dtype,e,t),n;let r=Ua(n);if(r!=="string"&&["bool","int32","float32"].indexOf(s)>=0&&(r=s),db(s,r,e,t),n==null||!Os(n)&&!Array.isArray(n)&&typeof n!="number"&&typeof n!="boolean"&&typeof n!="string"){const i=n==null?"null":n.constructor.name;throw new Error(`Argument '${e}' passed to '${t}' must be a Tensor or TensorLike, but got '${i}'`)}const o=oo(n,r);!Os(n)&&!Array.isArray(n)&&(n=[n]);const l=r!=="string"?Yo(n,r):Oo(n,[],!0);return Q.makeTensor(l,o,r)}function ec(n,e,t,s="numeric"){if(!Array.isArray(n))throw new Error(`Argument ${e} passed to ${t} must be a \`Tensor[]\` or \`TensorLike[]\``);return n.map((o,a)=>z(o,`${e}[${a}]`,t,s))}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fx="__op";function Y(n){const e=Object.keys(n);if(e.length!==1)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${e.length} keys.`);let t=e[0];const s=n[t];t.endsWith("_")&&(t=t.substring(0,t.length-1)),t=t+fx;const r=(...o)=>{Q.startScope(t);try{const a=s(...o);return Fo(a)&&console.error("Cannot return a Promise inside of tidy."),Q.endScope(a),a}catch(a){throw Q.endScope(null),a}};return Object.defineProperty(r,"name",{value:t,configurable:!0}),r}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function y$(n,e){const t=z(n,"real","complex"),s=z(e,"imag","complex");cs(t.shape,s.shape,`real and imag shapes, ${t.shape} and ${s.shape}, must match in call to tf.complex().`);const r={real:t,imag:s};return Q.runKernel(cf,r)}const Kr=Y({complex_:y$});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ao(n,e,t,s){if(s==null)s=Ua(n);else if(s==="complex64")throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(ix(n)||ax(n)){if(s!=="float32"&&s!=="int32")throw new Error(`Creating tensor from GPU data only supports 'float32'|'int32' dtype, while the dtype is ${s}.`);return Q.backend.createTensorFromGPUData(n,e||t,s)}if(!Os(n)&&!Array.isArray(n)&&typeof n!="number"&&typeof n!="boolean"&&typeof n!="string")throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(e!=null){xs(e);const r=me(e),o=me(t);P(r===o,()=>`Based on the provided shape, [${e}], the tensor should have ${r} values but has ${o}`);for(let a=0;a<t.length;++a){const l=t[a],i=a===t.length-1?l!==me(e.slice(a)):!0;P(t[a]===e[a]||!i,()=>`Error creating a new Tensor. Inferred shape (${t}) does not match the provided shape (${e}). `)}}return!Os(n)&&!Array.isArray(n)&&(n=[n]),e=e||t,n=s!=="string"?Yo(n,s):Oo(n,[],!0),Q.makeTensor(n,e,s)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Yt(n,e,t){const s=oo(n,t);return ao(n,e,s,t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Lo={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8};class Js{static join(e){return new Js(e).slice()}constructor(e){if(this.shards=[],this.previousShardIndex=0,e==null||(e instanceof Array||(e=[e]),e=e.map(s=>Os(s)?s.buffer:s),e.length===0))return;this.bufferUniformSize=e[0].byteLength;let t=0;for(let s=0;s<e.length;s++){const r=e[s];s!==e.length-1&&r.byteLength!==this.bufferUniformSize&&(this.bufferUniformSize=void 0);const o=t+r.byteLength;this.shards.push({buffer:r,start:t,end:o}),t=o}this.shards.length===0&&(this.byteLength=0),this.byteLength=this.shards[this.shards.length-1].end}slice(e=0,t=this.byteLength){if(this.shards.length===0)return new ArrayBuffer(0);if(e=isNaN(Number(e))?0:e,t=isNaN(Number(t))?0:t,e=Math.max(0,e),t=Math.min(this.byteLength,t),t<=e)return new ArrayBuffer(0);const s=this.findShardForByte(e);if(s===-1)throw new Error(`Could not find start shard for byte ${e}`);const r=t-e,o=new ArrayBuffer(r),a=new Uint8Array(o);let l=0;for(let i=s;i<this.shards.length;i++){const u=this.shards[i],h=e+l-u.start,d=l,f=Math.min(t,u.end)-u.start,g=new Uint8Array(u.buffer,h,f-h);if(a.set(g,d),l+=g.length,t<u.end)break}return o}findShardForByte(e){if(this.shards.length===0||e<0||e>=this.byteLength)return-1;if(this.bufferUniformSize!=null)return this.previousShardIndex=Math.floor(e/this.bufferUniformSize),this.previousShardIndex;function t(r){return e<r.start?-1:e>=r.end?1:0}if(t(this.shards[this.previousShardIndex])===0)return this.previousShardIndex;const s=b$(this.shards,t);return s===-1?-1:(this.previousShardIndex=s,this.previousShardIndex)}}function b$(n,e){let t=0,s=n.length;for(;t<=s;){const r=Math.floor((s-t)/2)+t,o=e(n[r]);if(o===0)return r;o<0?s=r:t=r+1}return-1}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sr(){return Q}function pb(){return Q.memory()}function ce(n,e){return Q.tidy(n,e)}function ut(n){lx(n).forEach(t=>t.dispose())}function mn(n){return Q.keep(n)}function x$(){return Q.backendName}function mx(n,e,t=1){return Q.registerBackend(n,e,t)}function gx(){return Q.backend}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Xr=4;async function mp(n,e){const t=[],s=[],r=Array.isArray(n)?n.map(a=>a.name):Object.keys(n);for(let a=0;a<r.length;++a){const l=r[a],i=Array.isArray(n)?n[a].tensor:n[l];if(i.dtype!=="float32"&&i.dtype!=="int32"&&i.dtype!=="bool"&&i.dtype!=="string"&&i.dtype!=="complex64")throw new Error(`Unsupported dtype in weight '${l}': ${i.dtype}`);const u={name:l,shape:i.shape,dtype:i.dtype};if(i.dtype==="string"){const c=new Promise(async h=>{const d=await i.bytes(),p=d.reduce((y,x)=>y+x.length,0)+Xr*d.length,f=new Uint8Array(p);let g=0;for(let y=0;y<d.length;y++){const x=d[y],w=new Uint8Array(new Uint32Array([x.length]).buffer);f.set(w,g),g+=Xr,f.set(x,g),g+=x.length}h(f)});s.push(c)}else s.push(i.data());e!=null&&(u.group=e),t.push(u)}const o=await Promise.all(s);return{data:k$(o),specs:t}}function yx(n,e){const t=new Js(n),s={};let r=0;for(const o of e){const a=w$(o,(l,i)=>t.slice(r+l,r+i));s[o.name]=bx(o,t.slice(r,r+a)),r+=a}return s}function w$(n,e){const t=me(n.shape);let s;if("quantization"in n){const r=n.quantization;s=Lo[r.dtype]}else if(n.dtype==="string"){let r=0;for(let o=0;o<t;o++)r+=Xr+new Uint32Array(e(r,r+Xr))[0];return r}else s=Lo[n.dtype];return t*s}async function v$(n,e){const t=me(n.shape);let s;if("quantization"in n){const r=n.quantization;s=Lo[r.dtype]}else if(n.dtype==="string"){let r=0;for(let o=0;o<t;o++)r+=Xr+new Uint32Array(await e(r,r+Xr))[0];return r}else s=Lo[n.dtype];return t*s}function bx(n,e){const t=n.name,s=n.dtype,r=n.shape,o=me(r);let a,l=0;if("quantization"in n){const i=n.quantization;if(i.dtype==="uint8"||i.dtype==="uint16"){if(!("min"in i&&"scale"in i))throw new Error(`Weight ${n.name} with quantization ${i.dtype} doesn't have corresponding metadata min and scale.`)}else if(i.dtype==="float16"){if(s!=="float32")throw new Error(`Weight ${n.name} is quantized with ${i.dtype} which only supports weights of type float32 not ${s}.`)}else throw new Error(`Weight ${n.name} has unknown quantization dtype ${i.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);const u=Lo[i.dtype],c=i.dtype==="uint8"?new Uint8Array(e):new Uint16Array(e);if(s==="float32")if(i.dtype==="uint8"||i.dtype==="uint16"){a=new Float32Array(c.length);for(let h=0;h<c.length;h++){const d=c[h];a[h]=d*i.scale+i.min}}else if(i.dtype==="float16")a=T$()(c);else throw new Error(`Unsupported quantization type ${i.dtype} for weight type float32.`);else if(s==="int32"){if(i.dtype!=="uint8"&&i.dtype!=="uint16")throw new Error(`Unsupported quantization type ${i.dtype} for weight type int32.`);a=new Int32Array(c.length);for(let h=0;h<c.length;h++){const d=c[h];a[h]=Math.round(d*i.scale+i.min)}}else throw new Error(`Unsupported dtype in weight '${t}': ${s}`);l+=o*u}else if(s==="string"){const i=me(n.shape);a=[];for(let u=0;u<i;u++){const c=new Uint32Array(e.slice(l,l+Xr))[0];l+=Xr;const h=new Uint8Array(e.slice(l,l+c));a.push(h),l+=c}}else{const i=Lo[s];if(s==="float32")a=new Float32Array(e);else if(s==="int32")a=new Int32Array(e);else if(s==="bool")a=new Uint8Array(e);else if(s==="complex64"){a=new Float32Array(e);const u=new Float32Array(a.length/2),c=new Float32Array(a.length/2);for(let f=0;f<u.length;f++)u[f]=a[f*2],c[f]=a[f*2+1];const h=Yt(u,r,"float32"),d=Yt(c,r,"float32"),p=Kr(h,d);return h.dispose(),d.dispose(),p}else throw new Error(`Unsupported dtype in weight '${t}': ${s}`);l+=o*i}return Yt(a,r,s)}async function fb(n,e,t){let s=new Uint8Array(e);for(;s.byteLength<t;){const{done:r,value:o}=await n.read();if(r&&o==null){const l=t-s.byteLength;throw new Error(`Reader is done but ${l} bytes are still expected`)}const a=new Uint8Array(s.length+o.byteLength);a.set(s,0),a.set(new Uint8Array(o),s.length),s=a}return s.buffer}async function xx(n,e){const t={},s=n.getReader();let r=new ArrayBuffer(0);for(const o of e){const a=await v$(o,async(u,c)=>(r=await fb(s,r,c),r.slice(u,c)));r=await fb(s,r,a);const l=r.slice(0,a);r=r.slice(a);const i=bx(o,l);if(t[o.name]=i,x$()==="webgpu"){const u=gx();"uploadToGPU"in u&&me(i.shape)>=de().get("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD")&&u.uploadToGPU(i.dataId)}}return t}function k$(n){if(n===null)throw new Error(`Invalid input value: ${JSON.stringify(n)}`);let e=0;const t=[];n.forEach(o=>{if(e+=o.byteLength,t.push(o.byteLength===o.buffer.byteLength?o:new o.constructor(o)),!(o instanceof Float32Array||o instanceof Int32Array||o instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${o.constructor.name}`)});const s=new Uint8Array(e);let r=0;return t.forEach(o=>{s.set(new Uint8Array(o.buffer),r),r+=o.byteLength}),s.buffer}const cm=typeof Buffer<"u"&&(typeof Blob>"u"||typeof atob>"u"||typeof btoa>"u");function mb(n){return cm?Buffer.byteLength(n,"utf8"):new Blob([n]).size}function S$(n){if(cm)return Buffer.from(n).toString("base64");const e=new Uint8Array(n);let t="";for(let s=0,r=e.length;s<r;s++)t+=String.fromCharCode(e[s]);return btoa(t)}function C$(n){if(cm){const s=Buffer.from(n,"base64");return s.buffer.slice(s.byteOffset,s.byteOffset+s.byteLength)}const e=atob(n),t=new Uint8Array(e.length);for(let s=0;s<e.length;++s)t.set([e.charCodeAt(s)],s);return t.buffer}function wx(n){return Js.join(n)}function gb(n){const e="/";for(n=n.trim();n.endsWith(e);)n=n.slice(0,n.length-1);const t=n.split(e);return t[t.length-1]}function vx(n,e){const t={modelTopology:n.modelTopology,format:n.format,generatedBy:n.generatedBy,convertedBy:n.convertedBy,weightsManifest:e};return n.signature!=null&&(t.signature=n.signature),n.userDefinedMetadata!=null&&(t.userDefinedMetadata=n.userDefinedMetadata),n.modelInitializer!=null&&(t.modelInitializer=n.modelInitializer),n.initializerSignature!=null&&(t.initializerSignature=n.initializerSignature),n.trainingConfig!=null&&(t.trainingConfig=n.trainingConfig),t}function kx(n,e,t){const s={modelTopology:n.modelTopology,format:n.format,generatedBy:n.generatedBy,convertedBy:n.convertedBy};if(n.trainingConfig!=null&&(s.trainingConfig=n.trainingConfig),n.weightsManifest!=null){if(!e)throw new Error("modelJSON has weightsManifest but weightSpecs is null");if(!t)throw new Error("modelJSON has weightsManifest but weightData is null");s.weightSpecs=e,s.weightData=t}return n.signature!=null&&(s.signature=n.signature),n.userDefinedMetadata!=null&&(s.userDefinedMetadata=n.userDefinedMetadata),n.modelInitializer!=null&&(s.modelInitializer=n.modelInitializer),n.initializerSignature!=null&&(s.initializerSignature=n.initializerSignature),s}async function hm(n,e){let t,s;return n.weightsManifest!=null&&([t,s]=await e(n.weightsManifest)),kx(n,t,s)}function Pl(n){if(n.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:n.modelTopology==null?0:mb(JSON.stringify(n.modelTopology)),weightSpecsBytes:n.weightSpecs==null?0:mb(JSON.stringify(n.weightSpecs)),weightDataBytes:n.weightData==null?0:new Js(n.weightData).byteLength}}function gp(n){const e=[];for(const t of n)e.push(...t.weights);return e}function I$(){const n=t=>{let s=t<<13,r=0;for(;!(s&8388608);)r-=8388608,s<<=1;return s&=-8388609,r+=947912704,s|r},e=new Uint32Array(2048);e[0]=0;for(let t=1;t<1024;t++)e[t]=n(t);for(let t=1024;t<2048;t++)e[t]=939524096+(t-1024<<13);return e}function N$(){const n=new Uint32Array(64);n[0]=0,n[31]=1199570944,n[32]=2147483648,n[63]=3347054592;for(let e=1;e<31;e++)n[e]=e<<23;for(let e=33;e<63;e++)n[e]=2147483648+(e-32<<23);return n}function $$(){const n=new Uint32Array(64);for(let e=0;e<64;e++)n[e]=1024;return n[0]=n[32]=0,n}function T$(){const n=I$(),e=N$(),t=$$();return s=>{const r=new ArrayBuffer(4*s.length),o=new Uint32Array(r);for(let a=0;a<s.length;a++){const l=s[a],i=n[t[l>>10]+(l&1023)]+e[l>>10];o[a]=i}return new Float32Array(r)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ut{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return Ut.instance==null&&(Ut.instance=new Ut),Ut.instance}static registerSaveRouter(e){Ut.getInstance().saveRouters.push(e)}static registerLoadRouter(e){Ut.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return Ut.getHandlers(e,"save")}static getLoadHandlers(e,t){return Ut.getHandlers(e,"load",t)}static getHandlers(e,t,s){const r=[];return(t==="load"?Ut.getInstance().loadRouters:Ut.getInstance().saveRouters).forEach(a=>{const l=a(e,s);l!==null&&r.push(l)}),r}}const _$=n=>Ut.registerSaveRouter(n),E$=n=>Ut.registerLoadRouter(n),Sx=n=>Ut.getSaveHandlers(n),A$=(n,e)=>Ut.getLoadHandlers(n,e);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yp="tensorflowjs",bp=1,_o="models_store",Mr="model_info_store";function Cx(){if(!de().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const n=typeof window>"u"?self:window,e=n.indexedDB||n.mozIndexedDB||n.webkitIndexedDB||n.msIndexedDB||n.shimIndexedDB;if(e==null)throw new Error("The current browser does not appear to support IndexedDB.");return e}function xp(n){const e=n.result;e.createObjectStore(_o,{keyPath:"modelPath"}),e.createObjectStore(Mr,{keyPath:"modelPath"})}class Po{constructor(e){if(this.indexedDB=Cx(),e==null||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise((s,r)=>{const o=this.indexedDB.open(yp,bp);o.onupgradeneeded=()=>xp(o),o.onsuccess=()=>{const a=o.result;if(t==null){const l=a.transaction(_o,"readonly"),u=l.objectStore(_o).get(this.modelPath);u.onsuccess=()=>{if(u.result==null)return a.close(),r(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));s(u.result.modelArtifacts)},u.onerror=c=>(a.close(),r(u.error)),l.oncomplete=()=>a.close()}else{t.weightData=Js.join(t.weightData);const l=Pl(t),i=a.transaction(Mr,"readwrite");let u=i.objectStore(Mr),c;try{c=u.put({modelPath:this.modelPath,modelArtifactsInfo:l})}catch(d){return r(d)}let h;c.onsuccess=()=>{h=a.transaction(_o,"readwrite");const d=h.objectStore(_o);let p;try{p=d.put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:l})}catch(f){return r(f)}p.onsuccess=()=>s({modelArtifactsInfo:l}),p.onerror=f=>{u=i.objectStore(Mr);const g=u.delete(this.modelPath);g.onsuccess=()=>(a.close(),r(p.error)),g.onerror=y=>(a.close(),r(p.error))}},c.onerror=d=>(a.close(),r(c.error)),i.oncomplete=()=>{h==null?a.close():h.oncomplete=()=>a.close()}}},o.onerror=a=>r(o.error)})}}Po.URL_SCHEME="indexeddb://";const Ix=n=>de().getBool("IS_BROWSER")&&!Array.isArray(n)&&n.startsWith(Po.URL_SCHEME)?D$(n.slice(Po.URL_SCHEME.length)):null;Ut.registerSaveRouter(Ix);Ut.registerLoadRouter(Ix);function D$(n){return new Po(n)}function R$(n){return n.startsWith(Po.URL_SCHEME)?n.slice(Po.URL_SCHEME.length):n}class F${constructor(){this.indexedDB=Cx()}async listModels(){return new Promise((e,t)=>{const s=this.indexedDB.open(yp,bp);s.onupgradeneeded=()=>xp(s),s.onsuccess=()=>{const r=s.result,o=r.transaction(Mr,"readonly"),l=o.objectStore(Mr).getAll();l.onsuccess=()=>{const i={};for(const u of l.result)i[u.modelPath]=u.modelArtifactsInfo;e(i)},l.onerror=i=>(r.close(),t(l.error)),o.oncomplete=()=>r.close()},s.onerror=r=>t(s.error)})}async removeModel(e){return e=R$(e),new Promise((t,s)=>{const r=this.indexedDB.open(yp,bp);r.onupgradeneeded=()=>xp(r),r.onsuccess=()=>{const o=r.result,a=o.transaction(Mr,"readwrite"),l=a.objectStore(Mr),i=l.get(e);let u;i.onsuccess=()=>{if(i.result==null)return o.close(),s(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{const c=l.delete(e),h=()=>{u=o.transaction(_o,"readwrite");const p=u.objectStore(_o).delete(e);p.onsuccess=()=>t(i.result.modelArtifactsInfo),p.onerror=f=>s(i.error)};c.onsuccess=h,c.onerror=d=>(h(),o.close(),s(i.error))}},i.onerror=c=>(o.close(),s(i.error)),a.oncomplete=()=>{u==null?o.close():u.oncomplete=()=>o.close()}},r.onerror=o=>s(r.error)})}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Cr="/",ba="tensorflowjs_models",Nx="info",O$="model_topology",L$="weight_specs",P$="weight_data",z$="model_metadata";function $x(n){return{info:[ba,n,Nx].join(Cr),topology:[ba,n,O$].join(Cr),weightSpecs:[ba,n,L$].join(Cr),weightData:[ba,n,P$].join(Cr),modelMetadata:[ba,n,z$].join(Cr)}}function Tx(n){for(const e of Object.values(n))window.localStorage.removeItem(e)}function B$(n){const e=n.split(Cr);if(e.length<3)throw new Error(`Invalid key format: ${n}`);return e.slice(1,e.length-1).join(Cr)}function M$(n){return n.startsWith(zo.URL_SCHEME)?n.slice(zo.URL_SCHEME.length):n}class zo{constructor(e){if(!de().getBool("IS_BROWSER")||typeof window>"u"||typeof window.localStorage>"u")throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,e==null||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=$x(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const t=JSON.stringify(e.modelTopology),s=JSON.stringify(e.weightSpecs),r=Pl(e),o=Js.join(e.weightData);try{this.LS.setItem(this.keys.info,JSON.stringify(r)),this.LS.setItem(this.keys.topology,t),this.LS.setItem(this.keys.weightSpecs,s),this.LS.setItem(this.keys.weightData,S$(o));const a={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:e.signature!=null?e.signature:void 0,userDefinedMetadata:e.userDefinedMetadata!=null?e.userDefinedMetadata:void 0,modelInitializer:e.modelInitializer!=null?e.modelInitializer:void 0,initializerSignature:e.initializerSignature!=null?e.initializerSignature:void 0,trainingConfig:e.trainingConfig!=null?e.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(a)),{modelArtifactsInfo:r}}catch{throw Tx(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${r.modelTopologyBytes}, weightSpecsBytes=${r.weightSpecsBytes}, weightDataBytes=${r.weightDataBytes}.`)}}}async load(){const e=JSON.parse(this.LS.getItem(this.keys.info));if(e==null)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if(e.modelTopologyType!=="JSON")throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const t={},s=JSON.parse(this.LS.getItem(this.keys.topology));if(s==null)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=s;const r=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(r==null)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=r;const o=this.LS.getItem(this.keys.modelMetadata);if(o!=null){const l=JSON.parse(o);t.format=l.format,t.generatedBy=l.generatedBy,t.convertedBy=l.convertedBy,l.signature!=null&&(t.signature=l.signature),l.userDefinedMetadata!=null&&(t.userDefinedMetadata=l.userDefinedMetadata),l.modelInitializer!=null&&(t.modelInitializer=l.modelInitializer),l.initializerSignature!=null&&(t.initializerSignature=l.initializerSignature),l.trainingConfig!=null&&(t.trainingConfig=l.trainingConfig)}const a=this.LS.getItem(this.keys.weightData);if(a==null)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=C$(a),t}}zo.URL_SCHEME="localstorage://";const _x=n=>de().getBool("IS_BROWSER")&&!Array.isArray(n)&&n.startsWith(zo.URL_SCHEME)?V$(n.slice(zo.URL_SCHEME.length)):null;Ut.registerSaveRouter(_x);Ut.registerLoadRouter(_x);function V$(n){return new zo(n)}class W${constructor(){P(de().getBool("IS_BROWSER"),()=>"Current environment is not a web browser"),P(typeof window>"u"||typeof window.localStorage<"u",()=>"Current browser does not appear to support localStorage"),this.LS=window.localStorage}async listModels(){const e={},t=ba+Cr,s=Cr+Nx;for(let r=0;r<this.LS.length;++r){const o=this.LS.key(r);if(o.startsWith(t)&&o.endsWith(s)){const a=B$(o);e[a]=JSON.parse(this.LS.getItem(o))}}return e}async removeModel(e){e=M$(e);const t=$x(e);if(this.LS.getItem(t.info)==null)throw new Error(`Cannot find model at path '${e}'`);const s=JSON.parse(this.LS.getItem(t.info));return Tx(t),s}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Sa="://";class Ln{constructor(){this.managers={}}static getInstance(){return Ln.instance==null&&(Ln.instance=new Ln),Ln.instance}static registerManager(e,t){P(e!=null,()=>"scheme must not be undefined or null."),e.endsWith(Sa)&&(e=e.slice(0,e.indexOf(Sa))),P(e.length>0,()=>"scheme must not be an empty string.");const s=Ln.getInstance();P(s.managers[e]==null,()=>`A model store manager is already registered for scheme '${e}'.`),s.managers[e]=t}static getManager(e){const t=Ln.getInstance().managers[e];if(t==null)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(Ln.getInstance().managers)}}function Uu(n){if(n.indexOf(Sa)===-1)throw new Error(`The url string provided does not contain a scheme. Supported schemes are: ${Ln.getSchemes().join(",")}`);return{scheme:n.split(Sa)[0],path:n.split(Sa)[1]}}async function Ex(n,e,t=!1){P(n!==e,()=>`Old path and new path are the same: '${n}'`);const s=Ut.getLoadHandlers(n);P(s.length>0,()=>`Copying failed because no load handler is found for source URL ${n}.`),P(s.length<2,()=>`Copying failed because more than one (${s.length}) load handlers for source URL ${n}.`);const r=s[0],o=Ut.getSaveHandlers(e);P(o.length>0,()=>`Copying failed because no save handler is found for destination URL ${e}.`),P(o.length<2,()=>`Copying failed because more than one (${s.length}) save handlers for destination URL ${e}.`);const a=o[0],l=Uu(n).scheme,i=Uu(n).path,u=l===Uu(n).scheme,c=await r.load();t&&u&&await Ln.getManager(l).removeModel(i);const h=await a.save(c);return t&&!u&&await Ln.getManager(l).removeModel(i),h.modelArtifactsInfo}async function U$(){const n=Ln.getSchemes(),e={};for(const t of n){const s=await Ln.getManager(t).listModels();for(const r in s){const o=t+Sa+r;e[o]=s[r]}}return e}async function G$(n){const e=Uu(n);return Ln.getManager(e.scheme).removeModel(e.path)}async function H$(n,e){return Ex(n,e,!1)}async function j$(n,e){return Ex(n,e,!0)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class q${constructor(){this.messageName="setTimeoutCustom",this.functionRefs=[],this.handledMessageCount=0,this.hasEventListener=!1}fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if(t!=="utf-8"&&t!=="utf8")throw new Error(`Browser's encoder only supports utf-8, but got ${t}`);return this.textEncoder==null&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}setTimeoutCustom(e,t){if(typeof window>"u"||!de().getBool("USE_SETTIMEOUTCUSTOM")){setTimeout(e,t);return}this.functionRefs.push(e),setTimeout(()=>{window.postMessage({name:this.messageName,index:this.functionRefs.length-1},"*")},t),this.hasEventListener||(this.hasEventListener=!0,window.addEventListener("message",s=>{if(s.source===window&&s.data.name===this.messageName){s.stopPropagation();const r=this.functionRefs[s.data.index];r(),this.handledMessageCount++,this.handledMessageCount===this.functionRefs.length&&(this.functionRefs=[],this.handledMessageCount=0)}},!0))}isTypedArray(e){return Y0(e)}}if(de().get("IS_BROWSER")){de().setPlatform("browser",new q$);try{Ln.registerManager(zo.URL_SCHEME,new W$)}catch{}try{Ln.registerManager(Po.URL_SCHEME,new F$)}catch{}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const K$={importFetch:()=>require("node-fetch")};let Pd;class X${constructor(){this.util=require("util"),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return de().global.fetch!=null?de().global.fetch(e,t):(Pd==null&&(Pd=K$.importFetch()),Pd(e,t))}now(){const e=process.hrtime();return e[0]*1e3+e[1]/1e6}encode(e,t){if(t!=="utf-8"&&t!=="utf8")throw new Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return e.length===0?"":new this.util.TextDecoder(t).decode(e)}isTypedArray(e){return this.util.types.isFloat32Array(e)||this.util.types.isInt32Array(e)||this.util.types.isUint8Array(e)||this.util.types.isUint8ClampedArray(e)}}de().get("IS_NODE")&&!de().get("IS_BROWSER")&&de().setPlatform("node",new X$);/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lt(n,e="float32",t){return e=e||"float32",xs(n),new ln(n,e,t)}/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Y$(n,e){const t=z(n,"x","cast");if(!DN(e))throw new Error(`Failed to cast to unknown dtype ${e}`);if(e==="string"&&t.dtype!=="string"||e!=="string"&&t.dtype==="string")throw new Error("Only strings can be casted to strings");const s={x:t},r={dtype:e};return Q.runKernel(Xi,s,r)}const Pe=Y({cast_:Y$});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Z$(n){const t={x:z(n,"x","clone","string_or_numeric")};return Q.runKernel(ll,t)}const Ir=Y({clone_:Z$});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ax(n,e=!1){console.log(n.toString(e))}/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */cx();const J$={buffer:lt,cast:Pe,clone:Ir,print:Ax};c$(J$);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Q$(n,e){let t=z(n,"a","add"),s=z(e,"b","add");[t,s]=Xt(t,s);const r={a:t,b:s};return Q.runKernel(Ha,r)}const Ne=Y({add_:Q$});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eT(n,e){let t=z(n,"a","floorDiv"),s=z(e,"b","floorDiv");[t,s]=Xt(t,s);const r={a:t,b:s};return Q.runKernel(al,r)}const dm=Y({floorDiv_:eT});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tT(n,e){let t=z(n,"a","div"),s=z(e,"b","div");if([t,s]=Xt(t,s),t.dtype==="int32"&&s.dtype==="int32")return dm(t,s);const r={a:t,b:s},o={};return Q.runKernel(el,r,o)}const Ke=Y({div_:tT});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nT(n,e){let t=z(n,"a","mul"),s=z(e,"b","mul");[t,s]=Xt(t,s);const r={a:t,b:s};return Q.runKernel(yl,r)}const J=Y({mul_:nT});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sT(n){const e=z(n,"x","abs");if(e.dtype==="complex64"){const t={x:e};return Q.runKernel(Dc,t)}else{const t={x:e};return Q.runKernel(Sc,t)}}const sn=Y({abs_:sT});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rT(n){const t={x:z(n,"x","acos")};return Q.runKernel(Wi,t)}const Dx=Y({acos_:rT});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oT(n){const t={x:z(n,"x","acosh")};return Q.runKernel(Ui,t)}const Rx=Y({acosh_:oT});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aT(n){P(Array.isArray(n),()=>"The argument passed to tf.addN() must be a list of tensors"),P(n.length>=1,()=>`Must pass at least one tensor to tf.addN(), but got ${n.length}`);const e=n.map((r,o)=>z(r,`tensors${o}`,"addN")),t=e[0];e.forEach(r=>{if(r.dtype!==t.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")}),e.forEach(r=>{if(!ft(r.shape,t.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")});const s=e;return Q.runKernel(Cc,s)}const iT=Y({addN_:aT});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lT(n,e=null,t=!1){const r={x:z(n,"x","all","bool")},o={axis:e,keepDims:t};return Q.runKernel(sf,r,o)}const pm=Y({all_:lT});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uT(n,e=null,t=!1){const r={x:z(n,"x","any","bool")},o={axis:e,keepDims:t};return Q.runKernel(rf,r,o)}const tc=Y({any_:uT});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cT(n,e=0){const s={x:z(n,"x","argMax")},r={axis:e};return Q.runKernel(Ic,s,r)}const Da=Y({argMax_:cT});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hT(n,e=0){const s={x:z(n,"x","argMin")},r={axis:e};return Q.runKernel(Nc,s,r)}const Fx=Y({argMin_:hT});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dT(n){const t={x:z(n,"x","asin")};return Q.runKernel(Gi,t)}const Ox=Y({asin_:dT});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pT(n){const t={x:z(n,"x","asinh")};return Q.runKernel(Hi,t)}const Lx=Y({asinh_:pT});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fT(n){const t={x:z(n,"x","atan")};return Q.runKernel(ji,t)}const Px=Y({atan_:fT});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mT(n,e){let t=z(n,"a","atan2"),s=z(e,"b","atan2");[t,s]=Xt(t,s);const r={a:t,b:s};return Q.runKernel(Ki,r)}const zx=Y({atan2_:mT});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gT(n){const t={x:z(n,"x","atanh")};return Q.runKernel(qi,t)}const Bx=Y({atanh_:gT});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zl(n,e,t,s,r="NHWC",o){const a=n[3],l=[...e,a],i=Dr(r);return yn(n,l,t,o,s,null,null,i)}function zs(n,e,t,s,r,o,a="channelsLast"){const[l,i]=Ni(e);let u;if(a==="channelsLast")u=[l,i,n[3],n[3]];else if(a==="channelsFirst")u=[l,i,n[1],n[1]];else throw new Error(`Unknown dataFormat ${a}`);return yn(n,u,t,s,r,o,!1,a)}function Ar(n,e,t,s,r,o,a="NDHWC"){const[l,i,u]=wp(e);let c,h;if(a==="NDHWC")h="channelsLast",c=[l,i,u,n[4],n[4]];else if(a==="NCDHW")h="channelsFirst",c=[l,i,u,n[1],n[1]];else throw new Error(`Unknown dataFormat ${a}`);return io(n,c,t,s,r,!1,h,o)}function yn(n,e,t,s,r,o,a=!1,l="channelsLast"){let[i,u,c,h]=[-1,-1,-1,-1];if(l==="channelsLast")[i,u,c,h]=n;else if(l==="channelsFirst")[i,h,u,c]=n;else throw new Error(`Unknown dataFormat ${l}`);const[d,p,,f]=e,[g,y]=Ni(t),[x,w]=Ni(s),v=Ca(d,x),k=Ca(p,w),{padInfo:C,outHeight:I,outWidth:N}=xT(r,u,c,g,y,v,k,o,l),E=a?f*h:f;let R;return l==="channelsFirst"?R=[i,E,I,N]:l==="channelsLast"&&(R=[i,I,N,E]),{batchSize:i,dataFormat:l,inHeight:u,inWidth:c,inChannels:h,outHeight:I,outWidth:N,outChannels:E,padInfo:C,strideHeight:g,strideWidth:y,filterHeight:d,filterWidth:p,effectiveFilterHeight:v,effectiveFilterWidth:k,dilationHeight:x,dilationWidth:w,inShape:n,outShape:R,filterShape:e}}function io(n,e,t,s,r,o=!1,a="channelsLast",l){let[i,u,c,h,d]=[-1,-1,-1,-1,-1];if(a==="channelsLast")[i,u,c,h,d]=n;else if(a==="channelsFirst")[i,d,u,c,h]=n;else throw new Error(`Unknown dataFormat ${a}`);const[p,f,g,,y]=e,[x,w,v]=wp(t),[k,C,I]=wp(s),N=Ca(p,k),E=Ca(f,C),R=Ca(g,I),{padInfo:O,outDepth:B,outHeight:j,outWidth:U}=wT(r,u,c,h,x,w,v,N,E,R,l),K=o?y*d:y;let H;return a==="channelsFirst"?H=[i,K,B,j,U]:a==="channelsLast"&&(H=[i,B,j,U,K]),{batchSize:i,dataFormat:a,inDepth:u,inHeight:c,inWidth:h,inChannels:d,outDepth:B,outHeight:j,outWidth:U,outChannels:K,padInfo:O,strideDepth:x,strideHeight:w,strideWidth:v,filterDepth:p,filterHeight:f,filterWidth:g,effectiveFilterDepth:N,effectiveFilterHeight:E,effectiveFilterWidth:R,dilationDepth:k,dilationHeight:C,dilationWidth:I,inShape:n,outShape:H,filterShape:e}}function yT(n,e,t,s,r){s==null&&(s=fm(n,e,t));const o=n[0],a=n[1],l=$i((o-e+2*s)/t+1,r),i=$i((a-e+2*s)/t+1,r);return[l,i]}function bT(n,e,t,s,r,o){r==null&&(r=fm(n,e[0],s[0]));const a=[0,0,0,t];for(let l=0;l<3;l++)n[l]+2*r>=e[l]&&(a[l]=$i((n[l]-e[l]+2*r)/s[l]+1,o));return a}function fm(n,e,t,s=1){const r=Ca(e,s);return Math.floor((n[0]*(t-1)-t+r)/2)}function Ni(n){return typeof n=="number"?[n,n,n]:n.length===2?[n[0],n[1],1]:n}function wp(n){return typeof n=="number"?[n,n,n]:n}function Ca(n,e){return e<=1?n:n+(n-1)*(e-1)}function xT(n,e,t,s,r,o,a,l,i){let u,c,h;if(typeof n=="number"){u={top:n,bottom:n,left:n,right:n,type:n===0?"VALID":"NUMBER"};const p=yT([e,t],o,s,n,l);c=p[0],h=p[1]}else if(n==="same"){c=Math.ceil(e/s),h=Math.ceil(t/r);const d=Math.max(0,(c-1)*s+o-e),p=Math.max(0,(h-1)*r+a-t),f=Math.floor(d/2),g=d-f,y=Math.floor(p/2),x=p-y;u={top:f,bottom:g,left:y,right:x,type:"SAME"}}else if(n==="valid")u={top:0,bottom:0,left:0,right:0,type:"VALID"},c=Math.ceil((e-o+1)/s),h=Math.ceil((t-a+1)/r);else if(typeof n=="object"){const d=i==="channelsLast"?n[1][0]:n[2][0],p=i==="channelsLast"?n[1][1]:n[2][1],f=i==="channelsLast"?n[2][0]:n[3][0],g=i==="channelsLast"?n[2][1]:n[3][1];u={top:d,bottom:p,left:f,right:g,type:d===0&&p===0&&f===0&&g===0?"VALID":"EXPLICIT"},c=$i((e-o+d+p)/s+1,l),h=$i((t-a+f+g)/r+1,l)}else throw Error(`Unknown padding parameter: ${n}`);return{padInfo:u,outHeight:c,outWidth:h}}function wT(n,e,t,s,r,o,a,l,i,u,c){let h,d,p,f;if(n==="valid"&&(n=0),typeof n=="number"){h={top:n,bottom:n,left:n,right:n,front:n,back:n,type:n===0?"VALID":"NUMBER"};const y=bT([e,t,s,1],[l,i,u],1,[r,o,a],n,c);d=y[0],p=y[1],f=y[2]}else if(n==="same"){d=Math.ceil(e/r),p=Math.ceil(t/o),f=Math.ceil(s/a);const g=(d-1)*r+l-e,y=(p-1)*o+i-t,x=(f-1)*a+u-s,w=Math.floor(g/2),v=g-w,k=Math.floor(y/2),C=y-k,I=Math.floor(x/2),N=x-I;h={top:k,bottom:C,left:I,right:N,front:w,back:v,type:"SAME"}}else throw Error(`Unknown padding parameter: ${n}`);return{padInfo:h,outDepth:d,outHeight:p,outWidth:f}}function $i(n,e){if(!e)return Math.trunc(n);switch(e){case"round":return Math.round(n);case"ceil":return Math.ceil(n);case"floor":return Math.floor(n);default:throw new Error(`Unknown roundingMode ${e}`)}}function Yr(n){const[e,t,s]=Ni(n);return e===1&&t===1&&s===1}function In(n,e){return Yr(n)||Yr(e)}function Bo(n){return Ni(n).every(e=>e>0)}function Dr(n){if(n==="NHWC")return"channelsLast";if(n==="NCHW")return"channelsFirst";throw new Error(`Unknown dataFormat ${n}`)}function Vn(n,e,t){if(t!=null){if(typeof e=="string")throw Error(`Error in ${n}: pad must be an integer when using dimRoundingMode ${t} but got pad ${e}.`);if(typeof e=="number")P(_a(e),()=>`Error in ${n}: pad must be an integer when using dimRoundingMode ${t} but got pad ${e}.`);else if(typeof e=="object")e.forEach(s=>{s.forEach(r=>{P(_a(r),()=>`Error in ${n}: pad must be an integer when using dimRoundingMode ${t} but got pad ${r}.`)})});else throw Error(`Error in ${n}: Unknown padding parameter: ${e}`)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vT(n,e){const s={x:z(n,"x","reshape","string_or_numeric")},r={shape:e};return Q.runKernel(dh,s,r)}const te=Y({reshape_:vT});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kT(n,e,t,s,r){const o=z(n,"x","avgPool","float32"),a=1;P(In(t,a),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${t} and dilations '${a}'`);let l=o,i=!1;o.rank===3&&(i=!0,l=te(o,[1,o.shape[0],o.shape[1],o.shape[2]])),P(l.rank===4,()=>`Error in avgPool: x must be rank 4 but got rank ${l.rank}.`),Vn("avgPool",s,r);const u={x:l},c={filterSize:e,strides:t,pad:s,dimRoundingMode:r};let h=Q.runKernel($c,u,c);return h=Pe(h,o.dtype),i?te(h,[h.shape[1],h.shape[2],h.shape[3]]):h}const $h=Y({avgPool_:kT});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ST(n,e,t,s,r,o="NDHWC"){const a=z(n,"x","avgPool3d","float32");let l=a,i=!1;a.rank===4&&(i=!0,l=te(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),P(l.rank===5,()=>`Error in avgPool3d: x must be rank 5 but got rank ${l.rank}.`),P(o==="NDHWC",()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${o}`),P(typeof t=="number"&&t>0||Array.isArray(t)&&t[0]>0&&t[1]>0&&t[2]>0,()=>`Error in avgPool3d: Stride must be > 0, but got '${t}'`),Vn("avgPool3d",s,r);const u={x:l},c={filterSize:e,strides:t,pad:s,dimRoundingMode:r,dataFormat:o};let h=Q.runKernel(Tc,u,c);return h=Pe(h,l.dtype),i?te(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}const Mx=Y({avgPool3d_:ST});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CT(n,e=0){P(n.length>=1,()=>"Pass at least one tensor to concat");const t=ec(n,"tensors","concat","string_or_numeric");if(t[0].dtype==="complex64"&&t.forEach(o=>{if(o.dtype!=="complex64")throw new Error(`Cannot concatenate complex64 tensors with a tensor
          with dtype ${o.dtype}. `)}),t.length===1)return Ir(t[0]);const s=t,r={axis:e};return Q.runKernel(Rc,s,r)}const nn=Y({concat_:CT});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IT(n,e,t=!1,s=!1){let r=z(n,"a","matMul"),o=z(e,"b","matMul");[r,o]=Xt(r,o);const a={a:r,b:o},l={transposeA:t,transposeB:s};return Q.runKernel(_c,a,l)}const dt=Y({matMul_:IT});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NT(n){const t={x:z(n,"x","sigmoid","float32")};return Q.runKernel(Tl,t)}const cr=Y({sigmoid_:NT});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $T(n,e,t){const s=z(n,"x","slice","string_or_numeric");if(s.rank===0)throw new Error("Slicing scalar is not possible");const r={x:s},o={begin:e,size:t};return Q.runKernel(yh,r,o)}const mt=Y({slice_:$T});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TT(n){const t={x:z(n,"x","tanh","float32")};return Q.runKernel(Fl,t)}const Mo=Y({tanh_:TT});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _T(n,e,t,s,r,o){const a=z(n,"forgetBias","basicLSTMCell"),l=z(e,"lstmKernel","basicLSTMCell"),i=z(t,"lstmBias","basicLSTMCell"),u=z(s,"data","basicLSTMCell"),c=z(r,"c","basicLSTMCell"),h=z(o,"h","basicLSTMCell"),d=nn([u,h],1),p=dt(d,l),f=Ne(p,i),g=f.shape[0],y=f.shape[1]/4,x=[g,y],w=mt(f,[0,0],x),v=mt(f,[0,y],x),k=mt(f,[0,y*2],x),C=mt(f,[0,y*3],x),I=Ne(J(cr(w),Mo(v)),J(c,cr(Ne(a,k)))),N=J(Mo(I),cr(C));return[I,N]}const ET=Y({basicLSTMCell_:_T});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AT(n,e,t){const s=z(n,"x","batchToSpaceND"),r=e.reduce((l,i)=>l*i);P(s.rank>=1+e.length,()=>`input rank is ${s.rank} but should be > than blockShape.length ${e.length}`),P(t.length===e.length,()=>`crops.length is ${t.length} but should be equal to blockShape.length  ${e.length}`),P(s.shape[0]%r===0,()=>`input tensor batch is ${s.shape[0]} but is not divisible by the product of the elements of blockShape ${e.join(" * ")} === ${r}`);const o={x:s},a={blockShape:e,crops:t};return Q.runKernel(Ec,o,a)}const Th=Y({batchToSpaceND_:AT});function DT(n){let e;return n.rank===0||n.rank===1?e=te(n,[1,1,1,n.size]):n.rank===2?e=te(n,[1,1,n.shape[0],n.shape[1]]):n.rank===3?e=te(n,[1,n.shape[0],n.shape[1],n.shape[2]]):e=n,e}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RT(n,e,t,s,r,o){o==null&&(o=.001);const a=z(n,"x","batchNorm"),l=z(e,"mean","batchNorm"),i=z(t,"variance","batchNorm");let u;r!=null&&(u=z(r,"scale","batchNorm"));let c;s!=null&&(c=z(s,"offset","batchNorm")),P(l.rank===i.rank,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),P(c==null||l.rank===c.rank,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),P(u==null||l.rank===u.rank,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");const d={x:DT(a),scale:u,offset:c,mean:l,variance:i},p={varianceEpsilon:o},f=Q.runKernel(Wc,d,p);return te(f,a.shape)}const Bl=Y({batchNorm_:RT});function FT(n,e,t,s,r,o){const a=z(n,"x","batchNorm"),l=z(e,"mean","batchNorm"),i=z(t,"variance","batchNorm");let u;r!=null&&(u=z(r,"scale","batchNorm"));let c;return s!=null&&(c=z(s,"offset","batchNorm")),P(a.rank===2,()=>`Error in batchNorm2D: x must be rank 2 but got rank ${a.rank}.`),P(l.rank===2||l.rank===1,()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${l.rank}.`),P(i.rank===2||i.rank===1,()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${i.rank}.`),u!=null&&P(u.rank===2||u.rank===1,()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${u.rank}.`),c!=null&&P(c.rank===2||c.rank===1,()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${c.rank}.`),Bl(a,l,i,c,u,o)}const Vx=Y({batchNorm2d_:FT});function OT(n,e,t,s,r,o){const a=z(n,"x","batchNorm"),l=z(e,"mean","batchNorm"),i=z(t,"variance","batchNorm");let u;r!=null&&(u=z(r,"scale","batchNorm"));let c;return s!=null&&(c=z(s,"offset","batchNorm")),P(a.rank===3,()=>`Error in batchNorm3D: x must be rank 3 but got rank ${a.rank}.`),P(l.rank===3||l.rank===1,()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${l.rank}.`),P(i.rank===3||i.rank===1,()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${i.rank}.`),u!=null&&P(u.rank===3||u.rank===1,()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${u.rank}.`),c!=null&&P(c.rank===3||c.rank===1,()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${c.rank}.`),Bl(a,l,i,c,u,o)}const Wx=Y({batchNorm3d_:OT});function LT(n,e,t,s,r,o){const a=z(n,"x","batchNorm"),l=z(e,"mean","batchNorm"),i=z(t,"variance","batchNorm");let u;r!=null&&(u=z(r,"scale","batchNorm"));let c;return s!=null&&(c=z(s,"offset","batchNorm")),P(a.rank===4,()=>`Error in batchNorm4D: x must be rank 4 but got rank ${a.rank}.`),P(l.rank===4||l.rank===1,()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${l.rank}.`),P(i.rank===4||i.rank===1,()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${i.rank}.`),u!=null&&P(u.rank===4||u.rank===1,()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${u.rank}.`),c!=null&&P(c.rank===4||c.rank===1,()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${c.rank}.`),Bl(a,l,i,c,u,o)}const Ux=Y({batchNorm4d_:LT});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PT(n,e,t){const s=z(n,"x","bincount"),r=z(e,"weights","bincount");P(s.dtype==="int32",()=>`Error in bincount: input dtype must be int32, but got ${s.dtype}`),P(t>=0,()=>`size must be non-negative, but got ${t}.`),P(r.size===s.size||r.size===0,()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${s.shape}, weights shape: ${r.shape}.`);const o={x:s,weights:r},a={size:t};return Q.runKernel(lf,o,a)}const Gx=Y({bincount_:PT});/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zT(n,e){const t=z(n,"x","bitwiseAnd"),s=z(e,"y","bitwiseAnd");if(!ft(t.shape,s.shape))throw new Error(`BitwiseAnd: Tensors must have the same shape. x: ${t.shape}, y: ${s.shape}`);if(t.dtype!=="int32"||s.dtype!=="int32")throw new Error(`BitwiseAnd: Only supports 'int32' values in tensor, found type of x: ${t.dtype} and type of y: ${s.dtype}`);const r={a:t,b:s};return Q.runKernel(Ac,r)}const BT=Y({bitwiseAnd_:zT});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MT(n,e){const t=z(n,"s0","broadcastArgs","int32"),s=z(e,"s1","broadcastArgs","int32");if(t.rank!==1)throw new Error(`broadcastArgs(): first input must be a vector (rank=1). Has rank ${t.rank}`);if(s.rank!==1)throw new Error(`broadcastArgs(): second input must be a vector (rank=1). Has rank ${s.rank}`);const r={s0:t,s1:s};return Q.runKernel(uf,r)}const VT=Y({broadcastArgs_:MT});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WT(n,e){let t=z(n,"broadcastTo","x");const s=t.shape;if(xs(e),e.length<t.rank)throw new Error(`broadcastTo(): shape.length=${e.length} < input.rank=${t.rank}.`);if(e.length>t.rank){const u=t.shape.slice();for(;u.length<e.length;)u.unshift(1);t=te(t,u)}const r=t.shape,o=Array.from(e);for(let u=e.length-1;u>=0;u--)if(r[u]===e[u])o[u]=1;else if(t.shape[u]!==1)throw new Error(`broadcastTo(): [${s}] cannot be broadcast to [${e}].`);if(o.map((u,c)=>u>1?c:-1).filter(u=>u>=0).length===0)return Ir(t);const l={x:t},i={reps:o};return Q.runKernel(Ol,l,i)}const Ia=Y({broadcastTo_:WT});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UT(n){const t={x:z(n,"x","ceil","float32")};return Q.runKernel(Yi,t)}const Hx=Y({ceil_:UT});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ja(n,e,t){xs(n),t=t||Ua(e);const s={shape:n,value:e,dtype:t};return Q.runKernel(Cf,{},s)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GT(n,e,t){const s=z(n,"x","clipByValue");if(P(e<=t,()=>`Error in clip: min (${e}) must be less than or equal to max (${t}).`),e===t)return ja(s.shape,e,s.dtype);const r={x:s},o={clipValueMin:e,clipValueMax:t};return Q.runKernel(Zi,r,o)}const os=Y({clipByValue_:GT});function HT(n){return nn(n,0)}const jx=Y({concat1d_:HT});function jT(n,e){return nn(n,e)}const qx=Y({concat2d_:jT});function qT(n,e){return nn(n,e)}const Kx=Y({concat3d_:qT});function KT(n,e){return nn(n,e)}const Xx=Y({concat4d_:KT});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XT(n,e,t,s,r="NHWC",o=[1,1],a){const l=z(n,"x","conv2d","float32"),i=z(e,"filter","conv2d","float32");let u=l,c=!1;l.rank===3&&(c=!0,u=te(l,[1,l.shape[0],l.shape[1],l.shape[2]])),P(u.rank===4,()=>`Error in conv2d: input must be rank 4, but got rank ${u.rank}.`),P(i.rank===4,()=>`Error in conv2d: filter must be rank 4, but got rank ${i.rank}.`),Vn("conv2d",s,a);const h=r==="NHWC"?u.shape[3]:u.shape[1];P(h===i.shape[2],()=>`Error in conv2d: depth of input (${h}) must match input depth for filter ${i.shape[2]}.`),P(In(t,o),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${t} and dilations '${o}'`),P(Bo(o),()=>"Error in conv2D: Dilated rates should be larger than 0."),P(Bo(t),()=>"Error in conv2D: Strides should be larger than 0.");const d={x:u,filter:i},p={strides:t,pad:s,dataFormat:r,dilations:o,dimRoundingMode:a},f=Q.runKernel(Fc,d,p);return c?te(f,[f.shape[1],f.shape[2],f.shape[3]]):f}const Zr=Y({conv2d_:XT});function YT(n,e,t,s,r="NWC",o=1,a){const l=z(n,"x","conv1d"),i=z(e,"filter","conv1d");let u=l,c=!1;l.rank===2&&(c=!0,u=te(l,[1,l.shape[0],l.shape[1]])),P(u.rank===3,()=>`Error in conv1d: input must be rank 3, but got rank ${u.rank}.`),P(i.rank===3,()=>`Error in conv1d: filter must be rank 3, but got rank ${i.rank}.`),Vn("conv1d",s,a),P(u.shape[2]===i.shape[1],()=>`Error in conv1d: depth of input (${u.shape[2]}) must match input depth for filter ${i.shape[1]}.`),P(In(t,o),()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${t} and dilation '${o}'`),P(Bo(o),()=>"Error in conv1D: Dilated rates should be larger than 0."),P(Bo(t),()=>"Error in conv1D: Stride should be larger than 0."),P(r==="NWC",()=>`Error in conv1d: got dataFormat of ${r} but only NWC is currently supported.`);const h=te(i,[1,i.shape[0],i.shape[1],i.shape[2]]),d=te(u,[u.shape[0],1,u.shape[1],u.shape[2]]),y=Zr(d,h,[1,t],s,"NHWC",[1,o],a);return c?te(y,[y.shape[2],y.shape[3]]):te(y,[y.shape[0],y.shape[2],y.shape[3]])}const mm=Y({conv1d_:YT});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZT(n,e,t,s,r,o="NHWC",a){P(n.length===e.rank,()=>`Length of inShape (${n.length}) and rank of dy (${e.rank}) must match`);let l=n,i=e,u=!1;e.rank===3&&(u=!0,i=te(e,[1,e.shape[0],e.shape[1],e.shape[2]]),l=[1,n[0],n[1],n[2]]),P(l.length===4,()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${l.length}.`),P(i.rank===4,()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${i.rank}`),P(t.rank===4,()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${t.rank}`);const c=o==="NHWC"?l[3]:l[1],h=o==="NHWC"?i.shape[3]:i.shape[1];P(c===t.shape[2],()=>`Error in conv2dDerInput: depth of input (${c}) must match input depth for filter ${t.shape[2]}.`),P(h===t.shape[3],()=>`Error in conv2dDerInput: depth of output (${h}) must match output depth for filter ${t.shape[3]}.`),Vn("conv2dDerInput",r,a);const d={dy:i,filter:t},p={strides:s,pad:r,dataFormat:o,dimRoundingMode:a,inputShape:l},f=Q.runKernel(Oc,d,p);return u?te(f,[f.shape[1],f.shape[2],f.shape[3]]):f}const gm=Y({conv2DBackpropInput_:ZT});function JT(n,e,t,s,r,o){const a=z(n,"x","conv2dTranspose"),l=z(e,"filter","conv2dTranspose");return gm(t,a,l,s,r,"NHWC",o)}const ym=Y({conv2dTranspose_:JT});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QT(n,e,t,s,r="NDHWC",o=[1,1,1]){const a=z(n,"x","conv3d"),l=z(e,"filter","conv3d");let i=a,u=!1;a.rank===4&&(u=!0,i=te(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),P(i.rank===5,()=>`Error in conv3d: input must be rank 5, but got rank ${i.rank}.`),P(l.rank===5,()=>`Error in conv3d: filter must be rank 5, but got rank ${l.rank}.`),P(i.shape[4]===l.shape[3],()=>`Error in conv3d: depth of input (${i.shape[4]}) must match input depth for filter ${l.shape[3]}.`),P(In(t,o),()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${t} and dilations '${o}'`),P(r==="NDHWC",()=>`Error in conv3d: got dataFormat of ${r} but only NDHWC is currently supported.`),P(Bo(o),()=>"Error in conv3D: Dilated rates should be larger than 0."),P(Bo(t),()=>"Error in conv3D: Strides should be larger than 0.");const c={x:i,filter:l},h={strides:t,pad:s,dataFormat:r,dilations:o},d=Q.runKernel(Lc,c,h);return u?te(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}const Yx=Y({conv3d_:QT});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function e_(n,e,t,s,r){P(n.length===e.rank,()=>`Length of inShape (${n.length}) and rank of dy (${e.rank}) must match`);let o=n,a=e,l=!1;e.rank===4&&(l=!0,a=te(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]),o=[1,n[0],n[1],n[2],n[3]]);const i=o[4],u=a.shape[4];P(o.length===5,()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${o.length}.`),P(a.rank===5,()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${a.rank}`),P(t.rank===5,()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${t.rank}`),P(i===t.shape[3],()=>`Error in conv3dDerInput: depth of input (${i}) must match input depth for filter ${t.shape[3]}.`),P(u===t.shape[4],()=>`Error in conv3dDerInput: depth of output (${u}) must match output depth for filter ${t.shape[4]}.`);const c={dy:a,filter:t},h={pad:r,strides:s,inputShape:o},d=Q.runKernel(pf,c,h);return l?te(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}const Zx=Y({conv3DBackpropInput_:e_});function t_(n,e,t,s,r){const o=z(n,"x","conv3dTranspose"),a=z(e,"filter","conv3dTranspose");return Zx(t,o,a,s,r)}const Jx=Y({conv3dTranspose_:t_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function n_(n){const t={x:z(n,"x","cos","float32")};return Q.runKernel(Ji,t)}const _h=Y({cos_:n_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function s_(n){const t={x:z(n,"x","cosh","float32")};return Q.runKernel(Qi,t)}const bm=Y({cosh_:s_});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the 'License');
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an 'AS IS' BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function r_(n,e=0,t=!1,s=!1){const o={x:z(n,"x","cumprod")},a={axis:e,exclusive:t,reverse:s};return Q.runKernel(ff,o,a)}const nc=Y({cumprod_:r_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function o_(n,e=0,t=!1,s=!1){const o={x:z(n,"x","cumsum")},a={axis:e,exclusive:t,reverse:s};return Q.runKernel(Pc,o,a)}const xm=Y({cumsum_:o_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a_(n,e,t,s=!1){const r=z(n,"x","denseBincount"),o=z(e,"weights","denseBincount");P(r.dtype==="int32",()=>`Error in denseBincount: input dtype must be int32, but got ${r.dtype}`),P(r.rank<=2,()=>`Error in denseBincount: input must be at most rank 2, but got rank ${r.rank}.`),P(t>=0,()=>`size must be non-negative, but got ${t}.`),P(o.size===r.size||o.size===0,()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${r.shape}, weights shape: ${o.shape}.`);const a={x:r,weights:o},l={size:t,binaryOutput:s};return Q.runKernel(gf,a,l)}const vp=Y({denseBincount_:a_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function i_(n,e,t="NHWC"){const s=z(n,"x","depthToSpace","float32"),r=t==="NHWC"?s.shape[1]:s.shape[2],o=t==="NHWC"?s.shape[2]:s.shape[3],a=t==="NHWC"?s.shape[3]:s.shape[1];P(e>1,()=>`blockSize should be > 1 for depthToSpace, but was: ${e}`),P(r*e>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${r} and ${e}  for depthToSpace with input shape
    ${s.shape}`),P(o*e>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${o} and ${e} for depthToSpace with input shape
        ${s.shape}`),P(a%(e*e)===0,()=>`Dimension size must be evenly divisible by ${e*e} but is ${a} for depthToSpace with input shape ${s.shape}`);const l={x:s},i={blockSize:e,dataFormat:t};return Q.runKernel(yf,l,i)}const Qx=Y({depthToSpace_:i_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function l_(n,e,t,s,r="NHWC",o=[1,1],a){const l=z(n,"x","depthwiseConv2d","float32"),i=z(e,"filter","depthwiseConv2d","float32");let u=l,c=!1;l.rank===3&&(c=!0,u=te(l,[1,l.shape[0],l.shape[1],l.shape[2]])),P(u.rank===4,()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${u.rank}.`),P(i.rank===4,()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${i.rank}.`);const h=r==="NHWC"?u.shape[3]:u.shape[1];P(h===i.shape[2],()=>`Error in depthwiseConv2d: number of input channels (${h}) must match the inChannels dimension in filter ${i.shape[2]}.`),Vn("depthwiseConv2d",s,a);const d={x:u,filter:i},p={strides:t,pad:s,dataFormat:r,dilations:o,dimRoundingMode:a},f=Q.runKernel(zc,d,p);return c?te(f,[f.shape[1],f.shape[2],f.shape[3]]):f}const Ml=Y({depthwiseConv2d_:l_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function u_(n){const t={x:z(n,"x","diag")};return Q.runKernel(wf,t)}const c_=Y({diag_:u_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function h_(n,e,t,s,r=[1,1],o="NHWC"){const a=z(n,"x","dilation2d"),l=z(e,"filter","dilation2d");P(a.rank===3||a.rank===4,()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${a.rank}.`),P(l.rank===3,()=>`Error in dilation2d: filter must be rank 3, but got rank ${l.rank}.`),P(o==="NHWC",()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${o}`);let i=a,u=!1;a.rank===3&&(i=te(a,[1,a.shape[0],a.shape[1],a.shape[2]]),u=!0),P(i.shape[3]===l.shape[2],()=>`Error in dilation2d:  input and filter must have the same depth: ${i.shape[3]} vs ${l.shape[2]}`);const c={x:i,filter:l},h={strides:t,pad:s,dilations:r},d=Q.runKernel(Bc,c,h);return u?te(d,[d.shape[1],d.shape[2],d.shape[3]]):d}const e1=Y({dilation2d_:h_});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ra(n,e){const t=n.length,s=[];for(let r=0;r<t;r++){const o=t-1-r,a=n[o]||1;(e[e.length-1-r]||1)>1&&a===1&&s.unshift(o)}return s}function hn(n,e){const t=[];for(let s=0;s<e.length;s++){const r=n[n.length-s-1],o=e.length-s-1,a=e[o];(r==null||r===1&&a>1)&&t.unshift(o)}return t}function st(n,e){const t=Math.max(n.length,e.length),s=new Array(t);for(let r=0;r<t;r++){let o=n[n.length-r-1];o==null&&(o=1);let a=e[e.length-r-1];if(a==null&&(a=1),o===1)s[t-r-1]=a;else if(a===1)s[t-r-1]=o;else if(o!==a){const l=`Operands could not be broadcast together with shapes ${n} and ${e}.`;throw Error(l)}else s[t-r-1]=o}return s}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function d_(n,e){let t=z(n,"a","equal","string_or_numeric"),s=z(e,"b","equal","string_or_numeric");[t,s]=Xt(t,s),st(t.shape,s.shape);const r={a:t,b:s};return Q.runKernel(Mc,r)}const qs=Y({equal_:d_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function p_(n,e,t){const s=z(e,"a","where"),r=z(t,"b","where"),o=z(n,"condition","where","bool"),a=st(st(o.shape,s.shape),r.shape),l=Ia(o,a),i=Ia(s,a),u=Ia(r,a),c={condition:l,t:i,e:u};return Q.runKernel(gh,c)}const An=Y({where_:p_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function f_(n){const t={x:z(n,"x","zerosLike")};return Q.runKernel(Ih,t)}const yt=Y({zerosLike_:f_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function m_(n,e){let t=z(n,"a","div"),s=z(e,"b","div");[t,s]=Xt(t,s);const r=Ke(t,s),o=yt(r),a=qs(s,o);return An(a,o,r)}const t1=Y({divNoNan_:m_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function g_(n,e){const t=z(n,"t1","dot"),s=z(e,"t2","dot");P((t.rank===1||t.rank===2)&&(s.rank===1||s.rank===2),()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${t.rank} and ${s.rank}.`);const r=t.rank===1?t.size:t.shape[1],o=s.rank===1?s.size:s.shape[0];if(P(r===o,()=>`Error in dot: inner dimensions of inputs must match, but got ${r} and ${o}.`),t.rank===1&&s.rank===1){const a=te(t,[1,-1]),l=te(s,[-1,1]),i=dt(a,l);return te(i,[])}else if(t.rank===1&&s.rank===2){const a=te(t,[1,-1]),l=te(s,[s.shape[0],s.shape[1]]),i=dt(a,l);return te(i,[i.size])}else if(t.rank===2&&s.rank===1){const a=te(s,[-1,1]),l=dt(t,a);return te(l,[l.size])}else{const a=te(s,[s.shape[0],s.shape[1]]);return dt(t,a)}}const n1=Y({dot_:g_});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function y_(n,...e){const t=e.map((r,o)=>z(r,`tensors${o}`,"einsum")),s={equation:n};return Q.runKernel(vf,t,s)}const xa=Y({einsum_:y_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function b_(n){const t={x:z(n,"x","elu","float32")};return Q.runKernel(tl,t)}const Vl=Y({elu_:b_});/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function x_(n,e){const t=z(n,"x","ensureShape","string_or_numeric");if(!EN(t.shape,e))throw new Error(`EnsureShape: Shape of tensor ${t.shape} is not compatible with expected shape ${e}`);return n}const w_=Y({ensureShape_:x_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function v_(n){let e=z(n,"x","erf");P(e.dtype==="int32"||e.dtype==="float32",()=>"Input dtype must be `int32` or `float32`."),e.dtype==="int32"&&(e=Pe(e,"float32"));const t={x:e};return Q.runKernel(nl,t)}const wm=Y({erf_:v_});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vm(n,e){for(let t=0;t<n.length;++t)if(n[n.length-t-1]!==e-1-t)return!1;return!0}function s1(n,e,t){const s=n.length+e.length,r=[];let o=0,a=0;for(let l=0;l<s;l++)t.indexOf(l)===-1?r.push(n[o++]):r.push(e[a++]);return r}function bn(n,e){const t=[],s=n.length;for(let o=0;o<s;o++)e.indexOf(o)===-1&&t.push(n[o]);const r=e.map(o=>n[o]);return[t,r]}function Jt(n,e){const t=e.map(s=>1);return s1(n,t,e)}function Nn(n,e,t){P(vm(e,t),()=>`${n} supports only inner-most axes for now. Got axes ${e} and rank-${t} input.`)}function jt(n,e){if(vm(n,e))return null;const t=[];for(let s=0;s<e;++s)n.indexOf(s)===-1&&t.push(s);return n.forEach(s=>t.push(s)),t}function lo(n){return n.map((e,t)=>[t,e]).sort((e,t)=>e[1]-t[1]).map(e=>e[0])}function Qt(n,e){const t=[];for(let s=e-n;s<e;++s)t.push(s);return t}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function k_(n,e=null,t=!1){const r={x:z(n,"x","max")},o={reductionIndices:e,keepDims:t};return Q.runKernel(Jc,r,o)}const Fs=Y({max_:k_});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function S_(n,e=null,t=!1){const r={x:z(n,"x","min")},o={axis:e,keepDims:t};return Q.runKernel(nh,r,o)}const Ti=Y({min_:S_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function C_(n,e){let t=z(n,"base","pow"),s=z(e,"exp","pow");[t,s]=Xt(t,s);const r={a:t,b:s};return Q.runKernel(bl,r)}const $r=Y({pow_:C_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ye(n,e){if((Os(n)&&e!=="string"||Array.isArray(n))&&e!=="complex64")throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if(e==="string"&&Os(n)&&!(n instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return ao(n,[],[],e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function I_(n){const t={x:z(n,"x","sqrt","float32")};return Q.runKernel(El,t)}const Cn=Y({sqrt_:I_});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function N_(n){const e=z(n,"x","square"),t={};return Q.runKernel("Square",{x:e},t)}const _t=Y({square_:N_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $_(n,e=null,t=!1){let s=z(n,"x","sum");s.dtype==="bool"&&(s=Pe(s,"int32"));const r={x:s},o={axis:e,keepDims:t};return Q.runKernel(bh,r,o)}const Ue=Y({sum_:$_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function T_(n,e="euclidean",t=null,s=!1){n=z(n,"x","norm");const r=r1(n,e,t);let o=r.shape;if(s){const a=ct(t,n.shape);o=Jt(r.shape,a)}return te(r,o)}function r1(n,e,t=null){if(n.rank===0)return sn(n);if(n.rank!==1&&t===null)return r1(te(n,[-1]),e,t);if(n.rank===1||typeof t=="number"||Array.isArray(t)&&t.length===1){if(e===1)return Ue(sn(n),t);if(e===1/0)return Fs(sn(n),t);if(e===-1/0)return Ti(sn(n),t);if(e==="euclidean"||e===2)return Cn(Ue($r(sn(n),Ye(2,"int32")),t));throw new Error(`Error in norm: invalid ord value: ${e}`)}if(Array.isArray(t)&&t.length===2){if(e===1)return Fs(Ue(sn(n),t[0]),t[1]-1);if(e===1/0)return Fs(Ue(sn(n),t[1]),t[0]);if(e===-1/0)return Ti(Ue(sn(n),t[1]),t[0]);if(e==="fro"||e==="euclidean")return Cn(Ue(_t(n),t));throw new Error(`Error in norm: invalid ord value: ${e}`)}throw new Error(`Error in norm: invalid axis: ${t}`)}const Wl=Y({norm_:T_});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function __(n,e=null,t=!1){return Wl(n,"euclidean",e,t)}const o1=Y({euclideanNorm_:__});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function E_(n){const t={x:z(n,"x","exp")};return Q.runKernel(sl,t)}const as=Y({exp_:E_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function A_(n,e=0){const t=z(n,"x","expandDims","string_or_numeric");P(e<=t.rank,()=>"Axis must be <= rank of the tensor");const s={input:t},r={dim:e};return Q.runKernel(Vc,s,r)}const zn=Y({expandDims_:A_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function D_(n){const t={x:z(n,"x","expm1")};return Q.runKernel(rl,t)}const a1=Y({expm1_:D_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function R_(n,e){const t=z(n,"x","tile","string_or_numeric");P(t.rank===e.length,()=>`Error in transpose: rank of input ${t.rank} must match length of reps ${e}.`);const s={x:t},r={reps:e};return Q.runKernel(Ol,s,r)}const Es=Y({tile_:R_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function F_(n,e,t,s="float32"){e==null&&(e=n);const r=lt([n,e],s),o=n<=e?n:e;for(let l=0;l<o;++l)r.set(1,l,l);const a=te(r.toTensor(),[n,e]);if(t==null)return a;if(t.length===1)return Es(zn(a,0),[t[0],1,1]);if(t.length===2)return Es(zn(zn(a,0),0),[t[0],t[1],1,1]);if(t.length===3)return Es(zn(zn(zn(a,0),0),0),[t[0],t[1],t[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${t.length}D.`)}const km=Y({eye_:F_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function O_(n){const t={x:z(n,"x","floor","float32")};return Q.runKernel(ol,t)}const Ul=Y({floor_:O_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function L_(n,e,t=0,s=0){const r=z(n,"x","gather"),o=z(e,"indices","gather","int32"),a={x:r,indices:o},l={axis:t,batchDims:s};return Q.runKernel(Uc,a,l)}const Gl=Y({gather_:L_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function P_(n,e){let t=z(n,"a","greater","string_or_numeric"),s=z(e,"b","greater","string_or_numeric");[t,s]=Xt(t,s),st(t.shape,s.shape);const r={a:t,b:s};return Q.runKernel(Gc,r)}const ds=Y({greater_:P_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function z_(n,e){let t=z(n,"a","greaterEqual","string_or_numeric"),s=z(e,"b","greaterEqual","string_or_numeric");[t,s]=Xt(t,s),st(t.shape,s.shape);const r={a:t,b:s};return Q.runKernel(il,r)}const uo=Y({greaterEqual_:z_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function B_(n){const t={input:z(n,"input","imag")};return Q.runKernel(Tf,t)}const Eh=Y({imag_:B_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function M_(n){const t={x:z(n,"x","isFinite")};return Q.runKernel(ul,t)}const i1=Y({isFinite_:M_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function V_(n){const t={x:z(n,"x","isInf")};return Q.runKernel(cl,t)}const l1=Y({isInf_:V_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function W_(n){const t={x:z(n,"x","isNaN")};return Q.runKernel(hl,t)}const u1=Y({isNaN_:W_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function U_(n,e=.2){const s={x:z(n,"x","leakyRelu")},r={alpha:e};return Q.runKernel(Hc,s,r)}const Ah=Y({leakyRelu_:U_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function G_(n,e){let t=z(n,"a","less","string_or_numeric"),s=z(e,"b","less","string_or_numeric");[t,s]=Xt(t,s),st(t.shape,s.shape);const r={a:t,b:s};return Q.runKernel(jc,r)}const _i=Y({less_:G_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function H_(n,e){let t=z(n,"a","lessEqual","string_or_numeric"),s=z(e,"b","lessEqual","string_or_numeric");[t,s]=Xt(t,s),st(t.shape,s.shape);const r={a:t,b:s};return Q.runKernel(qc,r)}const Zo=Y({lessEqual_:H_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function j_(n,e,t){if(t<=0)throw new Error("The number of values should be positive.");const s={start:n,stop:e,num:t};return Q.runKernel(_f,{},s)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function q_(n,e=5,t=1,s=1,r=.5){const o=z(n,"x","localResponseNormalization");P(o.rank===4||o.rank===3,()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got
               rank ${o.rank}.`),P(_a(e),()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${e}.`);let a=o,l=!1;o.rank===3&&(l=!0,a=te(o,[1,o.shape[0],o.shape[1],o.shape[2]]));const i={x:a},u={depthRadius:e,bias:t,alpha:s,beta:r},c=Q.runKernel(Zc,i,u);return l?te(c,[c.shape[1],c.shape[2],c.shape[3]]):c}const c1=Y({localResponseNormalization_:q_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function K_(n){const t={x:z(n,"x","log","float32")};return Q.runKernel(dl,t)}const ys=Y({log_:K_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function X_(n){const t={x:z(n,"x","log1p")};return Q.runKernel(pl,t)}const Dh=Y({log1p_:X_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Y_(n,e){P(rp(n),()=>"The f passed in variableGrads(f) must be a function"),P(e==null||Array.isArray(e)&&e.every(u=>u instanceof Qu),()=>"The varList passed in variableGrads(f, varList) must be an array of variables");const t=e!=null;if(!t){e=[];for(const u in Q.registeredVariables)e.push(Q.registeredVariables[u])}const s=t?e.filter(u=>!u.trainable):null,r=e.length;e=e.filter(u=>u.trainable),P(e.length>0,()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${r} variables is trainable.`);const o=!0,{value:a,grads:l}=Q.gradients(n,e,null,o);P(l.some(u=>u!=null),()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize()."),P(a.rank===0,()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${a.rank} tensor`);const i={};return e.forEach((u,c)=>{l[c]!=null&&(i[u.name]=l[c])}),s!=null&&s.forEach(u=>i[u.name]=null),{value:a,grads:i}}function Tr(n){return Q.customGrad(n)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Z_(n){const t={x:z(n,"x","neg")};return Q.runKernel(rh,t)}const Pt=Y({neg_:Z_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function J_(n){const t={x:z(n,"x","softplus")};return Q.runKernel(_l,t)}const qa=Y({softplus_:J_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Q_(n){const e=z(n,"x","logSigmoid");return Tr(s=>({value:Pt(qa(Pt(s))),gradFunc:a=>J(a,cr(Pt(s)))}))(e)}const h1=Y({logSigmoid_:Q_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eE(n,e){let t=z(n,"a","sub"),s=z(e,"b","sub");[t,s]=Xt(t,s);const r={a:t,b:s};return Q.runKernel(Dl,r)}const Ve=Y({sub_:eE});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tE(n,e=-1){const t=z(n,"logits","logSoftmax");if(e===-1&&(e=t.rank-1),e!==t.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${t.rank} and axis was ${e}`);return Tr((r,o)=>{const l=Fs(r,e,!0),i=Ve(r,l),u=Ve(Pe(i,"float32"),ys(Ue(as(i),e,!0)));return o([u]),{value:u,gradFunc:(h,d)=>{const[p]=d,f=!0,g=as(p);return Ve(h,J(Ue(h,e,f),g))}}})(t)}const Sm=Y({logSoftmax_:tE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nE(n,e=null,t=!1){const s=z(n,"x","logSumExp"),r=ct(e,s.shape),o=Fs(s,r,!0),a=Ve(s,o),l=as(a),i=Ue(l,r),u=ys(i),c=Ne(te(o,u.shape),u);if(t){const h=Jt(c.shape,r);return te(c,h)}return c}const Rh=Y({logSumExp_:nE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sE(n,e){const t=z(n,"a","logicalAnd","bool"),s=z(e,"b","logicalAnd","bool");st(t.shape,s.shape);const r={a:t,b:s};return Q.runKernel(Kc,r)}const fr=Y({logicalAnd_:sE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rE(n){const t={x:z(n,"x","logicalNot","bool")};return Q.runKernel(Xc,t)}const Fh=Y({logicalNot_:rE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oE(n,e){const t=z(n,"a","logicalOr","bool"),s=z(e,"b","logicalOr","bool");st(t.shape,s.shape);const r={a:t,b:s};return Q.runKernel(Yc,r)}const Cm=Y({logicalOr_:oE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aE(n,e){const t=z(n,"a","logicalXor","bool"),s=z(e,"b","logicalXor","bool");return st(t.shape,s.shape),fr(Cm(n,e),Fh(fr(n,e)))}const d1=Y({logicalXor_:aE});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $u=2147483648;function iE(n,e,t="left"){const s=z(n,"sortedSequence","searchSorted"),r=z(e,"values","searchSorted"),o=s.shape[s.shape.length-1],a=r.shape[r.shape.length-1],l=te(s,[-1,o]),i=te(r,[-1,a]);if(l.rank<2)throw new Error("Sorted input argument must be at least 2-dimensional");if(l.shape[0]!==i.shape[0])throw new Error("Leading dimension of 'sortedSequence' and 'values' must match.");if(me(i.shape)>=$u)throw new Error(`values tensor size must less than ${$u}`);if(l.shape[1]>=$u)throw new Error(`trailing dim_size must less than ${$u} for int32 output type, was ${l.shape[1]}`);const u={sortedSequence:l,values:i},c={side:t};return Q.runKernel(qf,u,c)}const Im=Y({searchSorted_:iE});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lE(n,e){return Im(n,e,"left")}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uE(n,e,t,s,r){const o=z(n,"x","maxPool"),a=1;let l=o,i=!1;o.rank===3&&(i=!0,l=te(o,[1,o.shape[0],o.shape[1],o.shape[2]])),P(l.rank===4,()=>`Error in maxPool: input must be rank 4 but got rank ${l.rank}.`),P(In(t,a),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${t} and dilations '${a}'`),Vn("maxPool",s,r);const u={x:l},c={filterSize:e,strides:t,pad:s,dimRoundingMode:r},h=Q.runKernel(Qc,u,c);return i?te(h,[h.shape[1],h.shape[2],h.shape[3]]):h}const Oh=Y({maxPool_:uE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cE(n,e=[1,1,1],t,s,r,o="NDHWC"){const a=z(n,"x","maxPool3d");let l=a,i=!1;a.rank===4&&(i=!0,l=te(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),P(l.rank===5,()=>`Error in maxPool3d: x must be rank 5 but got rank ${l.rank}.`),P(o==="NDHWC",()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${o}`),Vn("maxPool3d",s,r);const u={x:l},c={filterSize:e,strides:t,pad:s,dimRoundingMode:r,dataFormat:o},h=Q.runKernel(eh,u,c);return i?te(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}const p1=Y({maxPool3d_:cE});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hE(n,e,t,s,r=!1){const a={x:z(n,"x","maxPoolWithArgmax")},l={filterSize:e,strides:t,pad:s,includeBatchInIndex:r},i=Q.runKernel(Rf,a,l);return{result:i[0],indexes:i[1]}}const dE=Y({maxPoolWithArgmax_:hE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pE(n,e){let t=z(n,"a","maximum"),s=z(e,"b","maximum");[t,s]=Xt(t,s),t.dtype==="bool"&&(t=Pe(t,"int32"),s=Pe(s,"int32")),st(t.shape,s.shape);const r={a:t,b:s};return Q.runKernel(fl,r)}const Rr=Y({maximum_:pE});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fE(n,e=null,t=!1){const r={x:z(n,"x","mean")},o={axis:e,keepDims:t};return Q.runKernel(th,r,o)}const Kt=Y({mean_:fE});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rn(n,e="float32"){if(xs(n),e==="complex64"){const s=rn(n,"float32"),r=rn(n,"float32");return Kr(s,r)}const t=Dn(me(n),e);return Q.makeTensor(t,n,e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ns(n,e="float32"){if(xs(n),e==="complex64"){const s=ns(n,"float32"),r=rn(n,"float32");return Kr(s,r)}const t=tf(me(n),e);return Q.makeTensor(t,n,e)}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mE(n,e,{indexing:t="xy"}={}){if(t!=="xy"&&t!=="ij")throw new TypeError(`${t} is not a valid third argument to meshgrid`);if(n===void 0)return[];let s=z(n,"x","meshgrid",n instanceof Gt?n.dtype:"float32");if(e===void 0)return[s];let r=z(e,"y","meshgrid",e instanceof Gt?e.dtype:"float32");const o=me(s.shape),a=me(r.shape);return t==="xy"?(s=te(s,[1,-1]),r=te(r,[-1,1]),[dt(ns([a,1],s.dtype),s),dt(r,ns([1,o],r.dtype))]):(s=te(s,[-1,1]),r=te(r,[1,-1]),[dt(s,ns([1,a],s.dtype)),dt(ns([o,1],r.dtype),r)])}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gE(n,e){let t=z(n,"a","minimum"),s=z(e,"b","minimum");[t,s]=Xt(t,s),t.dtype==="bool"&&(t=Pe(t,"int32"),s=Pe(s,"int32")),st(t.shape,s.shape);const r={a:t,b:s};return Q.runKernel(ml,r)}const Vo=Y({minimum_:gE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yE(n,e,t){P(t==="reflect"||t==="symmetric",()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${t}.`);const s=z(n,"x","mirrorPad");if(s.rank===0)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");P(e.length===s.rank,()=>`Padding doesn't match input. Must be ${s.rank}. Got ${e.length}.`);const r=t==="reflect"?1:0;for(let l=0;l<s.rank;l++)P(e[l].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),P(e[l][0]>=0&&e[l][0]<=s.shape[l]-r&&e[l][1]>=0&&e[l][1]<=s.shape[l]-r,()=>`Padding in dimension ${l} cannot be greater than or equal to ${s.shape[l]-r} or less than 0 for input of shape ${s.shape}`);const o={paddings:e,mode:t},a={x:s};return Q.runKernel(sh,a,o)}const f1=Y({mirrorPad_:yE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bE(n,e){let t=z(n,"a","mod"),s=z(e,"b","mod");[t,s]=Xt(t,s);const r={a:t,b:s};return Q.runKernel(gl,r)}const m1=Y({mod_:bE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xE(n,e=null,t=!1){n=z(n,"x","moments");const s=ct(e,n.shape),r=Kt(n,s,t);let o=r.shape;t||(o=Jt(r.shape,s));const a=_t(Ve(Pe(n,"float32"),te(r,o))),l=Kt(a,s,t);return{mean:r,variance:l}}const Lh=Y({moments_:xE});function wE(n,e,t,s){const r=z(e,"data","multiRNNCell"),o=ec(t,"c","multiRNNCell"),a=ec(s,"h","multiRNNCell");let l=r;const i=[];for(let h=0;h<n.length;h++){const d=n[h](l,o[h],a[h]);i.push(d[0]),i.push(d[1]),l=d[1]}const u=[],c=[];for(let h=0;h<i.length;h+=2)u.push(i[h]),c.push(i[h+1]);return[u,c]}const vE=Y({multiRNNCell_:wE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kE(n,e,t,s=!1){const r=z(n,"logits","multinomial"),o=r.size,a=r.rank;if(o<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${o}.`);if(a>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${a}`);t=t||Math.random();const i={logits:a===1?te(r,[1,-1]):r},u={numSamples:e,seed:t,normalized:s},c=Q.runKernel(Ff,i,u);return a===1?te(c,[c.size]):c}const SE=Y({multinomial_:kE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CE(n,e){let t=z(n,"a","notEqual","string_or_numeric"),s=z(e,"b","notEqual","string_or_numeric");[t,s]=Xt(t,s),st(t.shape,s.shape);const r={a:t,b:s};return Q.runKernel(oh,r)}const Fa=Y({notEqual_:CE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IE(n,e,t=1,s=0,r="int32"){if(e<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${e}`);const a={indices:z(n,"indices","oneHot","int32")},l={dtype:r,depth:e,onValue:t,offValue:s};return Q.runKernel(ih,a,l)}const Nm=Y({oneHot_:IE});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NE(n){const t={x:z(n,"x","onesLike")};return Q.runKernel(ah,t)}const bs=Y({onesLike_:NE});function $E(n,e){const t=z(n,"v1","outerProduct"),s=z(e,"v2","outerProduct");P(t.rank===1&&s.rank===1,()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${t.rank} and ${s.rank}.`);const r=te(t,[-1,1]),o=te(s,[1,-1]);return dt(r,o)}const TE=Y({outerProduct_:$E});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _E(n,e,t=0){const s=z(n,"x","pad");if(s.rank===0)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const r={paddings:e,constantValue:t},o={x:s};return Q.runKernel(uh,o,r)}const co=Y({pad_:_E});function EE(n,e,t=0){return P(e.length===2,()=>"Invalid number of paddings. Must be length of 2."),co(n,[e],t)}const AE=Y({pad1d_:EE});function DE(n,e,t=0){return P(e.length===2&&e[0].length===2&&e[1].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),co(n,e,t)}const RE=Y({pad2d_:DE});function FE(n,e,t=0){return P(e.length===3&&e[0].length===2&&e[1].length===2&&e[2].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),co(n,e,t)}const OE=Y({pad3d_:FE});function LE(n,e,t=0){return P(e.length===4&&e[0].length===2&&e[1].length===2&&e[2].length===2&&e[3].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),co(n,e,t)}const PE=Y({pad4d_:LE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zE(n,e,t){const s=z(n,"x","spaceToBatchND");P(s.rank>=1+e.length,()=>`input rank ${s.rank} should be > than [blockShape] ${e.length}`),P(t.length===e.length,()=>`paddings.shape[0] ${t.length} must be equal to [blockShape] ${e.length}`),P(s.shape.reduce((a,l,i)=>i>0&&i<=e.length?a&&(l+t[i-1][0]+t[i-1][1])%e[i-1]===0:a,!0),()=>`input spatial dimensions ${s.shape.slice(1)} with paddings ${t.toString()} must be divisible by blockShapes ${e.toString()}`);const r={x:s},o={blockShape:e,paddings:t};return Q.runKernel(xh,r,o)}const Ph=Y({spaceToBatchND_:zE});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BE(n,e,t,s,r,o,a){r==null&&(r=[1,1]),o==null&&(o=1),s===0&&(s="valid");const l=z(n,"x","maxPool");let i=l,u=!1;l.rank===3&&(u=!0,i=te(l,[1,l.shape[0],l.shape[1],l.shape[2]])),P(In(o,r),()=>`Error in pool: Either strides or dilations must be 1. Got strides ${o} and dilations '${r}'`);const c=zs(i.shape,e,o,r,s),h=[c.dilationHeight,c.dilationWidth];let d;s==="same"?d=VE([c.filterHeight,c.filterWidth],h):d=[[0,0],[0,0]];const p=h[0]===1&&h[1]===1,[f,g]=ME([c.inHeight,c.inWidth],h,d),y=p?s:"valid",x=p?i:Ph(i,h,f),v=(t==="avg"?()=>$h(x,e,o,y,a):()=>Oh(x,e,o,y,a))(),k=p?v:Th(v,h,g);return u?te(k,[k.shape[1],k.shape[2],k.shape[3]]):k}function ME(n,e,t){const s=t.map(c=>c[0]),r=t.map(c=>c[1]),o=n.concat(s,r),a=e.map((c,h)=>(c-o[h]%c)%c),l=r.map((c,h)=>c+a[h]),i=e.map((c,h)=>[s[h],l[h]]),u=e.map((c,h)=>[0,a[h]]);return[i,u]}function VE(n,e){const s=n.map((a,l)=>a+(a-1)*(e[l]-1)).map(a=>a-1),r=s.map(a=>Math.floor(a/2)),o=s.map((a,l)=>a-r[l]);return s.map((a,l)=>[r[l],o[l]])}const g1=Y({pool_:BE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WE(n,e){const t=z(n,"x","prelu"),s=z(e,"alpha","prelu"),r={x:t,alpha:s};return Q.runKernel(ch,r)}const zh=Y({prelu_:WE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UE(n,e=null,t=!1){let s=z(n,"x","prod");s.dtype==="bool"&&(s=Pe(s,"int32"));const r={x:s},o={axis:e,keepDims:t};return Q.runKernel(hh,r,o)}const y1=Y({prod_:UE});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GE(n,e,t,s){const r=n.map((c,h)=>z(c,`tensors${h}`,"raggedGather","int32")),o=z(e,"paramsDenseValues","raggedGather"),a=z(t,"indices","raggedGather","int32"),l={paramsNestedSplits:r,paramsDenseValues:o,indices:a},i={outputRaggedRank:s},u=Q.runKernel(zf,l,i);return{outputNestedSplits:u.slice(0,u.length-1),outputDenseValues:u[u.length-1]}}const HE=Y({raggedGather_:GE});/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jE(n,e,t){const s=z(n,"starts","raggedRange"),r=z(e,"limits","raggedRange",s.dtype),o=z(t,"deltas","raggedRange",s.dtype),a={starts:s,limits:r,deltas:o},l=Q.runKernel(Bf,a);return{rtNestedSplits:l[0],rtDenseValues:l[1]}}const qE=Y({raggedRange_:jE});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KE(n,e,t,s,r){const o=z(n,"shape","raggedTensorToTensor","int32"),a=z(e,"values","raggedTensorToTensor"),l=z(t,"defaultValue","raggedTensorToTensor",a.dtype),i=s.map((h,d)=>z(h,`tensors${d}`,"raggedTensorToTensor","int32")),u={shape:o,values:a,defaultValue:l,rowPartitionTensors:i},c={rowPartitionTypes:r};return Q.runKernel(Mf,u,c)}const XE=Y({raggedTensorToTensor_:KE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YE(n,e,t){xs(n);const s=me(n);let r=null;if(t==null||t==="float32")r=new Float32Array(s);else if(t==="int32")r=new Int32Array(s);else if(t==="bool")r=new Uint8Array(s);else throw new Error(`Unknown data type ${t}`);for(let o=0;o<s;o++)r[o]=e();return Q.makeTensor(r,n,t)}const ZE=Y({rand_:YE});var $m={exports:{}};$m.exports;(function(n){(function(e,t,s){function r(i){var u=this,c=l();u.next=function(){var h=2091639*u.s0+u.c*23283064365386963e-26;return u.s0=u.s1,u.s1=u.s2,u.s2=h-(u.c=h|0)},u.c=1,u.s0=c(" "),u.s1=c(" "),u.s2=c(" "),u.s0-=c(i),u.s0<0&&(u.s0+=1),u.s1-=c(i),u.s1<0&&(u.s1+=1),u.s2-=c(i),u.s2<0&&(u.s2+=1),c=null}function o(i,u){return u.c=i.c,u.s0=i.s0,u.s1=i.s1,u.s2=i.s2,u}function a(i,u){var c=new r(i),h=u&&u.state,d=c.next;return d.int32=function(){return c.next()*4294967296|0},d.double=function(){return d()+(d()*2097152|0)*11102230246251565e-32},d.quick=d,h&&(typeof h=="object"&&o(h,c),d.state=function(){return o(c,{})}),d}function l(){var i=4022871197,u=function(c){c=String(c);for(var h=0;h<c.length;h++){i+=c.charCodeAt(h);var d=.02519603282416938*i;i=d>>>0,d-=i,d*=i,i=d>>>0,d-=i,i+=d*4294967296}return(i>>>0)*23283064365386963e-26};return u}t&&t.exports?t.exports=a:this.alea=a})(Ko,n)})($m);var JE=$m.exports,Tm={exports:{}};Tm.exports;(function(n){(function(e,t,s){function r(l){var i=this,u="";i.x=0,i.y=0,i.z=0,i.w=0,i.next=function(){var h=i.x^i.x<<11;return i.x=i.y,i.y=i.z,i.z=i.w,i.w^=i.w>>>19^h^h>>>8},l===(l|0)?i.x=l:u+=l;for(var c=0;c<u.length+64;c++)i.x^=u.charCodeAt(c)|0,i.next()}function o(l,i){return i.x=l.x,i.y=l.y,i.z=l.z,i.w=l.w,i}function a(l,i){var u=new r(l),c=i&&i.state,h=function(){return(u.next()>>>0)/4294967296};return h.double=function(){do var d=u.next()>>>11,p=(u.next()>>>0)/4294967296,f=(d+p)/(1<<21);while(f===0);return f},h.int32=u.next,h.quick=h,c&&(typeof c=="object"&&o(c,u),h.state=function(){return o(u,{})}),h}t&&t.exports?t.exports=a:this.xor128=a})(Ko,n)})(Tm);var QE=Tm.exports,_m={exports:{}};_m.exports;(function(n){(function(e,t,s){function r(l){var i=this,u="";i.next=function(){var h=i.x^i.x>>>2;return i.x=i.y,i.y=i.z,i.z=i.w,i.w=i.v,(i.d=i.d+362437|0)+(i.v=i.v^i.v<<4^(h^h<<1))|0},i.x=0,i.y=0,i.z=0,i.w=0,i.v=0,l===(l|0)?i.x=l:u+=l;for(var c=0;c<u.length+64;c++)i.x^=u.charCodeAt(c)|0,c==u.length&&(i.d=i.x<<10^i.x>>>4),i.next()}function o(l,i){return i.x=l.x,i.y=l.y,i.z=l.z,i.w=l.w,i.v=l.v,i.d=l.d,i}function a(l,i){var u=new r(l),c=i&&i.state,h=function(){return(u.next()>>>0)/4294967296};return h.double=function(){do var d=u.next()>>>11,p=(u.next()>>>0)/4294967296,f=(d+p)/(1<<21);while(f===0);return f},h.int32=u.next,h.quick=h,c&&(typeof c=="object"&&o(c,u),h.state=function(){return o(u,{})}),h}t&&t.exports?t.exports=a:this.xorwow=a})(Ko,n)})(_m);var eA=_m.exports,Em={exports:{}};Em.exports;(function(n){(function(e,t,s){function r(l){var i=this;i.next=function(){var c=i.x,h=i.i,d,p;return d=c[h],d^=d>>>7,p=d^d<<24,d=c[h+1&7],p^=d^d>>>10,d=c[h+3&7],p^=d^d>>>3,d=c[h+4&7],p^=d^d<<7,d=c[h+7&7],d=d^d<<13,p^=d^d<<9,c[h]=p,i.i=h+1&7,p};function u(c,h){var d,p=[];if(h===(h|0))p[0]=h;else for(h=""+h,d=0;d<h.length;++d)p[d&7]=p[d&7]<<15^h.charCodeAt(d)+p[d+1&7]<<13;for(;p.length<8;)p.push(0);for(d=0;d<8&&p[d]===0;++d);for(d==8?p[7]=-1:p[d],c.x=p,c.i=0,d=256;d>0;--d)c.next()}u(i,l)}function o(l,i){return i.x=l.x.slice(),i.i=l.i,i}function a(l,i){l==null&&(l=+new Date);var u=new r(l),c=i&&i.state,h=function(){return(u.next()>>>0)/4294967296};return h.double=function(){do var d=u.next()>>>11,p=(u.next()>>>0)/4294967296,f=(d+p)/(1<<21);while(f===0);return f},h.int32=u.next,h.quick=h,c&&(c.x&&o(c,u),h.state=function(){return o(u,{})}),h}t&&t.exports?t.exports=a:this.xorshift7=a})(Ko,n)})(Em);var tA=Em.exports,Am={exports:{}};Am.exports;(function(n){(function(e,t,s){function r(l){var i=this;i.next=function(){var c=i.w,h=i.X,d=i.i,p,f;return i.w=c=c+1640531527|0,f=h[d+34&127],p=h[d=d+1&127],f^=f<<13,p^=p<<17,f^=f>>>15,p^=p>>>12,f=h[d]=f^p,i.i=d,f+(c^c>>>16)|0};function u(c,h){var d,p,f,g,y,x=[],w=128;for(h===(h|0)?(p=h,h=null):(h=h+"\0",p=0,w=Math.max(w,h.length)),f=0,g=-32;g<w;++g)h&&(p^=h.charCodeAt((g+32)%h.length)),g===0&&(y=p),p^=p<<10,p^=p>>>15,p^=p<<4,p^=p>>>13,g>=0&&(y=y+1640531527|0,d=x[g&127]^=p+y,f=d==0?f+1:0);for(f>=128&&(x[(h&&h.length||0)&127]=-1),f=127,g=4*128;g>0;--g)p=x[f+34&127],d=x[f=f+1&127],p^=p<<13,d^=d<<17,p^=p>>>15,d^=d>>>12,x[f]=p^d;c.w=y,c.X=x,c.i=f}u(i,l)}function o(l,i){return i.i=l.i,i.w=l.w,i.X=l.X.slice(),i}function a(l,i){l==null&&(l=+new Date);var u=new r(l),c=i&&i.state,h=function(){return(u.next()>>>0)/4294967296};return h.double=function(){do var d=u.next()>>>11,p=(u.next()>>>0)/4294967296,f=(d+p)/(1<<21);while(f===0);return f},h.int32=u.next,h.quick=h,c&&(c.X&&o(c,u),h.state=function(){return o(u,{})}),h}t&&t.exports?t.exports=a:this.xor4096=a})(Ko,n)})(Am);var nA=Am.exports,Dm={exports:{}};Dm.exports;(function(n){(function(e,t,s){function r(l){var i=this,u="";i.next=function(){var h=i.b,d=i.c,p=i.d,f=i.a;return h=h<<25^h>>>7^d,d=d-p|0,p=p<<24^p>>>8^f,f=f-h|0,i.b=h=h<<20^h>>>12^d,i.c=d=d-p|0,i.d=p<<16^d>>>16^f,i.a=f-h|0},i.a=0,i.b=0,i.c=-1640531527,i.d=1367130551,l===Math.floor(l)?(i.a=l/4294967296|0,i.b=l|0):u+=l;for(var c=0;c<u.length+20;c++)i.b^=u.charCodeAt(c)|0,i.next()}function o(l,i){return i.a=l.a,i.b=l.b,i.c=l.c,i.d=l.d,i}function a(l,i){var u=new r(l),c=i&&i.state,h=function(){return(u.next()>>>0)/4294967296};return h.double=function(){do var d=u.next()>>>11,p=(u.next()>>>0)/4294967296,f=(d+p)/(1<<21);while(f===0);return f},h.int32=u.next,h.quick=h,c&&(typeof c=="object"&&o(c,u),h.state=function(){return o(u,{})}),h}t&&t.exports?t.exports=a:this.tychei=a})(Ko,n)})(Dm);var sA=Dm.exports,b1={exports:{}};const rA={},oA=Object.freeze(Object.defineProperty({__proto__:null,default:rA},Symbol.toStringTag,{value:"Module"})),aA=CN(oA);(function(n){(function(e,t,s){var r=256,o=6,a=52,l="random",i=s.pow(r,o),u=s.pow(2,a),c=u*2,h=r-1,d;function p(k,C,I){var N=[];C=C==!0?{entropy:!0}:C||{};var E=x(y(C.entropy?[k,v(t)]:k??w(),3),N),R=new f(N),O=function(){for(var B=R.g(o),j=i,U=0;B<u;)B=(B+U)*r,j*=r,U=R.g(1);for(;B>=c;)B/=2,j/=2,U>>>=1;return(B+U)/j};return O.int32=function(){return R.g(4)|0},O.quick=function(){return R.g(4)/4294967296},O.double=O,x(v(R.S),t),(C.pass||I||function(B,j,U,K){return K&&(K.S&&g(K,R),B.state=function(){return g(R,{})}),U?(s[l]=B,j):B})(O,E,"global"in C?C.global:this==s,C.state)}function f(k){var C,I=k.length,N=this,E=0,R=N.i=N.j=0,O=N.S=[];for(I||(k=[I++]);E<r;)O[E]=E++;for(E=0;E<r;E++)O[E]=O[R=h&R+k[E%I]+(C=O[E])],O[R]=C;(N.g=function(B){for(var j,U=0,K=N.i,H=N.j,Z=N.S;B--;)j=Z[K=h&K+1],U=U*r+Z[h&(Z[K]=Z[H=h&H+j])+(Z[H]=j)];return N.i=K,N.j=H,U})(r)}function g(k,C){return C.i=k.i,C.j=k.j,C.S=k.S.slice(),C}function y(k,C){var I=[],N=typeof k,E;if(C&&N=="object")for(E in k)try{I.push(y(k[E],C-1))}catch{}return I.length?I:N=="string"?k:k+"\0"}function x(k,C){for(var I=k+"",N,E=0;E<I.length;)C[h&E]=h&(N^=C[h&E]*19)+I.charCodeAt(E++);return v(C)}function w(){try{var k;return d&&(k=d.randomBytes)?k=k(r):(k=new Uint8Array(r),(e.crypto||e.msCrypto).getRandomValues(k)),v(k)}catch{var C=e.navigator,I=C&&C.plugins;return[+new Date,e,I,e.screen,v(t)]}}function v(k){return String.fromCharCode.apply(0,k)}if(x(s.random(),t),n.exports){n.exports=p;try{d=aA}catch{}}else s["seed"+l]=p})(typeof self<"u"?self:Ko,[],Math)})(b1);var iA=b1.exports,lA=JE,uA=QE,cA=eA,hA=tA,dA=nA,pA=sA,Jo=iA;Jo.alea=lA;Jo.xor128=uA;Jo.xorwow=cA;Jo.xorshift7=hA;Jo.xor4096=dA;Jo.tychei=pA;var Bh=Jo;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Rm{constructor(e,t,s,r,o){this.mean=e,this.stdDev=t,this.dtype=s,this.nextVal=NaN,this.truncated=r,this.truncated&&(this.upper=this.mean+this.stdDev*2,this.lower=this.mean-this.stdDev*2);const a=o||Math.random();this.random=Bh.alea(a.toString())}nextValue(){if(!isNaN(this.nextVal)){const r=this.nextVal;return this.nextVal=NaN,r}let e,t,s=!1;for(;!s;){let r,o,a;do r=2*this.random()-1,o=2*this.random()-1,a=r*r+o*o;while(a>=1||a===0);const l=Math.sqrt(-2*Math.log(a)/a);e=this.mean+this.stdDev*r*l,t=this.mean+this.stdDev*o*l,(!this.truncated||this.isValidTruncated(e))&&(s=!0)}return(!this.truncated||this.isValidTruncated(t))&&(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return this.dtype==null||this.dtype==="float32"?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}}class fA{constructor(e,t,s,r){this.alpha=e,this.beta=1/t,this.dtype=s;const o=r||Math.random();this.randu=Bh.alea(o.toString()),this.randn=new Rm(0,1,s,!1,this.randu()),e<1?this.d=e+2/3:this.d=e-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let e,t,s,r,o,a;for(;;){do r=this.randn.nextValue(),a=1+this.c*r;while(a<=0);if(a*=a*a,e=r*r,t=1-.331*e*e,s=.5*e+this.d*(1-a+Math.log(a)),o=this.randu(),o<t||Math.log(o)<s)break}return a=1/this.beta*this.d*a,this.alpha<1&&(a*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(a)}convertValue(e){return this.dtype==="float32"?e:Math.round(e)}}class mA{constructor(e=0,t=1,s,r){if(this.canReturnFloat=()=>this.dtype==null||this.dtype==="float32",this.min=e,this.range=t-e,this.dtype=s,r==null&&(r=Math.random()),typeof r=="number"&&(r=r.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=Bh.alea(r)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gA(n,e,t=1,s="float32",r){if(xs(n),t==null&&(t=1),s==null&&(s="float32"),s!=="float32"&&s!=="int32")throw new Error(`Unsupported data type ${s}`);const o=new fA(e,t,s,r),a=lt(n,s);for(let l=0;l<a.values.length;l++)a.values[l]=o.nextValue();return a.toTensor()}const yA=Y({randomGamma_:gA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bA(n,e=0,t=1,s,r){if(xs(n),s!=null&&s==="bool")throw new Error(`Unsupported data type ${s}`);const o=new Rm(e,t,s,!1,r),a=lt(n,s);for(let l=0;l<a.values.length;l++)a.values[l]=o.nextValue();return a.toTensor()}const Fm=Y({randomNormal_:bA});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xA(n,e,t){if(e!=null&&e==="bool")throw new Error(`Unsupported data type ${e}`);return Fm(n,0,1,e,t)}const wA=Y({randomStandardNormal_:xA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vA(n,e=0,t=1,s="float32",r){xs(n);const o=lt(n,s),a=new mA(e,t,null,r);for(let l=0;l<o.values.length;l++)o.values[l]=a.nextValue();return o.toTensor()}const Qo=Y({randomUniform_:vA});/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kA(n,e,t,s){return Qo(n,e,t,"int32",s)}const SA=Y({randomUniformInt_:kA});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Oa(n,e,t=1,s="float32"){if(t===0)throw new Error("Cannot have a step of zero");const r={start:n,stop:e,step:t,dtype:s};return Q.runKernel(Vf,{},r)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CA(n){const t={input:z(n,"input","real")};return Q.runKernel(Wf,t)}const Ei=Y({real_:CA});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IA(n){const t={x:z(n,"x","reciprocal")};return Q.runKernel(xl,t)}const x1=Y({reciprocal_:IA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NA(n){const t={x:z(n,"x","relu")};return Q.runKernel(wl,t)}const yr=Y({relu_:NA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $A(n){const t={x:z(n,"x","relu6")};return Q.runKernel(vl,t)}const Om=Y({relu6_:$A});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TA(n,e){const s={x:z(n,"x","reverse")},r={dims:e};return Q.runKernel(mh,s,r)}const Ls=Y({reverse_:TA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _A(n){const e=z(n,"x","reverse");return P(e.rank===1,()=>`Error in reverse1D: x must be rank 1 but got rank ${e.rank}.`),Ls(e,0)}const EA=Y({reverse1d_:_A});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AA(n,e){const t=z(n,"x","reverse");return P(t.rank===2,()=>`Error in reverse2D: x must be rank 2 but got rank ${t.rank}.`),Ls(t,e)}const DA=Y({reverse2d_:AA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RA(n,e){const t=z(n,"x","reverse");return P(t.rank===3,()=>`Error in reverse3D: x must be rank 3 but got rank ${t.rank}.`),Ls(t,e)}const FA=Y({reverse3d_:RA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OA(n,e){const t=z(n,"x","reverse");return P(t.rank===4,()=>`Error in reverse4D: x must be rank 4 but got rank ${t.rank}.`),Ls(t,e)}const LA=Y({reverse4d_:OA});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PA(n){const t={x:z(n,"x","round")};return Q.runKernel(kl,t)}const Lm=Y({round_:PA});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zA(n){const t={x:z(n,"x","rsqrt","float32")};return Q.runKernel(Sl,t)}const Pm=Y({rsqrt_:zA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BA(n){const t={x:z(n,"x","selu")};return Q.runKernel(Cl,t)}const zm=Y({selu_:BA});function MA(n,e,t,s,r,o=[1,1],a="NHWC"){const l=z(n,"x","separableConv2d"),i=z(e,"depthwiseFilter","separableConv2d"),u=z(t,"pointwiseFilter","separableConv2d");let c=l,h=!1;if(l.rank===3&&(h=!0,c=te(l,[1,l.shape[0],l.shape[1],l.shape[2]])),a==="NCHW")throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");P(c.rank===4,()=>`Error in separableConv2d: input must be rank 4, but got rank ${c.rank}.`),P(i.rank===4,()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${i.rank}.`),P(u.rank===4,()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${i.rank}.`),P(u.shape[0]===1,()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${u.shape[0]}.`),P(u.shape[1]===1,()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${u.shape[1]}.`);const d=i.shape[2],p=i.shape[3];P(u.shape[2]===d*p,()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${d*p}, but got ${u.shape[2]}.`);const f=Ml(c,i,s,r,a,o),y=Zr(f,u,1,"valid",a);return h?te(y,[y.shape[1],y.shape[2],y.shape[3]]):y}const Bm=Y({separableConv2d_:MA});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function VA(n,e){const t=z(n,"x","setdiff1d"),s=z(e,"y","setdiff1d");P(t.dtype===s.dtype,()=>`x and y should have the same dtype, but got x (${t.dtype}) and y (${s.dtype}).`),P(t.rank===1,()=>`x should be 1D tensor, but got x (${t.shape}).`),P(s.rank===1,()=>`y should be 1D tensor, but got y (${s.shape}).`);const r=await t.data(),o=await s.data(),a=new Set(o);let l=0;for(let c=0;c<r.length;c++)a.has(r[c])||l++;const i=new ln([l],t.dtype),u=new ln([l],"int32");for(let c=0,h=0;c<r.length;c++)a.has(r[c])||(i.values[h]=r[c],u.values[h]=c,h++);return[i.toTensor(),u.toTensor()]}const WA=VA;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UA(n){const t={x:z(n,"x","sign")};return Q.runKernel($l,t)}const w1=Y({sign_:UA});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GA(n){const t={x:z(n,"x","sin","float32")};return Q.runKernel(Il,t)}const Mm=Y({sin_:GA});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HA(n){const t={x:z(n,"x","sinh")};return Q.runKernel(Nl,t)}const Vm=Y({sinh_:HA});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jA(n,e,t){const s=z(n,"x","slice1d");return P(s.rank===1,()=>`slice1d expects a rank-1 tensor, but got a rank-${s.rank} tensor`),mt(s,[e],[t])}const Mh=Y({slice1d_:jA});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qA(n,e,t){const s=z(n,"x","slice2d");return P(s.rank===2,()=>`slice2d expects a rank-2 tensor, but got a rank-${s.rank} tensor`),mt(s,e,t)}const Wm=Y({slice2d_:qA});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KA(n,e,t){const s=z(n,"x","slice3d");return P(s.rank===3,()=>`slice3d expects a rank-3 tensor, but got a rank-${s.rank} tensor`),mt(s,e,t)}const Vh=Y({slice3d_:KA});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XA(n,e,t){const s=z(n,"x","slice4d");return P(s.rank===4,()=>`slice4d expects a rank-4 tensor, but got a rank-${s.rank} tensor`),mt(s,e,t)}const Ai=Y({slice4d_:XA});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YA(n,e=-1){const t=z(n,"logits","softmax","float32");if(e===-1&&(e=t.rank-1),e!==t.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${t.rank} and dim was ${e}`);const s={logits:t},r={dim:e};return Q.runKernel(vh,s,r)}const Wh=Y({softmax_:YA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZA(n){P(n.dtype==="complex64",()=>`The dtype for tf.spectral.fft() must be complex64 but got ${n.dtype}.`);const e={input:n};return Q.runKernel(Sf,e)}const Uh=Y({fft_:ZA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JA(n){P(n.dtype==="complex64",()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${n.dtype}.`);const e={input:n};return Q.runKernel($f,e)}const Di=Y({ifft_:JA});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QA(n){const e=n.shape[n.shape.length-1],t=n.size/e;let s;if(e<=2){const r=te(n,[t,e]);s=Di(r)}else{const r=[t,2*(e-1)],o=te(Ei(n),[t,e]),a=te(Eh(n),[t,e]),l=Ls(mt(o,[0,1],[t,e-2]),1),i=J(Ls(mt(a,[0,1],[t,e-2]),1),Ye(-1)),u=nn([o,l],1),c=nn([a,i],1),h=te(Kr(u,c),[r[0],r[1]]);s=Di(h)}if(s=Ei(s),n.rank===3&&n.shape[0]!==0){const r=s,o=n.shape[0];s=te(s,[o,s.shape[0]/o,s.shape[1]]),r.dispose()}return s}const Um=Y({irfft_:QA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eD(n,e,t=0){const r={x:z(n,"x","split")},o={numOrSizeSplits:e,axis:t};return Q.runKernel(wh,r,o)}const ss=Y({split_:eD});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tD(n,e){P(n.dtype==="float32",()=>`The dtype for rfft() must be real value but got ${n.dtype}`);let t=n.shape[n.shape.length-1];const s=n.size/t;let r;if(e!=null&&e<t){const f=n.shape.map(y=>0),g=n.shape.map(y=>y);g[n.shape.length-1]=e,r=mt(n,f,g),t=e}else if(e!=null&&e>t){const f=n.shape.map(g=>g);f[n.shape.length-1]=e-t,r=nn([n,rn(f)],n.shape.length-1),t=e}else r=n;const o=yt(r),a=te(Kr(r,o),[s,t]),l=Uh(a),i=Math.floor(t/2)+1,u=Ei(l),c=Eh(l),h=ss(u,[i,t-i],u.shape.length-1),d=ss(c,[i,t-i],c.shape.length-1),p=r.shape.slice();return p[r.shape.length-1]=i,te(Kr(h[0],d[0]),p)}const Gh=Y({rfft_:tD});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nD(n,e){let t=z(n,"a","squaredDifference"),s=z(e,"b","squaredDifference");[t,s]=Xt(t,s),st(t.shape,s.shape);const r={a:t,b:s},o={};return Q.runKernel(Al,r,o)}const Gm=Y({squaredDifference_:nD});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sD(n,e){const t=z(n,"x","squeeze","string_or_numeric");return te(t,so(t.shape,e).newShape)}const ea=Y({squeeze_:sD});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rD(n,e=0){const t=ec(n,"tensors","stack","string_or_numeric");P(t.length>=1,()=>"Pass at least one tensor to tf.stack"),t.length>0&&P(e<=t[0].rank,()=>"Axis must be <= rank of the tensor");const s=t,r={axis:e};return Q.runKernel(lh,s,r)}const is=Y({stack_:rD});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oD(n,e=0){const s={x:z(n,"x","step")},r={alpha:e};return Q.runKernel(Ll,s,r)}const Ka=Y({step_:oD});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aD(n,e,t,s,r=0,o=0,a=0,l=0,i=0){const c={x:z(n,"x","stridedSlice","string_or_numeric")},h={begin:e,end:t,strides:s,beginMask:r,endMask:o,ellipsisMask:a,newAxisMask:l,shrinkAxisMask:i};return Q.runKernel(em,c,h)}const v1=Y({stridedSlice_:aD});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iD(n){const t={x:z(n,"x","tan","float32")};return Q.runKernel(Rl,t)}const k1=Y({tan_:iD});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function En(n,e){Wa(n);const t=oo(n,e);if(t.length!==1)throw new Error("tensor1d() requires values to be a flat/TypedArray");return ao(n,null,t,e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Na(n,e,t){if(Wa(n),e!=null&&e.length!==2)throw new Error("tensor2d() requires shape to have two numbers");const s=oo(n,t);if(s.length!==2&&s.length!==1)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(s.length===1&&e==null)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return ao(n,e,s,t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lD(n,e,t){if(Wa(n),e!=null&&e.length!==3)throw new Error("tensor3d() requires shape to have three numbers");const s=oo(n,t);if(s.length!==3&&s.length!==1)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(s.length===1&&e==null)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return ao(n,e,s,t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uD(n,e,t){if(Wa(n),e!=null&&e.length!==4)throw new Error("tensor4d() requires shape to have four numbers");const s=oo(n,t);if(s.length!==4&&s.length!==1)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(s.length===1&&e==null)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return ao(n,e,s,t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cD(n,e,t){if(Wa(n),e!=null&&e.length!==5)throw new Error("tensor5d() requires shape to have five numbers");const s=oo(n,t);if(s.length!==5&&s.length!==1)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(s.length===1&&e==null)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return ao(n,e,s,t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hD(n,e,t){if(Wa(n),e!=null&&e.length!==6)throw new Error("tensor6d() requires shape to have six numbers");const s=oo(n,t);if(s.length!==6&&s.length!==1)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(s.length===1&&e==null)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return e=e||s,ao(n,e,s,t)}function S1(n,e,t){const s=e.rank>1?e.shape[e.rank-1]:1,r=e.rank>1?e.rank-1:1,o=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${t.shape}, indices.shape: ${e.shape}, shape: ${n}, sliceDim: ${s}, and batchDim: ${r}.`;if(t.rank<r)throw new Error(o+` update.rank < ${r}. `);if(n.length<s+(t.rank-r))throw new Error(o+` Output shape length < ${s+(t.rank-r)}`);if(t.rank!==r+n.length-s)throw new Error(o+` update.rank != ${r+n.length-s}`);for(let a=0;a<r;++a)if(t.shape[a]!==e.shape[a])throw new Error(o+` updates.shape[${a}] (${t.shape[a]}) != indices.shape[${a}] (${e.shape[a]}).`);for(let a=0;a<t.rank-r;++a)if(t.shape[a+r]!==n[a+s])throw new Error(o+` updates.shape[${a+r}] (${t.shape[a+r]}) != shape[${a+r}] (${n[a+r]})`)}function Hm(n,e,t){if(e.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${e.rank}.`);if(n.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${n.rank}.`);if(e.dtype!=="int32")throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${e.dtype}`);if(t.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${t}`);if(t.length===0){if(e.size===0)throw new Error(`Indices specified for empty output. indices shape: ${e.shape}`);if(n.size===0)throw new Error(`Updates specified for empty output. updates shape: ${n.shape}`)}S1(t,e,n)}function ta(n,e,t){const s=e.shape.length,r=s>1?e.shape[s-1]:1,o=t.length;let a=1;for(let h=r;h<o;++h)a*=t[h];const l=r<1?1:r,i=me(e.shape)/l,u=[...Ze(t.slice(0,r)),1],c=me(t);return{sliceRank:r,numUpdates:i,sliceSize:a,strides:u,outputSize:c}}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dD(n,e,t){const s=z(n,"tensor","tensorScatterupdate"),r=z(e,"indices","tensorScatterupdate","int32"),o=z(t,"updates","tensorScatterupdate");if(Hm(o,r,s.shape),s.dtype!==o.dtype)throw new Error(`tensor and updates must have the same dtype, instead they are ${s.dtype} and ${o.dtype}.`);const a={tensor:s,indices:r,updates:o},l={};return Q.runKernel(jf,a,l)}const pD=Y({tensorScatterUpdate_:dD});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fD(n,e=1,t=!0){const s=z(n,"x","topk");if(s.rank===0)throw new Error("topk() expects the input to be of rank 1 or higher");const r=s.shape[s.shape.length-1];if(e<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${e}`);if(e>r)throw new Error(`'k' passed to topk() must be <= the last dimension (${r}) but got ${e}`);const o={x:s},a={k:e,sorted:t},[l,i]=Q.runKernel(rm,o,a);return{values:l,indices:i}}const C1=Y({topk_:fD});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mD(n,e=0,t=1,s,r){if(xs(n),s!=null&&s==="bool")throw new Error("Unsupported data type $ { dtype }");const o=new Rm(e,t,s,!0,r),a=lt(n,s);for(let l=0;l<a.values.length;l++)a.values[l]=o.nextValue();return a.toTensor()}const jm=Y({truncatedNormal_:mD});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gD(n,e=0){const t=z(n,"x","unique","string_or_numeric");P(t.rank>0,()=>"The input tensor must be at least 1D");const s={x:t},r={axis:e},[o,a]=Q.runKernel(am,s,r);return{values:o,indices:a}}const I1=Y({unique_:gD});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yD(n,e,t){const s=z(n,"x","unsortedSegmentSum"),r=z(e,"segmentIds","unsortedSegmentSum","int32");P(_a(t),()=>"numSegments must be of dtype int");const o={x:s,segmentIds:r},a={numSegments:t};return Q.runKernel(Ch,o,a)}const qm=Y({unsortedSegmentSum_:yD});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bD(n,e=0){const t=z(n,"x","unstack","string_or_numeric");P(e>=-t.shape.length&&e<t.shape.length,()=>`Axis = ${e} is not in [-${t.shape.length}, ${t.shape.length})`);const s={value:t},r={axis:e};return Q.runKernel(Sh,s,r)}const Ps=Y({unstack_:bD});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xD(n,e){return Im(n,e,"right")}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function N1(n,e=!0,t,s){return Q.makeVariable(n,e,t,s)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Km(n,e){const t=[];for(let o=0;o<e.length;o++)e[o]&&t.push(o);const s=lt(n,"int32"),r=lt([t.length,n.length],"int32");for(let o=0;o<t.length;o++){const a=s.indexToLoc(t[o]),l=o*n.length;r.values.set(a,l)}return r.toTensor()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function wD(n){const e=z(n,"condition","whereAsync","bool"),t=await e.data(),s=Km(e.shape,t);return n!==e&&e.dispose(),s}const $1=wD;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function vD(n,e,t){const s=z(n,"tensor","boolMask"),r=z(e,"mask","boolMask","bool"),o=t??0,a=r.rank,l=s.shape;P(a>0,()=>"mask cannot be scalar"),cs(l.slice(o,o+a),r.shape,"mask's shape must match the first K dimensions of tensor's shape,");let i=1;for(let g=o;g<o+a;g++)i*=l[g];const u=l.slice(0,o).concat([i],l.slice(o+a)),c=te(s,u),h=te(r,[-1]),d=await $1(h),p=ea(d,[1]),f=Gl(c,p,o);return n!==s&&s.dispose(),e!==r&&r.dispose(),p.dispose(),c.dispose(),h.dispose(),d.dispose(),f}const kD=vD;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SD(n,e,t){const s=z(n,"x","transpose");if(e==null&&(e=s.shape.map((a,l)=>l).reverse()),P(s.rank===e.length,()=>`Error in transpose: rank of input ${s.rank} must match length of perm ${e}.`),e.forEach(a=>{P(a>=0&&a<s.rank,()=>`All entries in 'perm' must be between 0 and ${s.rank-1} but got ${e}`)}),s.rank<=1)return s.clone();const r={x:s},o={perm:e};return s.dtype==="complex64"?ce(()=>{let a=Ei(s),l=Eh(s);return a=Q.runKernel(ka,{x:a},o),l=Q.runKernel(ka,{x:l},o),t&&(l=Pt(l)),Kr(a,l)}):Q.runKernel(ka,r,o)}const gt=Y({transpose_:SD});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CD(n,e,t,s,r=!0){const o=z(n,"v","movingAverage"),a=z(e,"x","movingAverage"),l=z(t,"decay","movingAverage");d$(o,a),P(ft(o.shape,a.shape),()=>"Shape mismatch in v and x");const i=Ye(1),u=Ve(i,l);let c=J(Ve(a,o),u);if(r){P(s!=null,()=>"When using zeroDebias: true, step is required.");const h=z(s,"step","movingAverage");c=Ke(c,Ve(i,$r(l,h)))}return Ne(o,c)}const ID=Y({movingAverage_:CD});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ND(n,e,t){xs(t);const s=z(n,"indices","scatterND","int32"),r=z(e,"updates","scatterND");Hm(r,s,t);const o={indices:s,updates:r},a={shape:t};return Q.runKernel(Hf,o,a)}const $D=Y({scatterND_:ND});function TD(n,e,t,s){if(n.dtype!=="int32")throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${n.dtype}.`);if(n.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${n.shape}.`);const r=n.rank>0?n.shape[0]:1,o=n.rank>1?n.shape[1]:1;if(t.length!==o)throw new Error(`outputShape has incorrect number of elements:, ${t.length}, should be: ${o}.`);const a=e.size;if(!(e.rank===0||e.rank===1&&a===r))throw new Error(`sparseValues has incorrect shape ${e.shape}, should be [] or [${r}]`);if(e.dtype!==s.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _D(n,e,t,s=0){xs(t);const r=z(n,"sparseIndices","sparseToDense","int32"),o=z(e,"sparseValues","sparseToDense","string_or_numeric"),a=z(s,"defaultValue","sparseToDense",o.dtype);TD(r,o,t,a);const l={sparseIndices:r,sparseValues:o,defaultValue:a},i={outputShape:t};return Q.runKernel(Jf,l,i)}const ED=Y({sparseToDense_:_D});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AD(n,e){const t=z(e,"indices","gatherND","int32"),r={params:z(n,"x","gatherND","string_or_numeric"),indices:t};return Q.runKernel(Nf,r)}const DD=Y({gatherND_:AD});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RD(n,e){if(e==null)return n.shape.slice();if(ft(n.shape,e))return e;if(n.shape.length===e.length){const t=[];for(let s=0;s<n.shape.length;s++)e[s]==null&&n.shape[s]!=null?t.push(n.shape[s]):t.push(e[s]);return t}return e}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FD(n,e,t,s){const r=z(n,"x","dropout");if(P(r.dtype==="float32",()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${r.dtype} tensor instead.`),P(e>=0&&e<1,()=>`rate must be a float in the range [0, 1), but got ${e}.`),e===0)return n instanceof Gt?r.clone():r;const o=RD(r,t),a=1-e,l=Ke(Ul(Ne(Qo(o,0,1,"float32",s),a)),a);return J(r,l)}const T1=Y({dropout_:FD});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _1(n){return Math.floor(Math.pow(2,Math.ceil(Math.log(n)/Math.log(2))))}function Xm(n,e,t){const s=1-n%2,r=new Float32Array(n);for(let o=0;o<n;++o){const a=2*Math.PI*o/(n+s-1);r[o]=e-t*Math.cos(a)}return En(r,"float32")}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function OD(n,e,t=1){const s=z(n,"predictions","inTopK"),r=z(e,"targets","inTopK");P(s.rank>1,()=>`inTopK() expects the predictions to be of rank 2 or higher, but got ${s.rank}`),P(s.rank-1===r.rank,()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${s.rank} and targets rank ${r.rank}`),cs(s.shape.slice(0,s.shape.length-1),r.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");const o=s.shape[s.shape.length-1];P(t>0&&t<=o,()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${o}), but got ${t}`);const a=await s.data(),l=await r.data(),[i,u]=[a.length/o,o],c=Sn("bool",i);for(let h=0;h<i;h++){const d=h*u,p=a.subarray(d,d+u),f=[];for(let g=0;g<p.length;g++)f.push({value:p[g],index:g});f.sort((g,y)=>y.value-g.value),c[h]=0;for(let g=0;g<t;g++)if(f[g].index===l[h]){c[h]=1;break}}return n!==s&&s.dispose(),e!==r&&r.dispose(),Yt(c,r.shape,"bool")}const LD=OD;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PD(n,e,t,s,r,o="NHWC",a){let l=n;n.rank===3&&(l=te(n,[1,n.shape[0],n.shape[1],n.shape[2]]));let i=e;i.rank===3&&(i=te(e,[1,e.shape[0],e.shape[1],e.shape[2]])),P(l.rank===4,()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${l.shape}.`),P(i.rank===4,()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${i.shape}.`),P(t.length===4,()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${t}.`);const u=o==="NHWC"?l.shape[3]:l.shape[1],c=o==="NHWC"?i.shape[3]:i.shape[1];P(u===t[2],()=>`Error in conv2dDerFilter: depth of input ${u}) must match input depth in filter (${t[2]}.`),P(c===t[3],()=>`Error in conv2dDerFilter: depth of dy (${c}) must match output depth for filter (${t[3]}).`),Vn("conv2dDerFilter",r,a);const h={x:l,dy:i},d={strides:s,pad:r,dataFormat:o,dimRoundingMode:a,filterShape:t};return Q.runKernel(hf,h,d)}const Ym=Y({conv2DBackpropFilter_:PD});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Hh(n,e,t){if(t==null||t==="linear")return n;if(t==="relu")return J(n,Ka(e));throw new Error(`Cannot compute gradient for fused activation ${t}.`)}function jh(n,e){let t=e;const s=hn(n.shape,e.shape);return s.length>0&&(t=Ue(t,s)),te(t,n.shape)}function qh(n,e,t,s){if(e==="linear")return n;if(e==="relu")return yr(n);if(e==="elu")return Vl(n);if(e==="relu6")return Om(n);if(e==="prelu")return zh(n,t);if(e==="leakyrelu")return Ah(n,s);if(e==="sigmoid")return cr(n);throw new Error(`Unknown fused activation ${e}.`)}const Kh=(n,e)=>!(n>0)||e==="linear";/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zD({x:n,filter:e,strides:t,pad:s,dataFormat:r="NHWC",dilations:o=[1,1],dimRoundingMode:a,bias:l,activation:i="linear",preluActivationWeights:u,leakyreluAlpha:c}){if(i=i||"linear",Kh(Q.state.gradientDepth,i)===!1){P(r==="NHWC",()=>`Error in fused conv2d: got dataFormat of ${r} but only NHWC is currently supported for the case of gradient depth is 0 and the activation is not linear.`);let I=Zr(n,e,t,s,r,o,a);return l!=null&&(I=Ne(I,l)),qh(I,i,u,c)}const h=z(n,"x","conv2d","float32"),d=z(e,"filter","conv2d","float32");let p=h,f=!1;h.rank===3&&(f=!0,p=te(h,[1,h.shape[0],h.shape[1],h.shape[2]])),P(p.rank===4,()=>`Error in fused conv2d: input must be rank 4, but got rank ${p.rank}.`),P(d.rank===4,()=>`Error in fused conv2d: filter must be rank 4, but got rank ${d.rank}.`),Vn("fused conv2d",s,a);const g=r==="NHWC"?p.shape[3]:p.shape[1];P(d.shape[2]===g,()=>`Error in conv2d: depth of input (${g}) must match input depth for filter ${d.shape[2]}.`),P(In(t,o),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${t} and dilations '${o}'`);const y=yn(p.shape,d.shape,t,o,s,a);let x;l!=null&&(x=z(l,"bias","fused conv2d"),[x]=Xt(x,h),r==="NHWC"?st(y.outShape,x.shape):(P(x.shape.length<=1,()=>`Error in fused conv2d: only supports scalar or 1-D Tensor bias for NCHW format but got the bias of rank-${x.shape.length}.`),P(x.shape.length===0||x.shape[0]===y.outChannels||x.shape[0]===1,()=>`Error in fused conv2d: bias shape (${x.shape}) is not compatible with the number of output channels (${y.outChannels})`)));let w;if(u!=null){const I=u.shape;if(P(I.length<=1||I.length===3,()=>`Error in fused conv2d: only supports scalar, 1-D Tensor or 3-D Tensor PReLU activation weights but got a tensor of rank-${I.length}.`),I.length===1)P(I[0]===1||I[0]===y.outChannels,()=>`Error in fused conv2d: PReLU activation weights (${I}) is not compatible with the number of output channels (${y.outChannels}).`);else if(I.length===3)try{st(I,y.outShape)}catch{const E=`Error in fused conv2d: PReLU activation weights (${I}) is not compatible with the output shape of the conv2d (${y.outShape}).`;throw Error(E)}w=z(u,"prelu weights","fused conv2d")}const v=(I,N)=>{P(r==="NHWC",()=>`Error in gradient of fused conv2D: got dataFormat of ${r} but only NHWC is currently supported.`);const[E,R,O,B]=N,j=Hh(I,O,i);P(Yr(o),()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${o}'`);const U=gm(R.shape,j,E,t,s),K=Ym(R,j,E.shape,t,s),H=[U,K];if(B!=null){const Z=jh(B,j);H.push(Z)}return H},k={x:p,filter:d,bias:x,preluActivationWeights:w},C={strides:t,pad:s,dataFormat:r,dilations:o,dimRoundingMode:a,activation:i,leakyreluAlpha:c};return l==null?Tr((N,E,R)=>{let O=Q.runKernel(Xu,k,C);return R([E,N,O]),f&&(O=te(O,[O.shape[1],O.shape[2],O.shape[3]])),{value:O,gradFunc:v}})(p,d):Tr((N,E,R,O)=>{let B=Q.runKernel(Xu,k,C);return O([E,N,B,R]),f&&(B=te(B,[B.shape[1],B.shape[2],B.shape[3]])),{value:B,gradFunc:v}})(p,d,x)}const E1=Y({fusedConv2d_:zD});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BD(n,e,t,s,r,o=[1,1],a){let l=n;n.rank===3&&(l=te(n,[1,n.shape[0],n.shape[1],n.shape[2]]));let i=e;i.rank===3&&(i=te(e,[1,e.shape[0],e.shape[1],e.shape[2]]));const u={x:l,dy:i},c={strides:s,pad:r,dimRoundingMode:a,dilations:o,filterShape:t};return Q.runKernel(bf,u,c)}const A1=Y({depthwiseConv2dNativeBackpropFilter_:BD});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MD(n,e,t,s,r,o=[1,1],a){let l=e,i=!1;e.rank===3&&(i=!0,l=te(e,[1,e.shape[0],e.shape[1],e.shape[2]]));const u={dy:l,filter:t},c={strides:s,pad:r,dimRoundingMode:a,dilations:o,inputShape:n},h=Q.runKernel(xf,u,c);return i?te(h,[h.shape[1],h.shape[2],h.shape[3]]):h}const D1=Y({depthwiseConv2dNativeBackpropInput_:MD});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VD({x:n,filter:e,strides:t,pad:s,dataFormat:r="NHWC",dilations:o=[1,1],dimRoundingMode:a,bias:l,activation:i="linear",preluActivationWeights:u,leakyreluAlpha:c}){if(Kh(Q.state.gradientDepth,i)===!1){let C=Ml(n,e,t,s,r,o,a);return l!=null&&(C=Ne(C,l)),qh(C,i,u,c)}const h=z(n,"x","depthwiseConv2d","float32"),d=z(e,"filter","depthwiseConv2d","float32");let p=h,f=!1;h.rank===3&&(f=!0,p=te(h,[1,h.shape[0],h.shape[1],h.shape[2]])),P(p.rank===4,()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${p.rank}.`),P(d.rank===4,()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${d.rank}.`),P(p.shape[3]===d.shape[2],()=>`Error in fused depthwiseConv2d: number of input channels (${p.shape[3]}) must match the inChannels dimension in filter ${d.shape[2]}.`),o==null&&(o=[1,1]),P(In(t,o),()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${t} and dilations '${o}'`),Vn("fused depthwiseConv2d",s,a);const g=yn(p.shape,d.shape,t,o,s,a,!0);let y;l!=null&&(y=z(l,"bias","fused conv2d"),[y]=Xt(y,h),st(g.outShape,y.shape));let x;u!=null&&(x=z(u,"prelu weights","fused depthwiseConv2d"));const w=(C,I)=>{P(Yr(o),()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${o}'`);const[N,E,R,O]=I,B=Hh(C,R,i),j=D1(E.shape,B,N,t,s,o,a),U=A1(E,B,N.shape,t,s,o,a);if(O!=null){const K=jh(y,B);return[j,U,K]}return[j,U]},v={x:p,filter:d,bias:y,preluActivationWeights:x},k={strides:t,pad:s,dataFormat:r,dilations:o,dimRoundingMode:a,activation:i,leakyreluAlpha:c};return l==null?Tr((I,N,E)=>{let R=Q.runKernel(Yu,v,k);return E([N,I,R]),f&&(R=te(R,[R.shape[1],R.shape[2],R.shape[3]])),{value:R,gradFunc:w}})(p,d):Tr((I,N,E,R)=>{let O=Q.runKernel(Yu,v,k);return R([N,I,O,E]),f&&(O=te(O,[O.shape[1],O.shape[2],O.shape[3]])),{value:O,gradFunc:w}})(p,d,y)}const WD=Y({fusedDepthwiseConv2d_:VD});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UD({a:n,b:e,transposeA:t=!1,transposeB:s=!1,bias:r,activation:o="linear",preluActivationWeights:a,leakyreluAlpha:l=.2}){if(Kh(Q.state.gradientDepth,o)===!1){let B=dt(n,e,t,s);return r!=null&&(B=Ne(B,r)),qh(B,o,a,l)}let i=z(n,"a","fused matMul"),u=z(e,"b","fused matMul");[i,u]=Xt(i,u);const c=t?i.shape[i.rank-2]:i.shape[i.rank-1],h=s?u.shape[u.rank-1]:u.shape[u.rank-2],d=t?i.shape[i.rank-1]:i.shape[i.rank-2],p=s?u.shape[u.rank-2]:u.shape[u.rank-1],f=i.shape.slice(0,-2),g=u.shape.slice(0,-2),y=me(f),x=me(g);P(c===h,()=>`Error in fused matMul: inner shapes (${c}) and (${h}) of Tensors with shapes ${i.shape} and ${u.shape} and transposeA=${t} and transposeB=${s} must match.`);const v=st(i.shape.slice(0,-2),u.shape.slice(0,-2)).concat([d,p]),k=t?te(i,[y,c,d]):te(i,[y,d,c]),C=s?te(u,[x,p,h]):te(u,[x,h,p]);let I;r!=null&&(I=z(r,"bias","fused matMul"),[I]=Xt(I,i),st(v,I.shape));let N;a!=null&&(N=z(a,"prelu weights","fused matMul"));const E=(B,j)=>{const[U,K,H,Z]=j,ue=Hh(te(B,H.shape),H,o);let M,X;if(!t&&!s?(M=dt(ue,K,!1,!0),X=dt(U,ue,!0,!1)):!t&&s?(M=dt(ue,K,!1,!1),X=dt(ue,U,!0,!1)):t&&!s?(M=dt(K,ue,!1,!0),X=dt(U,ue,!1,!1)):(M=dt(K,ue,!0,!0),X=dt(ue,U,!0,!0)),r!=null){const A=jh(Z,ue);return[M,X,A]}else return[M,X]},R={a:k,b:C,bias:I,preluActivationWeights:N},O={transposeA:t,transposeB:s,activation:o,leakyreluAlpha:l};return r==null?Tr((j,U,K)=>{const H=Q.runKernel(Ku,R,O);return K([j,U,H]),{value:te(H,v),gradFunc:E}})(k,C):Tr((j,U,K,H)=>{const Z=Q.runKernel(Ku,R,O);return H([j,U,Z,K]),{value:te(Z,v),gradFunc:E}})(k,C,I)}const kp=Y({fusedMatMul_:UD});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const GD=Object.freeze(Object.defineProperty({__proto__:null,conv2d:E1,depthwiseConv2d:WD,matMul:kp},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HD(n){return Xm(n,.54,.46)}const jD=Y({hammingWindow_:HD});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qD(n){return Xm(n,.5,.5)}const R1=Y({hannWindow_:qD});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KD(n,e,t,s=!1,r=0){let o=0;const a=[];for(;o+e<=n.size;)a.push(mt(n,o,e)),o+=t;if(s)for(;o<n.size;){const l=o+e-n.size,i=nn([mt(n,o,e-l),ja([l],r)]);a.push(i),o+=t}return a.length===0?Na([],[0,e]):te(nn(a),[a.length,e])}const F1=Y({frame_:KD});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XD(n,e,t,s,r=R1){s==null&&(s=_1(e));const o=F1(n,e,t),a=J(o,r(e));return Gh(a,s)}const YD=Y({stft_:XD});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZD(n,e,t,s,r="bilinear",o=0){const a=z(n,"image","cropAndResize"),l=z(e,"boxes","cropAndResize","float32"),i=z(t,"boxInd","cropAndResize","int32"),u=l.shape[0];P(a.rank===4,()=>`Error in cropAndResize: image must be rank 4,but got rank ${a.rank}.`),P(l.rank===2&&l.shape[1]===4,()=>`Error in cropAndResize: boxes must be have size [${u},4] but had shape ${l.shape}.`),P(i.rank===1&&i.shape[0]===u,()=>`Error in cropAndResize: boxInd must be have size [${u}] but had shape ${l.shape}.`),P(s.length===2,()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${s.length}.`),P(s[0]>=1&&s[1]>=1,()=>`cropSize must be atleast [1,1], but was ${s}`),P(r==="bilinear"||r==="nearest",()=>`method must be bilinear or nearest, but was ${r}`);const c={image:a,boxes:l,boxInd:i},h={method:r,extrapolationValue:o,cropSize:s};return Q.runKernel(mf,c,h)}const JD=Y({cropAndResize_:ZD});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QD(n){const e=z(n,"image","flipLeftRight","float32");P(e.rank===4,()=>`Error in flipLeftRight: image must be rank 4,but got rank ${e.rank}.`);const t={image:e};return Q.runKernel(If,t,{})}const eR=Y({flipLeftRight_:QD});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tR(n){const e=z(n,"image","grayscaleToRGB"),t=e.rank-1,s=e.shape[t];P(e.rank>=2,()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${e.rank}.`),P(s===1,()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${s}.`);const r=new Array(e.rank);return r.fill(1,0,t),r[t]=3,Es(e,r)}const nR=Y({grayscaleToRGB_:tR});/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sR(n){const e=z(n,"image","RGBToGrayscale"),t=e.rank-1,s=e.shape[t];P(e.rank>=2,()=>`Error in RGBToGrayscale: images must be at least rank 2, but got rank ${e.rank}.`),P(s===3,()=>`Error in RGBToGrayscale: last dimension of an RGB image should be size 3, but got size ${s}.`);const r=e.dtype,o=Pe(e,"float32"),a=En([.2989,.587,.114]);let l;switch(e.rank){case 2:l=xa("ij,j->i",o,a);break;case 3:l=xa("ijk,k->ij",o,a);break;case 4:l=xa("ijkl,l->ijk",o,a);break;case 5:l=xa("ijklm,m->ijkl",o,a);break;case 6:l=xa("ijklmn,n->ijklm",o,a);break;default:throw new Error("Not a valid tensor rank.")}return l=zn(l,-1),Pe(l,r)}const rR=Y({rgbToGrayscale_:sR});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oR(n,e,t=0,s=.5){const r=z(n,"image","rotateWithOffset","float32");P(r.rank===4,()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${r.rank}.`);const o={image:r},a={radians:e,fillValue:t,center:s};return Q.runKernel(im,o,a)}const aR=Y({rotateWithOffset_:oR});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xa(n,e,t,s,r,o){s==null&&(s=.5),r==null&&(r=Number.NEGATIVE_INFINITY),o==null&&(o=0);const a=n.shape[0];return t=Math.min(t,a),P(0<=s&&s<=1,()=>`iouThreshold must be in [0, 1], but was '${s}'`),P(n.rank===2,()=>`boxes must be a 2D tensor, but was of rank '${n.rank}'`),P(n.shape[1]===4,()=>`boxes must have 4 columns, but 2nd dimension was ${n.shape[1]}`),P(e.rank===1,()=>"scores must be a 1D tensor"),P(e.shape[0]===a,()=>`scores has incompatible shape with boxes. Expected ${a}, but was ${e.shape[0]}`),P(0<=o&&o<=1,()=>`softNmsSigma must be in [0, 1], but was '${o}'`),{maxOutputSize:t,iouThreshold:s,scoreThreshold:r,softNmsSigma:o}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iR(n,e,t,s=.5,r=Number.NEGATIVE_INFINITY){const o=z(n,"boxes","nonMaxSuppression","float32"),a=z(e,"scores","nonMaxSuppression","float32"),l=Xa(o,a,t,s,r);t=l.maxOutputSize,s=l.iouThreshold,r=l.scoreThreshold;const i={maxOutputSize:t,iouThreshold:s,scoreThreshold:r};return Q.runKernel(Of,{boxes:o,scores:a},i)}const lR=Y({nonMaxSuppression_:iR});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uR(n,e,t){const s=cR(n,e,t),r=s<0?-(s+1):s;n.splice(r,0,e)}function cR(n,e,t){return dR(n,e,t||hR)}function hR(n,e){return n>e?1:n<e?-1:0}function dR(n,e,t){let s=0,r=n.length,o=0,a=!1;for(;s<r;){o=s+(r-s>>>1);const l=t(e,n[o]);l>0?s=o+1:(r=o,a=!l)}return a?s:-s-1}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Zm(n,e,t,s,r){return eg(n,e,t,s,r,0)}function Jm(n,e,t,s,r,o){return eg(n,e,t,s,r,0,!1,o,!0)}function Qm(n,e,t,s,r,o){return eg(n,e,t,s,r,o,!0)}function eg(n,e,t,s,r,o,a=!1,l=!1,i=!1){const u=[];for(let y=0;y<e.length;y++)e[y]>r&&u.push({score:e[y],boxIndex:y,suppressBeginIndex:0});u.sort(yb);const c=o>0?-.5/o:0,h=[],d=[];for(;h.length<t&&u.length>0;){const y=u.pop(),{score:x,boxIndex:w,suppressBeginIndex:v}=y;if(x<r)break;let k=!1;for(let C=h.length-1;C>=v;--C){const I=pR(n,w,h[C]);if(I>=s){k=!0;break}if(y.score=y.score*fR(s,c,I),y.score<=r)break}y.suppressBeginIndex=h.length,k||(y.score===x?(h.push(w),d.push(y.score)):y.score>r&&uR(u,y,yb))}const p=h.length,f=t-p;l&&f>0&&(h.push(...new Array(f).fill(0)),d.push(...new Array(f).fill(0)));const g={selectedIndices:h};return a&&(g.selectedScores=d),i&&(g.validOutputs=p),g}function pR(n,e,t){const s=n.subarray(e*4,e*4+4),r=n.subarray(t*4,t*4+4),o=Math.min(s[0],s[2]),a=Math.min(s[1],s[3]),l=Math.max(s[0],s[2]),i=Math.max(s[1],s[3]),u=Math.min(r[0],r[2]),c=Math.min(r[1],r[3]),h=Math.max(r[0],r[2]),d=Math.max(r[1],r[3]),p=(l-o)*(i-a),f=(h-u)*(d-c);if(p<=0||f<=0)return 0;const g=Math.max(o,u),y=Math.max(a,c),x=Math.min(l,h),w=Math.min(i,d),v=Math.max(x-g,0)*Math.max(w-y,0);return v/(p+f-v)}function fR(n,e,t){const s=Math.exp(e*t*t);return t<=n?s:0}function yb(n,e){return n.score-e.score||n.score===e.score&&e.boxIndex-n.boxIndex}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function mR(n,e,t,s=.5,r=Number.NEGATIVE_INFINITY){const o=z(n,"boxes","nonMaxSuppressionAsync"),a=z(e,"scores","nonMaxSuppressionAsync"),l=Xa(o,a,t,s,r);t=l.maxOutputSize,s=l.iouThreshold,r=l.scoreThreshold;const i=await Promise.all([o.data(),a.data()]),u=i[0],c=i[1],{selectedIndices:h}=Zm(u,c,t,s,r);return o!==n&&o.dispose(),a!==e&&a.dispose(),En(h,"int32")}const gR=mR;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yR(n,e,t,s=.5,r=Number.NEGATIVE_INFINITY,o=0){const a=z(n,"boxes","nonMaxSuppression"),l=z(e,"scores","nonMaxSuppression"),i=Xa(a,l,t,s,r,o);t=i.maxOutputSize,s=i.iouThreshold,r=i.scoreThreshold,o=i.softNmsSigma;const u={boxes:a,scores:l},c={maxOutputSize:t,iouThreshold:s,scoreThreshold:r,softNmsSigma:o},h=Q.runKernel(Pf,u,c);return{selectedIndices:h[0],selectedScores:h[1]}}const bR=Y({nonMaxSuppressionWithScore_:yR});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function xR(n,e,t,s=.5,r=Number.NEGATIVE_INFINITY,o=0){const a=z(n,"boxes","nonMaxSuppressionAsync"),l=z(e,"scores","nonMaxSuppressionAsync"),i=Xa(a,l,t,s,r,o);t=i.maxOutputSize,s=i.iouThreshold,r=i.scoreThreshold,o=i.softNmsSigma;const u=await Promise.all([a.data(),l.data()]),c=u[0],h=u[1],{selectedIndices:d,selectedScores:p}=Qm(c,h,t,s,r,o);return a!==n&&a.dispose(),l!==e&&l.dispose(),{selectedIndices:En(d,"int32"),selectedScores:En(p)}}const wR=xR;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vR(n,e,t,s=.5,r=Number.NEGATIVE_INFINITY,o=!1){const a=z(n,"boxes","nonMaxSuppression"),l=z(e,"scores","nonMaxSuppression"),i=Xa(a,l,t,s,r,null),u=i.maxOutputSize,c=i.iouThreshold,h=i.scoreThreshold,d={boxes:a,scores:l},p={maxOutputSize:u,iouThreshold:c,scoreThreshold:h,padToMaxOutputSize:o},f=Q.runKernel(Lf,d,p);return{selectedIndices:f[0],validOutputs:f[1]}}const kR=Y({nonMaxSuppressionPadded_:vR});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function SR(n,e,t,s=.5,r=Number.NEGATIVE_INFINITY,o=!1){const a=z(n,"boxes","nonMaxSuppressionAsync"),l=z(e,"scores","nonMaxSuppressionAsync"),i=Xa(a,l,t,s,r,null),u=i.maxOutputSize,c=i.iouThreshold,h=i.scoreThreshold,[d,p]=await Promise.all([a.data(),l.data()]),{selectedIndices:f,validOutputs:g}=Jm(d,p,u,c,h,o);return a!==n&&a.dispose(),l!==e&&l.dispose(),{selectedIndices:En(f,"int32"),validOutputs:Ye(g,"int32")}}const CR=SR;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IR(n,e,t=!1,s=!1){const r=z(n,"images","resizeBilinear");P(r.rank===3||r.rank===4,()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${r.rank}.`),P(e.length===2,()=>`Error in resizeBilinear: new shape must 2D, but got shape ${e}.`),P(s===!1||t===!1,()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false.");let o=r,a=!1;r.rank===3&&(a=!0,o=te(r,[1,r.shape[0],r.shape[1],r.shape[2]]));const l={images:o},i={alignCorners:t,halfPixelCenters:s,size:e},u=Q.runKernel(fh,l,i);return a?te(u,[u.shape[1],u.shape[2],u.shape[3]]):u}const O1=Y({resizeBilinear_:IR});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NR(n,e,t=!1,s=!1){const r=z(n,"images","resizeNearestNeighbor");P(r.rank===3||r.rank===4,()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${r.rank}.`),P(e.length===2,()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${e}.`),P(r.dtype==="float32"||r.dtype==="int32",()=>"`images` must have `int32` or `float32` as dtype"),P(s===!1||t===!1,()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false.");let o=r,a=!1;r.rank===3&&(a=!0,o=te(r,[1,r.shape[0],r.shape[1],r.shape[2]]));const l={images:o},i={alignCorners:t,halfPixelCenters:s,size:e},u=Q.runKernel(ph,l,i);return a?te(u,[u.shape[1],u.shape[2],u.shape[3]]):u}const L1=Y({resizeNearestNeighbor_:NR});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $R(n,e="binary",t=!1,s=.5){const r=z(n,"image","threshold"),o=.2989,a=.587,l=.114,i=r.shape[0]*r.shape[1];let u=J(En([s]),255),c,h,d,p;if(P(r.rank===3,()=>`Error in threshold: image must be rank 3,but got rank ${r.rank}.`),P(r.shape[2]===3||r.shape[2]===1,()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${r.shape[2]}.`),P(r.dtype==="int32"||r.dtype==="float32",()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${r.dtype}.`),P(e==="otsu"||e==="binary",()=>`Method must be binary or otsu, but was ${e}`),r.shape[2]===3){[c,h,d]=ss(r,[1,1,1],-1);const y=J(c,o),x=J(h,a),w=J(d,l);p=Ne(Ne(y,x),w)}else p=n;if(e==="otsu"){const y=Gx(Pe(Lm(p),"int32"),Yt([]),256);u=TR(y,i)}const f=t?Zo(p,u):ds(p,u);return Pe(J(f,255),"int32")}function TR(n,e){let t=En([-1]),s=En([0]),r=En([0]),o,a,l,i,u,c;for(let h=0;h<n.size-1;h++){o=mt(n,0,h+1),a=mt(n,h+1),u=Ke(Ue(o),e),c=Ke(Ue(a),e);const d=Ue(J(o,Oa(0,o.size)));l=Ke(d,Ue(o));const p=ja(a.shape,o.size),f=Ne(Oa(0,a.size),p),g=J(a,f);i=Ke(Ue(g),Ue(a));const y=Ve(l,i),x=Ve(l,i),w=J(u,c);r=J(J(w,y),x);const v=ds(r,s);s=An(v,r,s),t=An(v,En([h]),t)}return t}const _R=Y({threshold_:$R});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ER(n,e,t="nearest",s="constant",r=0,o){const a=z(n,"image","transform","float32"),l=z(e,"transforms","transform","float32");P(a.rank===4,()=>`Error in transform: image must be rank 4,but got rank ${a.rank}.`),P(l.rank===2&&(l.shape[0]===a.shape[0]||l.shape[0]===1)&&l.shape[1]===8,()=>"Error in transform: Input transform should be batch x 8 or 1 x 8"),P(o==null||o.length===2,()=>`Error in transform: outputShape must be [height, width] or null, but got ${o}.`);const i={image:a,transforms:l},u={interpolation:t,fillMode:s,fillValue:r,outputShape:o};return Q.runKernel(om,i,u)}const AR=Y({transform_:ER});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DR(n,e,t){const s=z(n,"a","bandPart");P(s.rank>=2,()=>`bandPart(): Rank must be at least 2, got ${s.rank}.`);const r=s.shape,[o,a]=s.shape.slice(-2);let l,i;typeof e=="number"?(P(e%1===0,()=>`bandPart(): numLower must be an integer, got ${e}.`),P(e<=o,()=>`bandPart(): numLower (${e}) must not be greater than the number of rows (${o}).`),l=z(e<0?o:e,"numLower","bandPart")):(P(e.dtype==="int32",()=>"bandPart(): numLower's dtype must be an int32."),l=An(_i(e,0),o,Vo(e,o))),typeof t=="number"?(P(t%1===0,()=>`bandPart(): numUpper must be an integer, got ${t}.`),P(t<=a,()=>`bandPart(): numUpper (${t}) must not be greater than the number of columns (${a}).`),i=z(t<0?a:t,"numUpper","bandPart")):(P(t.dtype==="int32",()=>"bandPart(): numUpper's dtype must be an int32."),i=An(_i(t,0),a,Vo(t,a)));const u=te(Oa(0,o,1,"int32"),[-1,1]),c=Oa(0,a,1,"int32"),h=Ve(u,c),d=fr(Zo(h,l),uo(h,Pt(i))),p=rn([o,a],s.dtype);return te(is(Ps(te(s,[-1,o,a])).map(f=>An(d,f,p))),r)}const RR=Y({bandPart_:DR});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FR(n){let e;if(Array.isArray(n)){e=!1,P(n!=null&&n.length>0,()=>"Gram-Schmidt process: input must not be null, undefined, or empty");const r=n[0].shape[0];for(let o=1;o<n.length;++o)P(n[o].shape[0]===r,()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${n[o].shape[0]} vs. ${r})`)}else e=!0,n=ss(n,n.shape[0],0).map(r=>ea(r,[0]));P(n.length<=n[0].shape[0],()=>`Gram-Schmidt: Number of vectors (${n.length}) exceeds number of dimensions (${n[0].shape[0]}).`);const t=[],s=n;for(let r=0;r<n.length;++r)t.push(Q.tidy(()=>{let o=s[r];if(r>0)for(let a=0;a<r;++a){const l=J(Ue(J(t[a],o)),t[a]);o=Ve(o,l)}return Ke(o,Wl(o,"euclidean"))}));return e?is(t,0):t}const OR=Y({gramSchmidt_:FR});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LR(n,e=!1){if(P(n.rank>=2,()=>`qr() requires input tensor to have a rank >= 2, but got rank ${n.rank}`),n.rank===2)return bb(n,e);{const t=n.shape.slice(0,n.shape.length-2).reduce((i,u)=>i*u),s=Ps(te(n,[t,n.shape[n.shape.length-2],n.shape[n.shape.length-1]]),0),r=[],o=[];s.forEach(i=>{const[u,c]=bb(i,e);r.push(u),o.push(c)});const a=te(is(r,0),n.shape),l=te(is(o,0),n.shape);return[a,l]}}function bb(n,e=!1){return Q.tidy(()=>{P(n.shape.length===2,()=>`qr2d() requires a 2D Tensor, but got a ${n.shape.length}D Tensor.`);const t=n.shape[0],s=n.shape[1];let r=km(t),o=Ir(n);const a=Na([[1]],[1,1]);let l=Ir(a);const i=t>=s?s:t;for(let u=0;u<i;++u){const c=o,h=l,d=r;[l,o,r]=Q.tidy(()=>{const p=mt(o,[u,u],[t-u,1]),f=Wl(p),g=mt(o,[u,u],[1,1]),y=An(ds(g,0),Na([[-1]]),Na([[1]])),x=Ve(g,J(y,f)),w=Ke(p,x);w.shape[0]===1?l=Ir(a):l=nn([a,mt(w,[1,0],[w.shape[0]-1,w.shape[1]])],0);const v=Pt(Ke(dt(y,x),f)),k=mt(o,[u,0],[t-u,s]),C=J(v,l),I=gt(l);if(u===0)o=Ve(k,dt(C,dt(I,k)));else{const R=Ve(k,dt(C,dt(I,k)));o=nn([mt(o,[0,0],[u,s]),R],0)}const N=gt(C),E=mt(r,[0,u],[t,r.shape[1]-u]);if(u===0)r=Ve(E,dt(dt(E,l),N));else{const R=Ve(E,dt(dt(E,l),N));r=nn([mt(r,[0,0],[t,u]),R],1)}return[l,o,r]}),ut([c,h,d])}return!e&&t>s&&(r=mt(r,[0,0],[t,s]),o=mt(o,[0,0],[s,s])),[r,o]})}const PR=Y({qr_:LR});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var qn;(function(n){n[n.NONE=0]="NONE",n[n.MEAN=1]="MEAN",n[n.SUM=2]="SUM",n[n.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"})(qn||(qn={}));function zR(n,e,t=qn.SUM_BY_NONZERO_WEIGHTS){const s=z(n,"losses","computeWeightedLoss");let r=null;e!=null&&(r=z(e,"weights","computeWeightedLoss"));const o=r==null?s:J(s,r);if(t===qn.NONE)return o;if(t===qn.SUM)return Ue(o);if(t===qn.MEAN){if(r==null)return Kt(o);{const a=s.size/r.size,l=Ke(Ue(o),Ue(r));return a>1?Ke(l,Ye(a)):l}}if(t===qn.SUM_BY_NONZERO_WEIGHTS){if(r==null)return Ke(Ue(o),Ye(s.size));{const a=J(r,ns(s.shape)),l=Pe(Ue(Fa(a,Ye(0))),"float32");return Ke(Ue(o),l)}}throw Error(`Unknown reduction: ${t}`)}const Fr=Y({computeWeightedLoss_:zR});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BR(n,e,t,s=qn.SUM_BY_NONZERO_WEIGHTS){const r=z(n,"labels","absoluteDifference"),o=z(e,"predictions","absoluteDifference");let a=null;t!=null&&(a=z(t,"weights","absoluteDifference")),cs(r.shape,o.shape,"Error in absoluteDifference: ");const l=sn(Ve(r,o));return Fr(l,a,s)}const MR=Y({absoluteDifference_:BR});function VR(n,e,t,s,r=qn.SUM_BY_NONZERO_WEIGHTS){const o=z(n,"labels","cosineDistance"),a=z(e,"predictions","cosineDistance");let l=null;s!=null&&(l=z(s,"weights","cosineDistance")),cs(o.shape,a.shape,"Error in cosineDistance: ");const i=Ye(1),u=Ve(i,Ue(J(o,a),t,!0));return Fr(u,l,r)}const WR=Y({cosineDistance_:VR});function UR(n,e,t,s=qn.SUM_BY_NONZERO_WEIGHTS){let r=z(n,"labels","hingeLoss");const o=z(e,"predictions","hingeLoss");let a=null;t!=null&&(a=z(t,"weights","hingeLoss")),cs(r.shape,o.shape,"Error in hingeLoss: ");const l=Ye(1);r=Ve(J(Ye(2),r),l);const i=yr(Ve(l,J(r,o)));return Fr(i,a,s)}const GR=Y({hingeLoss_:UR});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HR(n,e,t,s=1,r=qn.SUM_BY_NONZERO_WEIGHTS){const o=z(n,"labels","huberLoss"),a=z(e,"predictions","huberLoss");let l=null;t!=null&&(l=z(t,"weights","huberLoss")),cs(o.shape,a.shape,"Error in huberLoss: ");const i=Ye(s),u=sn(Ve(a,o)),c=Vo(u,i),h=Ve(u,c),d=Ne(J(Ye(.5),_t(c)),J(i,h));return Fr(d,l,r)}const jR=Y({huberLoss_:HR});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qR(n,e,t,s=1e-7,r=qn.SUM_BY_NONZERO_WEIGHTS){const o=z(n,"labels","logLoss"),a=z(e,"predictions","logLoss");let l=null;t!=null&&(l=z(t,"weights","logLoss")),cs(o.shape,a.shape,"Error in logLoss: ");const i=Ye(1),u=Ye(s),c=Pt(J(o,ys(Ne(a,u)))),h=J(Ve(i,o),ys(Ne(Ve(i,a),u))),d=Ve(c,h);return Fr(d,l,r)}const KR=Y({logLoss_:qR});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XR(n,e,t,s=qn.SUM_BY_NONZERO_WEIGHTS){const r=z(n,"labels","meanSquaredError"),o=z(e,"predictions","meanSquaredError");let a=null;t!=null&&(a=z(t,"weights","meanSquaredError")),cs(r.shape,o.shape,"Error in meanSquaredError: ");const l=Gm(r,o);return Fr(l,a,s)}const YR=Y({meanSquaredError_:XR});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZR(n,e){const t=z(n,"labels","sigmoidCrossEntropyWithLogits"),s=z(e,"logits","sigmoidCrossEntropyWithLogits");cs(t.shape,s.shape,"Error in sigmoidCrossEntropyWithLogits: ");const r=yr(s),o=J(s,t),a=Dh(as(Pt(sn(s))));return Ne(Ve(r,o),a)}function JR(n,e,t,s=0,r=qn.SUM_BY_NONZERO_WEIGHTS){let o=z(n,"multiClassLabels","sigmoidCrossEntropy");const a=z(e,"logits","sigmoidCrossEntropy");let l=null;if(t!=null&&(l=z(t,"weights","sigmoidCrossEntropy")),cs(o.shape,a.shape,"Error in sigmoidCrossEntropy: "),s>0){const u=Ye(s),c=Ye(1),h=Ye(.5);o=Ne(J(o,Ve(c,u)),J(h,u))}const i=ZR(o,a);return Fr(i,l,r)}const QR=Y({sigmoidCrossEntropy_:JR});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eF(n,e,t=-1){if(t===-1&&(t=e.rank-1),t!==e.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${e.rank} and dim was ${t}`);return Tr((r,o,a)=>{const i=Rh(o,[t],!0),u=Ve(Pe(o,"float32"),i);a([r,u]);const c=Pt(J(u,r));return{value:Ue(c,[t]),gradFunc:(p,f)=>{const[g,y]=f,x=Jt(p.shape,[t]);return[J(te(p,x),Ve(Pe(g,"float32"),as(y))),J(te(p,x),Ve(as(y),Pe(g,"float32")))]}}})(n,e)}function tF(n,e,t,s=0,r=qn.SUM_BY_NONZERO_WEIGHTS){let o=z(n,"onehotLabels","softmaxCrossEntropy");const a=z(e,"logits","softmaxCrossEntropy");let l=null;if(t!=null&&(l=z(t,"weights","softmaxCrossEntropy")),cs(o.shape,a.shape,"Error in softmaxCrossEntropy: "),s>0){const u=Ye(s),c=Ye(1),h=Ye(o.shape[1]);o=Ne(J(o,Ve(c,u)),Ke(u,h))}const i=eF(o,a);return Fr(i,l,r)}const nF=Y({softmaxCrossEntropy_:tF});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sF(n,e,t,s){const r=z(n,"indices","sparseFillEmptyRows","int32"),o=z(e,"values","sparseFillEmptyRows"),a=z(t,"denseShape","sparseFillEmptyRows","int32"),l=z(s,"defaultValue","sparseFillEmptyRows",o.dtype);if(r.rank!==2)throw new Error(`Indices should be Tensor2D but received shape
        ${r.shape}`);if(o.rank!==1)throw new Error(`Values should be Tensor1D but received shape ${o.shape}`);if(a.rank!==1)throw new Error(`Dense shape should be Tensor1D but received shape ${a.shape}`);if(l.rank!==0)throw new Error(`Default value should be a scalar but received shape ${l.shape}`);const i={indices:r,values:o,denseShape:a,defaultValue:l},u=Q.runKernel(Kf,i);return{outputIndices:u[0],outputValues:u[1],emptyRowIndicator:u[2],reverseIndexMap:u[3]}}const rF=Y({sparseFillEmptyRows_:sF});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oF(n,e,t){const s=z(n,"inputIndices","sparseReshape","int32"),r=z(e,"inputShape","sparseReshape","int32"),o=z(t,"newShape","sparseReshape","int32");if(s.rank!==2)throw new Error(`Input indices should be Tensor2D but received shape
        ${s.shape}`);if(r.rank!==1)throw new Error(`Input shape should be Tensor1D but received shape ${r.shape}`);if(o.rank!==1)throw new Error(`New shape should be Tensor1D but received shape ${o.shape}`);const a={inputIndices:s,inputShape:r,newShape:o},l=Q.runKernel(Xf,a);return{outputIndices:l[0],outputShape:l[1]}}const aF=Y({sparseReshape_:oF});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iF(n,e,t){const s=z(n,"data","sparseSegmentMean"),r=z(e,"indices","sparseSegmentMean","int32"),o=z(t,"segmentIds","sparseSegmentMean","int32");if(s.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.rank!==1)throw new Error(`Indices should be Tensor1D but received shape
          ${r.shape}`);if(o.rank!==1)throw new Error(`Segment ids should be Tensor1D but received shape
          ${o.shape}`);const a={data:s,indices:r,segmentIds:o};return Q.runKernel(Yf,a)}const lF=Y({sparseSegmentMean_:iF});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uF(n,e,t){const s=z(n,"data","sparseSegmentSum"),r=z(e,"indices","sparseSegmentSum","int32"),o=z(t,"segmentIds","sparseSegmentSum","int32");if(s.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.rank!==1)throw new Error(`Indices should be Tensor1D but received shape
         ${r.shape}`);if(o.rank!==1)throw new Error(`Segment ids should be Tensor1D but received shape
         ${o.shape}`);const a={data:s,indices:r,segmentIds:o};return Q.runKernel(Zf,a)}const cF=Y({sparseSegmentSum_:uF});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hF(n,e,t,s,r,o,a,l){const i=z(n,"data","stringNGrams","string");if(i.dtype!=="string")throw new Error("Data must be of datatype string");if(i.shape.length!==1)throw new Error(`Data must be a vector, saw: ${i.shape}`);const u=z(e,"dataSplits","stringNGrams");if(u.dtype!=="int32")throw new Error("Data splits must be of datatype int32");const c={separator:t,nGramWidths:s,leftPad:r,rightPad:o,padWidth:a,preserveShortSequences:l},h={data:i,dataSplits:u},d=Q.runKernel(tm,h,c);return{nGrams:d[0],nGramsSplits:d[1]}}const dF=Y({stringNGrams_:hF});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pF(n,e,t=!0){const s=z(n,"input","stringSplit","string"),r=z(e,"delimiter","stringSplit","string");if(s.rank!==1)throw new Error(`Input should be Tensor1D but received shape ${s.shape}`);if(r.rank!==0)throw new Error(`Delimiter should be a scalar but received shape ${r.shape}`);const o={skipEmpty:t},a={input:s,delimiter:r},l=Q.runKernel(nm,a,o);return{indices:l[0],values:l[1],shape:l[2]}}const fF=Y({stringSplit_:pF});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mF(n,e){const t=z(n,"input","stringToHashBucketFast","string"),s={numBuckets:e};if(e<=0)throw new Error("Number of buckets must be at least 1");const r={input:t};return Q.runKernel(sm,r,s)}const gF=Y({stringToHashBucketFast_:mF});/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yF(n,e,t,s=!0){const r=z(n,"input","staticRegexReplace","string"),o={pattern:e,rewrite:t,replaceGlobal:s};return Q.runKernel(kh,{x:r},o)}const bF=Y({staticRegexReplace_:yF});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xF={fft:Uh,ifft:Di,rfft:Gh,irfft:Um},wF={hammingWindow:jD,hannWindow:R1,frame:F1,stft:YD},ir={flipLeftRight:eR,grayscaleToRGB:nR,resizeNearestNeighbor:L1,resizeBilinear:O1,rgbToGrayscale:rR,rotateWithOffset:aR,cropAndResize:JD,nonMaxSuppression:lR,nonMaxSuppressionAsync:gR,nonMaxSuppressionWithScore:bR,nonMaxSuppressionWithScoreAsync:wR,nonMaxSuppressionPadded:kR,nonMaxSuppressionPaddedAsync:CR,threshold:_R,transform:AR},P1={bandPart:RR,gramSchmidt:OR,qr:PR},vF={absoluteDifference:MR,computeWeightedLoss:Fr,cosineDistance:WR,hingeLoss:GR,huberLoss:jR,logLoss:KR,meanSquaredError:YR,sigmoidCrossEntropy:QR,softmaxCrossEntropy:nF},kF={sparseFillEmptyRows:rF,sparseReshape:aF,sparseSegmentMean:lF,sparseSegmentSum:cF},SF={stringNGrams:dF,stringSplit:fF,stringToHashBucketFast:gF,staticRegexReplace:bF};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const CF=new Map,IF=new Map;class Ya{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}}class Ns{constructor(){this.classNameMap={}}static getMap(){return Ns.instance==null&&(Ns.instance=new Ns),Ns.instance}static register(e){Ns.getMap().classNameMap[e.className]=[e,e.fromConfig]}}function Te(n,e,t){P(n.className!=null,()=>"Class being registered does not have the static className property defined."),P(typeof n.className=="string",()=>"className is required to be a string, but got type "+typeof n.className),P(n.className.length>0,()=>"Class being registered has an empty-string as its className, which is disallowed."),typeof e>"u"&&(e="Custom"),typeof t>"u"&&(t=n.className);const s=t,r=e+">"+s;return Ns.register(n),CF.set(r,n),IF.set(n,r),n}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ho extends Ya{minimize(e,t=!1,s){const{value:r,grads:o}=this.computeGradients(e,s);if(s!=null){const a=s.map(l=>({name:l.name,tensor:o[l.name]}));this.applyGradients(a)}else this.applyGradients(o);return ut(o),t?r:(r.dispose(),null)}get iterations(){return this.iterations_==null&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return Y_(e,t)}dispose(){this.iterations_!=null&&ut(this.iterations_)}async saveIterations(){return this.iterations_==null&&(this.iterations_=0),{name:"iter",tensor:Ye(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}}Object.defineProperty(ho,Symbol.hasInstance,{value:n=>n.minimize!=null&&n.computeGradients!=null&&n.applyGradients!=null});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class z1 extends ho{static get className(){return"Adadelta"}constructor(e,t,s=null){super(),this.learningRate=e,this.rho=t,this.epsilon=s,this.accumulatedGrads=[],this.accumulatedUpdates=[],s==null&&(this.epsilon=Q.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map(s=>s.name):Object.keys(e)).forEach((s,r)=>{const o=Q.registeredVariables[s],a=!1;this.accumulatedGrads[r]==null&&(this.accumulatedGrads[r]={originalName:`${s}/accum_grad`,variable:ce(()=>yt(o).variable(a))}),this.accumulatedUpdates[r]==null&&(this.accumulatedUpdates[r]={originalName:`${s}/accum_var`,variable:ce(()=>yt(o).variable(a))});const l=Array.isArray(e)?e[r].tensor:e[s];if(l==null)return;const i=this.accumulatedGrads[r].variable,u=this.accumulatedUpdates[r].variable;ce(()=>{const c=Ne(J(i,this.rho),J(_t(l),1-this.rho)),h=J(Ke(Cn(Ne(u,this.epsilon)),Cn(Ne(i,this.epsilon))),l),d=Ne(J(u,this.rho),J(_t(h),1-this.rho));i.assign(c),u.assign(d);const p=Ne(J(h,-this.learningRate),o);o.assign(p)})}),this.incrementIterations()}dispose(){this.accumulatedUpdates!=null&&(ut(this.accumulatedGrads.map(e=>e.variable)),ut(this.accumulatedUpdates.map(e=>e.variable)))}async getWeights(){const e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e);const t=e.length/2,s=!1;this.accumulatedGrads=e.slice(0,t).map(r=>({originalName:r.name,variable:r.tensor.variable(s)})),this.accumulatedUpdates=e.slice(t,t*2).map(r=>({originalName:r.name,variable:r.tensor.variable(s)}))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class B1 extends ho{static get className(){return"Adagrad"}constructor(e,t=.1){super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map(s=>s.name):Object.keys(e)).forEach((s,r)=>{const o=Q.registeredVariables[s];this.accumulatedGrads[r]==null&&(this.accumulatedGrads[r]={originalName:`${s}/accumulator`,variable:ce(()=>ja(o.shape,this.initialAccumulatorValue).variable(!1))});const a=Array.isArray(e)?e[r].tensor:e[s];if(a==null)return;const l=this.accumulatedGrads[r].variable;ce(()=>{const i=Ne(l,_t(a));l.assign(i);const u=Ne(J(Ke(a,Cn(Ne(i,Q.backend.epsilon()))),-this.learningRate),o);o.assign(u)})}),this.incrementIterations()}dispose(){this.accumulatedGrads!=null&&ut(this.accumulatedGrads.map(e=>e.variable))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);const t=!1;this.accumulatedGrads=e.map(s=>({originalName:s.name,variable:s.tensor.variable(t)}))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class M1 extends ho{static get className(){return"Adam"}constructor(e,t,s,r=null){super(),this.learningRate=e,this.beta1=t,this.beta2=s,this.epsilon=r,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],ce(()=>{this.accBeta1=Ye(t).variable(),this.accBeta2=Ye(s).variable()}),r==null&&(this.epsilon=Q.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map(s=>s.name):Object.keys(e);ce(()=>{const s=Ve(1,this.accBeta1),r=Ve(1,this.accBeta2);t.forEach((o,a)=>{const l=Q.registeredVariables[o],i=!1;this.accumulatedFirstMoment[a]==null&&(this.accumulatedFirstMoment[a]={originalName:`${o}/m`,variable:ce(()=>yt(l).variable(i))}),this.accumulatedSecondMoment[a]==null&&(this.accumulatedSecondMoment[a]={originalName:`${o}/v`,variable:ce(()=>yt(l).variable(i))});const u=Array.isArray(e)?e[a].tensor:e[o];if(u==null)return;const c=this.accumulatedFirstMoment[a].variable,h=this.accumulatedSecondMoment[a].variable,d=Ne(J(c,this.beta1),J(u,1-this.beta1)),p=Ne(J(h,this.beta2),J(_t(u),1-this.beta2)),f=Ke(d,s),g=Ke(p,r);c.assign(d),h.assign(p);const y=Ne(J(Ke(f,Ne(Cn(g),this.epsilon)),-this.learningRate),l);l.assign(y)}),this.accBeta1.assign(J(this.accBeta1,this.beta1)),this.accBeta2.assign(J(this.accBeta2,this.beta2))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),this.accumulatedFirstMoment!=null&&ut(this.accumulatedFirstMoment.map(e=>e.variable)),this.accumulatedSecondMoment!=null&&ut(this.accumulatedSecondMoment.map(e=>e.variable))}async getWeights(){const e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e),ce(()=>{this.accBeta1.assign($r(this.beta1,this.iterations_+1)),this.accBeta2.assign($r(this.beta2,this.iterations_+1))});const t=e.length/2,s=!1;this.accumulatedFirstMoment=e.slice(0,t).map(r=>({originalName:r.name,variable:r.tensor.variable(s)})),this.accumulatedSecondMoment=e.slice(t,t*2).map(r=>({originalName:r.name,variable:r.tensor.variable(s)}))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class V1 extends ho{static get className(){return"Adamax"}constructor(e,t,s,r=null,o=0){super(),this.learningRate=e,this.beta1=t,this.beta2=s,this.epsilon=r,this.decay=o,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],ce(()=>{this.iteration=Ye(0).variable(),this.accBeta1=Ye(t).variable()}),r==null&&(this.epsilon=Q.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map(s=>s.name):Object.keys(e);ce(()=>{const s=Ve(1,this.accBeta1),r=Ke(-this.learningRate,Ne(J(this.iteration,this.decay),1));t.forEach((o,a)=>{const l=Q.registeredVariables[o],i=!1;this.accumulatedFirstMoment[a]==null&&(this.accumulatedFirstMoment[a]={originalName:`${o}/m`,variable:yt(l).variable(i)}),this.accumulatedWeightedInfNorm[a]==null&&(this.accumulatedWeightedInfNorm[a]={originalName:`${o}/v`,variable:yt(l).variable(i)});const u=Array.isArray(e)?e[a].tensor:e[o];if(u==null)return;const c=this.accumulatedFirstMoment[a].variable,h=this.accumulatedWeightedInfNorm[a].variable,d=Ne(J(c,this.beta1),J(u,1-this.beta1)),p=J(h,this.beta2),f=sn(u),g=Rr(p,f);c.assign(d),h.assign(g);const y=Ne(J(Ke(r,s),Ke(d,Ne(g,this.epsilon))),l);l.assign(y)}),this.iteration.assign(Ne(this.iteration,1)),this.accBeta1.assign(J(this.accBeta1,this.beta1))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),this.accumulatedFirstMoment!=null&&ut(this.accumulatedFirstMoment.map(e=>e.variable)),this.accumulatedWeightedInfNorm!=null&&ut(this.accumulatedWeightedInfNorm.map(e=>e.variable))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class tg extends ho{static get className(){return"SGD"}constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map(s=>s.name):Object.keys(e)).forEach((s,r)=>{const o=Array.isArray(e)?e[r].tensor:e[s];if(o==null)return;const a=Q.registeredVariables[s];ce(()=>{const l=Ne(J(this.c,o),a);a.assign(l)})}),this.incrementIterations()}setLearningRate(e){this.learningRate=e,this.c!=null&&this.c.dispose(),this.c=mn(Ye(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(e=await this.extractIterations(e),e.length!==0)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class W1 extends tg{static get className(){return"Momentum"}constructor(e,t,s=!1){super(e),this.learningRate=e,this.momentum=t,this.useNesterov=s,this.accumulations=[],this.m=Ye(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map(s=>s.name):Object.keys(e)).forEach((s,r)=>{const o=Q.registeredVariables[s];this.accumulations[r]==null&&(this.accumulations[r]={originalName:`${s}/momentum`,variable:ce(()=>yt(o).variable(!1))});const a=this.accumulations[r].variable,l=Array.isArray(e)?e[r].tensor:e[s];l!=null&&ce(()=>{let i;const u=Ne(J(this.m,a),l);this.useNesterov?i=Ne(J(this.c,Ne(l,J(u,this.m))),o):i=Ne(J(this.c,u),o),a.assign(u),o.assign(i)})}),this.incrementIterations()}dispose(){this.m.dispose(),this.accumulations!=null&&ut(this.accumulations.map(e=>e.variable))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);const t=!1;this.accumulations=e.map(s=>({originalName:s.name,variable:s.tensor.variable(t)}))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class U1 extends ho{static get className(){return"RMSProp"}constructor(e,t=.9,s=0,r=null,o=!1){if(super(),this.learningRate=e,this.decay=t,this.momentum=s,this.epsilon=r,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=o,r==null&&(this.epsilon=Q.backend.epsilon()),e==null)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map(s=>s.name):Object.keys(e)).forEach((s,r)=>{const o=Q.registeredVariables[s],a=!1;this.accumulatedMeanSquares[r]==null&&(this.accumulatedMeanSquares[r]={originalName:`${s}/rms`,variable:ce(()=>yt(o).variable(a))}),this.accumulatedMoments[r]==null&&(this.accumulatedMoments[r]={originalName:`${s}/momentum`,variable:ce(()=>yt(o).variable(a))}),this.accumulatedMeanGrads[r]==null&&this.centered&&(this.accumulatedMeanGrads[r]={originalName:`${s}/mg`,variable:ce(()=>yt(o).variable(a))});const l=Array.isArray(e)?e[r].tensor:e[s];if(l==null)return;const i=this.accumulatedMeanSquares[r].variable,u=this.accumulatedMoments[r].variable;ce(()=>{const c=Ne(J(i,this.decay),J(_t(l),1-this.decay));if(this.centered){const h=this.accumulatedMeanGrads[r].variable,d=Ne(J(h,this.decay),J(l,1-this.decay)),p=Ke(J(l,this.learningRate),Cn(Ve(c,Ne(_t(d),this.epsilon)))),f=Ne(J(u,this.momentum),p);i.assign(c),h.assign(d),u.assign(f);const g=Ve(o,f);o.assign(g)}else{const h=Ne(J(i,this.decay),J(_t(l),1-this.decay)),d=Ne(J(u,this.momentum),Ke(J(l,this.learningRate),Cn(Ne(h,this.epsilon))));i.assign(h),u.assign(d);const p=Ve(o,d);o.assign(p)}})}),this.incrementIterations()}dispose(){this.accumulatedMeanSquares!=null&&ut(this.accumulatedMeanSquares.map(e=>e.variable)),this.accumulatedMeanGrads!=null&&this.centered&&ut(this.accumulatedMeanGrads.map(e=>e.variable)),this.accumulatedMoments!=null&&ut(this.accumulatedMoments.map(e=>e.variable))}async getWeights(){const e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e);const t=this.centered?e.length/3:e.length/2,s=!1;this.accumulatedMeanSquares=e.slice(0,t).map(r=>({originalName:r.name,variable:r.tensor.variable(s)})),this.accumulatedMoments=e.slice(t,t*2).map(r=>({originalName:r.name,variable:r.tensor.variable(s)})),this.centered&&(this.accumulatedMeanGrads=e.slice(t*2,t*3).map(r=>({originalName:r.name,variable:r.tensor.variable(s)})))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const NF=[z1,B1,M1,V1,W1,U1,tg];function $F(){for(const n of NF)Te(n)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const TF="model",_F=".json",EF=".weights.bin";function xb(n){return new Promise(e=>setTimeout(e)).then(n)}class Wo{constructor(e){if(!de().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(Wo.URL_SCHEME)&&(e=e.slice(Wo.URL_SCHEME.length)),(e==null||e.length===0)&&(e=TF),this.modelJsonFileName=e+_F,this.weightDataFileName=e+EF}async save(e){if(typeof document>"u")throw new Error("Browser downloads are not supported in this environment since `document` is not present");const t=Js.join(e.weightData),s=window.URL.createObjectURL(new Blob([t],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const r=[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}],o=vx(e,r),a=window.URL.createObjectURL(new Blob([JSON.stringify(o)],{type:"application/json"})),l=this.modelJsonAnchor==null?document.createElement("a"):this.modelJsonAnchor;if(l.download=this.modelJsonFileName,l.href=a,await xb(()=>l.dispatchEvent(new MouseEvent("click"))),e.weightData!=null){const i=this.weightDataAnchor==null?document.createElement("a"):this.weightDataAnchor;i.download=this.weightDataFileName,i.href=s,await xb(()=>i.dispatchEvent(new MouseEvent("click")))}return{modelArtifactsInfo:Pl(e)}}}}Wo.URL_SCHEME="downloads://";class AF{constructor(e){if(e==null||e.length<1)throw new Error(`When calling browserFiles, at least 1 file is required, but received ${e}`);this.jsonFile=e[0],this.weightsFiles=e.slice(1)}async load(){return new Promise((e,t)=>{const s=new FileReader;s.onload=r=>{const o=JSON.parse(r.target.result),a=o.modelTopology;if(a==null){t(new Error(`modelTopology field is missing from file ${this.jsonFile.name}`));return}if(o.weightsManifest==null){t(new Error(`weightManifest field is missing from file ${this.jsonFile.name}`));return}if(this.weightsFiles.length===0){e({modelTopology:a});return}const i=hm(o,u=>this.loadWeights(u));e(i)},s.onerror=r=>t(`Failed to read model topology and weights manifest JSON from file '${this.jsonFile.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),s.readAsText(this.jsonFile)})}loadWeights(e){const t=[],s=[];for(const a of e)t.push(...a.weights),s.push(...a.paths);const r=this.checkManifestAndWeightFiles(e),o=s.map(a=>this.loadWeightsFile(a,r[a]));return Promise.all(o).then(a=>[t,a])}loadWeightsFile(e,t){return new Promise((s,r)=>{const o=new FileReader;o.onload=a=>{const l=a.target.result;s(l)},o.onerror=a=>r(`Failed to weights data from file of path '${e}'.`),o.readAsArrayBuffer(t)})}checkManifestAndWeightFiles(e){const t=[],s=this.weightsFiles.map(o=>gb(o.name)),r={};for(const o of e)o.paths.forEach(a=>{const l=gb(a);if(t.indexOf(l)!==-1)throw new Error(`Duplicate file basename found in weights manifest: '${l}'`);if(t.push(l),s.indexOf(l)===-1)throw new Error(`Weight file with basename '${l}' is not provided.`);r[a]=this.weightsFiles[s.indexOf(l)]});if(t.length!==this.weightsFiles.length)throw new Error(`Mismatch in the number of files in weights manifest (${t.length}) and the number of weight files provided (${this.weightsFiles.length}).`);return r}}const DF=n=>de().getBool("IS_BROWSER")&&!Array.isArray(n)&&n.startsWith(Wo.URL_SCHEME)?RF(n.slice(Wo.URL_SCHEME.length)):null;Ut.registerSaveRouter(DF);function RF(n="model"){return new Wo(n)}function FF(n){return new AF(n)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wb(n,e,t,s){a(n),t=t??0,s=s??1,l(t,s);let r=0;const o=i=>(i.then(u=>{const c=t+ ++r/n.length*(s-t);return e(c),u}),i);function a(i){P(i!=null&&Array.isArray(i)&&i.length>0,()=>"promises must be a none empty array")}function l(i,u){P(i>=0&&i<=1,()=>`Progress fraction must be in range [0, 1], but got startFraction ${i}`),P(u>=0&&u<=1,()=>`Progress fraction must be in range [0, 1], but got endFraction ${u}`),P(u>=i,()=>`startFraction must be no more than endFraction, but got startFraction ${i} and endFraction ${u}`)}return Promise.all(n.map(o))}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function G1(n,e){e==null&&(e={});const t=e.fetchFunc==null?de().platform.fetch:e.fetchFunc,s=n.map(h=>t(h,e.requestInit,{isBinary:!0})),l=(e.onProgress==null?await Promise.all(s):await wb(s,e.onProgress,0,.5)).map(h=>h.arrayBuffer());return e.onProgress==null?await Promise.all(l):await wb(l,e.onProgress,.5,1)}function OF(n,e){var t;const s=e.fetchFunc==null?de().platform.fetch:e.fetchFunc;let r=0,o;return(t=e.onProgress)===null||t===void 0||t.call(e,0),new ReadableStream({pull:async a=>{for(var l;r<n.length;){o||(o=(await s(n[r],e.requestInit,{isBinary:!0})).body.getReader());const{done:i,value:u}=await o.read();if(i){r++,o=void 0,(l=e.onProgress)===null||l===void 0||l.call(e,r/n.length);continue}a.enqueue(u);return}a.close()}})}async function LF(n,e="",t,s){return H1(a=>G1(a,{requestInit:s}))(n,e,t)}function H1(n){return async(e,t="",s)=>{const r=e.map(()=>!1),o={},a=s!=null?s.map(()=>!1):[],l=[];if(e.forEach((p,f)=>{let g=0;p.weights.forEach(y=>{const x="quantization"in y?y.quantization.dtype:y.dtype,w=Lo[x]*me(y.shape),v=()=>{r[f]=!0,o[f]==null&&(o[f]=[]),o[f].push({manifestEntry:y,groupOffset:g,sizeBytes:w})};s!=null?s.forEach((k,C)=>{k===y.name&&(v(),a[C]=!0)}):v(),l.push(y.name),g+=w})}),!a.every(p=>p)){const p=s.filter((f,g)=>!a[g]);throw new Error(`Could not find weights in manifest with names: ${p.join(", ")}. 
Manifest JSON has weights with names: ${l.join(", ")}.`)}const i=r.reduce((p,f,g)=>(f&&p.push(g),p),[]),u=[];i.forEach(p=>{e[p].paths.forEach(f=>{const g=t+(t.endsWith("/")?"":"/")+f;u.push(g)})});const c=await n(u),h={};let d=0;return i.forEach(p=>{const f=e[p].paths.length,g=new Js(c.slice(d,d+f));o[p].forEach(x=>{const w=g.slice(x.groupOffset,x.groupOffset+x.sizeBytes),v=yx(w,[x.manifestEntry]);for(const k in v)h[k]=v[k]}),d+=f}),h}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const PF="application/octet-stream",zF="application/json";class ng{constructor(e,t){if(this.DEFAULT_METHOD="POST",t==null&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.weightUrlConverter=t.weightUrlConverter,t.fetchFunc!=null?(P(typeof t.fetchFunc=="function",()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)"),this.fetch=t.fetchFunc):this.fetch=de().platform.fetch,P(e!=null&&e.length>0,()=>"URL path for http must not be null, undefined or empty."),Array.isArray(e)&&P(e.length===2,()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`),this.path=e,t.requestInit!=null&&t.requestInit.body!=null)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{},this.loadOptions=t}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;const s=[{paths:["./model.weights.bin"],weights:e.weightSpecs}],r=vx(e,s);if(t.body.append("model.json",new Blob([JSON.stringify(r)],{type:zF}),"model.json"),e.weightData!=null){const a=Js.join(e.weightData);t.body.append("model.weights.bin",new Blob([a],{type:PF}),"model.weights.bin")}const o=await this.fetch(this.path,t);if(o.ok)return{modelArtifactsInfo:Pl(e),responses:[o]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${o.status}.`)}async loadModelJSON(){const e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code ${e.status}. Please verify this URL points to the model JSON of the model to load.`);let t;try{t=await e.json()}catch{let a=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?a+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":a+=" Please make sure the server is serving valid JSON for this request.",new Error(a)}const s=t.modelTopology,r=t.weightsManifest;if(s==null&&r==null)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return t}async load(){if(this.loadOptions.streamWeights)return this.loadStream();const e=await this.loadModelJSON();return hm(e,t=>this.loadWeights(t))}async loadStream(){const e=await this.loadModelJSON(),t=await this.getWeightUrls(e.weightsManifest),s=gp(e.weightsManifest),r=()=>OF(t,this.loadOptions);return Object.assign(Object.assign({},e),{weightSpecs:s,getWeightStream:r})}async getWeightUrls(e){const t=Array.isArray(this.path)?this.path[1]:this.path,[s,r]=BF(t),o=this.weightPathPrefix||s,a=[],l=[];for(const i of e)for(const u of i.paths)this.weightUrlConverter!=null?l.push(this.weightUrlConverter(u)):a.push(o+u+r);return this.weightUrlConverter&&a.push(...await Promise.all(l)),a}async loadWeights(e){const t=await this.getWeightUrls(e),s=gp(e),r=await G1(t,this.loadOptions);return[s,r]}}ng.URL_SCHEME_REGEX=/^https?:\/\//;function BF(n){const e=n.lastIndexOf("/"),t=n.lastIndexOf("?"),s=n.substring(0,e),r=t>e?n.substring(t):"";return[s+"/",r]}function Sp(n){return n.match(ng.URL_SCHEME_REGEX)!=null}const j1=(n,e)=>{if(typeof fetch>"u"&&(e==null||e.fetchFunc==null))return null;{let t=!0;if(Array.isArray(n)?t=n.every(s=>Sp(s)):t=Sp(n),t)return sg(n,e)}return null};Ut.registerSaveRouter(j1);Ut.registerLoadRouter(j1);function sg(n,e){return new ng(n,e)}function MF(n,e){return sg(n,e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class zd{constructor(e){this.modelArtifacts=e}load(){return this.modelArtifacts}}class q1{constructor(e){this.saveHandler=e}save(e){return this.saveHandler(e)}}class VF{constructor(e){e.load&&(this.load=()=>Promise.resolve(e.load())),e.save&&(this.save=t=>Promise.resolve(e.save(t)))}}function WF(n,e,t,s){const r=arguments;return new VF(K1(...r))}function K1(n,e,t,s){return arguments.length===1?n.modelTopology!=null||n.weightSpecs!=null?new zd(n):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new zd({modelTopology:n})):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new zd({modelTopology:n,weightSpecs:e,weightData:t,trainingConfig:s}))}function UF(n){return new q1(n)}function GF(n){return new q1(n)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rg=Object.freeze(Object.defineProperty({__proto__:null,CompositeArrayBuffer:Js,browserFiles:FF,browserHTTPRequest:MF,concatenateArrayBuffers:wx,copyModel:H$,decodeWeights:yx,decodeWeightsStream:xx,encodeWeights:mp,fromMemory:WF,fromMemorySync:K1,getLoadHandlers:A$,getModelArtifactsForJSON:hm,getModelArtifactsForJSONSync:kx,getModelArtifactsInfoForJSON:Pl,getSaveHandlers:Sx,getWeightSpecs:gp,http:sg,isHTTPScheme:Sp,listModels:U$,loadWeights:LF,moveModel:j$,registerLoadRouter:E$,registerSaveRouter:_$,removeModel:G$,weightsLoaderFactory:H1,withSaveHandler:UF,withSaveHandlerSync:GF},Symbol.toStringTag,{value:"Module"}));function og(n,e){const t=n.shape.length,s=e.shape.length;if(t<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${t}.`);if(s<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${s}.`);if(e.dtype!=="int32")throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.shape[s-1]>t)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${e.shape[s-1]} vs. ${t}`);if(me(n.shape)===0)throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${n.shape}.`);const r=e.shape,o=r[r.length-1];let a=1;for(let h=0;h<r.length-1;++h)a*=r[h];const l=n.shape,i=r.slice();i.pop();let u=1;for(let h=o;h<t;++h)u*=l[h],i.push(l[h]);const c=[...Ze(n.shape).map(h=>h/u),1].slice(0,o);return[i,a,u,c]}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Cp=-2,HF=-1;function ag(n,e,t){const s=n.shape.length;P(s===e.length,()=>`Error in slice${s}D: Length of begin ${e} must match the rank of the array (${s}).`),P(s===t.length,()=>`Error in slice${s}D: Length of size ${t} must match the rank of the array (${s}).`);for(let r=0;r<s;++r)P(e[r]+t[r]<=n.shape[r],()=>`Error in slice${s}D: begin[${r}] + size[${r}] (${e[r]+t[r]}) would overflow input.shape[${r}] (${n.shape[r]})`)}function jF(n){const e=[];let t=0;for(;n>0;)n&1&&e.push(t),n/=2,t++;return e}function ig(n,e,t){const s=[];for(let r=0;r<n.length;r++)s[r]=Math.ceil((e[r]-n[r])/t[r]);return s}function X1(n,e,t,s){const r=[...n];for(let o=r.length;o<s.length;o++)r.push(1);for(let o=0;o<t;o++)o===0?r[e]=1:(r.splice(e,0,1),r.pop());return r}function Y1(n,e,t){return t<=n?t:t-(e-1)}function Z1(n,e){const t=[];for(let s=0;s<n;s++)t.push(e+s);return t}function qF(n,e,t,s,r,o,a,l,i){const u=n.length;let c=new Array(u),h=new Array(u),d=new Array(u);if(e.length&&t>0){const p=e[0],f=t+1;c=J1(a,p,f,s,n),h=Q1(l,p,f,r,n),d=X1(o,p,f,n)}else for(let p=0;p<u;p++)c[p]=tw(a,s,o,n,p,i),h[p]=nw(l,r,o,n,p,i),d[p]=ew(o,p,i);return{begin:c,end:h,strides:d}}function J1(n,e,t,s,r){const o=[...r],a=Z1(t,e);for(let l=0;l<o.length;l++)if(a.indexOf(l)>-1)o[l]=0;else{const i=Y1(e,t,l);let u=s[i];n&1<<i&&(u=0),o[l]=u}return o}function Q1(n,e,t,s,r){const o=[...r],a=Z1(t,e);for(let l=0;l<o.length;l++)if(a.indexOf(l)>-1)o[l]=Number.MAX_SAFE_INTEGER;else{const i=Y1(e,t,l);let u=s[i];n&1<<i&&(u=Number.MAX_SAFE_INTEGER),o[l]=u}for(let l=0;l<o.length;l++){const i=r[l];o[l]<0&&(o[l]+=i),o[l]=Ro(0,o[l],r[l])}return o}function ew(n,e,t){let s=n[e];return(t&1<<e||s==null)&&(s=1),s}function tw(n,e,t,s,r,o){let a=e[r];const l=t[r]||1;(n&1<<r||o&1<<r||a==null)&&(l>0?a=Number.MIN_SAFE_INTEGER:a=Number.MAX_SAFE_INTEGER);const i=s[r];return a<0&&(a+=i),a=Ro(0,a,i-1),a}function nw(n,e,t,s,r,o){let a=e[r];const l=t[r]||1;(n&1<<r||o&1<<r||a==null)&&(l>0?a=Number.MAX_SAFE_INTEGER:a=Number.MIN_SAFE_INTEGER);const i=s[r];return a<0&&(a+=i),l>0?a=Ro(0,a,i):a=Ro(-1,a,i-1),a}function lg(n,e,t){let s=t.length;for(let r=0;r<t.length;r++)if(t[r]>1){s=r;break}for(let r=s+1;r<t.length;r++)if(e[r]>0||t[r]!==n[r])return!1;return!0}function ug(n,e){let t=n.length>0?n[n.length-1]:1;for(let s=0;s<n.length-1;s++)t+=n[s]*e[s];return t}function Xh(n,e,t){let s;const r=n.shape.length;typeof e=="number"?s=[e,...new Array(r-1).fill(0)]:e.length<r?s=e.concat(new Array(r-e.length).fill(0)):s=e.slice(),s.forEach(a=>{P(a!==-1,()=>"slice() does not support negative begin indexing.")});let o;return t==null?o=new Array(r).fill(-1):typeof t=="number"?o=[t,...new Array(r-1).fill(-1)]:t.length<r?o=t.concat(new Array(r-t.length).fill(-1)):o=t,o=o.map((a,l)=>a>=0?a:(P(a===-1,()=>`Negative size values should be exactly -1 but got ${a} for the slice() size at index ${l}.`),n.shape[l]-s[l])),[s,o]}function cg(n,e,t,s,r,o,a,l,i){let u;if(s==null?(u=new Array(e.length),u.fill(1)):u=s,a!=null&&a&a-1)throw new Error("Multiple ellipses in slice is not allowed.");let c=!1;const h={dims:u.length,numAddAxisAfterEllipsis:0,begin:e.slice(),end:t.slice(),strides:u.slice(),beginMask:r,endMask:o,ellipsisMask:a,newAxisMask:l,shrinkAxisMask:i};for(let v=0;v<h.dims;v++)c&&1<<v&l&&h.numAddAxisAfterEllipsis++,1<<v&a&&(c=!0);c||(h.ellipsisMask|=1<<h.dims,h.dims++);const d={dims:n.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};KF(h,d);let p=!0,f=!0,g=!0;const y=[],x=[];for(let v=0;v<n.length;++v){if(d.strides[v]===0)throw Error(`strides[${v}] must be non-zero`);const k=!!(d.shrinkAxisMask&1<<v),C=n[v];if(C===-1){y.push(k?1:-1);continue}const I=[d.beginMask&1<<v,d.endMask&1<<v],N=[d.strides[v]>0?0:-1,d.strides[v]>0?C:C-1];if(k&&d.strides[v]<=0)throw Error("only stride 1 allowed on non-range indexing.");g=g&&d.strides[v]===1;const E=!!(d.beginMask&1<<v&&d.endMask&1<<v);if(d.beginValid&&d.endValid){if(k){const j=d.begin[v]<0?C+d.begin[v]:d.begin[v];if(d.begin[v]=j,d.end[v]=d.begin[v]+1,j<0||j>=C)throw Error(`slice index ${d.begin[v]} of dimension ${v} out of bounds.`)}else d.begin[v]=vb(d.begin[v],0,d.strides[v],C,I,N),d.end[v]=vb(d.end[v],1,d.strides[v],C,I,N);const B=d.strides[v]===1&&d.begin[v]===0&&d.end[v]===C;p=p&&B,f=f&&(v===0&&d.strides[v]===1||B)}else p=p&&d.strides[v]===1&&E,f=f&&(v===0&&d.strides[v]===1||E);let R,O=!1;if(d.beginValid&&d.endValid?(R=d.end[v]-d.begin[v],O=!0):k?(R=1,O=!0):E&&C>=0&&(d.strides[v]<0?R=-C:R=C,O=!0),O){let B;R===0||R<0!=d.strides[v]<0?B=0:B=Math.trunc(R/d.strides[v])+(R%d.strides[v]!==0?1:0),y.push(B)}else y.push(-1)}for(let v=0;v<d.finalShapeGatherIndices.length;++v){const k=d.finalShapeGatherIndices[v];k>=0?x.push(y[k]):k===Cp&&x.push(1)}return{finalShapeSparse:x.filter((v,k)=>d.finalShapeGatherIndices[k]!==Cp),finalShape:x,isIdentity:p,sliceDim0:f,isSimpleSlice:g,begin:d.begin,end:d.end,strides:d.strides}}function KF(n,e){e.beginMask=0,e.endMask=0,e.shrinkAxisMask=0;let t=0;e.beginValid=n.begin!=null,e.endValid=n.end!=null,e.begin=new Array(e.dims),e.end=new Array(e.dims),e.strides=new Array(e.dims),e.finalShapeGatherIndices=[],e.finalShapeGatherIndicesSparse=[],e.inputShapeGatherIndicesSparse=new Array(e.dims);for(let s=0;s<n.dims;s++)if(1<<s&n.ellipsisMask){const r=Math.min(e.dims-(n.dims-s)+1+n.numAddAxisAfterEllipsis,e.dims);for(;t<r;t++)e.begin[t]=0,e.end[t]=0,e.strides[t]=1,e.beginMask|=1<<t,e.endMask|=1<<t,e.finalShapeGatherIndices.push(t),e.finalShapeGatherIndicesSparse.push(-1),e.inputShapeGatherIndicesSparse[t]=s}else if(1<<s&n.newAxisMask)e.finalShapeGatherIndices.push(Cp),e.finalShapeGatherIndicesSparse.push(-1);else{if(t===e.begin.length)throw Error(`Index out of range using input dim ${t}; input has only ${e.dims} dims, ${e.begin.length}.`);n.begin!=null&&(e.begin[t]=n.begin[s]),n.end!=null&&(e.end[t]=n.end[s]),e.strides[t]=n.strides[s],n.beginMask&1<<s&&(e.beginMask|=1<<t),n.endMask&1<<s&&(e.endMask|=1<<t),n.shrinkAxisMask&1<<s?(e.finalShapeGatherIndices.push(HF),e.finalShapeGatherIndicesSparse.push(-1),e.shrinkAxisMask|=1<<t):(e.finalShapeGatherIndices.push(t),e.finalShapeGatherIndicesSparse.push(s)),e.inputShapeGatherIndicesSparse[t]=s,t++}}function vb(n,e,t,s,r,o){if(r[e])return t>0?o[e]:o[e+1&1];{const a=n<0?s+n:n;return a<o[0]?o[0]:a>o[1]?o[1]:a}}const XF=Object.freeze(Object.defineProperty({__proto__:null,assertParamsValid:ag,computeFlatOffset:ug,computeOutShape:ig,getNormalizedAxes:qF,isSliceContinous:lg,maskToAxes:jF,parseSliceParams:Xh,sliceInfo:cg,startForAxis:tw,startIndicesWithElidedDims:J1,stopForAxis:nw,stopIndicesWithElidedDims:Q1,stridesForAxis:ew,stridesWithElidedDims:X1},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class YF{static sgd(e){return new tg(e)}static momentum(e,t,s=!1){return new W1(e,t,s)}static rmsprop(e,t=.9,s=0,r=null,o=!1){return new U1(e,t,s,r,o)}static adam(e=.001,t=.9,s=.999,r=null){return new M1(e,t,s,r)}static adadelta(e=.001,t=.95,s=null){return new z1(e,t,s)}static adamax(e=.002,t=.9,s=.999,r=null,o=0){return new V1(e,t,s,r,o)}static adagrad(e,t=.1){return new B1(e,t)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const da=YF;/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ZF=typeof requestAnimationFrame<"u"?requestAnimationFrame:typeof setImmediate<"u"?setImmediate:n=>n();function sw(){return new Promise(n=>ZF(()=>n()))}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hg(n,e){const t=n[0].length;n.forEach((r,o)=>{P(r.length===t,()=>`Error in concat${t}D: rank of tensors[${o}] must be the same as the rank of the rest (${t})`)}),P(e>=0&&e<t,()=>`Error in concat${t}D: axis must be between 0 and ${t-1}.`);const s=n[0];n.forEach((r,o)=>{for(let a=0;a<t;a++)P(a===e||r[a]===s[a],()=>`Error in concat${t}D: Shape of tensors[${o}] (${r}) does not match the shape of the rest (${s}) along the non-concatenated axis ${o}.`)})}function hr(n,e){const t=n[0].slice();for(let s=1;s<n.length;s++)t[e]+=n[s][e];return t}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Hs;(function(n){n[n.FIRST_DIM_SIZE=0]="FIRST_DIM_SIZE",n[n.VALUE_ROWIDS=1]="VALUE_ROWIDS",n[n.ROW_LENGTHS=2]="ROW_LENGTHS",n[n.ROW_SPLITS=3]="ROW_SPLITS",n[n.ROW_LIMITS=4]="ROW_LIMITS",n[n.ROW_STARTS=5]="ROW_STARTS"})(Hs||(Hs={}));function rw(n,e,t){let s=new Array;if(t==null&&e==null)return s;if(e==null)for(;s.length<n+t.length;)s.push(-1);else s=e.slice();if(t==null)return s;if(n+t.length!==s.length)throw new Error(`rt input.shape and shape=${e} are incompatible: rt input.rank = ${n+t.length}, but shape.rank = ${s.length}`);for(let r=1;r<t.length;++r){const o=t[r],a=s[s.length-t.length+r],l=s[a];if(o>=0)if(l>=0){if(l!==o)throw new Error(`rt input.shape and shape=${e} are incompatible: rt input.shape[${r+n}] = ${o} but shape[${r+n}] = ${l}`)}else s[a]=o}return s}function ow(n){const e={FIRST_DIM_SIZE:Hs.FIRST_DIM_SIZE,VALUE_ROWIDS:Hs.VALUE_ROWIDS,ROW_LENGTHS:Hs.ROW_LENGTHS,ROW_SPLITS:Hs.ROW_SPLITS,ROW_LIMITS:Hs.ROW_LIMITS,ROW_STARTS:Hs.ROW_STARTS},t=[];for(const s of n)if(s in e)t.push(e[s]);else break;return t}function aw(n){return n.length===0?0:n[0]===Hs.FIRST_DIM_SIZE?n.length-1:n.length}function iw(n,e){if(n==null||e==null)return;const t=n.length,s=e.length;if(t>=s)throw new Error(`defaultValue.shape=${n} and ragged tensor flatValues.shape=${e}, are incompatible: defaultValue.rank = ${t} must be less than ragged tensor input flatValues.rank = ${s})`);for(let r=0;r<Math.min(t,s-1);++r){const o=n[r],a=e[r+1];if(o>=0&&a>=0&&o!==1&&o!==a)throw new Error(`defaultValue.shape=${n}, and ragged tensor input flatValues.shape=${e} are incompatible: defaultValue.shape[${r-n.length}] = ${o} but ragged tensor input.flatValues.shape[${r-n.length}] = ${a}`)}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dg=30;function Yh(n){return n<=dg?n:op(n,Math.floor(Math.sqrt(n)))}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pg(n,e,t){const s=t*(typeof n=="number"?n:n[0]),r=e*(typeof n=="number"?n:n[1]);return[s,r]}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Hl(n,e,t,s=!0){let r=[];if(s)r=r.concat(e.slice(0)),r.push(n[0]/t),r=r.concat(n.slice(1));else{r=r.concat(n[0]);const o=e.length;for(let a=0;a<o;++a)r=r.concat([n[a+1]/e[a],e[a]]);r=r.concat(n.slice(o+1))}return r}function jl(n,e,t=!0){const s=[];if(t){s.push(e);for(let r=e+1;r<n;++r)r<=2*e?(s.push(r),s.push(r-(e+1))):s.push(r)}else{const r=[],o=[];for(let a=1;a<n;++a)a>=e*2+1||a%2===1?o.push(a):r.push(a);s.push(...r),s.push(0),s.push(...o)}return s}function ql(n,e,t,s=!0){const r=[];s?r.push(n[0]/t):r.push(n[0]*t);for(let o=1;o<n.length;++o)o<=e.length?s?r.push(e[o-1]*n[o]):r.push(n[o]/e[o-1]):r.push(n[o]);return r}function fg(n,e){const t=[0];for(let s=0;s<e;++s)t.push(n[s][0]);return t}function mg(n,e,t){const s=n.slice(0,1);for(let r=0;r<t;++r)s.push(n[r+1]-e[r][0]-e[r][1]);return s}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Zh=1.7580993408473768,Jh=1.0507009873554805;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gg=.3275911,yg=.254829592,bg=-.284496736,xg=1.421413741,wg=-1.453152027,vg=1.061405429;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _r(n,e){if(n.length!==e.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${n.length}, imag: ${e.length}.`);const t=new Float32Array(n.length*2);for(let s=0;s<t.length;s+=2)t[s]=n[s/2],t[s+1]=e[s/2];return t}function lw(n){const e=new Float32Array(n.length/2),t=new Float32Array(n.length/2);for(let s=0;s<n.length;s+=2)e[s/2]=n[s],t[s/2]=n[s+1];return{real:e,imag:t}}function uw(n){const e=Math.ceil(n.length/4),t=new Float32Array(e),s=new Float32Array(e);for(let r=0;r<n.length;r+=4)t[Math.floor(r/4)]=n[r],s[Math.floor(r/4)]=n[r+1];return{real:t,imag:s}}function cw(n){const e=Math.floor(n.length/4),t=new Float32Array(e),s=new Float32Array(e);for(let r=2;r<n.length;r+=4)t[Math.floor(r/4)]=n[r],s[Math.floor(r/4)]=n[r+1];return{real:t,imag:s}}function kg(n,e){const t=n[e*2],s=n[e*2+1];return{real:t,imag:s}}function hw(n,e,t,s){n[s*2]=e,n[s*2+1]=t}function dw(n,e){const t=new Float32Array(n/2),s=new Float32Array(n/2);for(let r=0;r<Math.ceil(n/2);r++){const o=(e?2:-2)*Math.PI*(r/n);t[r]=Math.cos(o),s[r]=Math.sin(o)}return{real:t,imag:s}}function pw(n,e,t){const s=(t?2:-2)*Math.PI*(n/e),r=Math.cos(s),o=Math.sin(s);return{real:r,imag:o}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Bd="->",JF=/->/g,kb=",",Sb="...";function Sg(n,e){n=n.replace(/\s/g,"");const t=(n.length-n.replace(JF,"").length)/Bd.length;if(t<1)throw new Error("Equations without an arrow are not supported.");if(t>1)throw new Error(`Equation must contain exactly one arrow ("${Bd}").`);const[s,r]=n.split(Bd);P(s.indexOf(Sb)===-1,()=>`The ellipsis notation ("${Sb}") is not supported yet.`);const o=s.split(kb),a=o.length;if(e!==a)throw new Error(`Expected ${a} input tensors, received ${e}`);if(a>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");const l=[];for(let d=0;d<r.length;++d){const p=r[d];if(!o.some(f=>f.indexOf(p)!==-1))throw new Error(`Output subscripts contain the label ${p} not present in the input subscripts.`);l.indexOf(p)===-1&&l.push(p)}for(let d=0;d<s.length;++d){const p=s[d];l.indexOf(p)===-1&&p!==kb&&l.push(p)}const i=new Array(o.length);for(let d=0;d<a;++d){if(new Set(o[d].split("")).size!==o[d].length)throw new Error(`Found duplicate axes in input component ${o[d]}. Support for duplicate axes in input is not implemented yet.`);i[d]=[];for(let p=0;p<o[d].length;++p)i[d].push(l.indexOf(o[d][p]))}const u=l.length,c=r.length,h=[];for(let d=c;d<u;++d)h.push(d);return{allDims:l,summedDims:h,idDims:i}}function Cg(n,e){let t=new Array(n);t.fill(-1);for(let r=0;r<e.length;++r)t[e[r]]=r;const s=[];for(let r=0;r<n;++r)t[r]===-1&&s.push(r);return t=t.filter(r=>r!==-1),{permutationIndices:t,expandDims:s}}function Ig(n,e,t){const s=new Array(n);for(let r=0;r<t.length;++r){const o=t[r].shape;for(let a=0;a<e[r].length;++a)s[e[r][a]]===void 0?s[e[r][a]]=o[a]:P(s[e[r][a]]===o[a],()=>`Expected dimension ${s[e[r][a]]} at axis ${a} of input shaped ${JSON.stringify(o)}, but got dimension ${o[a]}`)}}function Ng(n,e){const t=n,s=[];let r=0;n.length===0&&t.push(-1),r=n.length+1;for(let a=0;a<r;++a)s.push([]);const o=[];for(let a=0;a<t.length;++a){const l=t[a],i=QF(e,l);for(const u of i)o.indexOf(u)===-1&&(s[a].push(u),o.push(u))}return{path:t,steps:s}}function $g(n){return n.every((e,t)=>e===t)}function QF(n,e){const t=[];for(let s=0;s<n.length;++s)(n[s].length===0||n[s].indexOf(e)!==-1||e===-1)&&t.push(s);return t}function Tg(n,e,t=0){let s=[];if(typeof e=="number")P(n.shape[t]%e===0,()=>"Number of splits must evenly divide the axis."),s=new Array(e).fill(n.shape[t]/e);else{const r=e.reduce((a,l)=>(l===-1&&(a+=1),a),0);P(r<=1,()=>"There should be only one negative value in split array.");const o=e.indexOf(-1);if(o!==-1){const a=e.reduce((l,i)=>i>0?l+i:l);e[o]=n.shape[t]-a}P(n.shape[t]===e.reduce((a,l)=>a+l),()=>"The sum of sizes must match the size of the axis dimension."),s=e}return s}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fw(n){return`Received SparseTensor with denseShape[0] = 0 but
  indices.shape[0] = ${n}`}function mw(n,e){return`indices(${n}, 0) is invalid: ${e} < 0`}function gw(n,e,t){return`indices(${n}, 0) is invalid: ${e} >= ${t}`}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yw(n,e){return`only one output dimension may be -1, not both ${n} and ${e}`}function bw(n,e){return`size ${n} must be non-negative, not ${e}`}function xw(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function ww(n,e){const t=me(n),s=me(e);return`Input to reshape is a SparseTensor with ${t}
  dense values, but the requested shape requires a multiple of ${s}. inputShape=${n} outputShape= ${e}`}function vw(n,e){const t=me(n),s=me(e);return`Input to reshape is a tensor with ${t} dense values, but the requested shape has ${s}. inputShape=${n} outputShape=${e}`}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ip(){return"segment ids must be >= 0"}function kw(){return"segment ids are not increasing"}function Sw(n,e){return`Segment id ${n} out of range [0, ${e}), possibly because segmentIds input is not sorted.`}function Cw(n,e,t){return`Bad: indices[${n}] == ${e} out of range [0, ${t})`}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Iw(n,e){let t=!1,s;for(n<=dg?(s=n,t=!0):s=op(n,Math.floor(Math.sqrt(n)));!t;)s>e||s===n?t=!0:s=op(n,s+1);return s}function Nw(n,e,t){const s=[],r=n.length;for(let o=0;o<r;o++)o!==e?s.push(n[o]):s.push(t);return s}function _g(n,e,t,s){const r=e.shape.length,o=n.shape.length;if(s!==0&&(s<-r||s>r))throw new Error(`Expect batchDims in the range of [-${r}, ${r}], but got ${s}`);if(s<0&&(s+=r),s>o)throw new Error(`batchDims (${s}) must be less than rank(x) (
    ${o}).`);if(t<s)throw new Error(`batchDims (${s}) must be less than or equal to axis (${t}).`);for(let h=0;h<s;++h)if(n.shape[h]!==e.shape[h])throw new Error(`x.shape[${h}]: ${n.shape[h]} should be equal to indices.shape[${h}]: ${e.shape[h]}.`);const a=n.shape[t],l=[];let i=1,u=1,c=1;for(let h=0;h<s;++h)l.push(n.shape[h]),i*=n.shape[h];for(let h=s;h<t;h++)l.push(n.shape[h]),u*=n.shape[h];for(let h=s;h<r;h++)l.push(e.shape[h]);for(let h=t+1;h<o;h++)l.push(n.shape[h]),c*=n.shape[h];return{batchSize:i,sliceSize:c,outerSize:u,dimSize:a,outputShape:l}}const eO=Object.freeze(Object.defineProperty({__proto__:null,collectGatherOpShapeInfo:_g,computeOutShape:Nw,segOpComputeOptimalWindowSize:Iw},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Er(n){try{return n.map(e=>qr(e))}catch(e){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${e}`)}}function $w(n){return n.map(e=>Gr(e))}const tO=Object.freeze(Object.defineProperty({__proto__:null,ERF_A1:yg,ERF_A2:bg,ERF_A3:xg,ERF_A4:wg,ERF_A5:vg,ERF_P:gg,PARALLELIZE_THRESHOLD:dg,get RowPartitionType(){return Hs},SELU_SCALE:Jh,SELU_SCALEALPHA:Zh,applyActivation:qh,assertAndGetBroadcastShape:st,assertAxesAreInnerMostDims:Nn,assertParamsConsistent:hg,assignToTypedArray:hw,axesAreInnerMostDims:vm,calculateShapes:ta,checkEinsumDimSizes:Ig,checkPadOnDimRoundingMode:Vn,combineLocations:s1,combineRaggedTensorToTensorShapes:rw,complexWithEvenIndex:uw,complexWithOddIndex:cw,computeConv2DInfo:yn,computeConv3DInfo:io,computeDefaultPad:fm,computeDilation2DInfo:zl,computeOptimalWindowSize:Yh,computeOutAndReduceShapes:bn,computeOutShape:hr,computePool2DInfo:zs,computePool3DInfo:Ar,convertConv2DDataFormat:Dr,decodeEinsumEquation:Sg,eitherStridesOrDilationsAreOne:In,expandShapeToKeepDim:Jt,exponent:pw,exponents:dw,fromStringArrayToUint8:$w,fromUint8ToStringArray:Er,getAxesPermutation:jt,getBroadcastDims:Ra,getComplexWithIndex:kg,getEinsumComputePath:Ng,getEinsumPermutation:Cg,getFusedBiasGradient:jh,getFusedDyActivation:Hh,getImageCenter:pg,getInnerMostAxes:Qt,getPermuted:jl,getRaggedRank:aw,getReductionAxes:hn,getReshaped:Hl,getReshapedPermuted:ql,getRowPartitionTypesHelper:ow,getSliceBeginCoords:fg,getSliceSize:mg,getSparseFillEmptyRowsIndicesDenseShapeMismatch:fw,getSparseFillEmptyRowsNegativeIndexErrorMessage:mw,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:gw,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:xw,getSparseReshapeInputOutputMismatchErrorMessage:vw,getSparseReshapeInputOutputMultipleErrorMessage:ww,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:yw,getSparseReshapeNegativeOutputDimErrorMessage:bw,getSparseSegmentReductionIndicesOutOfRangeErrorMessage:Cw,getSparseSegmentReductionNegativeSegmentIdsErrorMessage:Ip,getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:kw,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:Sw,getUndoAxesPermutation:lo,isIdentityPermutation:$g,log:jN,mergeRealAndImagArrays:_r,prepareAndValidate:og,prepareSplitSize:Tg,segment_util:eO,shouldFuse:Kh,slice_util:XF,splitRealAndImagArrays:lw,stridesOrDilationsArePositive:Bo,tupleValuesAreOne:Yr,upcastType:rs,validateDefaultValueShape:iw,validateInput:Hm,validateUpdateShape:S1,warn:ms},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */$F();/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nO=de();nO.registerFlag("KEEP_INTERMEDIATE_TENSORS",()=>!1,n=>{n&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */var Jn;(function(n){n[n.DT_INVALID=0]="DT_INVALID",n[n.DT_FLOAT=1]="DT_FLOAT",n[n.DT_DOUBLE=2]="DT_DOUBLE",n[n.DT_INT32=3]="DT_INT32",n[n.DT_UINT8=4]="DT_UINT8",n[n.DT_INT16=5]="DT_INT16",n[n.DT_INT8=6]="DT_INT8",n[n.DT_STRING=7]="DT_STRING",n[n.DT_COMPLEX64=8]="DT_COMPLEX64",n[n.DT_INT64=9]="DT_INT64",n[n.DT_BOOL=10]="DT_BOOL",n[n.DT_QINT8=11]="DT_QINT8",n[n.DT_QUINT8=12]="DT_QUINT8",n[n.DT_QINT32=13]="DT_QINT32",n[n.DT_BFLOAT16=14]="DT_BFLOAT16",n[n.DT_QINT16=15]="DT_QINT16",n[n.DT_QUINT16=16]="DT_QUINT16",n[n.DT_UINT16=17]="DT_UINT16",n[n.DT_COMPLEX128=18]="DT_COMPLEX128",n[n.DT_HALF=19]="DT_HALF",n[n.DT_RESOURCE=20]="DT_RESOURCE",n[n.DT_VARIANT=21]="DT_VARIANT",n[n.DT_UINT32=22]="DT_UINT32",n[n.DT_UINT64=23]="DT_UINT64",n[n.DT_FLOAT_REF=101]="DT_FLOAT_REF",n[n.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",n[n.DT_INT32_REF=103]="DT_INT32_REF",n[n.DT_UINT8_REF=104]="DT_UINT8_REF",n[n.DT_INT16_REF=105]="DT_INT16_REF",n[n.DT_INT8_REF=106]="DT_INT8_REF",n[n.DT_STRING_REF=107]="DT_STRING_REF",n[n.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",n[n.DT_INT64_REF=109]="DT_INT64_REF",n[n.DT_BOOL_REF=110]="DT_BOOL_REF",n[n.DT_QINT8_REF=111]="DT_QINT8_REF",n[n.DT_QUINT8_REF=112]="DT_QUINT8_REF",n[n.DT_QINT32_REF=113]="DT_QINT32_REF",n[n.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",n[n.DT_QINT16_REF=115]="DT_QINT16_REF",n[n.DT_QUINT16_REF=116]="DT_QUINT16_REF",n[n.DT_UINT16_REF=117]="DT_UINT16_REF",n[n.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",n[n.DT_HALF_REF=119]="DT_HALF_REF",n[n.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",n[n.DT_VARIANT_REF=121]="DT_VARIANT_REF",n[n.DT_UINT32_REF=122]="DT_UINT32_REF",n[n.DT_UINT64_REF=123]="DT_UINT64_REF"})(Jn||(Jn={}));var Cb;(function(n){(function(e){e[e.LEGACY=0]="LEGACY",e[e.V1=1]="V1",e[e.V2=2]="V2"})(n.CheckpointFormatVersion||(n.CheckpointFormatVersion={}))})(Cb||(Cb={}));/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Tw={};function Eg(n,e){const t={tfOpName:n,category:"custom",inputs:[],attrs:[],customExecutor:e};Tw[n]=t}function _w(n){return Tw[n]}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _(n,e,t,s,r){const o=e.inputParams[n];if(o&&o.inputIndexStart!==void 0){const l=o.inputIndexStart,i=o.inputIndexEnd===0?void 0:o.inputIndexEnd===void 0?l+1:o.inputIndexEnd,u=l<0?e.inputNames.length+l:l;if(o.type==="tensor")return vn(e.inputNames[u],t,s,r);if(o.type==="tensors"){const d=e.inputs.slice(l,i);return e.inputNames.slice(l,i).filter((f,g)=>{var y;return((y=d[g])===null||y===void 0?void 0:y.op)!=="NoOp"}).map(f=>vn(f,t,s,r))}const c=vn(e.inputNames[u],t,s,r),h=c.dataSync();return o.type==="number"?h[0]:Rs(c.shape,h)}const a=e.attrParams[n];return a&&a.value}function vn(n,e,t,s){const[r,o]=Qn(n,t);if(s!=null){const l=s.getHashTableHandleByName(r);if(l!=null)return l}const a=t.currentContextIds.find(l=>!!e[sc(r,l)]);return a!==void 0?e[sc(r,a)][o]:void 0}function Ib(n,e,t){return e[sc(n,t.currentContextId)]}function vr(n,e){const[t,s,r]=Qn(n,e);return[sc(t,e&&e.currentContextId),s,r]}function sc(n,e){return e?`${n}-${e}`:n}function Qn(n,e){if(n==="")return["",0,void 0];const t=e!=null&&e.parseNodeNameCache!=null;if(t){const o=e.parseNodeNameCache.get(n);if(o!=null)return o}const s=n.split(":");let r;if(s.length===1)r=[n,0,void 0];else{const o=s[0],a=s.length===3?s[1]:void 0,l=Number(s[s.length-1]);r=[o,l,a]}return t&&e.parseNodeNameCache.set(n,r),r}function Gu(n,e,t){let s=_("pad",n,e,t);if(s==="explicit"){s=_("explicitPaddings",n,e,t);const r=[[0,0],[0,0],[0,0],[0,0]];for(let o=0;o<4;o++)r[o][0]=s[o*2],r[o][1]=s[o*2+1];return r}return s}function kr(n){return n.kept?n:Ir(n)}/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sO=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],rO=Object.freeze(Object.defineProperty({__proto__:null,json:sO},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oO=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsFinite",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsInf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],aO=Object.freeze(Object.defineProperty({__proto__:null,json:oO},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iO=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcatV2",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListLength",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}]},{tfOpName:"TensorListResize",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"size",type:"number"}]}],lO=Object.freeze(Object.defineProperty({__proto__:null,json:iO},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uO=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}],cO=Object.freeze(Object.defineProperty({__proto__:null,json:uO},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hO=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomStandardNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniformInt",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number"},{tfName:"maxval",name:"maxval",type:"number"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}],dO=Object.freeze(Object.defineProperty({__proto__:null,json:hO},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pO=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],fO=Object.freeze(Object.defineProperty({__proto__:null,json:pO},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mO=[{tfOpName:"LowerBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"UpperBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}],gO=Object.freeze(Object.defineProperty({__proto__:null,json:mO},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yO=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}],bO=Object.freeze(Object.defineProperty({__proto__:null,json:yO},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xO=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"InitializeTable",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]},{tfOpName:"InitializeTableV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]}],wO=Object.freeze(Object.defineProperty({__proto__:null,json:xO},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vO=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]},{tfOpName:"ImageProjectiveTransformV3",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"transforms",type:"tensor"},{start:2,name:"outputShape",type:"number[]"},{start:3,name:"fillValue",type:"number"}],attrs:[{tfName:"interpolation",name:"interpolation",type:"string"},{tfName:"fill_mode",name:"fillMode",type:"string"}]}],kO=Object.freeze(Object.defineProperty({__proto__:null,json:vO},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const SO=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BitwiseAnd",category:"logical",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}]}],CO=Object.freeze(Object.defineProperty({__proto__:null,json:SO},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const IO=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"MatrixBandPart",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"numLower",type:"tensor"},{start:1,name:"numUpper",type:"tensor"}]}],NO=Object.freeze(Object.defineProperty({__proto__:null,json:IO},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $O=[{tfOpName:"EuclideanNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",defaultValue:!1}]},{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]}],TO=Object.freeze(Object.defineProperty({__proto__:null,json:$O},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _O=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cumprod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}],EO=Object.freeze(Object.defineProperty({__proto__:null,json:_O},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const AO=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]},{tfOpName:"TensorScatterUpdate",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"values",type:"tensor"}]}],DO=Object.freeze(Object.defineProperty({__proto__:null,json:AO},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const RO=[{tfOpName:"SparseFillEmptyRows",category:"sparse",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"denseShape",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}]},{tfOpName:"SparseReshape",category:"sparse",inputs:[{start:0,name:"inputIndices",type:"tensor"},{start:1,name:"inputShape",type:"tensor"},{start:2,name:"newShape",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SparseSegmentMean",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]},{tfOpName:"SparseSegmentSum",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]}],FO=Object.freeze(Object.defineProperty({__proto__:null,json:RO},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const OO=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}],LO=Object.freeze(Object.defineProperty({__proto__:null,json:OO},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const PO=[{tfOpName:"StaticRegexReplace",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"pattern",name:"pattern",type:"string"},{tfName:"rewrite",name:"rewrite",type:"string"},{tfName:"replace_global",name:"replaceGlobal",type:"bool"}]},{tfOpName:"StringNGrams",category:"string",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"dataSplits",type:"tensor"}],attrs:[{tfName:"separator",name:"separator",type:"string"},{tfName:"ngram_widths",name:"nGramWidths",type:"number[]"},{tfName:"left_pad",name:"leftPad",type:"string"},{tfName:"right_pad",name:"rightPad",type:"string"},{tfName:"pad_width",name:"padWidth",type:"number"},{tfName:"preserve_short_sequences",name:"preserveShortSequences",type:"bool"}],outputs:["ngrams","ngrams_splits"]},{tfOpName:"StringSplit",category:"string",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"delimiter",type:"tensor"}],attrs:[{tfName:"skip_empty",name:"skipEmpty",type:"bool"}],outputs:["indices","values","shape"]},{tfOpName:"StringToHashBucketFast",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"num_buckets",name:"numBuckets",type:"number"}]}],zO=Object.freeze(Object.defineProperty({__proto__:null,json:PO},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const BO=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"EnsureShape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]},{tfOpName:"BroadcastArgs",category:"transformation",inputs:[{start:0,name:"s0",type:"tensor"},{start:1,name:"s1",type:"tensor"}],attrs:[]}],MO=Object.freeze(Object.defineProperty({__proto__:null,json:BO},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Nb{static get Instance(){return this._instance||(this._instance=new this)}constructor(){const e=[rO,aO,lO,cO,dO,fO,gO,bO,wO,kO,CO,NO,TO,EO,DO,FO,LO,zO,MO],t=[].concat(...e.map(s=>s.json));this.opMappers=t.reduce((s,r)=>(s[r.tfOpName]=r,s),{})}transformGraph(e,t={}){const s=e.node,r=[],o=[],a=[],l=s.reduce((g,y)=>(g[y.name]=this.mapNode(y),y.op.startsWith("Placeholder")?r.push(g[y.name]):y.op==="Const"?o.push(g[y.name]):(y.input==null||y.input.length===0)&&a.push(g[y.name]),g),{});let i=[];const u=[];let c={},h={};t!=null&&(c=this.mapSignatureEntries(t.inputs),h=this.mapSignatureEntries(t.outputs));const d=Object.keys(l);d.forEach(g=>{const y=l[g];y.inputNames.forEach((x,w)=>{const[v,,k]=vr(x),C=l[v];if(C.outputs!=null){const I=C.outputs.indexOf(k);if(I!==-1){const N=`${v}:${I}`;y.inputNames[w]=N}}y.inputs.push(C),C.children.push(y)})}),Object.keys(h).length===0?d.forEach(g=>{const y=l[g];y.children.length===0&&u.push(y)}):Object.keys(h).forEach(g=>{const[y]=vr(g),x=l[y];x!=null&&(x.signatureKey=h[g],u.push(x))}),Object.keys(c).length>0?Object.keys(c).forEach(g=>{const[y]=vr(g),x=l[y];x&&(x.signatureKey=c[g],i.push(x))}):i=r;let p={};e.library!=null&&e.library.function!=null&&(p=e.library.function.reduce((g,y)=>(g[y.signature.name]=this.mapFunction(y),g),{}));const f={nodes:l,inputs:i,outputs:u,weights:o,placeholders:r,signature:t,functions:p};return a.length>0&&(f.initNodes=a),f}mapSignatureEntries(e){return Object.keys(e||{}).reduce((t,s)=>(t[e[s].name]=s,t),{})}mapNode(e){const t=_w(e.op)||this.opMappers[e.op]||{};e.attr==null&&(e.attr={});const s={name:e.name,op:e.op,category:t.category,inputNames:(e.input||[]).map(r=>r.startsWith("^")?r.slice(1):r),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:e.attr,outputs:t.outputs};return t.inputs!=null&&(s.inputParams=t.inputs.reduce((r,o)=>(r[o.name]={type:o.type,inputIndexStart:o.start,inputIndexEnd:o.end},r),{})),t.attrs!=null&&(s.attrParams=t.attrs.reduce((r,o)=>{const a=o.type;let l;switch(o.type){case"string":l=Np(e.attr,o.tfName,o.defaultValue),l===void 0&&o.tfDeprecatedName&&(l=Np(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"string[]":l=Rp(e.attr,o.tfName,o.defaultValue),l===void 0&&o.tfDeprecatedName&&(l=Rp(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"number":l=Tp(e.attr,o.tfName,o.defaultValue||0),l===void 0&&o.tfDeprecatedName&&(l=Tp(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"number[]":l=Dp(e.attr,o.tfName,o.defaultValue),l===void 0&&o.tfDeprecatedName&&(l=Dp(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"bool":l=$p(e.attr,o.tfName,o.defaultValue),l===void 0&&o.tfDeprecatedName&&(l=$p(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"bool[]":l=Op(e.attr,o.tfName,o.defaultValue),l===void 0&&o.tfDeprecatedName&&(l=Op(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"shape":l=Ap(e.attr,o.tfName,o.defaultValue),l===void 0&&o.tfDeprecatedName&&(l=Ap(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"shape[]":l=Fp(e.attr,o.tfName,o.defaultValue),l===void 0&&o.tfDeprecatedName&&(l=Fp(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"dtype":l=_p(e.attr,o.tfName,o.defaultValue),l===void 0&&o.tfDeprecatedName&&(l=_p(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"dtype[]":l=Ep(e.attr,o.tfName,o.defaultValue),l===void 0&&o.tfDeprecatedName&&(l=Ep(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"func":l=$b(e.attr,o.tfName,o.defaultValue),l===void 0&&o.tfDeprecatedName&&(l=$b(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${o.type} for op: ${e.op}`)}return r[o.name]={value:l,type:a},r},{})),s}mapFunction(e){const t=e.nodeDef,s=[],r=[];let o={};t!=null&&(o=t.reduce((h,d)=>(h[d.name]=this.mapNode(d),d.op==="Const"&&r.push(h[d.name]),h),{}));const a=[],l=[];e.signature.inputArg.forEach(h=>{const[d]=vr(h.name),p={name:d,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:Ag(h.type),type:"dtype"}},children:[]};p.signatureKey=h.name,a.push(p),o[d]=p}),Object.keys(o).forEach(h=>{const d=o[h];d.inputNames.forEach((p,f)=>{const[g,,y]=vr(p),x=o[g];if(x.outputs!=null){const w=x.outputs.indexOf(y);if(w!==-1){const v=`${g}:${w}`;d.inputNames[f]=v}}d.inputs.push(x),x.children.push(d)})});const u=e.ret;e.signature.outputArg.forEach(h=>{const[d,p]=vr(u[h.name]),f=o[d];f!=null&&(f.defaultOutput=p,l.push(f))});const c=this.mapArgsToSignature(e);return{nodes:o,inputs:a,outputs:l,weights:r,placeholders:s,signature:c}}mapArgsToSignature(e){return{methodName:e.signature.name,inputs:e.signature.inputArg.reduce((t,s)=>(t[s.name]=this.mapArgToTensorInfo(s),t),{}),outputs:e.signature.outputArg.reduce((t,s)=>(t[s.name]=this.mapArgToTensorInfo(s,e.ret),t),{})}}mapArgToTensorInfo(e,t){let s=e.name;return t!=null&&(s=t[s]),{name:s,dtype:e.type}}}function VO(n){const e=de().global;if(typeof e.atob<"u")return e.atob(n);if(typeof Buffer<"u")return new Buffer(n,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}function Ew(n,e){const t=Array.isArray(n)?String.fromCharCode.apply(null,n):VO(n);return e?t:t.toLowerCase()}function Np(n,e,t,s=!1){const r=n[e];return r!=null?Ew(r.s,s):t}function $p(n,e,t){const s=n[e];return s?s.b:t}function Tp(n,e,t){const s=n[e]||{},r=s.i!=null?s.i:s.f!=null?s.f:t;return typeof r=="number"?r:parseInt(r,10)}function Ag(n){switch(typeof n=="string"&&(n=Jn[n]),n){case Jn.DT_FLOAT:case Jn.DT_HALF:return"float32";case Jn.DT_INT32:case Jn.DT_INT64:case Jn.DT_INT8:case Jn.DT_UINT8:return"int32";case Jn.DT_BOOL:return"bool";case Jn.DT_DOUBLE:return"float32";case Jn.DT_STRING:return"string";case Jn.DT_COMPLEX64:case Jn.DT_COMPLEX128:return"complex64";default:return null}}function $b(n,e,t){const s=n[e];return s&&s.func?s.func.name:t}function _p(n,e,t){const s=n[e];return s&&s.type?Ag(s.type):t}function Ep(n,e,t){const s=n[e];return s&&s.list&&s.list.type?s.list.type.map(r=>Ag(r)):t}function Aw(n){if(!n.unknownRank)return n.dim!=null?n.dim.map(e=>typeof e.size=="number"?e.size:parseInt(e.size,10)):[]}function Ap(n,e,t){const s=n[e];return s&&s.shape?Aw(s.shape):t}function Dp(n,e,t){const s=n[e];return s?((s.list.f&&s.list.f.length?s.list.f:s.list.i)||[]).map(r=>typeof r=="number"?r:parseInt(r,10)):t}function Rp(n,e,t,s=!1){const r=n[e];return r&&r.list&&r.list.s?r.list.s.map(o=>Ew(o,s)):t}function Fp(n,e,t){const s=n[e];return s&&s.list&&s.list.shape?s.list.shape.map(r=>Aw(r)):t}function Op(n,e,t){const s=n[e];return s&&s.list&&s.list.b?s.list.b:t}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class WO{constructor(e,t,s){this.node=e,this.tensorMap=t,this.context=s,this.inputs=[],this.attrs={},this.inputs=e.inputNames.map(r=>this.getInput(r)),e.rawAttrs!=null&&(this.attrs=Object.keys(e.rawAttrs).reduce((r,o)=>(r[o]=this.getAttr(o),r),{}))}getInput(e){return vn(e,this.tensorMap,this.context)}getAttr(e,t){const s=this.node.rawAttrs[e];if(s.tensor!=null)return vn(e,this.tensorMap,this.context);if(s.i!=null||s.f!=null)return Tp(this.node.rawAttrs,e,t);if(s.s!=null)return Np(this.node.rawAttrs,e,t);if(s.b!=null)return $p(this.node.rawAttrs,e,t);if(s.shape!=null)return Ap(this.node.rawAttrs,e,t);if(s.type!=null)return _p(this.node.rawAttrs,e,t);if(s.list!=null){if(s.list.i!=null||s.list.f!=null)return Dp(this.node.rawAttrs,e,t);if(s.list.s!=null)return Rp(this.node.rawAttrs,e,t);if(s.list.shape!=null)return Fp(this.node.rawAttrs,e,t);if(s.list.b!=null)return Op(this.node.rawAttrs,e,t);if(s.list.type!=null)return Ep(this.node.rawAttrs,e,t)}return t}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $n=Object.freeze(Object.defineProperty({__proto__:null,OP_SCOPE_SUFFIX:fx,abs:sn,acos:Dx,acosh:Rx,add:Ne,addN:iT,all:pm,any:tc,argMax:Da,argMin:Fx,asin:Ox,asinh:Lx,atan:Px,atan2:zx,atanh:Bx,avgPool:$h,avgPool3d:Mx,basicLSTMCell:ET,batchNorm:Bl,batchNorm2d:Vx,batchNorm3d:Wx,batchNorm4d:Ux,batchToSpaceND:Th,bincount:Gx,bitwiseAnd:BT,booleanMaskAsync:kD,broadcastArgs:VT,broadcastTo:Ia,buffer:lt,cast:Pe,ceil:Hx,clipByValue:os,clone:Ir,complex:Kr,concat:nn,concat1d:jx,concat2d:qx,concat3d:Kx,concat4d:Xx,conv1d:mm,conv2d:Zr,conv2dTranspose:ym,conv3d:Yx,conv3dTranspose:Jx,cos:_h,cosh:bm,cosineWindow:Xm,cumprod:nc,cumsum:xm,denseBincount:vp,depthToSpace:Qx,depthwiseConv2d:Ml,diag:c_,dilation2d:e1,div:Ke,divNoNan:t1,dot:n1,dropout:T1,einsum:xa,elu:Vl,enclosingPowerOfTwo:_1,ensureShape:w_,equal:qs,erf:wm,euclideanNorm:o1,exp:as,expandDims:zn,expm1:a1,eye:km,fft:Uh,fill:ja,floor:Ul,floorDiv:dm,fused:GD,gather:Gl,gatherND:DD,greater:ds,greaterEqual:uo,ifft:Di,imag:Eh,image:ir,inTopKAsync:LD,irfft:Um,isFinite:i1,isInf:l1,isNaN:u1,leakyRelu:Ah,less:_i,lessEqual:Zo,linalg:P1,linspace:j_,localResponseNormalization:c1,log:ys,log1p:Dh,logSigmoid:h1,logSoftmax:Sm,logSumExp:Rh,logicalAnd:fr,logicalNot:Fh,logicalOr:Cm,logicalXor:d1,losses:vF,lowerBound:lE,matMul:dt,max:Fs,maxPool:Oh,maxPool3d:p1,maxPoolWithArgmax:dE,maximum:Rr,mean:Kt,meshgrid:mE,min:Ti,minimum:Vo,mirrorPad:f1,mod:m1,moments:Lh,movingAverage:ID,mul:J,multiRNNCell:vE,multinomial:SE,neg:Pt,norm:Wl,notEqual:Fa,oneHot:Nm,ones:ns,onesLike:bs,op:Y,outerProduct:TE,pad:co,pad1d:AE,pad2d:RE,pad3d:OE,pad4d:PE,pool:g1,pow:$r,prelu:zh,print:Ax,prod:y1,raggedGather:HE,raggedRange:qE,raggedTensorToTensor:XE,rand:ZE,randomGamma:yA,randomNormal:Fm,randomStandardNormal:wA,randomUniform:Qo,randomUniformInt:SA,range:Oa,real:Ei,reciprocal:x1,relu:yr,relu6:Om,reshape:te,reverse:Ls,reverse1d:EA,reverse2d:DA,reverse3d:FA,reverse4d:LA,rfft:Gh,round:Lm,rsqrt:Pm,scalar:Ye,scatterND:$D,searchSorted:Im,selu:zm,separableConv2d:Bm,setdiff1dAsync:WA,sigmoid:cr,sign:w1,signal:wF,sin:Mm,sinh:Vm,slice:mt,slice1d:Mh,slice2d:Wm,slice3d:Vh,slice4d:Ai,softmax:Wh,softplus:qa,spaceToBatchND:Ph,sparse:kF,sparseToDense:ED,spectral:xF,split:ss,sqrt:Cn,square:_t,squaredDifference:Gm,squeeze:ea,stack:is,step:Ka,stridedSlice:v1,string:SF,sub:Ve,sum:Ue,tan:k1,tanh:Mo,tensor:Yt,tensor1d:En,tensor2d:Na,tensor3d:lD,tensor4d:uD,tensor5d:cD,tensor6d:hD,tensorScatterUpdate:pD,tile:Es,topk:C1,transpose:gt,truncatedNormal:jm,unique:I1,unsortedSegmentSum:qm,unstack:Ps,upperBound:xD,variable:N1,where:An,whereAsync:$1,zeros:rn,zerosLike:yt},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const UO=(n,e,t,s=$n)=>{switch(n.op){case"BiasAdd":case"AddV2":case"Add":return[s.add(_("a",n,e,t),_("b",n,e,t))];case"AddN":return[s.addN(_("tensors",n,e,t))];case"FloorMod":case"Mod":return[s.mod(_("a",n,e,t),_("b",n,e,t))];case"Mul":return[s.mul(_("a",n,e,t),_("b",n,e,t))];case"RealDiv":case"Div":return[s.div(_("a",n,e,t),_("b",n,e,t))];case"DivNoNan":return[s.divNoNan(_("a",n,e,t),_("b",n,e,t))];case"FloorDiv":return[s.floorDiv(_("a",n,e,t),_("b",n,e,t))];case"Sub":return[s.sub(_("a",n,e,t),_("b",n,e,t))];case"Minimum":return[s.minimum(_("a",n,e,t),_("b",n,e,t))];case"Maximum":return[s.maximum(_("a",n,e,t),_("b",n,e,t))];case"Pow":return[s.pow(_("a",n,e,t),_("b",n,e,t))];case"SquaredDifference":return[s.squaredDifference(_("a",n,e,t),_("b",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const GO=(n,e,t,s=$n)=>{switch(n.op){case"Abs":case"ComplexAbs":return[s.abs(_("x",n,e,t))];case"Acos":return[s.acos(_("x",n,e,t))];case"Acosh":return[s.acosh(_("x",n,e,t))];case"Asin":return[s.asin(_("x",n,e,t))];case"Asinh":return[s.asinh(_("x",n,e,t))];case"Atan":return[s.atan(_("x",n,e,t))];case"Atan2":return[s.atan2(_("x",n,e,t),_("y",n,e,t))];case"Atanh":return[s.atanh(_("x",n,e,t))];case"Ceil":return[s.ceil(_("x",n,e,t))];case"Complex":return[s.complex(_("real",n,e,t),_("imag",n,e,t))];case"Cos":return[s.cos(_("x",n,e,t))];case"Cosh":return[s.cosh(_("x",n,e,t))];case"Elu":return[s.elu(_("x",n,e,t))];case"Erf":return[s.erf(_("x",n,e,t))];case"Exp":return[s.exp(_("x",n,e,t))];case"Expm1":return[s.expm1(_("x",n,e,t))];case"Floor":return[s.floor(_("x",n,e,t))];case"Log":return[s.log(_("x",n,e,t))];case"Log1p":return[s.log1p(_("x",n,e,t))];case"Imag":return[s.imag(_("x",n,e,t))];case"Neg":return[s.neg(_("x",n,e,t))];case"Reciprocal":return[s.reciprocal(_("x",n,e,t))];case"Real":return[s.real(_("x",n,e,t))];case"Relu":return[s.relu(_("x",n,e,t))];case"Round":return[s.round(_("x",n,e,t))];case"Selu":return[s.selu(_("x",n,e,t))];case"Sigmoid":return[s.sigmoid(_("x",n,e,t))];case"Sin":return[s.sin(_("x",n,e,t))];case"Sign":return[s.sign(_("x",n,e,t))];case"Sinh":return[s.sinh(_("x",n,e,t))];case"Softplus":return[s.softplus(_("x",n,e,t))];case"Sqrt":return[s.sqrt(_("x",n,e,t))];case"Square":return[s.square(_("x",n,e,t))];case"Tanh":return[s.tanh(_("x",n,e,t))];case"Tan":return[s.tan(_("x",n,e,t))];case"ClipByValue":return[s.clipByValue(_("x",n,e,t),_("clipValueMin",n,e,t),_("clipValueMax",n,e,t))];case"Relu6":return[s.relu6(_("x",n,e,t))];case"Rsqrt":return[s.rsqrt(vn(n.inputNames[0],e,t))];case"LeakyRelu":return[s.leakyRelu(_("x",n,e,t),_("alpha",n,e,t))];case"Prelu":return[s.prelu(_("x",n,e,t),_("alpha",n,e,t))];case"IsNan":return[s.isNaN(vn(n.inputNames[0],e,t))];case"IsInf":return[s.isInf(vn(n.inputNames[0],e,t))];case"IsFinite":return[s.isFinite(vn(n.inputNames[0],e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Is(n,e,t=""){if(!(typeof n=="number"||typeof e=="number")){P(n.length===e.length,()=>t+` Shapes ${n} and ${e} must match`);for(let s=0;s<n.length;s++){const r=n[s],o=e[s];P(r<0||o<0||r===o,()=>t+` Shapes ${n} and ${e} must match`)}}}function Tb(n){return!(typeof n=="number"||n.some(e=>e<0))}function gi(n,e,t){let s=Lp(n,t);const r=!Tb(s);if(r&&e.length===0)throw new Error(`Tried to calculate elements of an empty list with non-fully-defined elementShape: ${s}`);if(r&&e.forEach(o=>{s=Lp(o.shape,s)}),!Tb(s))throw new Error(`Non-fully-defined elementShape: ${s}`);return s}function Lp(n,e){if(typeof n=="number")return e;if(typeof e=="number")return n;if(n.length!==e.length)throw new Error(`Incompatible ranks during merge: ${n} vs. ${e}`);const t=[];for(let s=0;s<n.length;++s){const r=n[s],o=e[s];if(r>=0&&o>=0&&r!==o)throw new Error(`Incompatible shape during merge: ${n} vs. ${e}`);t[s]=r>=0?r:o}return t}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class HO{constructor(e,t,s,r,o,a,l){this.name=e,this.dtype=t,this.maxSize=s,this.elementShape=r,this.identicalElementShapes=o,this.dynamicSize=a,this.clearAfterRead=l,this.tensors=[],this.closed_=!1,this.idTensor=Ye(0),mn(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(e){this.tensors.forEach(t=>{(e==null||!e.has(t.tensor.id))&&t.tensor.dispose()}),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||e>=this.size())throw new Error(`Tried to read from index ${e}, but array size is: ${this.size()}`);const t=this.tensors[e];if(t.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${e} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(t.cleared=!0),t.read=!0,t.tensor}readMany(e){return e.map(t=>this.read(t))}write(e,t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||!this.dynamicSize&&e>=this.maxSize)throw new Error(`Tried to write to index ${e}, but array is not resizeable and size is: ${this.maxSize}`);const s=this.tensors[e]||{};if(t.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e},
          because the value dtype is ${t.dtype}, but TensorArray dtype is ${this.dtype}.`);if(this.size()===0&&(this.elementShape==null||this.elementShape.length===0)&&(this.elementShape=t.shape),Is(this.elementShape,t.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${e}.`),s.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been read.`);if(s.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been written.`);s.tensor=t,mn(t),s.written=!0,this.tensors[e]=s}writeMany(e,t){if(e.length!==t.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${e.length} is not the same as tensors size: ${t.length}.`);e.forEach((s,r)=>this.write(s,t[r]))}gather(e,t){if(t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${t}`);if(e)e=e.slice(0,this.size());else{e=[];for(let r=0;r<this.size();r++)e.push(r)}if(e.length===0)return Yt([],[0].concat(this.elementShape));const s=this.readMany(e);return Is(this.elementShape,s[0].shape,"TensorArray shape mismatch: "),is(s,0)}concat(e){if(e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${e}`);if(this.size()===0)return Yt([],[0].concat(this.elementShape));const t=[];for(let r=0;r<this.size();r++)t.push(r);const s=this.readMany(t);return Is(this.elementShape,s[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${s[0].shape})`),nn(s,0)}scatter(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);if(e.length!==t.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${t.shape[0]}`);const s=Math.max(...e);if(!this.dynamicSize&&s>=this.maxSize)throw new Error(`Max index must be < array size (${s}  vs. ${this.maxSize})`);this.writeMany(e,Ps(t,0))}split(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);let s=0;const r=e.map(i=>(s+=i,s));if(s!==t.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${s}, and tensor's shape is: ${t.shape}`);if(!this.dynamicSize&&e.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${e.length}), and the TensorArray is not marked as dynamically resizeable`);const o=s===0?0:t.size/s,a=[];ce(()=>{t=te(t,[1,s,o]);for(let i=0;i<e.length;++i){const c=[0,i===0?0:r[i-1],0],h=[1,e[i],o];a[i]=te(mt(t,c,h),this.elementShape)}return a});const l=[];for(let i=0;i<e.length;i++)l[i]=i;this.writeMany(l,a)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Uo{get id(){return this.idTensor.id}constructor(e,t,s,r=-1){this.tensors=e,this.elementShape=t,this.elementDtype=s,e!=null&&e.forEach(o=>{if(s!==o.dtype)throw new Error(`Invalid data types; op elements ${s}, but list elements ${o.dtype}`);Is(t,o.shape,"TensorList shape mismatch: "),mn(o)}),this.idTensor=Ye(0),this.maxNumElements=r,mn(this.idTensor)}copy(){return new Uo([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(e){this.tensors.forEach(t=>{(e==null||!e.has(t.id))&&t.dispose()}),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(e,t,s=-1){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(s!==-1&&this.tensors.length!==s)throw new Error(`Operation expected a list with ${s} elements but got a list with ${this.tensors.length} elements.`);Is(e,this.elementShape,"TensorList shape mismatch: ");const r=gi(this.elementShape,this.tensors,e);return ce(()=>{const o=this.tensors.map(a=>te(a,r));return is(o,0)})}popBack(e,t){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(this.size()===0)throw new Error("Trying to pop from an empty list.");const s=gi(this.elementShape,this.tensors,e),r=this.tensors.pop();return r.kept=!1,Is(r.shape,e,"TensorList shape mismatch: "),te(r,s)}pushBack(e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(Is(e.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");mn(e),this.tensors.push(e)}resize(e){if(e<0)throw new Error(`TensorListResize expects size to be non-negative. Got: ${e}`);if(this.maxNumElements!==-1&&e>this.maxNumElements)throw new Error(`TensorListResize input size ${e} is greater maxNumElement ${this.maxNumElements}.`);const t=new Uo([],this.elementShape,this.elementDtype,this.maxNumElements);t.tensors.length=e;for(let s=0;s<Math.min(this.tensors.length,e);++s)t.tensors[s]=this.tensors[s];return t}getItem(e,t,s){if(s!==this.elementDtype)throw new Error(`Invalid data types; op elements ${s}, but list elements ${this.elementDtype}`);if(e<0||e>this.tensors.length)throw new Error(`Trying to access element ${e} in a list with ${this.tensors.length} elements.`);if(this.tensors[e]==null)throw new Error(`element at index ${e} is null.`);Is(this.tensors[e].shape,t,"TensorList shape mismatch: ");const r=gi(this.elementShape,this.tensors,t);return te(this.tensors[e],r)}setItem(e,t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(e<0||this.maxNumElements!==-1&&e>=this.maxNumElements)throw new Error(`Trying to set element ${e} in a list with max ${this.maxNumElements} elements.`);Is(this.elementShape,t.shape,"TensorList shape mismatch: "),mn(t),this.tensors[e]!=null&&(this.tensors[e].kept=!1),this.tensors[e]=t}gather(e,t,s){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);Is(this.elementShape,s,"TensorList shape mismatch: "),e=e.slice(0,this.size());const r=gi(this.elementShape,this.tensors,s);return e.length===0?Yt([],[0].concat(r)):ce(()=>{const o=e.map(a=>te(this.tensors[a],r));return is(o,0)})}concat(e,t){if(e&&e!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${e}`);Is(this.elementShape,t,"TensorList shape mismatch: ");const s=gi(this.elementShape,this.tensors,t);return this.size()===0?Yt([],[0].concat(s)):ce(()=>{const r=this.tensors.map(o=>te(o,s));return nn(r,0)})}}function jO(n,e,t){const s=n.dtype;if(n.shape.length<1)throw new Error(`Tensor must be at least a vector, but saw shape: ${n.shape}`);if(n.dtype!==t)throw new Error(`Invalid data types; op elements ${n.dtype}, but list elements ${t}`);const r=n.shape.slice(1);Is(r,e,"TensorList shape mismatch: ");const o=Ps(n);return new Uo(o,e,s)}function qO(n,e,t,s){return new Uo([],n,e,s)}function KO(n,e,t,s){if(e.length!==n.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${n.shape[0]}`);const r=Math.max(...e);if(s!=null&&s!==-1&&r>=s)throw new Error(`Max index must be < array size (${r}  vs. ${s})`);const o=new Uo([],t,n.dtype,s),a=Ps(n,0);return e.forEach((l,i)=>{o.setItem(l,a[i])}),o}function XO(n,e,t){let s=0;const r=e.map(c=>(s+=c,s));if(s!==n.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${s}, and tensor's shape is: ${n.shape}`);const o=n.shape.slice(1),a=Lp(o,t),l=s===0?0:n.size/s,i=ce(()=>{const c=[];n=te(n,[1,s,l]);for(let h=0;h<e.length;++h){const p=[0,h===0?0:r[h-1],0],f=[1,e[h],l];c[h]=te(mt(n,p,f),a)}return n.dispose(),c}),u=new Uo([],t,n.dtype,e.length);for(let c=0;c<i.length;c++)u.setItem(c,i[c]);return u}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const YO=async(n,e,t)=>{switch(n.op){case"If":case"StatelessIf":{const s=_("thenBranch",n,e,t),r=_("elseBranch",n,e,t),o=_("cond",n,e,t),a=_("args",n,e,t);return(await o.data())[0]?t.functionMap[s].executeFunctionAsync(a,t.tensorArrayMap,t.tensorListMap):t.functionMap[r].executeFunctionAsync(a,t.tensorArrayMap,t.tensorListMap)}case"While":case"StatelessWhile":{const s=_("body",n,e,t),r=_("cond",n,e,t),o=_("args",n,e,t),a=await t.functionMap[r].executeFunctionAsync(o,t.tensorArrayMap,t.tensorListMap),l=o.map(c=>c.id);let i=await a[0].data();a.forEach(c=>{!c.kept&&l.indexOf(c.id)===-1&&c.dispose()});let u=o;for(;i[0];){const c=u;u=await t.functionMap[s].executeFunctionAsync(u,t.tensorArrayMap,t.tensorListMap);const h=u.map(p=>p.id);c.forEach(p=>{!p.kept&&l.indexOf(p.id)===-1&&h.indexOf(p.id)===-1&&p.dispose()});const d=await t.functionMap[r].executeFunctionAsync(u,t.tensorArrayMap,t.tensorListMap);i=await d[0].data(),d.forEach(p=>{!p.kept&&l.indexOf(p.id)===-1&&h.indexOf(p.id)===-1&&p.dispose()})}return u}case"LoopCond":{const s=_("pred",n,e,t);return[kr(s)]}case"Switch":{const s=_("pred",n,e,t);let r=_("data",n,e,t);return r.kept||(r=kr(r)),(await s.data())[0]?[void 0,r]:[r,void 0]}case"Merge":{const s=n.inputNames.find(r=>vn(r,e,t)!==void 0);if(s){const r=vn(s,e,t);return[kr(r)]}return}case"Enter":{const s=_("frameName",n,e,t),r=_("tensor",n,e,t);return t.enterFrame(s),[kr(r)]}case"Exit":{const s=_("tensor",n,e,t);return t.exitFrame(),[kr(s)]}case"NextIteration":{const s=_("tensor",n,e,t);return t.nextIteration(),[kr(s)]}case"TensorArrayV3":{const s=_("size",n,e,t),r=_("dtype",n,e,t),o=_("elementShape",n,e,t),a=_("dynamicSize",n,e,t),l=_("clearAfterRead",n,e,t),i=_("identicalElementShapes",n,e,t),u=_("name",n,e,t),c=new HO(u,r,s,o,i,a,l);return t.addTensorArray(c),[c.idTensor,Ye(1)]}case"TensorArrayWriteV3":{const s=_("tensorArrayId",n,e,t),r=_("index",n,e,t),o=_("tensor",n,e,t),a=t.getTensorArray(s.id);return a.write(r,o),[a.idTensor]}case"TensorArrayReadV3":{const s=_("tensorArrayId",n,e,t),r=_("index",n,e,t);return[t.getTensorArray(s.id).read(r)]}case"TensorArrayGatherV3":{const s=_("tensorArrayId",n,e,t),r=_("indices",n,e,t),o=_("dtype",n,e,t);return[t.getTensorArray(s.id).gather(r,o)]}case"TensorArrayScatterV3":{const s=_("tensorArrayId",n,e,t),r=_("indices",n,e,t),o=_("tensor",n,e,t),a=t.getTensorArray(s.id);return a.scatter(r,o),[a.idTensor]}case"TensorArrayConcatV3":{const s=_("tensorArrayId",n,e,t),r=t.getTensorArray(s.id),o=_("dtype",n,e,t);return[r.concat(o)]}case"TensorArraySplitV3":{const s=_("tensorArrayId",n,e,t),r=_("tensor",n,e,t),o=_("lengths",n,e,t),a=t.getTensorArray(s.id);return a.split(o,r),[a.idTensor]}case"TensorArraySizeV3":{const s=_("tensorArrayId",n,e,t),r=t.getTensorArray(s.id);return[Ye(r.size(),"int32")]}case"TensorArrayCloseV3":{const s=_("tensorArrayId",n,e,t),r=t.getTensorArray(s.id);return r.clearAndClose(),[r.idTensor]}case"TensorListSetItem":{const s=_("tensorListId",n,e,t),r=_("index",n,e,t),o=_("tensor",n,e,t),a=t.getTensorList(s.id);return a.setItem(r,o),[a.idTensor]}case"TensorListGetItem":{const s=_("tensorListId",n,e,t),r=_("index",n,e,t),o=_("elementShape",n,e,t),a=_("elementDType",n,e,t);return[t.getTensorList(s.id).getItem(r,o,a)]}case"TensorListScatterV2":case"TensorListScatter":{const s=_("indices",n,e,t),r=_("tensor",n,e,t),o=_("elementShape",n,e,t),a=_("numElements",n,e,t),l=KO(r,s,o,a);return t.addTensorList(l),[l.idTensor]}case"TensorListReserve":case"EmptyTensorList":{const s=_("elementShape",n,e,t),r=_("elementDType",n,e,t);let o;n.op==="TensorListReserve"?o="numElements":o="maxNumElements";const a=_(o,n,e,t),l=n.op==="TensorListReserve"?-1:a,i=qO(s,r,a,l);return t.addTensorList(i),[i.idTensor]}case"TensorListGather":{const s=_("tensorListId",n,e,t),r=_("indices",n,e,t),o=_("elementShape",n,e,t),a=_("elementDType",n,e,t);return[t.getTensorList(s.id).gather(r,a,o)]}case"TensorListStack":{const s=_("tensorListId",n,e,t),r=_("elementShape",n,e,t),o=_("elementDType",n,e,t),a=_("numElements",n,e,t);return[t.getTensorList(s.id).stack(r,o,a)]}case"TensorListFromTensor":{const s=_("tensor",n,e,t),r=_("elementShape",n,e,t),o=_("elementDType",n,e,t),a=jO(s,r,o);return t.addTensorList(a),[a.idTensor]}case"TensorListConcat":case"TensorListConcatV2":{const s=_("tensorListId",n,e,t),r=t.getTensorList(s.id),o=_("dtype",n,e,t),a=_("elementShape",n,e,t);return[r.concat(o,a)]}case"TensorListPushBack":{const s=_("tensorListId",n,e,t),r=_("tensor",n,e,t),o=t.getTensorList(s.id);return o.pushBack(r),[o.idTensor]}case"TensorListPopBack":{const s=_("tensorListId",n,e,t),r=_("elementShape",n,e,t),o=_("elementDType",n,e,t);return[t.getTensorList(s.id).popBack(r,o)]}case"TensorListSplit":{const s=_("tensor",n,e,t),r=_("elementShape",n,e,t),o=_("lengths",n,e,t),a=XO(s,o,r);return t.addTensorList(a),[a.idTensor]}case"TensorListLength":{const s=_("tensorListId",n,e,t),r=t.getTensorList(s.id);return[Ye(r.size(),"int32")]}case"TensorListResize":{const s=_("tensorListId",n,e,t),r=_("size",n,e,t),a=t.getTensorList(s.id).resize(r);return t.addTensorList(a),[a.idTensor]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _b(n,e,t){const[s,r]=_("fusedOps",n,e,t),o=s==="biasadd",a=!o,l=r==="prelu",i=s==="fusedbatchnorm",u=_("numArgs",n,e,t);if(o){if(l&&u!==2)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!l&&o&&u!==1)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(i)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported");const c=_("strides",n,e,t),h=Gu(n,e,t),d=_("dataFormat",n,e,t).toUpperCase(),p=_("dilations",n,e,t);let[f,g]=_("args",n,e,t);a&&(g=f,f=void 0);const y=_("leakyreluAlpha",n,e,t);return{stride:c,pad:h,dataFormat:d,dilations:p,biasArg:f,preluArg:g,activationFunc:r,leakyreluAlpha:y}}const ZO=(n,e,t,s=$n)=>{switch(n.op){case"Conv1D":{const r=_("stride",n,e,t),o=_("pad",n,e,t),a=_("dataFormat",n,e,t).toUpperCase(),l=_("dilation",n,e,t);return[s.conv1d(_("x",n,e,t),_("filter",n,e,t),r,o,a,l)]}case"Conv2D":{const r=_("strides",n,e,t),o=Gu(n,e,t),a=_("dataFormat",n,e,t).toUpperCase(),l=_("dilations",n,e,t);return[s.conv2d(_("x",n,e,t),_("filter",n,e,t),[r[1],r[2]],o,a,[l[1],l[2]])]}case"_FusedConv2D":{const{stride:r,pad:o,dataFormat:a,dilations:l,biasArg:i,preluArg:u,activationFunc:c,leakyreluAlpha:h}=_b(n,e,t);return[s.fused.conv2d({x:_("x",n,e,t),filter:_("filter",n,e,t),strides:[r[1],r[2]],pad:o,dataFormat:a,dilations:[l[1],l[2]],bias:i,activation:c,preluActivationWeights:u,leakyreluAlpha:h})]}case"FusedDepthwiseConv2dNative":{const{stride:r,pad:o,dataFormat:a,dilations:l,biasArg:i,preluArg:u,activationFunc:c,leakyreluAlpha:h}=_b(n,e,t);return[s.fused.depthwiseConv2d({x:_("x",n,e,t),filter:_("filter",n,e,t),strides:[r[1],r[2]],pad:o,dataFormat:a,dilations:[l[1],l[2]],bias:i,activation:c,preluActivationWeights:u,leakyreluAlpha:h})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{const r=_("outputShape",n,e,t),o=_("strides",n,e,t),a=Gu(n,e,t);return[s.conv2dTranspose(_("x",n,e,t),_("filter",n,e,t),r,[o[1],o[2]],a)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{const r=_("strides",n,e,t),o=Gu(n,e,t),a=_("dilations",n,e,t),l=_("dataFormat",n,e,t).toUpperCase();return[s.depthwiseConv2d(_("input",n,e,t),_("filter",n,e,t),[r[1],r[2]],o,l,[a[1],a[2]])]}case"Conv3D":{const r=_("strides",n,e,t),o=_("pad",n,e,t),a=_("dataFormat",n,e,t).toUpperCase(),l=_("dilations",n,e,t);return[s.conv3d(_("x",n,e,t),_("filter",n,e,t),[r[1],r[2],r[3]],o,a,[l[1],l[2],l[3]])]}case"AvgPool":{const r=_("strides",n,e,t),o=_("pad",n,e,t),a=_("kernelSize",n,e,t);return[s.avgPool(_("x",n,e,t),[a[1],a[2]],[r[1],r[2]],o)]}case"MaxPool":{const r=_("strides",n,e,t),o=_("pad",n,e,t),a=_("kernelSize",n,e,t);return[s.maxPool(_("x",n,e,t),[a[1],a[2]],[r[1],r[2]],o)]}case"MaxPoolWithArgmax":{const r=_("strides",n,e,t),o=_("pad",n,e,t),a=_("kernelSize",n,e,t),l=_("includeBatchInIndex",n,e,t),{result:i,indexes:u}=s.maxPoolWithArgmax(_("x",n,e,t),[a[1],a[2]],[r[1],r[2]],o,l);return[i,u]}case"AvgPool3D":{const r=_("strides",n,e,t),o=_("pad",n,e,t),a=_("kernelSize",n,e,t);return[s.avgPool3d(_("x",n,e,t),[a[1],a[2],a[3]],[r[1],r[2],r[3]],o)]}case"MaxPool3D":{const r=_("strides",n,e,t),o=_("pad",n,e,t),a=_("kernelSize",n,e,t);return[s.maxPool3d(_("x",n,e,t),[a[1],a[2],a[3]],[r[1],r[2],r[3]],o)]}case"Dilation2D":{const r=_("strides",n,e,t),o=_("pad",n,e,t),a=_("dilations",n,e,t),l=r[1],i=r[2],u=a[1],c=a[2];return[s.dilation2d(_("x",n,e,t),_("filter",n,e,t),[l,i],o,[u,c],"NHWC")]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const JO=(n,e,t,s=$n)=>{switch(n.op){case"Fill":{const r=_("shape",n,e,t),o=_("dtype",n,e,t),a=_("value",n,e,t);return[s.fill(r,a,o)]}case"LinSpace":{const r=_("start",n,e,t),o=_("stop",n,e,t),a=_("num",n,e,t);return[s.linspace(r,o,a)]}case"Multinomial":{const r=_("logits",n,e,t),o=_("numSamples",n,e,t),a=_("seed",n,e,t);return[s.multinomial(r,o,a)]}case"OneHot":{const r=_("indices",n,e,t),o=_("depth",n,e,t),a=_("onValue",n,e,t),l=_("offValue",n,e,t),i=_("dtype",n,e,t);return[s.oneHot(r,o,a,l,i)]}case"Ones":return[s.ones(_("shape",n,e,t),_("dtype",n,e,t))];case"OnesLike":return[s.onesLike(_("x",n,e,t))];case"RandomStandardNormal":return[s.randomStandardNormal(_("shape",n,e,t),_("dtype",n,e,t),_("seed",n,e,t))];case"RandomUniform":return[s.randomUniform(_("shape",n,e,t),_("minval",n,e,t),_("maxval",n,e,t),_("dtype",n,e,t))];case"RandomUniformInt":return[s.randomUniformInt(_("shape",n,e,t),_("minval",n,e,t),_("maxval",n,e,t),_("seed",n,e,t))];case"Range":{const r=_("start",n,e,t),o=_("stop",n,e,t),a=_("step",n,e,t);return[s.range(r,o,a,_("dtype",n,e,t))]}case"TruncatedNormal":{const r=_("shape",n,e,t),o=_("mean",n,e,t),a=_("stdDev",n,e,t),l=_("seed",n,e,t);return[s.truncatedNormal(r,o,a,_("dtype",n,e,t),l)]}case"Zeros":return[s.zeros(_("shape",n,e,t),_("dtype",n,e,t))];case"ZerosLike":return[s.zerosLike(_("x",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Md(n,e,t){const s=_("boxes",n,e,t),r=_("scores",n,e,t),o=_("maxOutputSize",n,e,t),a=_("iouThreshold",n,e,t),l=_("scoreThreshold",n,e,t),i=_("softNmsSigma",n,e,t);return{boxes:s,scores:r,maxOutputSize:o,iouThreshold:a,scoreThreshold:l,softNmsSigma:i}}const QO=async(n,e,t,s,r=$n)=>{switch(n.op){case"NonMaxSuppressionV5":{const{boxes:o,scores:a,maxOutputSize:l,iouThreshold:i,scoreThreshold:u,softNmsSigma:c}=Md(n,e,t),h=await r.image.nonMaxSuppressionWithScoreAsync(o,a,l,i,u,c);return[h.selectedIndices,h.selectedScores]}case"NonMaxSuppressionV4":{const{boxes:o,scores:a,maxOutputSize:l,iouThreshold:i,scoreThreshold:u}=Md(n,e,t),c=_("padToMaxOutputSize",n,e,t),h=await r.image.nonMaxSuppressionPaddedAsync(o,a,l,i,u,c);return[h.selectedIndices,h.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{const{boxes:o,scores:a,maxOutputSize:l,iouThreshold:i,scoreThreshold:u}=Md(n,e,t);return[await r.image.nonMaxSuppressionAsync(o,a,l,i,u)]}case"Where":{const o=r.cast(_("condition",n,e,t),"bool"),a=[await r.whereAsync(o)];return o.dispose(),a}case"ListDiff":return r.setdiff1dAsync(_("x",n,e,t),_("y",n,e,t));default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const e3=(n,e,t,s=$n)=>{switch(n.op){case"LowerBound":{const r=_("sortedSequence",n,e,t),o=_("values",n,e,t);return[s.lowerBound(r,o)]}case"TopKV2":{const r=_("x",n,e,t),o=_("k",n,e,t),a=_("sorted",n,e,t),l=s.topk(r,o,a);return[l.values,l.indices]}case"UpperBound":{const r=_("sortedSequence",n,e,t),o=_("values",n,e,t);return[s.upperBound(r,o)]}case"Unique":{const r=_("x",n,e,t),o=s.unique(r);return[o.values,o.indices]}case"UniqueV2":{const r=_("x",n,e,t),o=_("axis",n,e,t),a=s.unique(r,o);return[a.values,a.indices]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const t3=(n,e,t,s=$n)=>{switch(n.op){case"Const":return e[n.name];case"PlaceholderWithDefault":const r=_("default",n,e,t);return[vn(n.name,e,t)||r];case"Placeholder":return[vn(n.name,e,t)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":{const c=_("x",n,e,t);return[kr(c)]}case"IdentityN":return _("x",n,e,t).map(c=>kr(c));case"Snapshot":const o=_("x",n,e,t);return[kr(o)];case"Shape":return[s.tensor1d(_("x",n,e,t).shape,"int32")];case"ShapeN":return _("x",n,e,t).map(c=>s.tensor1d(c.shape));case"Size":return[s.scalar(_("x",n,e,t).size,"int32")];case"Rank":return[s.scalar(_("x",n,e,t).rank,"int32")];case"NoOp":return[s.scalar(1)];case"Print":const a=_("x",n,e,t),l=_("data",n,e,t),i=_("message",n,e,t),u=_("summarize",n,e,t);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(i);for(let c=0;c<l.length;c++)console.log(Array.prototype.slice.call(l[c].dataSync()).slice(0,u));return[a];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class n3{get id(){return this.handle.id}constructor(e,t){this.keyDType=e,this.valueDType=t,this.handle=Ye(0),this.tensorMap=new Map,mn(this.handle)}clearAndClose(){this.tensorMap.forEach(e=>e.dispose()),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return Ye(this.size(),"int32")}async import(e,t){this.checkKeyAndValueTensor(e,t);const s=await e.data();return this.tensorMap.forEach(r=>r.dispose()),this.tensorMap.clear(),ce(()=>{const r=Ps(t),o=s.length,a=r.length;P(o===a,()=>`The number of elements doesn't match, keys has ${o} elements, the values has ${a} elements.`);for(let l=0;l<o;l++){const i=s[l],u=r[l];mn(u),this.tensorMap.set(i,u)}return this.handle})}async find(e,t){this.checkKeyAndValueTensor(e,t);const s=await e.data();return ce(()=>{const r=[];for(let o=0;o<s.length;o++){const a=s[o],l=this.findWithDefault(a,t);r.push(l)}return is(r)})}findWithDefault(e,t){const s=this.tensorMap.get(e);return s??t}checkKeyAndValueTensor(e,t){if(e.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got ${e.dtype}`);if(t.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got ${t.dtype}`)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const s3=async(n,e,t,s)=>{switch(n.op){case"HashTable":case"HashTableV2":{const r=s.getHashTableHandleByName(n.name);if(r!=null)return[r];{const o=_("keyDType",n,e,t),a=_("valueDType",n,e,t),l=new n3(o,a);return s.addHashTable(n.name,l),[l.handle]}}case"InitializeTable":case"InitializeTableV2":case"LookupTableImport":case"LookupTableImportV2":{const r=_("tableHandle",n,e,t,s),o=_("keys",n,e,t),a=_("values",n,e,t);return[await s.getHashTableById(r.id).import(o,a)]}case"LookupTableFind":case"LookupTableFindV2":{const r=_("tableHandle",n,e,t,s),o=_("keys",n,e,t),a=_("defaultValue",n,e,t);return[await s.getHashTableById(r.id).find(o,a)]}case"LookupTableSize":case"LookupTableSizeV2":{const r=_("tableHandle",n,e,t,s);return[s.getHashTableById(r.id).tensorSize()]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const r3=(n,e,t,s=$n)=>{switch(n.op){case"ResizeBilinear":{const r=_("images",n,e,t),o=_("size",n,e,t),a=_("alignCorners",n,e,t),l=_("halfPixelCenters",n,e,t);return[s.image.resizeBilinear(r,[o[0],o[1]],a,l)]}case"ResizeNearestNeighbor":{const r=_("images",n,e,t),o=_("size",n,e,t),a=_("alignCorners",n,e,t),l=_("halfPixelCenters",n,e,t);return[s.image.resizeNearestNeighbor(r,[o[0],o[1]],a,l)]}case"CropAndResize":{const r=_("image",n,e,t),o=_("boxes",n,e,t),a=_("boxInd",n,e,t),l=_("cropSize",n,e,t),i=_("method",n,e,t),u=_("extrapolationValue",n,e,t);return[s.image.cropAndResize(r,o,a,l,i,u)]}case"ImageProjectiveTransformV3":{const r=_("images",n,e,t),o=_("transforms",n,e,t),a=_("outputShape",n,e,t),l=_("fillValue",n,e,t),i=_("interpolation",n,e,t),u=_("fillMode",n,e,t);return[s.image.transform(r,o,i.toLowerCase(),u.toLowerCase(),l,a)]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const o3=(n,e,t,s=$n)=>{switch(n.op){case"Equal":return[s.equal(_("a",n,e,t),_("b",n,e,t))];case"NotEqual":return[s.notEqual(_("a",n,e,t),_("b",n,e,t))];case"Greater":return[s.greater(_("a",n,e,t),_("b",n,e,t))];case"GreaterEqual":return[s.greaterEqual(_("a",n,e,t),_("b",n,e,t))];case"Less":return[s.less(_("a",n,e,t),_("b",n,e,t))];case"LessEqual":return[s.lessEqual(_("a",n,e,t),_("b",n,e,t))];case"LogicalAnd":return[s.logicalAnd(_("a",n,e,t),_("b",n,e,t))];case"LogicalNot":return[s.logicalNot(_("a",n,e,t))];case"LogicalOr":return[s.logicalOr(_("a",n,e,t),_("b",n,e,t))];case"Select":case"SelectV2":return[s.where(_("condition",n,e,t),_("a",n,e,t),_("b",n,e,t))];case"BitwiseAnd":return[s.bitwiseAnd(_("a",n,e,t),_("b",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const a3=(n,e,t,s=$n)=>{switch(n.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[s.matMul(_("a",n,e,t),_("b",n,e,t),_("transposeA",n,e,t),_("transposeB",n,e,t))];case"Einsum":return[s.einsum(_("equation",n,e,t),..._("tensors",n,e,t))];case"Transpose":return[s.transpose(_("x",n,e,t),_("perm",n,e,t))];case"_FusedMatMul":const[r,o]=_("fusedOps",n,e,t),a=r==="biasadd",l=o==="prelu",i=_("numArgs",n,e,t),u=_("leakyreluAlpha",n,e,t);if(a){if(l&&i!==2)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!l&&i!==1)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}const[c,h]=_("args",n,e,t);return[s.fused.matMul({a:_("a",n,e,t),b:_("b",n,e,t),transposeA:_("transposeA",n,e,t),transposeB:_("transposeB",n,e,t),bias:c,activation:o,preluActivationWeights:h,leakyreluAlpha:u})];case"MatrixBandPart":return[s.linalg.bandPart(_("a",n,e,t),_("numLower",n,e,t),_("numUpper",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const i3=(n,e,t,s=$n)=>{switch(n.op){case"EuclideanNorm":return[s.euclideanNorm(_("x",n,e,t),_("axis",n,e,t),_("keepDims",n,e,t))];case"FusedBatchNorm":case"FusedBatchNormV2":return[s.batchNorm(_("x",n,e,t),_("mean",n,e,t),_("variance",n,e,t),_("offset",n,e,t),_("scale",n,e,t),_("epsilon",n,e,t))];case"FusedBatchNormV3":return[s.batchNorm(_("x",n,e,t),_("mean",n,e,t),_("variance",n,e,t),_("offset",n,e,t),_("scale",n,e,t),_("epsilon",n,e,t))];case"LRN":return[s.localResponseNormalization(_("x",n,e,t),_("radius",n,e,t),_("bias",n,e,t),_("alpha",n,e,t),_("beta",n,e,t))];case"Softmax":return[s.softmax(_("x",n,e,t))];case"LogSoftmax":return[s.logSoftmax(_("x",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const l3=(n,e,t,s=$n)=>{switch(n.op){case"RaggedGather":{const{outputNestedSplits:r,outputDenseValues:o}=s.raggedGather(_("paramsNestedSplits",n,e,t),_("paramsDenseValues",n,e,t),_("indices",n,e,t),_("outputRaggedRank",n,e,t));return r.concat(o)}case"RaggedRange":{const{rtNestedSplits:r,rtDenseValues:o}=s.raggedRange(_("starts",n,e,t),_("limits",n,e,t),_("splits",n,e,t));return[r,o]}case"RaggedTensorToTensor":return[s.raggedTensorToTensor(_("shape",n,e,t),_("values",n,e,t),_("defaultValue",n,e,t),_("rowPartitionTensors",n,e,t),_("rowPartitionTypes",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const u3=(n,e,t,s=$n)=>{switch(n.op){case"Max":{const l=_("axis",n,e,t),i=_("keepDims",n,e,t);return[s.max(_("x",n,e,t),l,i)]}case"Mean":{const l=_("axis",n,e,t),i=_("keepDims",n,e,t);return[s.mean(_("x",n,e,t),l,i)]}case"Min":{const l=_("axis",n,e,t),i=_("keepDims",n,e,t);return[s.min(_("x",n,e,t),l,i)]}case"Sum":{const l=_("axis",n,e,t),i=_("keepDims",n,e,t);return[s.sum(_("x",n,e,t),l,i)]}case"All":{const l=_("axis",n,e,t),i=_("keepDims",n,e,t);return[s.all(_("x",n,e,t),l,i)]}case"Any":{const l=_("axis",n,e,t),i=_("keepDims",n,e,t);return[s.any(_("x",n,e,t),l,i)]}case"ArgMax":{const l=_("axis",n,e,t);return[s.argMax(_("x",n,e,t),l)]}case"ArgMin":{const l=_("axis",n,e,t);return[s.argMin(_("x",n,e,t),l)]}case"Prod":{const l=_("axis",n,e,t),i=_("keepDims",n,e,t);return[s.prod(_("x",n,e,t),l,i)]}case"Cumprod":{const l=_("axis",n,e,t),i=_("exclusive",n,e,t),u=_("reverse",n,e,t);return[s.cumprod(_("x",n,e,t),l,i,u)]}case"Cumsum":{const l=_("axis",n,e,t),i=_("exclusive",n,e,t),u=_("reverse",n,e,t);return[s.cumsum(_("x",n,e,t),l,i,u)]}case"Bincount":const r=_("x",n,e,t),o=_("weights",n,e,t),a=_("size",n,e,t);return[s.bincount(r,o,a)];case"DenseBincount":{const l=_("x",n,e,t),i=_("weights",n,e,t),u=_("size",n,e,t),c=_("binaryOutput",n,e,t);return[s.denseBincount(l,i,u,c)]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const c3=(n,e,t,s=$n)=>{switch(n.op){case"ConcatV2":case"Concat":{const r=_("n",n,e,t),o=_("axis",n,e,t);let a=_("tensors",n,e,t);return a=a.slice(0,r),[s.concat(a,o)]}case"Gather":{const r=_("x",n,e,t),o=_("indices",n,e,t);return[s.gather(r,s.cast(o,"int32"),0)]}case"GatherV2":{const r=_("axis",n,e,t),o=_("batchDims",n,e,t),a=_("x",n,e,t),l=_("indices",n,e,t);return[s.gather(a,s.cast(l,"int32"),r,o)]}case"Reverse":{const r=_("dims",n,e,t),o=[];for(let l=0;l<r.length;l++)r[l]&&o.push(l);const a=_("x",n,e,t);return[s.reverse(a,o)]}case"ReverseV2":{const r=_("axis",n,e,t),o=_("x",n,e,t);return[s.reverse(o,r)]}case"Slice":{const r=_("begin",n,e,t),o=_("size",n,e,t);return[s.slice(_("x",n,e,t),r,o)]}case"StridedSlice":{const r=_("begin",n,e,t),o=_("end",n,e,t),a=_("strides",n,e,t),l=_("beginMask",n,e,t),i=_("endMask",n,e,t),u=_("ellipsisMask",n,e,t),c=_("newAxisMask",n,e,t),h=_("shrinkAxisMask",n,e,t),d=_("x",n,e,t);return[s.stridedSlice(d,r,o,a,l,i,u,c,h)]}case"Pack":return ce(()=>{const r=_("axis",n,e,t),o=_("tensors",n,e,t),a=o[0].shape,l=s.squeeze(o[0]).shape,i=o.map(u=>{const c=ft(u.shape,a);if(!c&&!ft(s.squeeze(u).shape,l))throw new Error("the input tensors shape does not match");return c?u:s.reshape(u,a)});return[s.stack(i,r)]});case"Unpack":{const r=_("axis",n,e,t),o=_("tensor",n,e,t);return s.unstack(o,r)}case"Tile":{const r=_("reps",n,e,t);return[s.tile(_("x",n,e,t),r)]}case"Split":case"SplitV":{const r=_("axis",n,e,t),o=_("numOrSizeSplits",n,e,t),a=_("x",n,e,t);return s.split(a,o,r)}case"ScatterNd":{const r=_("indices",n,e,t),o=_("values",n,e,t),a=_("shape",n,e,t);return[s.scatterND(r,o,a)]}case"GatherNd":{const r=_("x",n,e,t),o=_("indices",n,e,t);return[s.gatherND(r,o)]}case"SparseToDense":{const r=_("sparseIndices",n,e,t),o=_("outputShape",n,e,t),a=_("sparseValues",n,e,t),l=_("defaultValue",n,e,t);return[s.sparseToDense(r,a,o,a.dtype===l.dtype?l:s.cast(l,a.dtype))]}case"TensorScatterUpdate":{const r=_("indices",n,e,t),o=_("values",n,e,t),a=_("tensor",n,e,t);return[s.tensorScatterUpdate(a,r,o)]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const h3=(n,e,t,s=$n)=>{switch(n.op){case"SparseFillEmptyRows":{const{outputIndices:r,outputValues:o,emptyRowIndicator:a,reverseIndexMap:l}=s.sparse.sparseFillEmptyRows(_("indices",n,e,t),_("values",n,e,t),_("denseShape",n,e,t),_("defaultValue",n,e,t));return[r,o,a,l]}case"SparseReshape":{const{outputIndices:r,outputShape:o}=s.sparse.sparseReshape(_("inputIndices",n,e,t),_("inputShape",n,e,t),_("newShape",n,e,t));return[r,o]}case"SparseSegmentMean":return[s.sparse.sparseSegmentMean(_("data",n,e,t),_("indices",n,e,t),_("segmentIds",n,e,t))];case"SparseSegmentSum":return[s.sparse.sparseSegmentSum(_("data",n,e,t),_("indices",n,e,t),_("segmentIds",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const d3=(n,e,t,s=$n)=>{switch(n.op){case"FFT":return[s.fft(_("x",n,e,t))];case"IFFT":return[s.ifft(_("x",n,e,t))];case"RFFT":return[s.rfft(_("x",n,e,t))];case"IRFFT":return[s.irfft(_("x",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const p3=(n,e,t,s=$n)=>{switch(n.op){case"StaticRegexReplace":return[s.string.staticRegexReplace(_("input",n,e,t),_("pattern",n,e,t),_("rewrite",n,e,t),_("replaceGlobal",n,e,t))];case"StringNGrams":{const{nGrams:r,nGramsSplits:o}=s.string.stringNGrams(_("data",n,e,t),_("dataSplits",n,e,t),_("separator",n,e,t),_("nGramWidths",n,e,t),_("leftPad",n,e,t),_("rightPad",n,e,t),_("padWidth",n,e,t),_("preserveShortSequences",n,e,t));return[r,o]}case"StringSplit":{const{indices:r,values:o,shape:a}=s.string.stringSplit(_("input",n,e,t),_("delimiter",n,e,t),_("skipEmpty",n,e,t));return[r,o,a]}case"StringToHashBucketFast":return[s.string.stringToHashBucketFast(_("input",n,e,t),_("numBuckets",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const f3=(n,e,t,s=$n)=>{switch(n.op){case"Cast":return[s.cast(_("x",n,e,t),_("dtype",n,e,t))];case"ExpandDims":{const r=_("axis",n,e,t);return[s.expandDims(_("x",n,e,t),r)]}case"Squeeze":{const r=_("axis",n,e,t);return[s.squeeze(_("x",n,e,t),r)]}case"Reshape":return[s.reshape(_("x",n,e,t),_("shape",n,e,t))];case"EnsureShape":return[s.ensureShape(_("x",n,e,t),_("shape",n,e,t))];case"MirrorPad":return[s.mirrorPad(_("x",n,e,t),_("padding",n,e,t),_("mode",n,e,t))];case"PadV2":case"Pad":return[s.pad(_("x",n,e,t),_("padding",n,e,t),_("constantValue",n,e,t))];case"SpaceToBatchND":{const r=_("blockShape",n,e,t),o=_("paddings",n,e,t);return[s.spaceToBatchND(_("x",n,e,t),r,o)]}case"BatchToSpaceND":{const r=_("blockShape",n,e,t),o=_("crops",n,e,t);return[s.batchToSpaceND(_("x",n,e,t),r,o)]}case"DepthToSpace":{const r=_("blockSize",n,e,t),o=_("dataFormat",n,e,t).toUpperCase();return[s.depthToSpace(_("x",n,e,t),r,o)]}case"BroadcastTo":return[s.broadcastTo(_("x",n,e,t),_("shape",n,e,t))];case"BroadcastArgs":return[s.broadcastArgs(_("s0",n,e,t),_("s1",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Eb(n,e,t,s,r=ce){const o=((a,l,i)=>{switch(a.category){case"arithmetic":return r(()=>UO(a,l,i));case"basic_math":return r(()=>GO(a,l,i));case"control":return YO(a,l,i);case"convolution":return r(()=>ZO(a,l,i));case"creation":return r(()=>JO(a,l,i));case"dynamic":return QO(a,l,i);case"evaluation":return r(()=>e3(a,l,i));case"image":return r(()=>r3(a,l,i));case"graph":return r(()=>t3(a,l,i));case"logical":return r(()=>o3(a,l,i));case"matrices":return r(()=>a3(a,l,i));case"normalization":return r(()=>i3(a,l,i));case"ragged":return r(()=>l3(a,l,i));case"reduction":return r(()=>u3(a,l,i));case"slice_join":return r(()=>c3(a,l,i));case"sparse":return r(()=>h3(a,l,i));case"spectral":return r(()=>d3(a,l,i));case"string":return r(()=>p3(a,l,i));case"transformation":return r(()=>f3(a,l,i));case"hash_table":return s3(a,l,i,s);case"custom":const u=_w(a.op);if(u&&u.customExecutor)return u.customExecutor(new WO(a,l,i));throw TypeError(`Custom op ${a.op} is not registered.`);default:throw TypeError(`Unknown op '${a.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(n,e,t);return Fo(o)?o.then(a=>[].concat(a)):[].concat(o)}class Ab{constructor(e={},t={},s={},r={},o){this.weightMap=e,this.tensorArrayMap=t,this.tensorListMap=s,this.functionMap=r,this.parseNodeNameCache=o,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(e,t){return{id:e,frameName:t,iterationId:0}}set currentContext(e){this.contexts!==e&&(this.contexts=e,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){const e=[];for(let t=0;t<this.contexts.length-1;t++){const s=this.contexts.slice(0,this.contexts.length-t);e.push(this.contextIdforContexts(s))}e.push(""),this._currentContextIds=e}contextIdforContexts(e){return e?e.map(t=>t.id===0&&t.iterationId===0?"":`${t.frameName}-${t.iterationId}`).join("/"):""}enterFrame(e){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,e)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(this.contexts&&this.contexts.length>1)this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift();else throw new Error("Cannot exit frame, the context is empty")}nextIteration(){if(this.contexts&&this.contexts.length>0){this.contexts=this.contexts.slice(),this.lastId++;const e=Object.assign({},this.contexts[this.contexts.length-1]);e.iterationId+=1,e.id=this.lastId,this.contexts.splice(-1,1,e),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}else throw new Error("Cannot increase frame iteration, the context is empty")}getWeight(e){return this.weightMap[e]}addTensorArray(e){this.tensorArrayMap[e.id]=e}getTensorArray(e){return this.tensorArrayMap[e]}addTensorList(e){this.tensorListMap[e.id]=e}getTensorList(e){return this.tensorListMap[e]}dispose(e){for(const t in this.tensorArrayMap)this.tensorArrayMap[t].clearAndClose(e);for(const t in this.tensorListMap)this.tensorListMap[t].clearAndClose(e)}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Db(n,e,t,s){const r=new Set,o=[];let a=null,l=null;const i=new Set,u=new Set(Object.keys(n).map(d=>Qn(d)[0]));s=s||[];const c=new Set(s.map(d=>Qn(d.name)[0])),h=[...e];for(;h.length>0;){const d=h.pop();if((Io(d)||k3(d)||S3(d))&&a==null&&(a=d,l=a.children.map(p=>p.name).filter(p=>r.has(p))),r.add(d.name),t[d.name]==null&&!u.has(d.name)&&!c.has(d.name)){if(d.inputs.length===0){o.push(d.name);continue}d.inputs.forEach(p=>{i.has(p.name)||(i.add(p.name),h.push(p))})}}return{inputs:n,outputs:e,usedNodes:r,missingInputs:o,dynamicNode:a,syncInputs:l}}function m3(n,e){const{usedNodes:t,inputs:s}=e,r=Object.keys(s).map(y=>Qn(y)[0]).map(y=>n.nodes[y]),o=n.initNodes||[],a=y=>t.has(typeof y=="string"?y:y.name);function l(y){return[...new Map(y.map(x=>[x.name,x])).values()]}const i=l([...r,...n.weights,...o]).filter(a),u=l([...i,...Object.values(n.nodes)]).filter(a),c=new Map(u.map(y=>[y.name,y])),h={};for(const y of u){h[y.name]=h[y.name]||0;for(const x of y.children)a(x)||(h[x.name]=Number.POSITIVE_INFINITY),h[x.name]=(h[x.name]||0)+1}const d=Object.entries(h).filter(([,y])=>y===0).map(([y])=>y),p=[...d];for(;d.length>0;){const y=d.pop(),x=c.get(y);for(const w of x.children.filter(a))--h[w.name]===0&&(p.push(w.name),d.push(w.name))}const f=p.map(y=>c.get(y)),g=g3(f,i);return y3(g,i),g}function g3(n,e){const t=new Map(n.map(a=>[a.name,a])),s=e.map(a=>a.name),r=new Set(s);for(;s.length>0;){const a=s.pop(),l=t.get(a);for(const i of l.children)!t.has(i.name)||r.has(i.name)||(r.add(i.name),s.push(i.name))}return n.filter(a=>r.has(a.name))}class Tu extends Error{constructor(e){super(`NodesExecutionOrderError: ${e}`)}}function y3(n,e){const t=new Map(n.map((l,i)=>[l.name,i])),s=new Set(e.map(l=>l.name)),r=l=>s.has(typeof l=="string"?l:l.name),o=new Set(n.map(l=>l.name)),a=l=>o.has(typeof l=="string"?l:l.name);for(const l of n){for(const i of l.children.filter(a)){if(!t.has(i.name))throw new Tu(`Child ${i.name} of node ${l.name} is unreachable.`);if(t.get(l.name)>t.get(i.name))throw new Tu(`Node ${l.name} is scheduled to run after its child ${i.name}.`)}if(!r(l))for(const i of l.inputs){if(!t.has(i.name))throw new Tu(`Input ${i.name} of node ${l.name} is unreachable.`);if(t.get(i.name)>t.get(l.name))throw new Tu(`Node ${l.name} is scheduled to run before its input ${i.name}.`)}}}function b3(n){const e=new Map(n.map((l,i)=>[l.name,i])),t=Number.MAX_SAFE_INTEGER,s=n.map((l,i)=>Io(l)?t:i),r=l=>{const i=s[e.get(l.name)];return i??-1},o=n.map((l,i)=>l.children.map(r).reduce((u,c)=>Math.max(u,c),s[i])),a=new Map;for(let l=0;l<n.length;++l){const i=o[l];if(i===t)continue;const u=n[l],c=n[i];a.has(c.name)||a.set(c.name,[]),a.get(c.name).push(u)}return a}const x3=new Set(["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"]),w3=new Set(["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"]),v3=new Set(["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"]);function Io(n){return x3.has(n.op)}function k3(n){return w3.has(n.op)}function S3(n){return v3.has(n.op)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class rc{get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(e){const t=Object.keys(e).map(s=>e[s].map(r=>r.id));this._weightIds=[].concat(...t),this._weightMap=e}set resourceManager(e){this._resourceManager=e}get inputs(){return this._inputs.map(e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}))}get outputs(){return this._outputs.map(e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}))}get inputNodes(){return this._inputs.map(e=>e.signatureKey||e.name)}get outputNodes(){return this._outputs.map(e=>{const t=e.signatureKey||e.name;return e.defaultOutput?`${t}:${e.defaultOutput}`:t})}get functions(){return Object.keys(this._functions).reduce((e,t)=>(e[t]=this._functions[t].signature,e),{})}constructor(e,t){this.graph=e,this.parent=t,this.compiledMap=new Map,this.parseNodeNameCache=new Map,this._weightMap={},this.SEPARATOR=",",this._functions={},this._functionExecutorMap={},this.keepIntermediateTensors=!1,this._outputs=e.outputs,this._inputs=e.inputs,this._initNodes=e.initNodes,this._signature=e.signature,this._functions=e.functions,e.functions!=null&&Object.keys(e.functions).forEach(s=>{this._functionExecutorMap[s]=new rc(e.functions[s],this)})}getCompilationKey(e,t){const s=e.map(o=>o.name).sort(),r=t.map(o=>o.name).sort();return s.join(this.SEPARATOR)+"--"+r.join(this.SEPARATOR)}compile(e,t){const s=Db(e,t,this.weightMap,this._initNodes),{missingInputs:r,dynamicNode:o,syncInputs:a}=s;if(o!=null)throw new Error(`This execution contains the node '${o.name}', which has the dynamic op '${o.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${a}]`);if(r.length>0){const u=t.map(h=>h.name),c=Object.keys(e);throw new Error(`Cannot compute the outputs [${u}] from the provided inputs [${c}]. Missing the following inputs: [${r}]`)}const l=m3(this.graph,s),i=b3(l);return{orderedNodes:l,nodeLiveUntilMap:i}}cloneAndKeepTensor(e){if(e==null)return null;const t=e.clone();return mn(t),t}cloneTensorList(e){return e?e.map(s=>this.cloneAndKeepTensor(s)):null}cloneTensorMap(e){return Object.fromEntries(Object.entries(e).map(([t,s])=>[t,this.cloneTensorList(s)]))}execute(e,t){this.disposeIntermediateTensors(),e=this.mapInputs(e);const s=Object.keys(e).sort();this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t);const r=s.map(d=>this.graph.nodes[Qn(d)[0]]),o=t.map(d=>Qn(d)[0]),a=new Set(o);let l=o.map(d=>this.graph.nodes[d]);l.length===0&&(l=this._outputs);const i=this.getCompilationKey(r,l);let u=this.compiledMap.get(i);u==null&&(u=this.compile(e,l),this.compiledMap.set(i,u));try{this.keepIntermediateTensors=de().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(d){this.keepIntermediateTensors=!1,console.warn(d.message)}const c={},h={};return ce(()=>{const d=new Ab(this.weightMap,c,h,this.functionExecutorMap,this.parseNodeNameCache),p=Object.assign({},this.weightMap);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap)),Object.keys(e).forEach(x=>{const[w,v]=Qn(x,d),k=[];k[v]=e[x],p[w]=k,this.keepIntermediateTensors&&(this.clonedTensorsMap[w]=this.cloneTensorList(k))});const f=this.getFrozenTensorIds(p),{orderedNodes:g,nodeLiveUntilMap:y}=u;for(const x of g){if(p[x.name])continue;const w=Eb(x,p,d,this._resourceManager);if(Fo(w))throw new Error(`The execution of the op '${x.op}' returned a promise. Please use model.executeAsync() instead.`);p[x.name]=w,this.keepIntermediateTensors&&(this.clonedTensorsMap[x.name]=this.cloneTensorList(w)),this.checkTensorForDisposalWithNodeLiveUntilInfo(x,p,d,f,a,y.get(x.name))}return this.parent==null&&d.dispose(f),t.map(x=>vn(x,p,d))})}getFrozenTensorIds(e){const t=[].concat.apply([],Object.keys(e).map(s=>e[s]).map(s=>s.map(r=>r.id)));return new Set(t)}checkTensorForDisposal(e,t,s,r,o,a,l){if(!(Io(t)||a.has(e))){for(const i of s[e])i!=null&&(l[i.id]=(l[i.id]||0)+t.children.length);for(const i of t.inputs){if(Io(i))continue;const u=Ib(i.name,s,r);if(u!=null)for(const c of u){if(!c||c.kept||o.has(c.id))continue;const h=l[c.id];h===1?(c.dispose(),delete l[c.id]):h!=null&&l[c.id]--}}}}checkTensorForDisposalWithNodeLiveUntilInfo(e,t,s,r,o,a){function l(i){return Io(i)||o.has(i.name)}if(!(Io(e)||a==null))for(const i of a){if(l(i))continue;const u=Ib(i.name,t,s);for(const c of u)!c||c.kept||r.has(c.id)||c.dispose()}}async executeAsync(e,t){return this._executeAsync(e,t)}disposeIntermediateTensors(){this.clonedTensorsMap&&(Object.values(this.clonedTensorsMap).forEach(e=>{for(const t of e)t&&!t.isDisposed&&t.dispose()}),this.clonedTensorsMap=null)}getIntermediateTensors(){return this.clonedTensorsMap}async _executeAsync(e,t,s=!1,r={},o={}){this.disposeIntermediateTensors(),s||(e=this.mapInputs(e),this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t));try{this.keepIntermediateTensors=de().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(d){this.keepIntermediateTensors=!1,console.warn(d.message)}const a=new Ab(this.weightMap,r,o,this.functionExecutorMap,this.parseNodeNameCache);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap));const l=await this.executeWithControlFlow(e,a,t,s),i=t.map(d=>vn(d,l,a)),u=i.map(d=>d.id),c=Object.keys(e).map(d=>e[d].id),h=new Set([...u,...c,...this.weightIds]);return Object.values(l).forEach(d=>{d.forEach(p=>{p&&!p.isDisposed&&!h.has(p.id)&&p.dispose()})}),this.parent==null&&a.dispose(h),i}async executeFunctionAsync(e,t,s){const r=e.reduce((o,a,l)=>(o[this.inputs[l].name]=a,o),{});return this._executeAsync(r,this.outputNodes,!0,t,s)}async executeWithControlFlow(e,t,s,r){const o=Object.keys(e),a=o.map(k=>this.graph.nodes[Qn(k)[0]]),l=s.map(k=>Qn(k)[0]),i=new Set(l);let u=l.map(k=>this.graph.nodes[k]);u.length===0&&(u=this._outputs);const{usedNodes:c,missingInputs:h,dynamicNode:d,syncInputs:p}=Db(e,u,this.weightMap,this._initNodes),f=[...a,...this.graph.weights,...this._initNodes||[]].map(k=>({node:k,contexts:t.currentContext})),g=Object.assign({},this.weightMap);Object.keys(e).forEach(k=>{const[C,I]=Qn(k),N=[];N[I]=e[k],g[C]=N});const y={},x=this.getFrozenTensorIds(g),w={};for(;f.length>0;){const k=this.processStack(a,f,t,g,w,x,i,y,c);await Promise.all(k)}d==null&&!r&&console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");const v=u.filter(k=>!Io(k)&&!vn(k.name,g,t)).map(k=>k.name);if(v.length>0){let k="";throw d!=null&&(k=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${p}]`),new Error(`Cannot compute the outputs [${v}] from the provided inputs [${o}]. Consider providing the following inputs: [${h}]. ${k}`)}return g}processStack(e,t,s,r,o,a,l,i,u){const c=[];for(;t.length>0;){const h=t.pop();s.currentContext=h.contexts;let d="";if(h.node.op==="Enter"&&_("isConstant",h.node,r,s)&&([d]=vr(h.node.name,s)),r[h.node.name]==null){const p=Eb(h.node,r,s,this._resourceManager);d||([d]=vr(h.node.name,s));const f=s.currentContext;Fo(p)?c.push(p.then(g=>(r[d]=g,this.keepIntermediateTensors&&(this.clonedTensorsMap[d]=this.cloneTensorList(g)),s.currentContext=f,this.checkTensorForDisposal(d,h.node,r,s,a,l,i),this.processChildNodes(h.node,t,s,r,o,u),g))):(r[d]=p,this.keepIntermediateTensors&&(this.clonedTensorsMap[d]=this.cloneTensorList(p)),this.checkTensorForDisposal(d,h.node,r,s,a,l,i),this.processChildNodes(h.node,t,s,r,o,u))}else this.processChildNodes(h.node,t,s,r,o,u)}return c}processChildNodes(e,t,s,r,o,a){e.children.forEach(l=>{const[i]=vr(l.name,s);o[i]||!a.has(l.name)||(l.op==="Merge"?l.inputNames.some(u=>!!vn(u,r,s))&&(o[i]=!0,t.push({contexts:s.currentContext,node:l})):l.inputNames.every(u=>!!vn(u,r,s))&&(o[i]=!0,t.push({contexts:s.currentContext,node:l})))})}dispose(){Object.keys(this.weightMap).forEach(e=>this.weightMap[e].forEach(t=>t.dispose()))}checkInputShapeAndType(e){Object.keys(e).forEach(t=>{const s=e[t],[r]=Qn(t),o=this.graph.nodes[r];if(o.attrParams.shape&&o.attrParams.shape.value){const a=o.attrParams.shape.value,l=a.length===s.shape.length&&s.shape.every((i,u)=>a[u]===-1||a[u]===i);P(l,()=>`The shape of dict['${o.name}'] provided in model.execute(dict) must be [${a}], but was [${s.shape}]`)}o.attrParams.dtype&&o.attrParams.dtype.value&&P(s.dtype===o.attrParams.dtype.value,()=>`The dtype of dict['${o.name}'] provided in model.execute(dict) must be ${o.attrParams.dtype.value}, but was ${s.dtype}`)})}mapInputs(e){var t,s;const r={};for(const o in e){const a=(s=(t=this._signature)===null||t===void 0?void 0:t.inputs)===null||s===void 0?void 0:s[o];a!=null?r[a.name]=e[o]:r[o]=e[o]}return r}checkInputs(e){const t=Object.keys(e).filter(s=>{const[r]=Qn(s);return this.graph.nodes[r]==null});if(t.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${t}] that are not part of graph`)}mapOutputs(e){return e.map(t=>{var s,r;const o=(r=(s=this._signature)===null||s===void 0?void 0:s.outputs)===null||r===void 0?void 0:r[t];return o!=null?o.name:t},{})}checkOutputs(e){e.forEach(t=>{const[s]=Qn(t);if(!this.graph.nodes[s])throw new Error(`The output '${t}' is not found in the graph`)})}}class C3{constructor(e={},t={}){this.hashTableNameToHandle=e,this.hashTableMap=t}addHashTable(e,t){this.hashTableNameToHandle[e]=t.handle,this.hashTableMap[t.id]=t}getHashTableHandleByName(e){return this.hashTableNameToHandle[e]}getHashTableById(e){return this.hashTableMap[e]}dispose(){for(const e in this.hashTableMap)this.hashTableMap[e].clearAndClose(),delete this.hashTableMap[e];for(const e in this.hashTableNameToHandle)this.hashTableNameToHandle[e].dispose(),delete this.hashTableNameToHandle[e]}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const I3="?tfjs-format=file",N3="model.json";class $3{get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}get modelStructuredOutputKeys(){return this.structuredOutputKeys}constructor(e,t={},s=rg){this.modelUrl=e,this.loadOptions=t,this.version="n/a",this.io=s,t==null&&(this.loadOptions={}),this.resourceManager=new C3}findIOHandler(){const e=this.modelUrl;if(e.load!=null)this.handler=e;else if(this.loadOptions.requestInit!=null)this.handler=this.io.browserHTTPRequest(e,this.loadOptions);else{const t=this.io.getLoadHandlers(e,this.loadOptions);if(t.length===0)t.push(this.io.browserHTTPRequest(e,this.loadOptions));else if(t.length>1)throw new Error(`Found more than one (${t.length}) load handlers for URL '${[e]}'`);this.handler=t[0]}}load(){if(this.findIOHandler(),this.handler.load==null)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const e=this.handler.load();return Fo(e)?e.then(t=>t.getWeightStream==null?this.loadSync(t):this.loadStreaming(t)):this.loadSync(e)}loadSync(e){const t=this.io.decodeWeights(e.weightData,e.weightSpecs);return this.loadWithWeightMap(e,t)}async loadStreaming(e){if(e.getWeightStream==null)throw new Error("Model artifacts missing streamWeights function");const t=await xx(e.getWeightStream(),e.weightSpecs);return this.loadWithWeightMap(e,t)}loadWithWeightMap(e,t){this.artifacts=e;const s=this.artifacts.modelTopology;let r=this.artifacts.signature;if(this.artifacts.userDefinedMetadata!=null){const o=this.artifacts.userDefinedMetadata;o.signature!=null&&(r=o.signature),o.structuredOutputKeys!=null&&(this.structuredOutputKeys=o.structuredOutputKeys)}if(this.signature=r,this.version=`${s.versions.producer}.${s.versions.minConsumer}`,this.executor=new rc(Nb.Instance.transformGraph(s,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(t),this.executor.resourceManager=this.resourceManager,e.modelInitializer!=null&&e.modelInitializer.node!=null){const o=Nb.Instance.transformGraph(e.modelInitializer);this.initializer=new rc(o),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializerSignature=e.initializerSignature}return!0}async save(e,t){if(typeof e=="string"){const s=this.io.getSaveHandlers(e);if(s.length===0)throw new Error(`Cannot find any save handlers for URL '${e}'`);if(s.length>1)throw new Error(`Found more than one (${s.length}) save handlers for URL '${e}'`);e=s[0]}if(e.save==null)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return e.save(this.artifacts)}addStructuredOutputNames(e){if(this.structuredOutputKeys){const t=e instanceof Gt?[e]:e,s={};return t.forEach((r,o)=>s[this.structuredOutputKeys[o]]=r),s}return e}predict(e,t){const s=this.execute(e,this.outputNodes);return this.addStructuredOutputNames(s)}async predictAsync(e,t){const s=await this.executeAsync(e,this.outputNodes);return this.addStructuredOutputNames(s)}normalizeInputs(e){var t;if(!(e instanceof Gt)&&!Array.isArray(e)){const o=(t=this.signature)===null||t===void 0?void 0:t.inputs;if(o!=null)for(const a in o){const l=o[a];l.resourceId!=null&&(e[a]=this.resourceIdToCapturedInput[l.resourceId])}return e}e=Array.isArray(e)?e:[e];const s=Object.keys(this.resourceIdToCapturedInput).length;if(e.length+s!==this.inputNodes.length)throw new Error(`Input tensor count mismatch, the graph model has ${this.inputNodes.length-s} non-resource placeholders, while there are ${e.length} input tensors provided.`);let r=0;return this.inputNodes.reduce((o,a)=>{var l,i,u;const c=(u=(i=(l=this.signature)===null||l===void 0?void 0:l.inputs)===null||i===void 0?void 0:i[a])===null||u===void 0?void 0:u.resourceId;return c!=null?o[a]=this.resourceIdToCapturedInput[c]:o[a]=e[r++],o},{})}normalizeOutputs(e){return e=e||this.outputNodes,Array.isArray(e)?e:[e]}executeInitializerGraph(){return this.initializer==null?[]:this.initializerSignature==null?this.initializer.execute({},[]):this.initializer.execute({},Object.keys(this.initializerSignature.outputs))}async executeInitializerGraphAsync(){return this.initializer==null?[]:this.initializerSignature==null?this.initializer.executeAsync({},[]):this.initializer.executeAsync({},Object.keys(this.initializerSignature.outputs))}setResourceIdToCapturedInput(e){if(this.resourceIdToCapturedInput={},this.initializerSignature){const t=this.initializerSignature.outputs,s=Object.keys(t);for(let r=0;r<s.length;r++){const o=s[r],a=t[o];this.resourceIdToCapturedInput[a.resourceId]=e[r]}}}execute(e,t){this.resourceIdToCapturedInput==null&&this.setResourceIdToCapturedInput(this.executeInitializerGraph()),e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const s=this.executor.execute(e,t);return s.length>1?s:s[0]}async executeAsync(e,t){this.resourceIdToCapturedInput==null&&this.setResourceIdToCapturedInput(await this.executeInitializerGraphAsync()),e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const s=await this.executor.executeAsync(e,t);return s.length>1?s:s[0]}getIntermediateTensors(){return this.executor.getIntermediateTensors()}disposeIntermediateTensors(){this.executor.disposeIntermediateTensors()}convertTensorMapToTensorsMap(e){return Object.keys(e).reduce((t,s)=>(t[s]=[e[s]],t),{})}dispose(){this.executor.dispose(),this.initializer&&(this.initializer.dispose(),this.resourceIdToCapturedInput&&ut(this.resourceIdToCapturedInput)),this.resourceManager.dispose()}}async function T3(n,e={},t=rg){if(n==null)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");e==null&&(e={}),e.fromTFHub&&typeof n=="string"&&(n=_3(n));const s=new $3(n,e,t);return await s.load(),s}function _3(n){return n.endsWith("/")||(n=n+"/"),`${n}${N3}${I3}`}/**
 * @license
 * Copyright 2024 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var pa=typeof globalThis<"u"?globalThis:typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{};function _u(n){throw new Error('Could not dynamically require "'+n+'". Please configure the dynamicRequireTargets or/and ignoreDynamicRequires option of @rollup/plugin-commonjs appropriately for this require call to work.')}var Dw={exports:{}};(function(n,e){var t=(a,l)=>()=>(l||a((l={exports:{}}).exports,l),l.exports),s=(a,l,i)=>new Promise((u,c)=>{var h=f=>{try{p(i.next(f))}catch(g){c(g)}},d=f=>{try{p(i.throw(f))}catch(g){c(g)}},p=f=>f.done?u(f.value):Promise.resolve(f.value).then(h,d);p((i=i.apply(a,l)).next())}),r=t((a,l)=>{(function(i){typeof a=="object"&&typeof l<"u"?l.exports=i():(typeof window<"u"?window:typeof pa<"u"?pa:typeof self<"u"?self:this).JSZip=i()})(function(){return function i(u,c,h){function d(g,y){if(!c[g]){if(!u[g]){var x=typeof _u=="function"&&_u;if(!y&&x)return x(g,!0);if(p)return p(g,!0);var w=new Error("Cannot find module '"+g+"'");throw w.code="MODULE_NOT_FOUND",w}var v=c[g]={exports:{}};u[g][0].call(v.exports,function(k){var C=u[g][1][k];return d(C||k)},v,v.exports,i,u,c,h)}return c[g].exports}for(var p=typeof _u=="function"&&_u,f=0;f<h.length;f++)d(h[f]);return d}({1:[function(i,u,c){var h=i("./utils"),d=i("./support"),p="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";c.encode=function(f){for(var g,y,x,w,v,k,C,I=[],N=0,E=f.length,R=E,O=h.getTypeOf(f)!=="string";N<f.length;)R=E-N,x=O?(g=f[N++],y=N<E?f[N++]:0,N<E?f[N++]:0):(g=f.charCodeAt(N++),y=N<E?f.charCodeAt(N++):0,N<E?f.charCodeAt(N++):0),w=g>>2,v=(3&g)<<4|y>>4,k=1<R?(15&y)<<2|x>>6:64,C=2<R?63&x:64,I.push(p.charAt(w)+p.charAt(v)+p.charAt(k)+p.charAt(C));return I.join("")},c.decode=function(f){var g,y,x,w,v,k,C=0,I=0,N="data:";if(f.substr(0,N.length)===N)throw new Error("Invalid base64 input, it looks like a data url.");var E,R=3*(f=f.replace(/[^A-Za-z0-9+/=]/g,"")).length/4;if(f.charAt(f.length-1)===p.charAt(64)&&R--,f.charAt(f.length-2)===p.charAt(64)&&R--,R%1!=0)throw new Error("Invalid base64 input, bad content length.");for(E=d.uint8array?new Uint8Array(0|R):new Array(0|R);C<f.length;)g=p.indexOf(f.charAt(C++))<<2|(w=p.indexOf(f.charAt(C++)))>>4,y=(15&w)<<4|(v=p.indexOf(f.charAt(C++)))>>2,x=(3&v)<<6|(k=p.indexOf(f.charAt(C++))),E[I++]=g,v!==64&&(E[I++]=y),k!==64&&(E[I++]=x);return E}},{"./support":30,"./utils":32}],2:[function(i,u,c){var h=i("./external"),d=i("./stream/DataWorker"),p=i("./stream/Crc32Probe"),f=i("./stream/DataLengthProbe");function g(y,x,w,v,k){this.compressedSize=y,this.uncompressedSize=x,this.crc32=w,this.compression=v,this.compressedContent=k}g.prototype={getContentWorker:function(){var y=new d(h.Promise.resolve(this.compressedContent)).pipe(this.compression.uncompressWorker()).pipe(new f("data_length")),x=this;return y.on("end",function(){if(this.streamInfo.data_length!==x.uncompressedSize)throw new Error("Bug : uncompressed data size mismatch")}),y},getCompressedWorker:function(){return new d(h.Promise.resolve(this.compressedContent)).withStreamInfo("compressedSize",this.compressedSize).withStreamInfo("uncompressedSize",this.uncompressedSize).withStreamInfo("crc32",this.crc32).withStreamInfo("compression",this.compression)}},g.createWorkerFrom=function(y,x,w){return y.pipe(new p).pipe(new f("uncompressedSize")).pipe(x.compressWorker(w)).pipe(new f("compressedSize")).withStreamInfo("compression",x)},u.exports=g},{"./external":6,"./stream/Crc32Probe":25,"./stream/DataLengthProbe":26,"./stream/DataWorker":27}],3:[function(i,u,c){var h=i("./stream/GenericWorker");c.STORE={magic:"\0\0",compressWorker:function(){return new h("STORE compression")},uncompressWorker:function(){return new h("STORE decompression")}},c.DEFLATE=i("./flate")},{"./flate":7,"./stream/GenericWorker":28}],4:[function(i,u,c){var h=i("./utils"),d=function(){for(var p,f=[],g=0;g<256;g++){p=g;for(var y=0;y<8;y++)p=1&p?3988292384^p>>>1:p>>>1;f[g]=p}return f}();u.exports=function(p,f){return p!==void 0&&p.length?h.getTypeOf(p)!=="string"?function(g,y,x,w){var v=d,k=w+x;g^=-1;for(var C=w;C<k;C++)g=g>>>8^v[255&(g^y[C])];return-1^g}(0|f,p,p.length,0):function(g,y,x,w){var v=d,k=w+x;g^=-1;for(var C=w;C<k;C++)g=g>>>8^v[255&(g^y.charCodeAt(C))];return-1^g}(0|f,p,p.length,0):0}},{"./utils":32}],5:[function(i,u,c){c.base64=!1,c.binary=!1,c.dir=!1,c.createFolders=!0,c.date=null,c.compression=null,c.compressionOptions=null,c.comment=null,c.unixPermissions=null,c.dosPermissions=null},{}],6:[function(i,u,c){var h=null;h=typeof Promise<"u"?Promise:i("lie"),u.exports={Promise:h}},{lie:37}],7:[function(i,u,c){var h=typeof Uint8Array<"u"&&typeof Uint16Array<"u"&&typeof Uint32Array<"u",d=i("pako"),p=i("./utils"),f=i("./stream/GenericWorker"),g=h?"uint8array":"array";function y(x,w){f.call(this,"FlateWorker/"+x),this._pako=null,this._pakoAction=x,this._pakoOptions=w,this.meta={}}c.magic="\b\0",p.inherits(y,f),y.prototype.processChunk=function(x){this.meta=x.meta,this._pako===null&&this._createPako(),this._pako.push(p.transformTo(g,x.data),!1)},y.prototype.flush=function(){f.prototype.flush.call(this),this._pako===null&&this._createPako(),this._pako.push([],!0)},y.prototype.cleanUp=function(){f.prototype.cleanUp.call(this),this._pako=null},y.prototype._createPako=function(){this._pako=new d[this._pakoAction]({raw:!0,level:this._pakoOptions.level||-1});var x=this;this._pako.onData=function(w){x.push({data:w,meta:x.meta})}},c.compressWorker=function(x){return new y("Deflate",x)},c.uncompressWorker=function(){return new y("Inflate",{})}},{"./stream/GenericWorker":28,"./utils":32,pako:38}],8:[function(i,u,c){function h(v,k){var C,I="";for(C=0;C<k;C++)I+=String.fromCharCode(255&v),v>>>=8;return I}function d(v,k,C,I,N,E){var R,O,B=v.file,j=v.compression,U=E!==g.utf8encode,K=p.transformTo("string",E(B.name)),H=p.transformTo("string",g.utf8encode(B.name)),Z=B.comment,ue=p.transformTo("string",E(Z)),M=p.transformTo("string",g.utf8encode(Z)),X=H.length!==B.name.length,A=M.length!==Z.length,ee="",be="",ie="",xe=B.dir,le=B.date,ke={crc32:0,compressedSize:0,uncompressedSize:0};k&&!C||(ke.crc32=v.crc32,ke.compressedSize=v.compressedSize,ke.uncompressedSize=v.uncompressedSize);var oe=0;k&&(oe|=8),U||!X&&!A||(oe|=2048);var se=0,$e=0;xe&&(se|=16),N==="UNIX"?($e=798,se|=function(we,Qe){var tt=we;return we||(tt=Qe?16893:33204),(65535&tt)<<16}(B.unixPermissions,xe)):($e=20,se|=function(we){return 63&(we||0)}(B.dosPermissions)),R=le.getUTCHours(),R<<=6,R|=le.getUTCMinutes(),R<<=5,R|=le.getUTCSeconds()/2,O=le.getUTCFullYear()-1980,O<<=4,O|=le.getUTCMonth()+1,O<<=5,O|=le.getUTCDate(),X&&(be=h(1,1)+h(y(K),4)+H,ee+="up"+h(be.length,2)+be),A&&(ie=h(1,1)+h(y(ue),4)+M,ee+="uc"+h(ie.length,2)+ie);var Ce="";return Ce+=`
\0`,Ce+=h(oe,2),Ce+=j.magic,Ce+=h(R,2),Ce+=h(O,2),Ce+=h(ke.crc32,4),Ce+=h(ke.compressedSize,4),Ce+=h(ke.uncompressedSize,4),Ce+=h(K.length,2),Ce+=h(ee.length,2),{fileRecord:x.LOCAL_FILE_HEADER+Ce+K+ee,dirRecord:x.CENTRAL_FILE_HEADER+h($e,2)+Ce+h(ue.length,2)+"\0\0\0\0"+h(se,4)+h(I,4)+K+ee+ue}}var p=i("../utils"),f=i("../stream/GenericWorker"),g=i("../utf8"),y=i("../crc32"),x=i("../signature");function w(v,k,C,I){f.call(this,"ZipFileWorker"),this.bytesWritten=0,this.zipComment=k,this.zipPlatform=C,this.encodeFileName=I,this.streamFiles=v,this.accumulate=!1,this.contentBuffer=[],this.dirRecords=[],this.currentSourceOffset=0,this.entriesCount=0,this.currentFile=null,this._sources=[]}p.inherits(w,f),w.prototype.push=function(v){var k=v.meta.percent||0,C=this.entriesCount,I=this._sources.length;this.accumulate?this.contentBuffer.push(v):(this.bytesWritten+=v.data.length,f.prototype.push.call(this,{data:v.data,meta:{currentFile:this.currentFile,percent:C?(k+100*(C-I-1))/C:100}}))},w.prototype.openedSource=function(v){this.currentSourceOffset=this.bytesWritten,this.currentFile=v.file.name;var k=this.streamFiles&&!v.file.dir;if(k){var C=d(v,k,!1,this.currentSourceOffset,this.zipPlatform,this.encodeFileName);this.push({data:C.fileRecord,meta:{percent:0}})}else this.accumulate=!0},w.prototype.closedSource=function(v){this.accumulate=!1;var k=this.streamFiles&&!v.file.dir,C=d(v,k,!0,this.currentSourceOffset,this.zipPlatform,this.encodeFileName);if(this.dirRecords.push(C.dirRecord),k)this.push({data:function(I){return x.DATA_DESCRIPTOR+h(I.crc32,4)+h(I.compressedSize,4)+h(I.uncompressedSize,4)}(v),meta:{percent:100}});else for(this.push({data:C.fileRecord,meta:{percent:0}});this.contentBuffer.length;)this.push(this.contentBuffer.shift());this.currentFile=null},w.prototype.flush=function(){for(var v=this.bytesWritten,k=0;k<this.dirRecords.length;k++)this.push({data:this.dirRecords[k],meta:{percent:100}});var C=this.bytesWritten-v,I=function(N,E,R,O,B){var j=p.transformTo("string",B(O));return x.CENTRAL_DIRECTORY_END+"\0\0\0\0"+h(N,2)+h(N,2)+h(E,4)+h(R,4)+h(j.length,2)+j}(this.dirRecords.length,C,v,this.zipComment,this.encodeFileName);this.push({data:I,meta:{percent:100}})},w.prototype.prepareNextSource=function(){this.previous=this._sources.shift(),this.openedSource(this.previous.streamInfo),this.isPaused?this.previous.pause():this.previous.resume()},w.prototype.registerPrevious=function(v){this._sources.push(v);var k=this;return v.on("data",function(C){k.processChunk(C)}),v.on("end",function(){k.closedSource(k.previous.streamInfo),k._sources.length?k.prepareNextSource():k.end()}),v.on("error",function(C){k.error(C)}),this},w.prototype.resume=function(){return!!f.prototype.resume.call(this)&&(!this.previous&&this._sources.length?(this.prepareNextSource(),!0):this.previous||this._sources.length||this.generatedError?void 0:(this.end(),!0))},w.prototype.error=function(v){var k=this._sources;if(!f.prototype.error.call(this,v))return!1;for(var C=0;C<k.length;C++)try{k[C].error(v)}catch{}return!0},w.prototype.lock=function(){f.prototype.lock.call(this);for(var v=this._sources,k=0;k<v.length;k++)v[k].lock()},u.exports=w},{"../crc32":4,"../signature":23,"../stream/GenericWorker":28,"../utf8":31,"../utils":32}],9:[function(i,u,c){var h=i("../compressions"),d=i("./ZipFileWorker");c.generateWorker=function(p,f,g){var y=new d(f.streamFiles,g,f.platform,f.encodeFileName),x=0;try{p.forEach(function(w,v){x++;var k=function(E,R){var O=E||R,B=h[O];if(!B)throw new Error(O+" is not a valid compression method !");return B}(v.options.compression,f.compression),C=v.options.compressionOptions||f.compressionOptions||{},I=v.dir,N=v.date;v._compressWorker(k,C).withStreamInfo("file",{name:w,dir:I,date:N,comment:v.comment||"",unixPermissions:v.unixPermissions,dosPermissions:v.dosPermissions}).pipe(y)}),y.entriesCount=x}catch(w){y.error(w)}return y}},{"../compressions":3,"./ZipFileWorker":8}],10:[function(i,u,c){function h(){if(!(this instanceof h))return new h;if(arguments.length)throw new Error("The constructor with parameters has been removed in JSZip 3.0, please check the upgrade guide.");this.files=Object.create(null),this.comment=null,this.root="",this.clone=function(){var d=new h;for(var p in this)typeof this[p]!="function"&&(d[p]=this[p]);return d}}(h.prototype=i("./object")).loadAsync=i("./load"),h.support=i("./support"),h.defaults=i("./defaults"),h.version="3.10.1",h.loadAsync=function(d,p){return new h().loadAsync(d,p)},h.external=i("./external"),u.exports=h},{"./defaults":5,"./external":6,"./load":11,"./object":15,"./support":30}],11:[function(i,u,c){var h=i("./utils"),d=i("./external"),p=i("./utf8"),f=i("./zipEntries"),g=i("./stream/Crc32Probe"),y=i("./nodejsUtils");function x(w){return new d.Promise(function(v,k){var C=w.decompressed.getContentWorker().pipe(new g);C.on("error",function(I){k(I)}).on("end",function(){C.streamInfo.crc32!==w.decompressed.crc32?k(new Error("Corrupted zip : CRC32 mismatch")):v()}).resume()})}u.exports=function(w,v){var k=this;return v=h.extend(v||{},{base64:!1,checkCRC32:!1,optimizedBinaryString:!1,createFolders:!1,decodeFileName:p.utf8decode}),y.isNode&&y.isStream(w)?d.Promise.reject(new Error("JSZip can't accept a stream when loading a zip file.")):h.prepareContent("the loaded zip file",w,!0,v.optimizedBinaryString,v.base64).then(function(C){var I=new f(v);return I.load(C),I}).then(function(C){var I=[d.Promise.resolve(C)],N=C.files;if(v.checkCRC32)for(var E=0;E<N.length;E++)I.push(x(N[E]));return d.Promise.all(I)}).then(function(C){for(var I=C.shift(),N=I.files,E=0;E<N.length;E++){var R=N[E],O=R.fileNameStr,B=h.resolve(R.fileNameStr);k.file(B,R.decompressed,{binary:!0,optimizedBinaryString:!0,date:R.date,dir:R.dir,comment:R.fileCommentStr.length?R.fileCommentStr:null,unixPermissions:R.unixPermissions,dosPermissions:R.dosPermissions,createFolders:v.createFolders}),R.dir||(k.file(B).unsafeOriginalName=O)}return I.zipComment.length&&(k.comment=I.zipComment),k})}},{"./external":6,"./nodejsUtils":14,"./stream/Crc32Probe":25,"./utf8":31,"./utils":32,"./zipEntries":33}],12:[function(i,u,c){var h=i("../utils"),d=i("../stream/GenericWorker");function p(f,g){d.call(this,"Nodejs stream input adapter for "+f),this._upstreamEnded=!1,this._bindStream(g)}h.inherits(p,d),p.prototype._bindStream=function(f){var g=this;(this._stream=f).pause(),f.on("data",function(y){g.push({data:y,meta:{percent:0}})}).on("error",function(y){g.isPaused?this.generatedError=y:g.error(y)}).on("end",function(){g.isPaused?g._upstreamEnded=!0:g.end()})},p.prototype.pause=function(){return!!d.prototype.pause.call(this)&&(this._stream.pause(),!0)},p.prototype.resume=function(){return!!d.prototype.resume.call(this)&&(this._upstreamEnded?this.end():this._stream.resume(),!0)},u.exports=p},{"../stream/GenericWorker":28,"../utils":32}],13:[function(i,u,c){var h=i("readable-stream").Readable;function d(p,f,g){h.call(this,f),this._helper=p;var y=this;p.on("data",function(x,w){y.push(x)||y._helper.pause(),g&&g(w)}).on("error",function(x){y.emit("error",x)}).on("end",function(){y.push(null)})}i("../utils").inherits(d,h),d.prototype._read=function(){this._helper.resume()},u.exports=d},{"../utils":32,"readable-stream":16}],14:[function(i,u,c){u.exports={isNode:typeof Buffer<"u",newBufferFrom:function(h,d){if(Buffer.from&&Buffer.from!==Uint8Array.from)return Buffer.from(h,d);if(typeof h=="number")throw new Error('The "data" argument must not be a number');return new Buffer(h,d)},allocBuffer:function(h){if(Buffer.alloc)return Buffer.alloc(h);var d=new Buffer(h);return d.fill(0),d},isBuffer:function(h){return Buffer.isBuffer(h)},isStream:function(h){return h&&typeof h.on=="function"&&typeof h.pause=="function"&&typeof h.resume=="function"}}},{}],15:[function(i,u,c){function h(B,j,U){var K,H=p.getTypeOf(j),Z=p.extend(U||{},y);Z.date=Z.date||new Date,Z.compression!==null&&(Z.compression=Z.compression.toUpperCase()),typeof Z.unixPermissions=="string"&&(Z.unixPermissions=parseInt(Z.unixPermissions,8)),Z.unixPermissions&&16384&Z.unixPermissions&&(Z.dir=!0),Z.dosPermissions&&16&Z.dosPermissions&&(Z.dir=!0),Z.dir&&(B=N(B)),Z.createFolders&&(K=I(B))&&E.call(this,K,!0);var ue=H==="string"&&Z.binary===!1&&Z.base64===!1;U&&U.binary!==void 0||(Z.binary=!ue),(j instanceof x&&j.uncompressedSize===0||Z.dir||!j||j.length===0)&&(Z.base64=!1,Z.binary=!0,j="",Z.compression="STORE",H="string");var M=null;M=j instanceof x||j instanceof f?j:k.isNode&&k.isStream(j)?new C(B,j):p.prepareContent(B,j,Z.binary,Z.optimizedBinaryString,Z.base64);var X=new w(B,M,Z);this.files[B]=X}var d=i("./utf8"),p=i("./utils"),f=i("./stream/GenericWorker"),g=i("./stream/StreamHelper"),y=i("./defaults"),x=i("./compressedObject"),w=i("./zipObject"),v=i("./generate"),k=i("./nodejsUtils"),C=i("./nodejs/NodejsStreamInputAdapter"),I=function(B){B.slice(-1)==="/"&&(B=B.substring(0,B.length-1));var j=B.lastIndexOf("/");return 0<j?B.substring(0,j):""},N=function(B){return B.slice(-1)!=="/"&&(B+="/"),B},E=function(B,j){return j=j!==void 0?j:y.createFolders,B=N(B),this.files[B]||h.call(this,B,null,{dir:!0,createFolders:j}),this.files[B]};function R(B){return Object.prototype.toString.call(B)==="[object RegExp]"}var O={load:function(){throw new Error("This method has been removed in JSZip 3.0, please check the upgrade guide.")},forEach:function(B){var j,U,K;for(j in this.files)K=this.files[j],(U=j.slice(this.root.length,j.length))&&j.slice(0,this.root.length)===this.root&&B(U,K)},filter:function(B){var j=[];return this.forEach(function(U,K){B(U,K)&&j.push(K)}),j},file:function(B,j,U){if(arguments.length!==1)return B=this.root+B,h.call(this,B,j,U),this;if(R(B)){var K=B;return this.filter(function(Z,ue){return!ue.dir&&K.test(Z)})}var H=this.files[this.root+B];return H&&!H.dir?H:null},folder:function(B){if(!B)return this;if(R(B))return this.filter(function(H,Z){return Z.dir&&B.test(H)});var j=this.root+B,U=E.call(this,j),K=this.clone();return K.root=U.name,K},remove:function(B){B=this.root+B;var j=this.files[B];if(j||(B.slice(-1)!=="/"&&(B+="/"),j=this.files[B]),j&&!j.dir)delete this.files[B];else for(var U=this.filter(function(H,Z){return Z.name.slice(0,B.length)===B}),K=0;K<U.length;K++)delete this.files[U[K].name];return this},generate:function(){throw new Error("This method has been removed in JSZip 3.0, please check the upgrade guide.")},generateInternalStream:function(B){var j,U={};try{if((U=p.extend(B||{},{streamFiles:!1,compression:"STORE",compressionOptions:null,type:"",platform:"DOS",comment:null,mimeType:"application/zip",encodeFileName:d.utf8encode})).type=U.type.toLowerCase(),U.compression=U.compression.toUpperCase(),U.type==="binarystring"&&(U.type="string"),!U.type)throw new Error("No output type specified.");p.checkSupport(U.type),U.platform!=="darwin"&&U.platform!=="freebsd"&&U.platform!=="linux"&&U.platform!=="sunos"||(U.platform="UNIX"),U.platform==="win32"&&(U.platform="DOS");var K=U.comment||this.comment||"";j=v.generateWorker(this,U,K)}catch(H){(j=new f("error")).error(H)}return new g(j,U.type||"string",U.mimeType)},generateAsync:function(B,j){return this.generateInternalStream(B).accumulate(j)},generateNodeStream:function(B,j){return(B=B||{}).type||(B.type="nodebuffer"),this.generateInternalStream(B).toNodejsStream(j)}};u.exports=O},{"./compressedObject":2,"./defaults":5,"./generate":9,"./nodejs/NodejsStreamInputAdapter":12,"./nodejsUtils":14,"./stream/GenericWorker":28,"./stream/StreamHelper":29,"./utf8":31,"./utils":32,"./zipObject":35}],16:[function(i,u,c){u.exports=i("stream")},{stream:void 0}],17:[function(i,u,c){var h=i("./DataReader");function d(p){h.call(this,p);for(var f=0;f<this.data.length;f++)p[f]=255&p[f]}i("../utils").inherits(d,h),d.prototype.byteAt=function(p){return this.data[this.zero+p]},d.prototype.lastIndexOfSignature=function(p){for(var f=p.charCodeAt(0),g=p.charCodeAt(1),y=p.charCodeAt(2),x=p.charCodeAt(3),w=this.length-4;0<=w;--w)if(this.data[w]===f&&this.data[w+1]===g&&this.data[w+2]===y&&this.data[w+3]===x)return w-this.zero;return-1},d.prototype.readAndCheckSignature=function(p){var f=p.charCodeAt(0),g=p.charCodeAt(1),y=p.charCodeAt(2),x=p.charCodeAt(3),w=this.readData(4);return f===w[0]&&g===w[1]&&y===w[2]&&x===w[3]},d.prototype.readData=function(p){if(this.checkOffset(p),p===0)return[];var f=this.data.slice(this.zero+this.index,this.zero+this.index+p);return this.index+=p,f},u.exports=d},{"../utils":32,"./DataReader":18}],18:[function(i,u,c){var h=i("../utils");function d(p){this.data=p,this.length=p.length,this.index=0,this.zero=0}d.prototype={checkOffset:function(p){this.checkIndex(this.index+p)},checkIndex:function(p){if(this.length<this.zero+p||p<0)throw new Error("End of data reached (data length = "+this.length+", asked index = "+p+"). Corrupted zip ?")},setIndex:function(p){this.checkIndex(p),this.index=p},skip:function(p){this.setIndex(this.index+p)},byteAt:function(){},readInt:function(p){var f,g=0;for(this.checkOffset(p),f=this.index+p-1;f>=this.index;f--)g=(g<<8)+this.byteAt(f);return this.index+=p,g},readString:function(p){return h.transformTo("string",this.readData(p))},readData:function(){},lastIndexOfSignature:function(){},readAndCheckSignature:function(){},readDate:function(){var p=this.readInt(4);return new Date(Date.UTC(1980+(p>>25&127),(p>>21&15)-1,p>>16&31,p>>11&31,p>>5&63,(31&p)<<1))}},u.exports=d},{"../utils":32}],19:[function(i,u,c){var h=i("./Uint8ArrayReader");function d(p){h.call(this,p)}i("../utils").inherits(d,h),d.prototype.readData=function(p){this.checkOffset(p);var f=this.data.slice(this.zero+this.index,this.zero+this.index+p);return this.index+=p,f},u.exports=d},{"../utils":32,"./Uint8ArrayReader":21}],20:[function(i,u,c){var h=i("./DataReader");function d(p){h.call(this,p)}i("../utils").inherits(d,h),d.prototype.byteAt=function(p){return this.data.charCodeAt(this.zero+p)},d.prototype.lastIndexOfSignature=function(p){return this.data.lastIndexOf(p)-this.zero},d.prototype.readAndCheckSignature=function(p){return p===this.readData(4)},d.prototype.readData=function(p){this.checkOffset(p);var f=this.data.slice(this.zero+this.index,this.zero+this.index+p);return this.index+=p,f},u.exports=d},{"../utils":32,"./DataReader":18}],21:[function(i,u,c){var h=i("./ArrayReader");function d(p){h.call(this,p)}i("../utils").inherits(d,h),d.prototype.readData=function(p){if(this.checkOffset(p),p===0)return new Uint8Array(0);var f=this.data.subarray(this.zero+this.index,this.zero+this.index+p);return this.index+=p,f},u.exports=d},{"../utils":32,"./ArrayReader":17}],22:[function(i,u,c){var h=i("../utils"),d=i("../support"),p=i("./ArrayReader"),f=i("./StringReader"),g=i("./NodeBufferReader"),y=i("./Uint8ArrayReader");u.exports=function(x){var w=h.getTypeOf(x);return h.checkSupport(w),w!=="string"||d.uint8array?w==="nodebuffer"?new g(x):d.uint8array?new y(h.transformTo("uint8array",x)):new p(h.transformTo("array",x)):new f(x)}},{"../support":30,"../utils":32,"./ArrayReader":17,"./NodeBufferReader":19,"./StringReader":20,"./Uint8ArrayReader":21}],23:[function(i,u,c){c.LOCAL_FILE_HEADER="PK",c.CENTRAL_FILE_HEADER="PK",c.CENTRAL_DIRECTORY_END="PK",c.ZIP64_CENTRAL_DIRECTORY_LOCATOR="PK\x07",c.ZIP64_CENTRAL_DIRECTORY_END="PK",c.DATA_DESCRIPTOR="PK\x07\b"},{}],24:[function(i,u,c){var h=i("./GenericWorker"),d=i("../utils");function p(f){h.call(this,"ConvertWorker to "+f),this.destType=f}d.inherits(p,h),p.prototype.processChunk=function(f){this.push({data:d.transformTo(this.destType,f.data),meta:f.meta})},u.exports=p},{"../utils":32,"./GenericWorker":28}],25:[function(i,u,c){var h=i("./GenericWorker"),d=i("../crc32");function p(){h.call(this,"Crc32Probe"),this.withStreamInfo("crc32",0)}i("../utils").inherits(p,h),p.prototype.processChunk=function(f){this.streamInfo.crc32=d(f.data,this.streamInfo.crc32||0),this.push(f)},u.exports=p},{"../crc32":4,"../utils":32,"./GenericWorker":28}],26:[function(i,u,c){var h=i("../utils"),d=i("./GenericWorker");function p(f){d.call(this,"DataLengthProbe for "+f),this.propName=f,this.withStreamInfo(f,0)}h.inherits(p,d),p.prototype.processChunk=function(f){if(f){var g=this.streamInfo[this.propName]||0;this.streamInfo[this.propName]=g+f.data.length}d.prototype.processChunk.call(this,f)},u.exports=p},{"../utils":32,"./GenericWorker":28}],27:[function(i,u,c){var h=i("../utils"),d=i("./GenericWorker");function p(f){d.call(this,"DataWorker");var g=this;this.dataIsReady=!1,this.index=0,this.max=0,this.data=null,this.type="",this._tickScheduled=!1,f.then(function(y){g.dataIsReady=!0,g.data=y,g.max=y&&y.length||0,g.type=h.getTypeOf(y),g.isPaused||g._tickAndRepeat()},function(y){g.error(y)})}h.inherits(p,d),p.prototype.cleanUp=function(){d.prototype.cleanUp.call(this),this.data=null},p.prototype.resume=function(){return!!d.prototype.resume.call(this)&&(!this._tickScheduled&&this.dataIsReady&&(this._tickScheduled=!0,h.delay(this._tickAndRepeat,[],this)),!0)},p.prototype._tickAndRepeat=function(){this._tickScheduled=!1,this.isPaused||this.isFinished||(this._tick(),this.isFinished||(h.delay(this._tickAndRepeat,[],this),this._tickScheduled=!0))},p.prototype._tick=function(){if(this.isPaused||this.isFinished)return!1;var f=null,g=Math.min(this.max,this.index+16384);if(this.index>=this.max)return this.end();switch(this.type){case"string":f=this.data.substring(this.index,g);break;case"uint8array":f=this.data.subarray(this.index,g);break;case"array":case"nodebuffer":f=this.data.slice(this.index,g)}return this.index=g,this.push({data:f,meta:{percent:this.max?this.index/this.max*100:0}})},u.exports=p},{"../utils":32,"./GenericWorker":28}],28:[function(i,u,c){function h(d){this.name=d||"default",this.streamInfo={},this.generatedError=null,this.extraStreamInfo={},this.isPaused=!0,this.isFinished=!1,this.isLocked=!1,this._listeners={data:[],end:[],error:[]},this.previous=null}h.prototype={push:function(d){this.emit("data",d)},end:function(){if(this.isFinished)return!1;this.flush();try{this.emit("end"),this.cleanUp(),this.isFinished=!0}catch(d){this.emit("error",d)}return!0},error:function(d){return!this.isFinished&&(this.isPaused?this.generatedError=d:(this.isFinished=!0,this.emit("error",d),this.previous&&this.previous.error(d),this.cleanUp()),!0)},on:function(d,p){return this._listeners[d].push(p),this},cleanUp:function(){this.streamInfo=this.generatedError=this.extraStreamInfo=null,this._listeners=[]},emit:function(d,p){if(this._listeners[d])for(var f=0;f<this._listeners[d].length;f++)this._listeners[d][f].call(this,p)},pipe:function(d){return d.registerPrevious(this)},registerPrevious:function(d){if(this.isLocked)throw new Error("The stream '"+this+"' has already been used.");this.streamInfo=d.streamInfo,this.mergeStreamInfo(),this.previous=d;var p=this;return d.on("data",function(f){p.processChunk(f)}),d.on("end",function(){p.end()}),d.on("error",function(f){p.error(f)}),this},pause:function(){return!this.isPaused&&!this.isFinished&&(this.isPaused=!0,this.previous&&this.previous.pause(),!0)},resume:function(){if(!this.isPaused||this.isFinished)return!1;var d=this.isPaused=!1;return this.generatedError&&(this.error(this.generatedError),d=!0),this.previous&&this.previous.resume(),!d},flush:function(){},processChunk:function(d){this.push(d)},withStreamInfo:function(d,p){return this.extraStreamInfo[d]=p,this.mergeStreamInfo(),this},mergeStreamInfo:function(){for(var d in this.extraStreamInfo)Object.prototype.hasOwnProperty.call(this.extraStreamInfo,d)&&(this.streamInfo[d]=this.extraStreamInfo[d])},lock:function(){if(this.isLocked)throw new Error("The stream '"+this+"' has already been used.");this.isLocked=!0,this.previous&&this.previous.lock()},toString:function(){var d="Worker "+this.name;return this.previous?this.previous+" -> "+d:d}},u.exports=h},{}],29:[function(i,u,c){var h=i("../utils"),d=i("./ConvertWorker"),p=i("./GenericWorker"),f=i("../base64"),g=i("../support"),y=i("../external"),x=null;if(g.nodestream)try{x=i("../nodejs/NodejsStreamOutputAdapter")}catch{}function w(k,C){return new y.Promise(function(I,N){var E=[],R=k._internalType,O=k._outputType,B=k._mimeType;k.on("data",function(j,U){E.push(j),C&&C(U)}).on("error",function(j){E=[],N(j)}).on("end",function(){try{var j=function(U,K,H){switch(U){case"blob":return h.newBlob(h.transformTo("arraybuffer",K),H);case"base64":return f.encode(K);default:return h.transformTo(U,K)}}(O,function(U,K){var H,Z=0,ue=null,M=0;for(H=0;H<K.length;H++)M+=K[H].length;switch(U){case"string":return K.join("");case"array":return Array.prototype.concat.apply([],K);case"uint8array":for(ue=new Uint8Array(M),H=0;H<K.length;H++)ue.set(K[H],Z),Z+=K[H].length;return ue;case"nodebuffer":return Buffer.concat(K);default:throw new Error("concat : unsupported type '"+U+"'")}}(R,E),B);I(j)}catch(U){N(U)}E=[]}).resume()})}function v(k,C,I){var N=C;switch(C){case"blob":case"arraybuffer":N="uint8array";break;case"base64":N="string"}try{this._internalType=N,this._outputType=C,this._mimeType=I,h.checkSupport(N),this._worker=k.pipe(new d(N)),k.lock()}catch(E){this._worker=new p("error"),this._worker.error(E)}}v.prototype={accumulate:function(k){return w(this,k)},on:function(k,C){var I=this;return k==="data"?this._worker.on(k,function(N){C.call(I,N.data,N.meta)}):this._worker.on(k,function(){h.delay(C,arguments,I)}),this},resume:function(){return h.delay(this._worker.resume,[],this._worker),this},pause:function(){return this._worker.pause(),this},toNodejsStream:function(k){if(h.checkSupport("nodestream"),this._outputType!=="nodebuffer")throw new Error(this._outputType+" is not supported by this method");return new x(this,{objectMode:this._outputType!=="nodebuffer"},k)}},u.exports=v},{"../base64":1,"../external":6,"../nodejs/NodejsStreamOutputAdapter":13,"../support":30,"../utils":32,"./ConvertWorker":24,"./GenericWorker":28}],30:[function(i,u,c){if(c.base64=!0,c.array=!0,c.string=!0,c.arraybuffer=typeof ArrayBuffer<"u"&&typeof Uint8Array<"u",c.nodebuffer=typeof Buffer<"u",c.uint8array=typeof Uint8Array<"u",typeof ArrayBuffer>"u")c.blob=!1;else{var h=new ArrayBuffer(0);try{c.blob=new Blob([h],{type:"application/zip"}).size===0}catch{try{var d=new(self.BlobBuilder||self.WebKitBlobBuilder||self.MozBlobBuilder||self.MSBlobBuilder);d.append(h),c.blob=d.getBlob("application/zip").size===0}catch{c.blob=!1}}}try{c.nodestream=!!i("readable-stream").Readable}catch{c.nodestream=!1}},{"readable-stream":16}],31:[function(i,u,c){for(var h=i("./utils"),d=i("./support"),p=i("./nodejsUtils"),f=i("./stream/GenericWorker"),g=new Array(256),y=0;y<256;y++)g[y]=252<=y?6:248<=y?5:240<=y?4:224<=y?3:192<=y?2:1;g[254]=g[254]=1;function x(){f.call(this,"utf-8 decode"),this.leftOver=null}function w(){f.call(this,"utf-8 encode")}c.utf8encode=function(v){return d.nodebuffer?p.newBufferFrom(v,"utf-8"):function(k){var C,I,N,E,R,O=k.length,B=0;for(E=0;E<O;E++)(64512&(I=k.charCodeAt(E)))==55296&&E+1<O&&(64512&(N=k.charCodeAt(E+1)))==56320&&(I=65536+(I-55296<<10)+(N-56320),E++),B+=I<128?1:I<2048?2:I<65536?3:4;for(C=d.uint8array?new Uint8Array(B):new Array(B),E=R=0;R<B;E++)(64512&(I=k.charCodeAt(E)))==55296&&E+1<O&&(64512&(N=k.charCodeAt(E+1)))==56320&&(I=65536+(I-55296<<10)+(N-56320),E++),I<128?C[R++]=I:(I<2048?C[R++]=192|I>>>6:(I<65536?C[R++]=224|I>>>12:(C[R++]=240|I>>>18,C[R++]=128|I>>>12&63),C[R++]=128|I>>>6&63),C[R++]=128|63&I);return C}(v)},c.utf8decode=function(v){return d.nodebuffer?h.transformTo("nodebuffer",v).toString("utf-8"):function(k){var C,I,N,E,R=k.length,O=new Array(2*R);for(C=I=0;C<R;)if((N=k[C++])<128)O[I++]=N;else if(4<(E=g[N]))O[I++]=65533,C+=E-1;else{for(N&=E===2?31:E===3?15:7;1<E&&C<R;)N=N<<6|63&k[C++],E--;1<E?O[I++]=65533:N<65536?O[I++]=N:(N-=65536,O[I++]=55296|N>>10&1023,O[I++]=56320|1023&N)}return O.length!==I&&(O.subarray?O=O.subarray(0,I):O.length=I),h.applyFromCharCode(O)}(v=h.transformTo(d.uint8array?"uint8array":"array",v))},h.inherits(x,f),x.prototype.processChunk=function(v){var k=h.transformTo(d.uint8array?"uint8array":"array",v.data);if(this.leftOver&&this.leftOver.length){if(d.uint8array){var C=k;(k=new Uint8Array(C.length+this.leftOver.length)).set(this.leftOver,0),k.set(C,this.leftOver.length)}else k=this.leftOver.concat(k);this.leftOver=null}var I=function(E,R){var O;for((R=R||E.length)>E.length&&(R=E.length),O=R-1;0<=O&&(192&E[O])==128;)O--;return O<0||O===0?R:O+g[E[O]]>R?O:R}(k),N=k;I!==k.length&&(d.uint8array?(N=k.subarray(0,I),this.leftOver=k.subarray(I,k.length)):(N=k.slice(0,I),this.leftOver=k.slice(I,k.length))),this.push({data:c.utf8decode(N),meta:v.meta})},x.prototype.flush=function(){this.leftOver&&this.leftOver.length&&(this.push({data:c.utf8decode(this.leftOver),meta:{}}),this.leftOver=null)},c.Utf8DecodeWorker=x,h.inherits(w,f),w.prototype.processChunk=function(v){this.push({data:c.utf8encode(v.data),meta:v.meta})},c.Utf8EncodeWorker=w},{"./nodejsUtils":14,"./stream/GenericWorker":28,"./support":30,"./utils":32}],32:[function(i,u,c){var h=i("./support"),d=i("./base64"),p=i("./nodejsUtils"),f=i("./external");function g(C){return C}function y(C,I){for(var N=0;N<C.length;++N)I[N]=255&C.charCodeAt(N);return I}i("setimmediate"),c.newBlob=function(C,I){c.checkSupport("blob");try{return new Blob([C],{type:I})}catch{try{var N=new(self.BlobBuilder||self.WebKitBlobBuilder||self.MozBlobBuilder||self.MSBlobBuilder);return N.append(C),N.getBlob(I)}catch{throw new Error("Bug : can't construct the Blob.")}}};var x={stringifyByChunk:function(C,I,N){var E=[],R=0,O=C.length;if(O<=N)return String.fromCharCode.apply(null,C);for(;R<O;)I==="array"||I==="nodebuffer"?E.push(String.fromCharCode.apply(null,C.slice(R,Math.min(R+N,O)))):E.push(String.fromCharCode.apply(null,C.subarray(R,Math.min(R+N,O)))),R+=N;return E.join("")},stringifyByChar:function(C){for(var I="",N=0;N<C.length;N++)I+=String.fromCharCode(C[N]);return I},applyCanBeUsed:{uint8array:function(){try{return h.uint8array&&String.fromCharCode.apply(null,new Uint8Array(1)).length===1}catch{return!1}}(),nodebuffer:function(){try{return h.nodebuffer&&String.fromCharCode.apply(null,p.allocBuffer(1)).length===1}catch{return!1}}()}};function w(C){var I=65536,N=c.getTypeOf(C),E=!0;if(N==="uint8array"?E=x.applyCanBeUsed.uint8array:N==="nodebuffer"&&(E=x.applyCanBeUsed.nodebuffer),E)for(;1<I;)try{return x.stringifyByChunk(C,N,I)}catch{I=Math.floor(I/2)}return x.stringifyByChar(C)}function v(C,I){for(var N=0;N<C.length;N++)I[N]=C[N];return I}c.applyFromCharCode=w;var k={};k.string={string:g,array:function(C){return y(C,new Array(C.length))},arraybuffer:function(C){return k.string.uint8array(C).buffer},uint8array:function(C){return y(C,new Uint8Array(C.length))},nodebuffer:function(C){return y(C,p.allocBuffer(C.length))}},k.array={string:w,array:g,arraybuffer:function(C){return new Uint8Array(C).buffer},uint8array:function(C){return new Uint8Array(C)},nodebuffer:function(C){return p.newBufferFrom(C)}},k.arraybuffer={string:function(C){return w(new Uint8Array(C))},array:function(C){return v(new Uint8Array(C),new Array(C.byteLength))},arraybuffer:g,uint8array:function(C){return new Uint8Array(C)},nodebuffer:function(C){return p.newBufferFrom(new Uint8Array(C))}},k.uint8array={string:w,array:function(C){return v(C,new Array(C.length))},arraybuffer:function(C){return C.buffer},uint8array:g,nodebuffer:function(C){return p.newBufferFrom(C)}},k.nodebuffer={string:w,array:function(C){return v(C,new Array(C.length))},arraybuffer:function(C){return k.nodebuffer.uint8array(C).buffer},uint8array:function(C){return v(C,new Uint8Array(C.length))},nodebuffer:g},c.transformTo=function(C,I){if(I=I||"",!C)return I;c.checkSupport(C);var N=c.getTypeOf(I);return k[N][C](I)},c.resolve=function(C){for(var I=C.split("/"),N=[],E=0;E<I.length;E++){var R=I[E];R==="."||R===""&&E!==0&&E!==I.length-1||(R===".."?N.pop():N.push(R))}return N.join("/")},c.getTypeOf=function(C){return typeof C=="string"?"string":Object.prototype.toString.call(C)==="[object Array]"?"array":h.nodebuffer&&p.isBuffer(C)?"nodebuffer":h.uint8array&&C instanceof Uint8Array?"uint8array":h.arraybuffer&&C instanceof ArrayBuffer?"arraybuffer":void 0},c.checkSupport=function(C){if(!h[C.toLowerCase()])throw new Error(C+" is not supported by this platform")},c.MAX_VALUE_16BITS=65535,c.MAX_VALUE_32BITS=-1,c.pretty=function(C){var I,N,E="";for(N=0;N<(C||"").length;N++)E+="\\x"+((I=C.charCodeAt(N))<16?"0":"")+I.toString(16).toUpperCase();return E},c.delay=function(C,I,N){setImmediate(function(){C.apply(N||null,I||[])})},c.inherits=function(C,I){function N(){}N.prototype=I.prototype,C.prototype=new N},c.extend=function(){var C,I,N={};for(C=0;C<arguments.length;C++)for(I in arguments[C])Object.prototype.hasOwnProperty.call(arguments[C],I)&&N[I]===void 0&&(N[I]=arguments[C][I]);return N},c.prepareContent=function(C,I,N,E,R){return f.Promise.resolve(I).then(function(O){return h.blob&&(O instanceof Blob||["[object File]","[object Blob]"].indexOf(Object.prototype.toString.call(O))!==-1)&&typeof FileReader<"u"?new f.Promise(function(B,j){var U=new FileReader;U.onload=function(K){B(K.target.result)},U.onerror=function(K){j(K.target.error)},U.readAsArrayBuffer(O)}):O}).then(function(O){var B=c.getTypeOf(O);return B?(B==="arraybuffer"?O=c.transformTo("uint8array",O):B==="string"&&(R?O=d.decode(O):N&&E!==!0&&(O=function(j){return y(j,h.uint8array?new Uint8Array(j.length):new Array(j.length))}(O))),O):f.Promise.reject(new Error("Can't read the data of '"+C+"'. Is it in a supported JavaScript type (String, Blob, ArrayBuffer, etc) ?"))})}},{"./base64":1,"./external":6,"./nodejsUtils":14,"./support":30,setimmediate:54}],33:[function(i,u,c){var h=i("./reader/readerFor"),d=i("./utils"),p=i("./signature"),f=i("./zipEntry"),g=i("./support");function y(x){this.files=[],this.loadOptions=x}y.prototype={checkSignature:function(x){if(!this.reader.readAndCheckSignature(x)){this.reader.index-=4;var w=this.reader.readString(4);throw new Error("Corrupted zip or bug: unexpected signature ("+d.pretty(w)+", expected "+d.pretty(x)+")")}},isSignature:function(x,w){var v=this.reader.index;this.reader.setIndex(x);var k=this.reader.readString(4)===w;return this.reader.setIndex(v),k},readBlockEndOfCentral:function(){this.diskNumber=this.reader.readInt(2),this.diskWithCentralDirStart=this.reader.readInt(2),this.centralDirRecordsOnThisDisk=this.reader.readInt(2),this.centralDirRecords=this.reader.readInt(2),this.centralDirSize=this.reader.readInt(4),this.centralDirOffset=this.reader.readInt(4),this.zipCommentLength=this.reader.readInt(2);var x=this.reader.readData(this.zipCommentLength),w=g.uint8array?"uint8array":"array",v=d.transformTo(w,x);this.zipComment=this.loadOptions.decodeFileName(v)},readBlockZip64EndOfCentral:function(){this.zip64EndOfCentralSize=this.reader.readInt(8),this.reader.skip(4),this.diskNumber=this.reader.readInt(4),this.diskWithCentralDirStart=this.reader.readInt(4),this.centralDirRecordsOnThisDisk=this.reader.readInt(8),this.centralDirRecords=this.reader.readInt(8),this.centralDirSize=this.reader.readInt(8),this.centralDirOffset=this.reader.readInt(8),this.zip64ExtensibleData={};for(var x,w,v,k=this.zip64EndOfCentralSize-44;0<k;)x=this.reader.readInt(2),w=this.reader.readInt(4),v=this.reader.readData(w),this.zip64ExtensibleData[x]={id:x,length:w,value:v}},readBlockZip64EndOfCentralLocator:function(){if(this.diskWithZip64CentralDirStart=this.reader.readInt(4),this.relativeOffsetEndOfZip64CentralDir=this.reader.readInt(8),this.disksCount=this.reader.readInt(4),1<this.disksCount)throw new Error("Multi-volumes zip are not supported")},readLocalFiles:function(){var x,w;for(x=0;x<this.files.length;x++)w=this.files[x],this.reader.setIndex(w.localHeaderOffset),this.checkSignature(p.LOCAL_FILE_HEADER),w.readLocalPart(this.reader),w.handleUTF8(),w.processAttributes()},readCentralDir:function(){var x;for(this.reader.setIndex(this.centralDirOffset);this.reader.readAndCheckSignature(p.CENTRAL_FILE_HEADER);)(x=new f({zip64:this.zip64},this.loadOptions)).readCentralPart(this.reader),this.files.push(x);if(this.centralDirRecords!==this.files.length&&this.centralDirRecords!==0&&this.files.length===0)throw new Error("Corrupted zip or bug: expected "+this.centralDirRecords+" records in central dir, got "+this.files.length)},readEndOfCentral:function(){var x=this.reader.lastIndexOfSignature(p.CENTRAL_DIRECTORY_END);if(x<0)throw this.isSignature(0,p.LOCAL_FILE_HEADER)?new Error("Corrupted zip: can't find end of central directory"):new Error("Can't find end of central directory : is this a zip file ? If it is, see https://stuk.github.io/jszip/documentation/howto/read_zip.html");this.reader.setIndex(x);var w=x;if(this.checkSignature(p.CENTRAL_DIRECTORY_END),this.readBlockEndOfCentral(),this.diskNumber===d.MAX_VALUE_16BITS||this.diskWithCentralDirStart===d.MAX_VALUE_16BITS||this.centralDirRecordsOnThisDisk===d.MAX_VALUE_16BITS||this.centralDirRecords===d.MAX_VALUE_16BITS||this.centralDirSize===d.MAX_VALUE_32BITS||this.centralDirOffset===d.MAX_VALUE_32BITS){if(this.zip64=!0,(x=this.reader.lastIndexOfSignature(p.ZIP64_CENTRAL_DIRECTORY_LOCATOR))<0)throw new Error("Corrupted zip: can't find the ZIP64 end of central directory locator");if(this.reader.setIndex(x),this.checkSignature(p.ZIP64_CENTRAL_DIRECTORY_LOCATOR),this.readBlockZip64EndOfCentralLocator(),!this.isSignature(this.relativeOffsetEndOfZip64CentralDir,p.ZIP64_CENTRAL_DIRECTORY_END)&&(this.relativeOffsetEndOfZip64CentralDir=this.reader.lastIndexOfSignature(p.ZIP64_CENTRAL_DIRECTORY_END),this.relativeOffsetEndOfZip64CentralDir<0))throw new Error("Corrupted zip: can't find the ZIP64 end of central directory");this.reader.setIndex(this.relativeOffsetEndOfZip64CentralDir),this.checkSignature(p.ZIP64_CENTRAL_DIRECTORY_END),this.readBlockZip64EndOfCentral()}var v=this.centralDirOffset+this.centralDirSize;this.zip64&&(v+=20,v+=12+this.zip64EndOfCentralSize);var k=w-v;if(0<k)this.isSignature(w,p.CENTRAL_FILE_HEADER)||(this.reader.zero=k);else if(k<0)throw new Error("Corrupted zip: missing "+Math.abs(k)+" bytes.")},prepareReader:function(x){this.reader=h(x)},load:function(x){this.prepareReader(x),this.readEndOfCentral(),this.readCentralDir(),this.readLocalFiles()}},u.exports=y},{"./reader/readerFor":22,"./signature":23,"./support":30,"./utils":32,"./zipEntry":34}],34:[function(i,u,c){var h=i("./reader/readerFor"),d=i("./utils"),p=i("./compressedObject"),f=i("./crc32"),g=i("./utf8"),y=i("./compressions"),x=i("./support");function w(v,k){this.options=v,this.loadOptions=k}w.prototype={isEncrypted:function(){return(1&this.bitFlag)==1},useUTF8:function(){return(2048&this.bitFlag)==2048},readLocalPart:function(v){var k,C;if(v.skip(22),this.fileNameLength=v.readInt(2),C=v.readInt(2),this.fileName=v.readData(this.fileNameLength),v.skip(C),this.compressedSize===-1||this.uncompressedSize===-1)throw new Error("Bug or corrupted zip : didn't get enough information from the central directory (compressedSize === -1 || uncompressedSize === -1)");if((k=function(I){for(var N in y)if(Object.prototype.hasOwnProperty.call(y,N)&&y[N].magic===I)return y[N];return null}(this.compressionMethod))===null)throw new Error("Corrupted zip : compression "+d.pretty(this.compressionMethod)+" unknown (inner file : "+d.transformTo("string",this.fileName)+")");this.decompressed=new p(this.compressedSize,this.uncompressedSize,this.crc32,k,v.readData(this.compressedSize))},readCentralPart:function(v){this.versionMadeBy=v.readInt(2),v.skip(2),this.bitFlag=v.readInt(2),this.compressionMethod=v.readString(2),this.date=v.readDate(),this.crc32=v.readInt(4),this.compressedSize=v.readInt(4),this.uncompressedSize=v.readInt(4);var k=v.readInt(2);if(this.extraFieldsLength=v.readInt(2),this.fileCommentLength=v.readInt(2),this.diskNumberStart=v.readInt(2),this.internalFileAttributes=v.readInt(2),this.externalFileAttributes=v.readInt(4),this.localHeaderOffset=v.readInt(4),this.isEncrypted())throw new Error("Encrypted zip are not supported");v.skip(k),this.readExtraFields(v),this.parseZIP64ExtraField(v),this.fileComment=v.readData(this.fileCommentLength)},processAttributes:function(){this.unixPermissions=null,this.dosPermissions=null;var v=this.versionMadeBy>>8;this.dir=!!(16&this.externalFileAttributes),v==0&&(this.dosPermissions=63&this.externalFileAttributes),v==3&&(this.unixPermissions=this.externalFileAttributes>>16&65535),this.dir||this.fileNameStr.slice(-1)!=="/"||(this.dir=!0)},parseZIP64ExtraField:function(){if(this.extraFields[1]){var v=h(this.extraFields[1].value);this.uncompressedSize===d.MAX_VALUE_32BITS&&(this.uncompressedSize=v.readInt(8)),this.compressedSize===d.MAX_VALUE_32BITS&&(this.compressedSize=v.readInt(8)),this.localHeaderOffset===d.MAX_VALUE_32BITS&&(this.localHeaderOffset=v.readInt(8)),this.diskNumberStart===d.MAX_VALUE_32BITS&&(this.diskNumberStart=v.readInt(4))}},readExtraFields:function(v){var k,C,I,N=v.index+this.extraFieldsLength;for(this.extraFields||(this.extraFields={});v.index+4<N;)k=v.readInt(2),C=v.readInt(2),I=v.readData(C),this.extraFields[k]={id:k,length:C,value:I};v.setIndex(N)},handleUTF8:function(){var v=x.uint8array?"uint8array":"array";if(this.useUTF8())this.fileNameStr=g.utf8decode(this.fileName),this.fileCommentStr=g.utf8decode(this.fileComment);else{var k=this.findExtraFieldUnicodePath();if(k!==null)this.fileNameStr=k;else{var C=d.transformTo(v,this.fileName);this.fileNameStr=this.loadOptions.decodeFileName(C)}var I=this.findExtraFieldUnicodeComment();if(I!==null)this.fileCommentStr=I;else{var N=d.transformTo(v,this.fileComment);this.fileCommentStr=this.loadOptions.decodeFileName(N)}}},findExtraFieldUnicodePath:function(){var v=this.extraFields[28789];if(v){var k=h(v.value);return k.readInt(1)!==1||f(this.fileName)!==k.readInt(4)?null:g.utf8decode(k.readData(v.length-5))}return null},findExtraFieldUnicodeComment:function(){var v=this.extraFields[25461];if(v){var k=h(v.value);return k.readInt(1)!==1||f(this.fileComment)!==k.readInt(4)?null:g.utf8decode(k.readData(v.length-5))}return null}},u.exports=w},{"./compressedObject":2,"./compressions":3,"./crc32":4,"./reader/readerFor":22,"./support":30,"./utf8":31,"./utils":32}],35:[function(i,u,c){function h(k,C,I){this.name=k,this.dir=I.dir,this.date=I.date,this.comment=I.comment,this.unixPermissions=I.unixPermissions,this.dosPermissions=I.dosPermissions,this._data=C,this._dataBinary=I.binary,this.options={compression:I.compression,compressionOptions:I.compressionOptions}}var d=i("./stream/StreamHelper"),p=i("./stream/DataWorker"),f=i("./utf8"),g=i("./compressedObject"),y=i("./stream/GenericWorker");h.prototype={internalStream:function(k){var C=null,I="string";try{if(!k)throw new Error("No output type specified.");var N=(I=k.toLowerCase())==="string"||I==="text";I!=="binarystring"&&I!=="text"||(I="string"),C=this._decompressWorker();var E=!this._dataBinary;E&&!N&&(C=C.pipe(new f.Utf8EncodeWorker)),!E&&N&&(C=C.pipe(new f.Utf8DecodeWorker))}catch(R){(C=new y("error")).error(R)}return new d(C,I,"")},async:function(k,C){return this.internalStream(k).accumulate(C)},nodeStream:function(k,C){return this.internalStream(k||"nodebuffer").toNodejsStream(C)},_compressWorker:function(k,C){if(this._data instanceof g&&this._data.compression.magic===k.magic)return this._data.getCompressedWorker();var I=this._decompressWorker();return this._dataBinary||(I=I.pipe(new f.Utf8EncodeWorker)),g.createWorkerFrom(I,k,C)},_decompressWorker:function(){return this._data instanceof g?this._data.getContentWorker():this._data instanceof y?this._data:new p(this._data)}};for(var x=["asText","asBinary","asNodeBuffer","asUint8Array","asArrayBuffer"],w=function(){throw new Error("This method has been removed in JSZip 3.0, please check the upgrade guide.")},v=0;v<x.length;v++)h.prototype[x[v]]=w;u.exports=h},{"./compressedObject":2,"./stream/DataWorker":27,"./stream/GenericWorker":28,"./stream/StreamHelper":29,"./utf8":31}],36:[function(i,u,c){(function(h){var d,p,f=h.MutationObserver||h.WebKitMutationObserver;if(f){var g=0,y=new f(k),x=h.document.createTextNode("");y.observe(x,{characterData:!0}),d=function(){x.data=g=++g%2}}else if(h.setImmediate||h.MessageChannel===void 0)d="document"in h&&"onreadystatechange"in h.document.createElement("script")?function(){var C=h.document.createElement("script");C.onreadystatechange=function(){k(),C.onreadystatechange=null,C.parentNode.removeChild(C),C=null},h.document.documentElement.appendChild(C)}:function(){setTimeout(k,0)};else{var w=new h.MessageChannel;w.port1.onmessage=k,d=function(){w.port2.postMessage(0)}}var v=[];function k(){var C,I;p=!0;for(var N=v.length;N;){for(I=v,v=[],C=-1;++C<N;)I[C]();N=v.length}p=!1}u.exports=function(C){v.push(C)!==1||p||d()}}).call(this,typeof pa<"u"?pa:typeof self<"u"?self:typeof window<"u"?window:{})},{}],37:[function(i,u,c){var h=i("immediate");function d(){}var p={},f=["REJECTED"],g=["FULFILLED"],y=["PENDING"];function x(N){if(typeof N!="function")throw new TypeError("resolver must be a function");this.state=y,this.queue=[],this.outcome=void 0,N!==d&&C(this,N)}function w(N,E,R){this.promise=N,typeof E=="function"&&(this.onFulfilled=E,this.callFulfilled=this.otherCallFulfilled),typeof R=="function"&&(this.onRejected=R,this.callRejected=this.otherCallRejected)}function v(N,E,R){h(function(){var O;try{O=E(R)}catch(B){return p.reject(N,B)}O===N?p.reject(N,new TypeError("Cannot resolve promise with itself")):p.resolve(N,O)})}function k(N){var E=N&&N.then;if(N&&(typeof N=="object"||typeof N=="function")&&typeof E=="function")return function(){E.apply(N,arguments)}}function C(N,E){var R=!1;function O(U){R||(R=!0,p.reject(N,U))}function B(U){R||(R=!0,p.resolve(N,U))}var j=I(function(){E(B,O)});j.status==="error"&&O(j.value)}function I(N,E){var R={};try{R.value=N(E),R.status="success"}catch(O){R.status="error",R.value=O}return R}(u.exports=x).prototype.finally=function(N){if(typeof N!="function")return this;var E=this.constructor;return this.then(function(R){return E.resolve(N()).then(function(){return R})},function(R){return E.resolve(N()).then(function(){throw R})})},x.prototype.catch=function(N){return this.then(null,N)},x.prototype.then=function(N,E){if(typeof N!="function"&&this.state===g||typeof E!="function"&&this.state===f)return this;var R=new this.constructor(d);return this.state!==y?v(R,this.state===g?N:E,this.outcome):this.queue.push(new w(R,N,E)),R},w.prototype.callFulfilled=function(N){p.resolve(this.promise,N)},w.prototype.otherCallFulfilled=function(N){v(this.promise,this.onFulfilled,N)},w.prototype.callRejected=function(N){p.reject(this.promise,N)},w.prototype.otherCallRejected=function(N){v(this.promise,this.onRejected,N)},p.resolve=function(N,E){var R=I(k,E);if(R.status==="error")return p.reject(N,R.value);var O=R.value;if(O)C(N,O);else{N.state=g,N.outcome=E;for(var B=-1,j=N.queue.length;++B<j;)N.queue[B].callFulfilled(E)}return N},p.reject=function(N,E){N.state=f,N.outcome=E;for(var R=-1,O=N.queue.length;++R<O;)N.queue[R].callRejected(E);return N},x.resolve=function(N){return N instanceof this?N:p.resolve(new this(d),N)},x.reject=function(N){var E=new this(d);return p.reject(E,N)},x.all=function(N){var E=this;if(Object.prototype.toString.call(N)!=="[object Array]")return this.reject(new TypeError("must be an array"));var R=N.length,O=!1;if(!R)return this.resolve([]);for(var B=new Array(R),j=0,U=-1,K=new this(d);++U<R;)H(N[U],U);return K;function H(Z,ue){E.resolve(Z).then(function(M){B[ue]=M,++j!==R||O||(O=!0,p.resolve(K,B))},function(M){O||(O=!0,p.reject(K,M))})}},x.race=function(N){var E=this;if(Object.prototype.toString.call(N)!=="[object Array]")return this.reject(new TypeError("must be an array"));var R=N.length,O=!1;if(!R)return this.resolve([]);for(var B=-1,j=new this(d);++B<R;)U=N[B],E.resolve(U).then(function(K){O||(O=!0,p.resolve(j,K))},function(K){O||(O=!0,p.reject(j,K))});var U;return j}},{immediate:36}],38:[function(i,u,c){var h={};(0,i("./lib/utils/common").assign)(h,i("./lib/deflate"),i("./lib/inflate"),i("./lib/zlib/constants")),u.exports=h},{"./lib/deflate":39,"./lib/inflate":40,"./lib/utils/common":41,"./lib/zlib/constants":44}],39:[function(i,u,c){var h=i("./zlib/deflate"),d=i("./utils/common"),p=i("./utils/strings"),f=i("./zlib/messages"),g=i("./zlib/zstream"),y=Object.prototype.toString,x=0,w=-1,v=0,k=8;function C(N){if(!(this instanceof C))return new C(N);this.options=d.assign({level:w,method:k,chunkSize:16384,windowBits:15,memLevel:8,strategy:v,to:""},N||{});var E=this.options;E.raw&&0<E.windowBits?E.windowBits=-E.windowBits:E.gzip&&0<E.windowBits&&E.windowBits<16&&(E.windowBits+=16),this.err=0,this.msg="",this.ended=!1,this.chunks=[],this.strm=new g,this.strm.avail_out=0;var R=h.deflateInit2(this.strm,E.level,E.method,E.windowBits,E.memLevel,E.strategy);if(R!==x)throw new Error(f[R]);if(E.header&&h.deflateSetHeader(this.strm,E.header),E.dictionary){var O;if(O=typeof E.dictionary=="string"?p.string2buf(E.dictionary):y.call(E.dictionary)==="[object ArrayBuffer]"?new Uint8Array(E.dictionary):E.dictionary,(R=h.deflateSetDictionary(this.strm,O))!==x)throw new Error(f[R]);this._dict_set=!0}}function I(N,E){var R=new C(E);if(R.push(N,!0),R.err)throw R.msg||f[R.err];return R.result}C.prototype.push=function(N,E){var R,O,B=this.strm,j=this.options.chunkSize;if(this.ended)return!1;O=E===~~E?E:E===!0?4:0,typeof N=="string"?B.input=p.string2buf(N):y.call(N)==="[object ArrayBuffer]"?B.input=new Uint8Array(N):B.input=N,B.next_in=0,B.avail_in=B.input.length;do{if(B.avail_out===0&&(B.output=new d.Buf8(j),B.next_out=0,B.avail_out=j),(R=h.deflate(B,O))!==1&&R!==x)return this.onEnd(R),!(this.ended=!0);B.avail_out!==0&&(B.avail_in!==0||O!==4&&O!==2)||(this.options.to==="string"?this.onData(p.buf2binstring(d.shrinkBuf(B.output,B.next_out))):this.onData(d.shrinkBuf(B.output,B.next_out)))}while((0<B.avail_in||B.avail_out===0)&&R!==1);return O===4?(R=h.deflateEnd(this.strm),this.onEnd(R),this.ended=!0,R===x):O!==2||(this.onEnd(x),!(B.avail_out=0))},C.prototype.onData=function(N){this.chunks.push(N)},C.prototype.onEnd=function(N){N===x&&(this.options.to==="string"?this.result=this.chunks.join(""):this.result=d.flattenChunks(this.chunks)),this.chunks=[],this.err=N,this.msg=this.strm.msg},c.Deflate=C,c.deflate=I,c.deflateRaw=function(N,E){return(E=E||{}).raw=!0,I(N,E)},c.gzip=function(N,E){return(E=E||{}).gzip=!0,I(N,E)}},{"./utils/common":41,"./utils/strings":42,"./zlib/deflate":46,"./zlib/messages":51,"./zlib/zstream":53}],40:[function(i,u,c){var h=i("./zlib/inflate"),d=i("./utils/common"),p=i("./utils/strings"),f=i("./zlib/constants"),g=i("./zlib/messages"),y=i("./zlib/zstream"),x=i("./zlib/gzheader"),w=Object.prototype.toString;function v(C){if(!(this instanceof v))return new v(C);this.options=d.assign({chunkSize:16384,windowBits:0,to:""},C||{});var I=this.options;I.raw&&0<=I.windowBits&&I.windowBits<16&&(I.windowBits=-I.windowBits,I.windowBits===0&&(I.windowBits=-15)),!(0<=I.windowBits&&I.windowBits<16)||C&&C.windowBits||(I.windowBits+=32),15<I.windowBits&&I.windowBits<48&&!(15&I.windowBits)&&(I.windowBits|=15),this.err=0,this.msg="",this.ended=!1,this.chunks=[],this.strm=new y,this.strm.avail_out=0;var N=h.inflateInit2(this.strm,I.windowBits);if(N!==f.Z_OK)throw new Error(g[N]);this.header=new x,h.inflateGetHeader(this.strm,this.header)}function k(C,I){var N=new v(I);if(N.push(C,!0),N.err)throw N.msg||g[N.err];return N.result}v.prototype.push=function(C,I){var N,E,R,O,B,j,U=this.strm,K=this.options.chunkSize,H=this.options.dictionary,Z=!1;if(this.ended)return!1;E=I===~~I?I:I===!0?f.Z_FINISH:f.Z_NO_FLUSH,typeof C=="string"?U.input=p.binstring2buf(C):w.call(C)==="[object ArrayBuffer]"?U.input=new Uint8Array(C):U.input=C,U.next_in=0,U.avail_in=U.input.length;do{if(U.avail_out===0&&(U.output=new d.Buf8(K),U.next_out=0,U.avail_out=K),(N=h.inflate(U,f.Z_NO_FLUSH))===f.Z_NEED_DICT&&H&&(j=typeof H=="string"?p.string2buf(H):w.call(H)==="[object ArrayBuffer]"?new Uint8Array(H):H,N=h.inflateSetDictionary(this.strm,j)),N===f.Z_BUF_ERROR&&Z===!0&&(N=f.Z_OK,Z=!1),N!==f.Z_STREAM_END&&N!==f.Z_OK)return this.onEnd(N),!(this.ended=!0);U.next_out&&(U.avail_out!==0&&N!==f.Z_STREAM_END&&(U.avail_in!==0||E!==f.Z_FINISH&&E!==f.Z_SYNC_FLUSH)||(this.options.to==="string"?(R=p.utf8border(U.output,U.next_out),O=U.next_out-R,B=p.buf2string(U.output,R),U.next_out=O,U.avail_out=K-O,O&&d.arraySet(U.output,U.output,R,O,0),this.onData(B)):this.onData(d.shrinkBuf(U.output,U.next_out)))),U.avail_in===0&&U.avail_out===0&&(Z=!0)}while((0<U.avail_in||U.avail_out===0)&&N!==f.Z_STREAM_END);return N===f.Z_STREAM_END&&(E=f.Z_FINISH),E===f.Z_FINISH?(N=h.inflateEnd(this.strm),this.onEnd(N),this.ended=!0,N===f.Z_OK):E!==f.Z_SYNC_FLUSH||(this.onEnd(f.Z_OK),!(U.avail_out=0))},v.prototype.onData=function(C){this.chunks.push(C)},v.prototype.onEnd=function(C){C===f.Z_OK&&(this.options.to==="string"?this.result=this.chunks.join(""):this.result=d.flattenChunks(this.chunks)),this.chunks=[],this.err=C,this.msg=this.strm.msg},c.Inflate=v,c.inflate=k,c.inflateRaw=function(C,I){return(I=I||{}).raw=!0,k(C,I)},c.ungzip=k},{"./utils/common":41,"./utils/strings":42,"./zlib/constants":44,"./zlib/gzheader":47,"./zlib/inflate":49,"./zlib/messages":51,"./zlib/zstream":53}],41:[function(i,u,c){var h=typeof Uint8Array<"u"&&typeof Uint16Array<"u"&&typeof Int32Array<"u";c.assign=function(f){for(var g=Array.prototype.slice.call(arguments,1);g.length;){var y=g.shift();if(y){if(typeof y!="object")throw new TypeError(y+"must be non-object");for(var x in y)y.hasOwnProperty(x)&&(f[x]=y[x])}}return f},c.shrinkBuf=function(f,g){return f.length===g?f:f.subarray?f.subarray(0,g):(f.length=g,f)};var d={arraySet:function(f,g,y,x,w){if(g.subarray&&f.subarray)f.set(g.subarray(y,y+x),w);else for(var v=0;v<x;v++)f[w+v]=g[y+v]},flattenChunks:function(f){var g,y,x,w,v,k;for(g=x=0,y=f.length;g<y;g++)x+=f[g].length;for(k=new Uint8Array(x),g=w=0,y=f.length;g<y;g++)v=f[g],k.set(v,w),w+=v.length;return k}},p={arraySet:function(f,g,y,x,w){for(var v=0;v<x;v++)f[w+v]=g[y+v]},flattenChunks:function(f){return[].concat.apply([],f)}};c.setTyped=function(f){f?(c.Buf8=Uint8Array,c.Buf16=Uint16Array,c.Buf32=Int32Array,c.assign(c,d)):(c.Buf8=Array,c.Buf16=Array,c.Buf32=Array,c.assign(c,p))},c.setTyped(h)},{}],42:[function(i,u,c){var h=i("./common"),d=!0,p=!0;try{String.fromCharCode.apply(null,[0])}catch{d=!1}try{String.fromCharCode.apply(null,new Uint8Array(1))}catch{p=!1}for(var f=new h.Buf8(256),g=0;g<256;g++)f[g]=252<=g?6:248<=g?5:240<=g?4:224<=g?3:192<=g?2:1;function y(x,w){if(w<65537&&(x.subarray&&p||!x.subarray&&d))return String.fromCharCode.apply(null,h.shrinkBuf(x,w));for(var v="",k=0;k<w;k++)v+=String.fromCharCode(x[k]);return v}f[254]=f[254]=1,c.string2buf=function(x){var w,v,k,C,I,N=x.length,E=0;for(C=0;C<N;C++)(64512&(v=x.charCodeAt(C)))==55296&&C+1<N&&(64512&(k=x.charCodeAt(C+1)))==56320&&(v=65536+(v-55296<<10)+(k-56320),C++),E+=v<128?1:v<2048?2:v<65536?3:4;for(w=new h.Buf8(E),C=I=0;I<E;C++)(64512&(v=x.charCodeAt(C)))==55296&&C+1<N&&(64512&(k=x.charCodeAt(C+1)))==56320&&(v=65536+(v-55296<<10)+(k-56320),C++),v<128?w[I++]=v:(v<2048?w[I++]=192|v>>>6:(v<65536?w[I++]=224|v>>>12:(w[I++]=240|v>>>18,w[I++]=128|v>>>12&63),w[I++]=128|v>>>6&63),w[I++]=128|63&v);return w},c.buf2binstring=function(x){return y(x,x.length)},c.binstring2buf=function(x){for(var w=new h.Buf8(x.length),v=0,k=w.length;v<k;v++)w[v]=x.charCodeAt(v);return w},c.buf2string=function(x,w){var v,k,C,I,N=w||x.length,E=new Array(2*N);for(v=k=0;v<N;)if((C=x[v++])<128)E[k++]=C;else if(4<(I=f[C]))E[k++]=65533,v+=I-1;else{for(C&=I===2?31:I===3?15:7;1<I&&v<N;)C=C<<6|63&x[v++],I--;1<I?E[k++]=65533:C<65536?E[k++]=C:(C-=65536,E[k++]=55296|C>>10&1023,E[k++]=56320|1023&C)}return y(E,k)},c.utf8border=function(x,w){var v;for((w=w||x.length)>x.length&&(w=x.length),v=w-1;0<=v&&(192&x[v])==128;)v--;return v<0||v===0?w:v+f[x[v]]>w?v:w}},{"./common":41}],43:[function(i,u,c){u.exports=function(h,d,p,f){for(var g=65535&h|0,y=h>>>16&65535|0,x=0;p!==0;){for(p-=x=2e3<p?2e3:p;y=y+(g=g+d[f++]|0)|0,--x;);g%=65521,y%=65521}return g|y<<16|0}},{}],44:[function(i,u,c){u.exports={Z_NO_FLUSH:0,Z_PARTIAL_FLUSH:1,Z_SYNC_FLUSH:2,Z_FULL_FLUSH:3,Z_FINISH:4,Z_BLOCK:5,Z_TREES:6,Z_OK:0,Z_STREAM_END:1,Z_NEED_DICT:2,Z_ERRNO:-1,Z_STREAM_ERROR:-2,Z_DATA_ERROR:-3,Z_BUF_ERROR:-5,Z_NO_COMPRESSION:0,Z_BEST_SPEED:1,Z_BEST_COMPRESSION:9,Z_DEFAULT_COMPRESSION:-1,Z_FILTERED:1,Z_HUFFMAN_ONLY:2,Z_RLE:3,Z_FIXED:4,Z_DEFAULT_STRATEGY:0,Z_BINARY:0,Z_TEXT:1,Z_UNKNOWN:2,Z_DEFLATED:8}},{}],45:[function(i,u,c){var h=function(){for(var d,p=[],f=0;f<256;f++){d=f;for(var g=0;g<8;g++)d=1&d?3988292384^d>>>1:d>>>1;p[f]=d}return p}();u.exports=function(d,p,f,g){var y=h,x=g+f;d^=-1;for(var w=g;w<x;w++)d=d>>>8^y[255&(d^p[w])];return-1^d}},{}],46:[function(i,u,c){var h,d=i("../utils/common"),p=i("./trees"),f=i("./adler32"),g=i("./crc32"),y=i("./messages"),x=0,w=4,v=0,k=-2,C=-1,I=4,N=2,E=8,R=9,O=286,B=30,j=19,U=2*O+1,K=15,H=3,Z=258,ue=Z+H+1,M=42,X=113,A=1,ee=2,be=3,ie=4;function xe(T,pe){return T.msg=y[pe],pe}function le(T){return(T<<1)-(4<T?9:0)}function ke(T){for(var pe=T.length;0<=--pe;)T[pe]=0}function oe(T){var pe=T.state,fe=pe.pending;fe>T.avail_out&&(fe=T.avail_out),fe!==0&&(d.arraySet(T.output,pe.pending_buf,pe.pending_out,fe,T.next_out),T.next_out+=fe,pe.pending_out+=fe,T.total_out+=fe,T.avail_out-=fe,pe.pending-=fe,pe.pending===0&&(pe.pending_out=0))}function se(T,pe){p._tr_flush_block(T,0<=T.block_start?T.block_start:-1,T.strstart-T.block_start,pe),T.block_start=T.strstart,oe(T.strm)}function $e(T,pe){T.pending_buf[T.pending++]=pe}function Ce(T,pe){T.pending_buf[T.pending++]=pe>>>8&255,T.pending_buf[T.pending++]=255&pe}function we(T,pe){var fe,q,G=T.max_chain_length,ae=T.strstart,Se=T.prev_length,Ie=T.nice_match,he=T.strstart>T.w_size-ue?T.strstart-(T.w_size-ue):0,Ae=T.window,Me=T.w_mask,De=T.prev,Je=T.strstart+Z,pt=Ae[ae+Se-1],ot=Ae[ae+Se];T.prev_length>=T.good_match&&(G>>=2),Ie>T.lookahead&&(Ie=T.lookahead);do if(Ae[(fe=pe)+Se]===ot&&Ae[fe+Se-1]===pt&&Ae[fe]===Ae[ae]&&Ae[++fe]===Ae[ae+1]){ae+=2,fe++;do;while(Ae[++ae]===Ae[++fe]&&Ae[++ae]===Ae[++fe]&&Ae[++ae]===Ae[++fe]&&Ae[++ae]===Ae[++fe]&&Ae[++ae]===Ae[++fe]&&Ae[++ae]===Ae[++fe]&&Ae[++ae]===Ae[++fe]&&Ae[++ae]===Ae[++fe]&&ae<Je);if(q=Z-(Je-ae),ae=Je-Z,Se<q){if(T.match_start=pe,Ie<=(Se=q))break;pt=Ae[ae+Se-1],ot=Ae[ae+Se]}}while((pe=De[pe&Me])>he&&--G!=0);return Se<=T.lookahead?Se:T.lookahead}function Qe(T){var pe,fe,q,G,ae,Se,Ie,he,Ae,Me,De=T.w_size;do{if(G=T.window_size-T.lookahead-T.strstart,T.strstart>=De+(De-ue)){for(d.arraySet(T.window,T.window,De,De,0),T.match_start-=De,T.strstart-=De,T.block_start-=De,pe=fe=T.hash_size;q=T.head[--pe],T.head[pe]=De<=q?q-De:0,--fe;);for(pe=fe=De;q=T.prev[--pe],T.prev[pe]=De<=q?q-De:0,--fe;);G+=De}if(T.strm.avail_in===0)break;if(Se=T.strm,Ie=T.window,he=T.strstart+T.lookahead,Ae=G,Me=void 0,Me=Se.avail_in,Ae<Me&&(Me=Ae),fe=Me===0?0:(Se.avail_in-=Me,d.arraySet(Ie,Se.input,Se.next_in,Me,he),Se.state.wrap===1?Se.adler=f(Se.adler,Ie,Me,he):Se.state.wrap===2&&(Se.adler=g(Se.adler,Ie,Me,he)),Se.next_in+=Me,Se.total_in+=Me,Me),T.lookahead+=fe,T.lookahead+T.insert>=H)for(ae=T.strstart-T.insert,T.ins_h=T.window[ae],T.ins_h=(T.ins_h<<T.hash_shift^T.window[ae+1])&T.hash_mask;T.insert&&(T.ins_h=(T.ins_h<<T.hash_shift^T.window[ae+H-1])&T.hash_mask,T.prev[ae&T.w_mask]=T.head[T.ins_h],T.head[T.ins_h]=ae,ae++,T.insert--,!(T.lookahead+T.insert<H)););}while(T.lookahead<ue&&T.strm.avail_in!==0)}function tt(T,pe){for(var fe,q;;){if(T.lookahead<ue){if(Qe(T),T.lookahead<ue&&pe===x)return A;if(T.lookahead===0)break}if(fe=0,T.lookahead>=H&&(T.ins_h=(T.ins_h<<T.hash_shift^T.window[T.strstart+H-1])&T.hash_mask,fe=T.prev[T.strstart&T.w_mask]=T.head[T.ins_h],T.head[T.ins_h]=T.strstart),fe!==0&&T.strstart-fe<=T.w_size-ue&&(T.match_length=we(T,fe)),T.match_length>=H)if(q=p._tr_tally(T,T.strstart-T.match_start,T.match_length-H),T.lookahead-=T.match_length,T.match_length<=T.max_lazy_match&&T.lookahead>=H){for(T.match_length--;T.strstart++,T.ins_h=(T.ins_h<<T.hash_shift^T.window[T.strstart+H-1])&T.hash_mask,fe=T.prev[T.strstart&T.w_mask]=T.head[T.ins_h],T.head[T.ins_h]=T.strstart,--T.match_length!=0;);T.strstart++}else T.strstart+=T.match_length,T.match_length=0,T.ins_h=T.window[T.strstart],T.ins_h=(T.ins_h<<T.hash_shift^T.window[T.strstart+1])&T.hash_mask;else q=p._tr_tally(T,0,T.window[T.strstart]),T.lookahead--,T.strstart++;if(q&&(se(T,!1),T.strm.avail_out===0))return A}return T.insert=T.strstart<H-1?T.strstart:H-1,pe===w?(se(T,!0),T.strm.avail_out===0?be:ie):T.last_lit&&(se(T,!1),T.strm.avail_out===0)?A:ee}function Xe(T,pe){for(var fe,q,G;;){if(T.lookahead<ue){if(Qe(T),T.lookahead<ue&&pe===x)return A;if(T.lookahead===0)break}if(fe=0,T.lookahead>=H&&(T.ins_h=(T.ins_h<<T.hash_shift^T.window[T.strstart+H-1])&T.hash_mask,fe=T.prev[T.strstart&T.w_mask]=T.head[T.ins_h],T.head[T.ins_h]=T.strstart),T.prev_length=T.match_length,T.prev_match=T.match_start,T.match_length=H-1,fe!==0&&T.prev_length<T.max_lazy_match&&T.strstart-fe<=T.w_size-ue&&(T.match_length=we(T,fe),T.match_length<=5&&(T.strategy===1||T.match_length===H&&4096<T.strstart-T.match_start)&&(T.match_length=H-1)),T.prev_length>=H&&T.match_length<=T.prev_length){for(G=T.strstart+T.lookahead-H,q=p._tr_tally(T,T.strstart-1-T.prev_match,T.prev_length-H),T.lookahead-=T.prev_length-1,T.prev_length-=2;++T.strstart<=G&&(T.ins_h=(T.ins_h<<T.hash_shift^T.window[T.strstart+H-1])&T.hash_mask,fe=T.prev[T.strstart&T.w_mask]=T.head[T.ins_h],T.head[T.ins_h]=T.strstart),--T.prev_length!=0;);if(T.match_available=0,T.match_length=H-1,T.strstart++,q&&(se(T,!1),T.strm.avail_out===0))return A}else if(T.match_available){if((q=p._tr_tally(T,0,T.window[T.strstart-1]))&&se(T,!1),T.strstart++,T.lookahead--,T.strm.avail_out===0)return A}else T.match_available=1,T.strstart++,T.lookahead--}return T.match_available&&(q=p._tr_tally(T,0,T.window[T.strstart-1]),T.match_available=0),T.insert=T.strstart<H-1?T.strstart:H-1,pe===w?(se(T,!0),T.strm.avail_out===0?be:ie):T.last_lit&&(se(T,!1),T.strm.avail_out===0)?A:ee}function je(T,pe,fe,q,G){this.good_length=T,this.max_lazy=pe,this.nice_length=fe,this.max_chain=q,this.func=G}function We(){this.strm=null,this.status=0,this.pending_buf=null,this.pending_buf_size=0,this.pending_out=0,this.pending=0,this.wrap=0,this.gzhead=null,this.gzindex=0,this.method=E,this.last_flush=-1,this.w_size=0,this.w_bits=0,this.w_mask=0,this.window=null,this.window_size=0,this.prev=null,this.head=null,this.ins_h=0,this.hash_size=0,this.hash_bits=0,this.hash_mask=0,this.hash_shift=0,this.block_start=0,this.match_length=0,this.prev_match=0,this.match_available=0,this.strstart=0,this.match_start=0,this.lookahead=0,this.prev_length=0,this.max_chain_length=0,this.max_lazy_match=0,this.level=0,this.strategy=0,this.good_match=0,this.nice_match=0,this.dyn_ltree=new d.Buf16(2*U),this.dyn_dtree=new d.Buf16(2*(2*B+1)),this.bl_tree=new d.Buf16(2*(2*j+1)),ke(this.dyn_ltree),ke(this.dyn_dtree),ke(this.bl_tree),this.l_desc=null,this.d_desc=null,this.bl_desc=null,this.bl_count=new d.Buf16(K+1),this.heap=new d.Buf16(2*O+1),ke(this.heap),this.heap_len=0,this.heap_max=0,this.depth=new d.Buf16(2*O+1),ke(this.depth),this.l_buf=0,this.lit_bufsize=0,this.last_lit=0,this.d_buf=0,this.opt_len=0,this.static_len=0,this.matches=0,this.insert=0,this.bi_buf=0,this.bi_valid=0}function qe(T){var pe;return T&&T.state?(T.total_in=T.total_out=0,T.data_type=N,(pe=T.state).pending=0,pe.pending_out=0,pe.wrap<0&&(pe.wrap=-pe.wrap),pe.status=pe.wrap?M:X,T.adler=pe.wrap===2?0:1,pe.last_flush=x,p._tr_init(pe),v):xe(T,k)}function nt(T){var pe=qe(T);return pe===v&&function(fe){fe.window_size=2*fe.w_size,ke(fe.head),fe.max_lazy_match=h[fe.level].max_lazy,fe.good_match=h[fe.level].good_length,fe.nice_match=h[fe.level].nice_length,fe.max_chain_length=h[fe.level].max_chain,fe.strstart=0,fe.block_start=0,fe.lookahead=0,fe.insert=0,fe.match_length=fe.prev_length=H-1,fe.match_available=0,fe.ins_h=0}(T.state),pe}function Ft(T,pe,fe,q,G,ae){if(!T)return k;var Se=1;if(pe===C&&(pe=6),q<0?(Se=0,q=-q):15<q&&(Se=2,q-=16),G<1||R<G||fe!==E||q<8||15<q||pe<0||9<pe||ae<0||I<ae)return xe(T,k);q===8&&(q=9);var Ie=new We;return(T.state=Ie).strm=T,Ie.wrap=Se,Ie.gzhead=null,Ie.w_bits=q,Ie.w_size=1<<Ie.w_bits,Ie.w_mask=Ie.w_size-1,Ie.hash_bits=G+7,Ie.hash_size=1<<Ie.hash_bits,Ie.hash_mask=Ie.hash_size-1,Ie.hash_shift=~~((Ie.hash_bits+H-1)/H),Ie.window=new d.Buf8(2*Ie.w_size),Ie.head=new d.Buf16(Ie.hash_size),Ie.prev=new d.Buf16(Ie.w_size),Ie.lit_bufsize=1<<G+6,Ie.pending_buf_size=4*Ie.lit_bufsize,Ie.pending_buf=new d.Buf8(Ie.pending_buf_size),Ie.d_buf=1*Ie.lit_bufsize,Ie.l_buf=3*Ie.lit_bufsize,Ie.level=pe,Ie.strategy=ae,Ie.method=fe,nt(T)}h=[new je(0,0,0,0,function(T,pe){var fe=65535;for(fe>T.pending_buf_size-5&&(fe=T.pending_buf_size-5);;){if(T.lookahead<=1){if(Qe(T),T.lookahead===0&&pe===x)return A;if(T.lookahead===0)break}T.strstart+=T.lookahead,T.lookahead=0;var q=T.block_start+fe;if((T.strstart===0||T.strstart>=q)&&(T.lookahead=T.strstart-q,T.strstart=q,se(T,!1),T.strm.avail_out===0)||T.strstart-T.block_start>=T.w_size-ue&&(se(T,!1),T.strm.avail_out===0))return A}return T.insert=0,pe===w?(se(T,!0),T.strm.avail_out===0?be:ie):(T.strstart>T.block_start&&(se(T,!1),T.strm.avail_out),A)}),new je(4,4,8,4,tt),new je(4,5,16,8,tt),new je(4,6,32,32,tt),new je(4,4,16,16,Xe),new je(8,16,32,32,Xe),new je(8,16,128,128,Xe),new je(8,32,128,256,Xe),new je(32,128,258,1024,Xe),new je(32,258,258,4096,Xe)],c.deflateInit=function(T,pe){return Ft(T,pe,E,15,8,0)},c.deflateInit2=Ft,c.deflateReset=nt,c.deflateResetKeep=qe,c.deflateSetHeader=function(T,pe){return T&&T.state?T.state.wrap!==2?k:(T.state.gzhead=pe,v):k},c.deflate=function(T,pe){var fe,q,G,ae;if(!T||!T.state||5<pe||pe<0)return T?xe(T,k):k;if(q=T.state,!T.output||!T.input&&T.avail_in!==0||q.status===666&&pe!==w)return xe(T,T.avail_out===0?-5:k);if(q.strm=T,fe=q.last_flush,q.last_flush=pe,q.status===M)if(q.wrap===2)T.adler=0,$e(q,31),$e(q,139),$e(q,8),q.gzhead?($e(q,(q.gzhead.text?1:0)+(q.gzhead.hcrc?2:0)+(q.gzhead.extra?4:0)+(q.gzhead.name?8:0)+(q.gzhead.comment?16:0)),$e(q,255&q.gzhead.time),$e(q,q.gzhead.time>>8&255),$e(q,q.gzhead.time>>16&255),$e(q,q.gzhead.time>>24&255),$e(q,q.level===9?2:2<=q.strategy||q.level<2?4:0),$e(q,255&q.gzhead.os),q.gzhead.extra&&q.gzhead.extra.length&&($e(q,255&q.gzhead.extra.length),$e(q,q.gzhead.extra.length>>8&255)),q.gzhead.hcrc&&(T.adler=g(T.adler,q.pending_buf,q.pending,0)),q.gzindex=0,q.status=69):($e(q,0),$e(q,0),$e(q,0),$e(q,0),$e(q,0),$e(q,q.level===9?2:2<=q.strategy||q.level<2?4:0),$e(q,3),q.status=X);else{var Se=E+(q.w_bits-8<<4)<<8;Se|=(2<=q.strategy||q.level<2?0:q.level<6?1:q.level===6?2:3)<<6,q.strstart!==0&&(Se|=32),Se+=31-Se%31,q.status=X,Ce(q,Se),q.strstart!==0&&(Ce(q,T.adler>>>16),Ce(q,65535&T.adler)),T.adler=1}if(q.status===69)if(q.gzhead.extra){for(G=q.pending;q.gzindex<(65535&q.gzhead.extra.length)&&(q.pending!==q.pending_buf_size||(q.gzhead.hcrc&&q.pending>G&&(T.adler=g(T.adler,q.pending_buf,q.pending-G,G)),oe(T),G=q.pending,q.pending!==q.pending_buf_size));)$e(q,255&q.gzhead.extra[q.gzindex]),q.gzindex++;q.gzhead.hcrc&&q.pending>G&&(T.adler=g(T.adler,q.pending_buf,q.pending-G,G)),q.gzindex===q.gzhead.extra.length&&(q.gzindex=0,q.status=73)}else q.status=73;if(q.status===73)if(q.gzhead.name){G=q.pending;do{if(q.pending===q.pending_buf_size&&(q.gzhead.hcrc&&q.pending>G&&(T.adler=g(T.adler,q.pending_buf,q.pending-G,G)),oe(T),G=q.pending,q.pending===q.pending_buf_size)){ae=1;break}ae=q.gzindex<q.gzhead.name.length?255&q.gzhead.name.charCodeAt(q.gzindex++):0,$e(q,ae)}while(ae!==0);q.gzhead.hcrc&&q.pending>G&&(T.adler=g(T.adler,q.pending_buf,q.pending-G,G)),ae===0&&(q.gzindex=0,q.status=91)}else q.status=91;if(q.status===91)if(q.gzhead.comment){G=q.pending;do{if(q.pending===q.pending_buf_size&&(q.gzhead.hcrc&&q.pending>G&&(T.adler=g(T.adler,q.pending_buf,q.pending-G,G)),oe(T),G=q.pending,q.pending===q.pending_buf_size)){ae=1;break}ae=q.gzindex<q.gzhead.comment.length?255&q.gzhead.comment.charCodeAt(q.gzindex++):0,$e(q,ae)}while(ae!==0);q.gzhead.hcrc&&q.pending>G&&(T.adler=g(T.adler,q.pending_buf,q.pending-G,G)),ae===0&&(q.status=103)}else q.status=103;if(q.status===103&&(q.gzhead.hcrc?(q.pending+2>q.pending_buf_size&&oe(T),q.pending+2<=q.pending_buf_size&&($e(q,255&T.adler),$e(q,T.adler>>8&255),T.adler=0,q.status=X)):q.status=X),q.pending!==0){if(oe(T),T.avail_out===0)return q.last_flush=-1,v}else if(T.avail_in===0&&le(pe)<=le(fe)&&pe!==w)return xe(T,-5);if(q.status===666&&T.avail_in!==0)return xe(T,-5);if(T.avail_in!==0||q.lookahead!==0||pe!==x&&q.status!==666){var Ie=q.strategy===2?function(he,Ae){for(var Me;;){if(he.lookahead===0&&(Qe(he),he.lookahead===0)){if(Ae===x)return A;break}if(he.match_length=0,Me=p._tr_tally(he,0,he.window[he.strstart]),he.lookahead--,he.strstart++,Me&&(se(he,!1),he.strm.avail_out===0))return A}return he.insert=0,Ae===w?(se(he,!0),he.strm.avail_out===0?be:ie):he.last_lit&&(se(he,!1),he.strm.avail_out===0)?A:ee}(q,pe):q.strategy===3?function(he,Ae){for(var Me,De,Je,pt,ot=he.window;;){if(he.lookahead<=Z){if(Qe(he),he.lookahead<=Z&&Ae===x)return A;if(he.lookahead===0)break}if(he.match_length=0,he.lookahead>=H&&0<he.strstart&&(De=ot[Je=he.strstart-1])===ot[++Je]&&De===ot[++Je]&&De===ot[++Je]){pt=he.strstart+Z;do;while(De===ot[++Je]&&De===ot[++Je]&&De===ot[++Je]&&De===ot[++Je]&&De===ot[++Je]&&De===ot[++Je]&&De===ot[++Je]&&De===ot[++Je]&&Je<pt);he.match_length=Z-(pt-Je),he.match_length>he.lookahead&&(he.match_length=he.lookahead)}if(he.match_length>=H?(Me=p._tr_tally(he,1,he.match_length-H),he.lookahead-=he.match_length,he.strstart+=he.match_length,he.match_length=0):(Me=p._tr_tally(he,0,he.window[he.strstart]),he.lookahead--,he.strstart++),Me&&(se(he,!1),he.strm.avail_out===0))return A}return he.insert=0,Ae===w?(se(he,!0),he.strm.avail_out===0?be:ie):he.last_lit&&(se(he,!1),he.strm.avail_out===0)?A:ee}(q,pe):h[q.level].func(q,pe);if(Ie!==be&&Ie!==ie||(q.status=666),Ie===A||Ie===be)return T.avail_out===0&&(q.last_flush=-1),v;if(Ie===ee&&(pe===1?p._tr_align(q):pe!==5&&(p._tr_stored_block(q,0,0,!1),pe===3&&(ke(q.head),q.lookahead===0&&(q.strstart=0,q.block_start=0,q.insert=0))),oe(T),T.avail_out===0))return q.last_flush=-1,v}return pe!==w?v:q.wrap<=0?1:(q.wrap===2?($e(q,255&T.adler),$e(q,T.adler>>8&255),$e(q,T.adler>>16&255),$e(q,T.adler>>24&255),$e(q,255&T.total_in),$e(q,T.total_in>>8&255),$e(q,T.total_in>>16&255),$e(q,T.total_in>>24&255)):(Ce(q,T.adler>>>16),Ce(q,65535&T.adler)),oe(T),0<q.wrap&&(q.wrap=-q.wrap),q.pending!==0?v:1)},c.deflateEnd=function(T){var pe;return T&&T.state?(pe=T.state.status)!==M&&pe!==69&&pe!==73&&pe!==91&&pe!==103&&pe!==X&&pe!==666?xe(T,k):(T.state=null,pe===X?xe(T,-3):v):k},c.deflateSetDictionary=function(T,pe){var fe,q,G,ae,Se,Ie,he,Ae,Me=pe.length;if(!T||!T.state||(ae=(fe=T.state).wrap)===2||ae===1&&fe.status!==M||fe.lookahead)return k;for(ae===1&&(T.adler=f(T.adler,pe,Me,0)),fe.wrap=0,Me>=fe.w_size&&(ae===0&&(ke(fe.head),fe.strstart=0,fe.block_start=0,fe.insert=0),Ae=new d.Buf8(fe.w_size),d.arraySet(Ae,pe,Me-fe.w_size,fe.w_size,0),pe=Ae,Me=fe.w_size),Se=T.avail_in,Ie=T.next_in,he=T.input,T.avail_in=Me,T.next_in=0,T.input=pe,Qe(fe);fe.lookahead>=H;){for(q=fe.strstart,G=fe.lookahead-(H-1);fe.ins_h=(fe.ins_h<<fe.hash_shift^fe.window[q+H-1])&fe.hash_mask,fe.prev[q&fe.w_mask]=fe.head[fe.ins_h],fe.head[fe.ins_h]=q,q++,--G;);fe.strstart=q,fe.lookahead=H-1,Qe(fe)}return fe.strstart+=fe.lookahead,fe.block_start=fe.strstart,fe.insert=fe.lookahead,fe.lookahead=0,fe.match_length=fe.prev_length=H-1,fe.match_available=0,T.next_in=Ie,T.input=he,T.avail_in=Se,fe.wrap=ae,v},c.deflateInfo="pako deflate (from Nodeca project)"},{"../utils/common":41,"./adler32":43,"./crc32":45,"./messages":51,"./trees":52}],47:[function(i,u,c){u.exports=function(){this.text=0,this.time=0,this.xflags=0,this.os=0,this.extra=null,this.extra_len=0,this.name="",this.comment="",this.hcrc=0,this.done=!1}},{}],48:[function(i,u,c){u.exports=function(h,d){var p,f,g,y,x,w,v,k,C,I,N,E,R,O,B,j,U,K,H,Z,ue,M,X,A,ee;p=h.state,f=h.next_in,A=h.input,g=f+(h.avail_in-5),y=h.next_out,ee=h.output,x=y-(d-h.avail_out),w=y+(h.avail_out-257),v=p.dmax,k=p.wsize,C=p.whave,I=p.wnext,N=p.window,E=p.hold,R=p.bits,O=p.lencode,B=p.distcode,j=(1<<p.lenbits)-1,U=(1<<p.distbits)-1;e:do{R<15&&(E+=A[f++]<<R,R+=8,E+=A[f++]<<R,R+=8),K=O[E&j];t:for(;;){if(E>>>=H=K>>>24,R-=H,(H=K>>>16&255)===0)ee[y++]=65535&K;else{if(!(16&H)){if(!(64&H)){K=O[(65535&K)+(E&(1<<H)-1)];continue t}if(32&H){p.mode=12;break e}h.msg="invalid literal/length code",p.mode=30;break e}Z=65535&K,(H&=15)&&(R<H&&(E+=A[f++]<<R,R+=8),Z+=E&(1<<H)-1,E>>>=H,R-=H),R<15&&(E+=A[f++]<<R,R+=8,E+=A[f++]<<R,R+=8),K=B[E&U];n:for(;;){if(E>>>=H=K>>>24,R-=H,!(16&(H=K>>>16&255))){if(!(64&H)){K=B[(65535&K)+(E&(1<<H)-1)];continue n}h.msg="invalid distance code",p.mode=30;break e}if(ue=65535&K,R<(H&=15)&&(E+=A[f++]<<R,(R+=8)<H&&(E+=A[f++]<<R,R+=8)),v<(ue+=E&(1<<H)-1)){h.msg="invalid distance too far back",p.mode=30;break e}if(E>>>=H,R-=H,(H=y-x)<ue){if(C<(H=ue-H)&&p.sane){h.msg="invalid distance too far back",p.mode=30;break e}if(X=N,(M=0)===I){if(M+=k-H,H<Z){for(Z-=H;ee[y++]=N[M++],--H;);M=y-ue,X=ee}}else if(I<H){if(M+=k+I-H,(H-=I)<Z){for(Z-=H;ee[y++]=N[M++],--H;);if(M=0,I<Z){for(Z-=H=I;ee[y++]=N[M++],--H;);M=y-ue,X=ee}}}else if(M+=I-H,H<Z){for(Z-=H;ee[y++]=N[M++],--H;);M=y-ue,X=ee}for(;2<Z;)ee[y++]=X[M++],ee[y++]=X[M++],ee[y++]=X[M++],Z-=3;Z&&(ee[y++]=X[M++],1<Z&&(ee[y++]=X[M++]))}else{for(M=y-ue;ee[y++]=ee[M++],ee[y++]=ee[M++],ee[y++]=ee[M++],2<(Z-=3););Z&&(ee[y++]=ee[M++],1<Z&&(ee[y++]=ee[M++]))}break}}break}}while(f<g&&y<w);f-=Z=R>>3,E&=(1<<(R-=Z<<3))-1,h.next_in=f,h.next_out=y,h.avail_in=f<g?g-f+5:5-(f-g),h.avail_out=y<w?w-y+257:257-(y-w),p.hold=E,p.bits=R}},{}],49:[function(i,u,c){var h=i("../utils/common"),d=i("./adler32"),p=i("./crc32"),f=i("./inffast"),g=i("./inftrees"),y=1,x=2,w=0,v=-2,k=1,C=852,I=592;function N(M){return(M>>>24&255)+(M>>>8&65280)+((65280&M)<<8)+((255&M)<<24)}function E(){this.mode=0,this.last=!1,this.wrap=0,this.havedict=!1,this.flags=0,this.dmax=0,this.check=0,this.total=0,this.head=null,this.wbits=0,this.wsize=0,this.whave=0,this.wnext=0,this.window=null,this.hold=0,this.bits=0,this.length=0,this.offset=0,this.extra=0,this.lencode=null,this.distcode=null,this.lenbits=0,this.distbits=0,this.ncode=0,this.nlen=0,this.ndist=0,this.have=0,this.next=null,this.lens=new h.Buf16(320),this.work=new h.Buf16(288),this.lendyn=null,this.distdyn=null,this.sane=0,this.back=0,this.was=0}function R(M){var X;return M&&M.state?(X=M.state,M.total_in=M.total_out=X.total=0,M.msg="",X.wrap&&(M.adler=1&X.wrap),X.mode=k,X.last=0,X.havedict=0,X.dmax=32768,X.head=null,X.hold=0,X.bits=0,X.lencode=X.lendyn=new h.Buf32(C),X.distcode=X.distdyn=new h.Buf32(I),X.sane=1,X.back=-1,w):v}function O(M){var X;return M&&M.state?((X=M.state).wsize=0,X.whave=0,X.wnext=0,R(M)):v}function B(M,X){var A,ee;return M&&M.state?(ee=M.state,X<0?(A=0,X=-X):(A=1+(X>>4),X<48&&(X&=15)),X&&(X<8||15<X)?v:(ee.window!==null&&ee.wbits!==X&&(ee.window=null),ee.wrap=A,ee.wbits=X,O(M))):v}function j(M,X){var A,ee;return M?(ee=new E,(M.state=ee).window=null,(A=B(M,X))!==w&&(M.state=null),A):v}var U,K,H=!0;function Z(M){if(H){var X;for(U=new h.Buf32(512),K=new h.Buf32(32),X=0;X<144;)M.lens[X++]=8;for(;X<256;)M.lens[X++]=9;for(;X<280;)M.lens[X++]=7;for(;X<288;)M.lens[X++]=8;for(g(y,M.lens,0,288,U,0,M.work,{bits:9}),X=0;X<32;)M.lens[X++]=5;g(x,M.lens,0,32,K,0,M.work,{bits:5}),H=!1}M.lencode=U,M.lenbits=9,M.distcode=K,M.distbits=5}function ue(M,X,A,ee){var be,ie=M.state;return ie.window===null&&(ie.wsize=1<<ie.wbits,ie.wnext=0,ie.whave=0,ie.window=new h.Buf8(ie.wsize)),ee>=ie.wsize?(h.arraySet(ie.window,X,A-ie.wsize,ie.wsize,0),ie.wnext=0,ie.whave=ie.wsize):(ee<(be=ie.wsize-ie.wnext)&&(be=ee),h.arraySet(ie.window,X,A-ee,be,ie.wnext),(ee-=be)?(h.arraySet(ie.window,X,A-ee,ee,0),ie.wnext=ee,ie.whave=ie.wsize):(ie.wnext+=be,ie.wnext===ie.wsize&&(ie.wnext=0),ie.whave<ie.wsize&&(ie.whave+=be))),0}c.inflateReset=O,c.inflateReset2=B,c.inflateResetKeep=R,c.inflateInit=function(M){return j(M,15)},c.inflateInit2=j,c.inflate=function(M,X){var A,ee,be,ie,xe,le,ke,oe,se,$e,Ce,we,Qe,tt,Xe,je,We,qe,nt,Ft,T,pe,fe,q,G=0,ae=new h.Buf8(4),Se=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15];if(!M||!M.state||!M.output||!M.input&&M.avail_in!==0)return v;(A=M.state).mode===12&&(A.mode=13),xe=M.next_out,be=M.output,ke=M.avail_out,ie=M.next_in,ee=M.input,le=M.avail_in,oe=A.hold,se=A.bits,$e=le,Ce=ke,pe=w;e:for(;;)switch(A.mode){case k:if(A.wrap===0){A.mode=13;break}for(;se<16;){if(le===0)break e;le--,oe+=ee[ie++]<<se,se+=8}if(2&A.wrap&&oe===35615){ae[A.check=0]=255&oe,ae[1]=oe>>>8&255,A.check=p(A.check,ae,2,0),se=oe=0,A.mode=2;break}if(A.flags=0,A.head&&(A.head.done=!1),!(1&A.wrap)||(((255&oe)<<8)+(oe>>8))%31){M.msg="incorrect header check",A.mode=30;break}if((15&oe)!=8){M.msg="unknown compression method",A.mode=30;break}if(se-=4,T=8+(15&(oe>>>=4)),A.wbits===0)A.wbits=T;else if(T>A.wbits){M.msg="invalid window size",A.mode=30;break}A.dmax=1<<T,M.adler=A.check=1,A.mode=512&oe?10:12,se=oe=0;break;case 2:for(;se<16;){if(le===0)break e;le--,oe+=ee[ie++]<<se,se+=8}if(A.flags=oe,(255&A.flags)!=8){M.msg="unknown compression method",A.mode=30;break}if(57344&A.flags){M.msg="unknown header flags set",A.mode=30;break}A.head&&(A.head.text=oe>>8&1),512&A.flags&&(ae[0]=255&oe,ae[1]=oe>>>8&255,A.check=p(A.check,ae,2,0)),se=oe=0,A.mode=3;case 3:for(;se<32;){if(le===0)break e;le--,oe+=ee[ie++]<<se,se+=8}A.head&&(A.head.time=oe),512&A.flags&&(ae[0]=255&oe,ae[1]=oe>>>8&255,ae[2]=oe>>>16&255,ae[3]=oe>>>24&255,A.check=p(A.check,ae,4,0)),se=oe=0,A.mode=4;case 4:for(;se<16;){if(le===0)break e;le--,oe+=ee[ie++]<<se,se+=8}A.head&&(A.head.xflags=255&oe,A.head.os=oe>>8),512&A.flags&&(ae[0]=255&oe,ae[1]=oe>>>8&255,A.check=p(A.check,ae,2,0)),se=oe=0,A.mode=5;case 5:if(1024&A.flags){for(;se<16;){if(le===0)break e;le--,oe+=ee[ie++]<<se,se+=8}A.length=oe,A.head&&(A.head.extra_len=oe),512&A.flags&&(ae[0]=255&oe,ae[1]=oe>>>8&255,A.check=p(A.check,ae,2,0)),se=oe=0}else A.head&&(A.head.extra=null);A.mode=6;case 6:if(1024&A.flags&&(le<(we=A.length)&&(we=le),we&&(A.head&&(T=A.head.extra_len-A.length,A.head.extra||(A.head.extra=new Array(A.head.extra_len)),h.arraySet(A.head.extra,ee,ie,we,T)),512&A.flags&&(A.check=p(A.check,ee,we,ie)),le-=we,ie+=we,A.length-=we),A.length))break e;A.length=0,A.mode=7;case 7:if(2048&A.flags){if(le===0)break e;for(we=0;T=ee[ie+we++],A.head&&T&&A.length<65536&&(A.head.name+=String.fromCharCode(T)),T&&we<le;);if(512&A.flags&&(A.check=p(A.check,ee,we,ie)),le-=we,ie+=we,T)break e}else A.head&&(A.head.name=null);A.length=0,A.mode=8;case 8:if(4096&A.flags){if(le===0)break e;for(we=0;T=ee[ie+we++],A.head&&T&&A.length<65536&&(A.head.comment+=String.fromCharCode(T)),T&&we<le;);if(512&A.flags&&(A.check=p(A.check,ee,we,ie)),le-=we,ie+=we,T)break e}else A.head&&(A.head.comment=null);A.mode=9;case 9:if(512&A.flags){for(;se<16;){if(le===0)break e;le--,oe+=ee[ie++]<<se,se+=8}if(oe!==(65535&A.check)){M.msg="header crc mismatch",A.mode=30;break}se=oe=0}A.head&&(A.head.hcrc=A.flags>>9&1,A.head.done=!0),M.adler=A.check=0,A.mode=12;break;case 10:for(;se<32;){if(le===0)break e;le--,oe+=ee[ie++]<<se,se+=8}M.adler=A.check=N(oe),se=oe=0,A.mode=11;case 11:if(A.havedict===0)return M.next_out=xe,M.avail_out=ke,M.next_in=ie,M.avail_in=le,A.hold=oe,A.bits=se,2;M.adler=A.check=1,A.mode=12;case 12:if(X===5||X===6)break e;case 13:if(A.last){oe>>>=7&se,se-=7&se,A.mode=27;break}for(;se<3;){if(le===0)break e;le--,oe+=ee[ie++]<<se,se+=8}switch(A.last=1&oe,se-=1,3&(oe>>>=1)){case 0:A.mode=14;break;case 1:if(Z(A),A.mode=20,X!==6)break;oe>>>=2,se-=2;break e;case 2:A.mode=17;break;case 3:M.msg="invalid block type",A.mode=30}oe>>>=2,se-=2;break;case 14:for(oe>>>=7&se,se-=7&se;se<32;){if(le===0)break e;le--,oe+=ee[ie++]<<se,se+=8}if((65535&oe)!=(oe>>>16^65535)){M.msg="invalid stored block lengths",A.mode=30;break}if(A.length=65535&oe,se=oe=0,A.mode=15,X===6)break e;case 15:A.mode=16;case 16:if(we=A.length){if(le<we&&(we=le),ke<we&&(we=ke),we===0)break e;h.arraySet(be,ee,ie,we,xe),le-=we,ie+=we,ke-=we,xe+=we,A.length-=we;break}A.mode=12;break;case 17:for(;se<14;){if(le===0)break e;le--,oe+=ee[ie++]<<se,se+=8}if(A.nlen=257+(31&oe),oe>>>=5,se-=5,A.ndist=1+(31&oe),oe>>>=5,se-=5,A.ncode=4+(15&oe),oe>>>=4,se-=4,286<A.nlen||30<A.ndist){M.msg="too many length or distance symbols",A.mode=30;break}A.have=0,A.mode=18;case 18:for(;A.have<A.ncode;){for(;se<3;){if(le===0)break e;le--,oe+=ee[ie++]<<se,se+=8}A.lens[Se[A.have++]]=7&oe,oe>>>=3,se-=3}for(;A.have<19;)A.lens[Se[A.have++]]=0;if(A.lencode=A.lendyn,A.lenbits=7,fe={bits:A.lenbits},pe=g(0,A.lens,0,19,A.lencode,0,A.work,fe),A.lenbits=fe.bits,pe){M.msg="invalid code lengths set",A.mode=30;break}A.have=0,A.mode=19;case 19:for(;A.have<A.nlen+A.ndist;){for(;je=(G=A.lencode[oe&(1<<A.lenbits)-1])>>>16&255,We=65535&G,!((Xe=G>>>24)<=se);){if(le===0)break e;le--,oe+=ee[ie++]<<se,se+=8}if(We<16)oe>>>=Xe,se-=Xe,A.lens[A.have++]=We;else{if(We===16){for(q=Xe+2;se<q;){if(le===0)break e;le--,oe+=ee[ie++]<<se,se+=8}if(oe>>>=Xe,se-=Xe,A.have===0){M.msg="invalid bit length repeat",A.mode=30;break}T=A.lens[A.have-1],we=3+(3&oe),oe>>>=2,se-=2}else if(We===17){for(q=Xe+3;se<q;){if(le===0)break e;le--,oe+=ee[ie++]<<se,se+=8}se-=Xe,T=0,we=3+(7&(oe>>>=Xe)),oe>>>=3,se-=3}else{for(q=Xe+7;se<q;){if(le===0)break e;le--,oe+=ee[ie++]<<se,se+=8}se-=Xe,T=0,we=11+(127&(oe>>>=Xe)),oe>>>=7,se-=7}if(A.have+we>A.nlen+A.ndist){M.msg="invalid bit length repeat",A.mode=30;break}for(;we--;)A.lens[A.have++]=T}}if(A.mode===30)break;if(A.lens[256]===0){M.msg="invalid code -- missing end-of-block",A.mode=30;break}if(A.lenbits=9,fe={bits:A.lenbits},pe=g(y,A.lens,0,A.nlen,A.lencode,0,A.work,fe),A.lenbits=fe.bits,pe){M.msg="invalid literal/lengths set",A.mode=30;break}if(A.distbits=6,A.distcode=A.distdyn,fe={bits:A.distbits},pe=g(x,A.lens,A.nlen,A.ndist,A.distcode,0,A.work,fe),A.distbits=fe.bits,pe){M.msg="invalid distances set",A.mode=30;break}if(A.mode=20,X===6)break e;case 20:A.mode=21;case 21:if(6<=le&&258<=ke){M.next_out=xe,M.avail_out=ke,M.next_in=ie,M.avail_in=le,A.hold=oe,A.bits=se,f(M,Ce),xe=M.next_out,be=M.output,ke=M.avail_out,ie=M.next_in,ee=M.input,le=M.avail_in,oe=A.hold,se=A.bits,A.mode===12&&(A.back=-1);break}for(A.back=0;je=(G=A.lencode[oe&(1<<A.lenbits)-1])>>>16&255,We=65535&G,!((Xe=G>>>24)<=se);){if(le===0)break e;le--,oe+=ee[ie++]<<se,se+=8}if(je&&!(240&je)){for(qe=Xe,nt=je,Ft=We;je=(G=A.lencode[Ft+((oe&(1<<qe+nt)-1)>>qe)])>>>16&255,We=65535&G,!(qe+(Xe=G>>>24)<=se);){if(le===0)break e;le--,oe+=ee[ie++]<<se,se+=8}oe>>>=qe,se-=qe,A.back+=qe}if(oe>>>=Xe,se-=Xe,A.back+=Xe,A.length=We,je===0){A.mode=26;break}if(32&je){A.back=-1,A.mode=12;break}if(64&je){M.msg="invalid literal/length code",A.mode=30;break}A.extra=15&je,A.mode=22;case 22:if(A.extra){for(q=A.extra;se<q;){if(le===0)break e;le--,oe+=ee[ie++]<<se,se+=8}A.length+=oe&(1<<A.extra)-1,oe>>>=A.extra,se-=A.extra,A.back+=A.extra}A.was=A.length,A.mode=23;case 23:for(;je=(G=A.distcode[oe&(1<<A.distbits)-1])>>>16&255,We=65535&G,!((Xe=G>>>24)<=se);){if(le===0)break e;le--,oe+=ee[ie++]<<se,se+=8}if(!(240&je)){for(qe=Xe,nt=je,Ft=We;je=(G=A.distcode[Ft+((oe&(1<<qe+nt)-1)>>qe)])>>>16&255,We=65535&G,!(qe+(Xe=G>>>24)<=se);){if(le===0)break e;le--,oe+=ee[ie++]<<se,se+=8}oe>>>=qe,se-=qe,A.back+=qe}if(oe>>>=Xe,se-=Xe,A.back+=Xe,64&je){M.msg="invalid distance code",A.mode=30;break}A.offset=We,A.extra=15&je,A.mode=24;case 24:if(A.extra){for(q=A.extra;se<q;){if(le===0)break e;le--,oe+=ee[ie++]<<se,se+=8}A.offset+=oe&(1<<A.extra)-1,oe>>>=A.extra,se-=A.extra,A.back+=A.extra}if(A.offset>A.dmax){M.msg="invalid distance too far back",A.mode=30;break}A.mode=25;case 25:if(ke===0)break e;if(we=Ce-ke,A.offset>we){if((we=A.offset-we)>A.whave&&A.sane){M.msg="invalid distance too far back",A.mode=30;break}Qe=we>A.wnext?(we-=A.wnext,A.wsize-we):A.wnext-we,we>A.length&&(we=A.length),tt=A.window}else tt=be,Qe=xe-A.offset,we=A.length;for(ke<we&&(we=ke),ke-=we,A.length-=we;be[xe++]=tt[Qe++],--we;);A.length===0&&(A.mode=21);break;case 26:if(ke===0)break e;be[xe++]=A.length,ke--,A.mode=21;break;case 27:if(A.wrap){for(;se<32;){if(le===0)break e;le--,oe|=ee[ie++]<<se,se+=8}if(Ce-=ke,M.total_out+=Ce,A.total+=Ce,Ce&&(M.adler=A.check=A.flags?p(A.check,be,Ce,xe-Ce):d(A.check,be,Ce,xe-Ce)),Ce=ke,(A.flags?oe:N(oe))!==A.check){M.msg="incorrect data check",A.mode=30;break}se=oe=0}A.mode=28;case 28:if(A.wrap&&A.flags){for(;se<32;){if(le===0)break e;le--,oe+=ee[ie++]<<se,se+=8}if(oe!==(4294967295&A.total)){M.msg="incorrect length check",A.mode=30;break}se=oe=0}A.mode=29;case 29:pe=1;break e;case 30:pe=-3;break e;case 31:return-4;case 32:default:return v}return M.next_out=xe,M.avail_out=ke,M.next_in=ie,M.avail_in=le,A.hold=oe,A.bits=se,(A.wsize||Ce!==M.avail_out&&A.mode<30&&(A.mode<27||X!==4))&&ue(M,M.output,M.next_out,Ce-M.avail_out)?(A.mode=31,-4):($e-=M.avail_in,Ce-=M.avail_out,M.total_in+=$e,M.total_out+=Ce,A.total+=Ce,A.wrap&&Ce&&(M.adler=A.check=A.flags?p(A.check,be,Ce,M.next_out-Ce):d(A.check,be,Ce,M.next_out-Ce)),M.data_type=A.bits+(A.last?64:0)+(A.mode===12?128:0)+(A.mode===20||A.mode===15?256:0),($e==0&&Ce===0||X===4)&&pe===w&&(pe=-5),pe)},c.inflateEnd=function(M){if(!M||!M.state)return v;var X=M.state;return X.window&&(X.window=null),M.state=null,w},c.inflateGetHeader=function(M,X){var A;return M&&M.state&&2&(A=M.state).wrap?((A.head=X).done=!1,w):v},c.inflateSetDictionary=function(M,X){var A,ee=X.length;return M&&M.state?(A=M.state).wrap!==0&&A.mode!==11?v:A.mode===11&&d(1,X,ee,0)!==A.check?-3:ue(M,X,ee,ee)?(A.mode=31,-4):(A.havedict=1,w):v},c.inflateInfo="pako inflate (from Nodeca project)"},{"../utils/common":41,"./adler32":43,"./crc32":45,"./inffast":48,"./inftrees":50}],50:[function(i,u,c){var h=i("../utils/common"),d=[3,4,5,6,7,8,9,10,11,13,15,17,19,23,27,31,35,43,51,59,67,83,99,115,131,163,195,227,258,0,0],p=[16,16,16,16,16,16,16,16,17,17,17,17,18,18,18,18,19,19,19,19,20,20,20,20,21,21,21,21,16,72,78],f=[1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,257,385,513,769,1025,1537,2049,3073,4097,6145,8193,12289,16385,24577,0,0],g=[16,16,16,16,17,17,18,18,19,19,20,20,21,21,22,22,23,23,24,24,25,25,26,26,27,27,28,28,29,29,64,64];u.exports=function(y,x,w,v,k,C,I,N){var E,R,O,B,j,U,K,H,Z,ue=N.bits,M=0,X=0,A=0,ee=0,be=0,ie=0,xe=0,le=0,ke=0,oe=0,se=null,$e=0,Ce=new h.Buf16(16),we=new h.Buf16(16),Qe=null,tt=0;for(M=0;M<=15;M++)Ce[M]=0;for(X=0;X<v;X++)Ce[x[w+X]]++;for(be=ue,ee=15;1<=ee&&Ce[ee]===0;ee--);if(ee<be&&(be=ee),ee===0)return k[C++]=20971520,k[C++]=20971520,N.bits=1,0;for(A=1;A<ee&&Ce[A]===0;A++);for(be<A&&(be=A),M=le=1;M<=15;M++)if(le<<=1,(le-=Ce[M])<0)return-1;if(0<le&&(y===0||ee!==1))return-1;for(we[1]=0,M=1;M<15;M++)we[M+1]=we[M]+Ce[M];for(X=0;X<v;X++)x[w+X]!==0&&(I[we[x[w+X]]++]=X);if(U=y===0?(se=Qe=I,19):y===1?(se=d,$e-=257,Qe=p,tt-=257,256):(se=f,Qe=g,-1),M=A,j=C,xe=X=oe=0,O=-1,B=(ke=1<<(ie=be))-1,y===1&&852<ke||y===2&&592<ke)return 1;for(;;){for(K=M-xe,Z=I[X]<U?(H=0,I[X]):I[X]>U?(H=Qe[tt+I[X]],se[$e+I[X]]):(H=96,0),E=1<<M-xe,A=R=1<<ie;k[j+(oe>>xe)+(R-=E)]=K<<24|H<<16|Z|0,R!==0;);for(E=1<<M-1;oe&E;)E>>=1;if(E!==0?(oe&=E-1,oe+=E):oe=0,X++,--Ce[M]==0){if(M===ee)break;M=x[w+I[X]]}if(be<M&&(oe&B)!==O){for(xe===0&&(xe=be),j+=A,le=1<<(ie=M-xe);ie+xe<ee&&!((le-=Ce[ie+xe])<=0);)ie++,le<<=1;if(ke+=1<<ie,y===1&&852<ke||y===2&&592<ke)return 1;k[O=oe&B]=be<<24|ie<<16|j-C|0}}return oe!==0&&(k[j+oe]=M-xe<<24|4194304|0),N.bits=be,0}},{"../utils/common":41}],51:[function(i,u,c){u.exports={2:"need dictionary",1:"stream end",0:"","-1":"file error","-2":"stream error","-3":"data error","-4":"insufficient memory","-5":"buffer error","-6":"incompatible version"}},{}],52:[function(i,u,c){var h=i("../utils/common"),d=0,p=1;function f(G){for(var ae=G.length;0<=--ae;)G[ae]=0}var g=0,y=29,x=256,w=x+1+y,v=30,k=19,C=2*w+1,I=15,N=16,E=7,R=256,O=16,B=17,j=18,U=[0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0],K=[0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13],H=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7],Z=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15],ue=new Array(2*(w+2));f(ue);var M=new Array(2*v);f(M);var X=new Array(512);f(X);var A=new Array(256);f(A);var ee=new Array(y);f(ee);var be,ie,xe,le=new Array(v);function ke(G,ae,Se,Ie,he){this.static_tree=G,this.extra_bits=ae,this.extra_base=Se,this.elems=Ie,this.max_length=he,this.has_stree=G&&G.length}function oe(G,ae){this.dyn_tree=G,this.max_code=0,this.stat_desc=ae}function se(G){return G<256?X[G]:X[256+(G>>>7)]}function $e(G,ae){G.pending_buf[G.pending++]=255&ae,G.pending_buf[G.pending++]=ae>>>8&255}function Ce(G,ae,Se){G.bi_valid>N-Se?(G.bi_buf|=ae<<G.bi_valid&65535,$e(G,G.bi_buf),G.bi_buf=ae>>N-G.bi_valid,G.bi_valid+=Se-N):(G.bi_buf|=ae<<G.bi_valid&65535,G.bi_valid+=Se)}function we(G,ae,Se){Ce(G,Se[2*ae],Se[2*ae+1])}function Qe(G,ae){for(var Se=0;Se|=1&G,G>>>=1,Se<<=1,0<--ae;);return Se>>>1}function tt(G,ae,Se){var Ie,he,Ae=new Array(I+1),Me=0;for(Ie=1;Ie<=I;Ie++)Ae[Ie]=Me=Me+Se[Ie-1]<<1;for(he=0;he<=ae;he++){var De=G[2*he+1];De!==0&&(G[2*he]=Qe(Ae[De]++,De))}}function Xe(G){var ae;for(ae=0;ae<w;ae++)G.dyn_ltree[2*ae]=0;for(ae=0;ae<v;ae++)G.dyn_dtree[2*ae]=0;for(ae=0;ae<k;ae++)G.bl_tree[2*ae]=0;G.dyn_ltree[2*R]=1,G.opt_len=G.static_len=0,G.last_lit=G.matches=0}function je(G){8<G.bi_valid?$e(G,G.bi_buf):0<G.bi_valid&&(G.pending_buf[G.pending++]=G.bi_buf),G.bi_buf=0,G.bi_valid=0}function We(G,ae,Se,Ie){var he=2*ae,Ae=2*Se;return G[he]<G[Ae]||G[he]===G[Ae]&&Ie[ae]<=Ie[Se]}function qe(G,ae,Se){for(var Ie=G.heap[Se],he=Se<<1;he<=G.heap_len&&(he<G.heap_len&&We(ae,G.heap[he+1],G.heap[he],G.depth)&&he++,!We(ae,Ie,G.heap[he],G.depth));)G.heap[Se]=G.heap[he],Se=he,he<<=1;G.heap[Se]=Ie}function nt(G,ae,Se){var Ie,he,Ae,Me,De=0;if(G.last_lit!==0)for(;Ie=G.pending_buf[G.d_buf+2*De]<<8|G.pending_buf[G.d_buf+2*De+1],he=G.pending_buf[G.l_buf+De],De++,Ie===0?we(G,he,ae):(we(G,(Ae=A[he])+x+1,ae),(Me=U[Ae])!==0&&Ce(G,he-=ee[Ae],Me),we(G,Ae=se(--Ie),Se),(Me=K[Ae])!==0&&Ce(G,Ie-=le[Ae],Me)),De<G.last_lit;);we(G,R,ae)}function Ft(G,ae){var Se,Ie,he,Ae=ae.dyn_tree,Me=ae.stat_desc.static_tree,De=ae.stat_desc.has_stree,Je=ae.stat_desc.elems,pt=-1;for(G.heap_len=0,G.heap_max=C,Se=0;Se<Je;Se++)Ae[2*Se]!==0?(G.heap[++G.heap_len]=pt=Se,G.depth[Se]=0):Ae[2*Se+1]=0;for(;G.heap_len<2;)Ae[2*(he=G.heap[++G.heap_len]=pt<2?++pt:0)]=1,G.depth[he]=0,G.opt_len--,De&&(G.static_len-=Me[2*he+1]);for(ae.max_code=pt,Se=G.heap_len>>1;1<=Se;Se--)qe(G,Ae,Se);for(he=Je;Se=G.heap[1],G.heap[1]=G.heap[G.heap_len--],qe(G,Ae,1),Ie=G.heap[1],G.heap[--G.heap_max]=Se,G.heap[--G.heap_max]=Ie,Ae[2*he]=Ae[2*Se]+Ae[2*Ie],G.depth[he]=(G.depth[Se]>=G.depth[Ie]?G.depth[Se]:G.depth[Ie])+1,Ae[2*Se+1]=Ae[2*Ie+1]=he,G.heap[1]=he++,qe(G,Ae,1),2<=G.heap_len;);G.heap[--G.heap_max]=G.heap[1],function(ot,xn){var er,pn,go,Vt,yo,wn,vs=xn.dyn_tree,lu=xn.max_code,gd=xn.stat_desc.static_tree,vt=xn.stat_desc.has_stree,_n=xn.stat_desc.extra_bits,uu=xn.stat_desc.extra_base,bo=xn.stat_desc.max_length,Lr=0;for(Vt=0;Vt<=I;Vt++)ot.bl_count[Vt]=0;for(vs[2*ot.heap[ot.heap_max]+1]=0,er=ot.heap_max+1;er<C;er++)bo<(Vt=vs[2*vs[2*(pn=ot.heap[er])+1]+1]+1)&&(Vt=bo,Lr++),vs[2*pn+1]=Vt,lu<pn||(ot.bl_count[Vt]++,yo=0,uu<=pn&&(yo=_n[pn-uu]),wn=vs[2*pn],ot.opt_len+=wn*(Vt+yo),vt&&(ot.static_len+=wn*(gd[2*pn+1]+yo)));if(Lr!==0){do{for(Vt=bo-1;ot.bl_count[Vt]===0;)Vt--;ot.bl_count[Vt]--,ot.bl_count[Vt+1]+=2,ot.bl_count[bo]--,Lr-=2}while(0<Lr);for(Vt=bo;Vt!==0;Vt--)for(pn=ot.bl_count[Vt];pn!==0;)lu<(go=ot.heap[--er])||(vs[2*go+1]!==Vt&&(ot.opt_len+=(Vt-vs[2*go+1])*vs[2*go],vs[2*go+1]=Vt),pn--)}}(G,ae),tt(Ae,pt,G.bl_count)}function T(G,ae,Se){var Ie,he,Ae=-1,Me=ae[1],De=0,Je=7,pt=4;for(Me===0&&(Je=138,pt=3),ae[2*(Se+1)+1]=65535,Ie=0;Ie<=Se;Ie++)he=Me,Me=ae[2*(Ie+1)+1],++De<Je&&he===Me||(De<pt?G.bl_tree[2*he]+=De:he!==0?(he!==Ae&&G.bl_tree[2*he]++,G.bl_tree[2*O]++):De<=10?G.bl_tree[2*B]++:G.bl_tree[2*j]++,Ae=he,pt=(De=0)===Me?(Je=138,3):he===Me?(Je=6,3):(Je=7,4))}function pe(G,ae,Se){var Ie,he,Ae=-1,Me=ae[1],De=0,Je=7,pt=4;for(Me===0&&(Je=138,pt=3),Ie=0;Ie<=Se;Ie++)if(he=Me,Me=ae[2*(Ie+1)+1],!(++De<Je&&he===Me)){if(De<pt)for(;we(G,he,G.bl_tree),--De!=0;);else he!==0?(he!==Ae&&(we(G,he,G.bl_tree),De--),we(G,O,G.bl_tree),Ce(G,De-3,2)):De<=10?(we(G,B,G.bl_tree),Ce(G,De-3,3)):(we(G,j,G.bl_tree),Ce(G,De-11,7));Ae=he,pt=(De=0)===Me?(Je=138,3):he===Me?(Je=6,3):(Je=7,4)}}f(le);var fe=!1;function q(G,ae,Se,Ie){Ce(G,(g<<1)+(Ie?1:0),3),function(he,Ae,Me,De){je(he),$e(he,Me),$e(he,~Me),h.arraySet(he.pending_buf,he.window,Ae,Me,he.pending),he.pending+=Me}(G,ae,Se)}c._tr_init=function(G){fe||(function(){var ae,Se,Ie,he,Ae,Me=new Array(I+1);for(he=Ie=0;he<y-1;he++)for(ee[he]=Ie,ae=0;ae<1<<U[he];ae++)A[Ie++]=he;for(A[Ie-1]=he,he=Ae=0;he<16;he++)for(le[he]=Ae,ae=0;ae<1<<K[he];ae++)X[Ae++]=he;for(Ae>>=7;he<v;he++)for(le[he]=Ae<<7,ae=0;ae<1<<K[he]-7;ae++)X[256+Ae++]=he;for(Se=0;Se<=I;Se++)Me[Se]=0;for(ae=0;ae<=143;)ue[2*ae+1]=8,ae++,Me[8]++;for(;ae<=255;)ue[2*ae+1]=9,ae++,Me[9]++;for(;ae<=279;)ue[2*ae+1]=7,ae++,Me[7]++;for(;ae<=287;)ue[2*ae+1]=8,ae++,Me[8]++;for(tt(ue,w+1,Me),ae=0;ae<v;ae++)M[2*ae+1]=5,M[2*ae]=Qe(ae,5);be=new ke(ue,U,x+1,w,I),ie=new ke(M,K,0,v,I),xe=new ke(new Array(0),H,0,k,E)}(),fe=!0),G.l_desc=new oe(G.dyn_ltree,be),G.d_desc=new oe(G.dyn_dtree,ie),G.bl_desc=new oe(G.bl_tree,xe),G.bi_buf=0,G.bi_valid=0,Xe(G)},c._tr_stored_block=q,c._tr_flush_block=function(G,ae,Se,Ie){var he,Ae,Me=0;0<G.level?(G.strm.data_type===2&&(G.strm.data_type=function(De){var Je,pt=4093624447;for(Je=0;Je<=31;Je++,pt>>>=1)if(1&pt&&De.dyn_ltree[2*Je]!==0)return d;if(De.dyn_ltree[18]!==0||De.dyn_ltree[20]!==0||De.dyn_ltree[26]!==0)return p;for(Je=32;Je<x;Je++)if(De.dyn_ltree[2*Je]!==0)return p;return d}(G)),Ft(G,G.l_desc),Ft(G,G.d_desc),Me=function(De){var Je;for(T(De,De.dyn_ltree,De.l_desc.max_code),T(De,De.dyn_dtree,De.d_desc.max_code),Ft(De,De.bl_desc),Je=k-1;3<=Je&&De.bl_tree[2*Z[Je]+1]===0;Je--);return De.opt_len+=3*(Je+1)+5+5+4,Je}(G),he=G.opt_len+3+7>>>3,(Ae=G.static_len+3+7>>>3)<=he&&(he=Ae)):he=Ae=Se+5,Se+4<=he&&ae!==-1?q(G,ae,Se,Ie):G.strategy===4||Ae===he?(Ce(G,2+(Ie?1:0),3),nt(G,ue,M)):(Ce(G,4+(Ie?1:0),3),function(De,Je,pt,ot){var xn;for(Ce(De,Je-257,5),Ce(De,pt-1,5),Ce(De,ot-4,4),xn=0;xn<ot;xn++)Ce(De,De.bl_tree[2*Z[xn]+1],3);pe(De,De.dyn_ltree,Je-1),pe(De,De.dyn_dtree,pt-1)}(G,G.l_desc.max_code+1,G.d_desc.max_code+1,Me+1),nt(G,G.dyn_ltree,G.dyn_dtree)),Xe(G),Ie&&je(G)},c._tr_tally=function(G,ae,Se){return G.pending_buf[G.d_buf+2*G.last_lit]=ae>>>8&255,G.pending_buf[G.d_buf+2*G.last_lit+1]=255&ae,G.pending_buf[G.l_buf+G.last_lit]=255&Se,G.last_lit++,ae===0?G.dyn_ltree[2*Se]++:(G.matches++,ae--,G.dyn_ltree[2*(A[Se]+x+1)]++,G.dyn_dtree[2*se(ae)]++),G.last_lit===G.lit_bufsize-1},c._tr_align=function(G){Ce(G,2,3),we(G,R,ue),function(ae){ae.bi_valid===16?($e(ae,ae.bi_buf),ae.bi_buf=0,ae.bi_valid=0):8<=ae.bi_valid&&(ae.pending_buf[ae.pending++]=255&ae.bi_buf,ae.bi_buf>>=8,ae.bi_valid-=8)}(G)}},{"../utils/common":41}],53:[function(i,u,c){u.exports=function(){this.input=null,this.next_in=0,this.avail_in=0,this.total_in=0,this.output=null,this.next_out=0,this.avail_out=0,this.total_out=0,this.msg="",this.state=null,this.data_type=2,this.adler=0}},{}],54:[function(i,u,c){(function(h){(function(d,p){if(!d.setImmediate){var f,g,y,x,w=1,v={},k=!1,C=d.document,I=Object.getPrototypeOf&&Object.getPrototypeOf(d);I=I&&I.setTimeout?I:d,f={}.toString.call(d.process)==="[object process]"?function(O){process.nextTick(function(){E(O)})}:function(){if(d.postMessage&&!d.importScripts){var O=!0,B=d.onmessage;return d.onmessage=function(){O=!1},d.postMessage("","*"),d.onmessage=B,O}}()?(x="setImmediate$"+Math.random()+"$",d.addEventListener?d.addEventListener("message",R,!1):d.attachEvent("onmessage",R),function(O){d.postMessage(x+O,"*")}):d.MessageChannel?((y=new MessageChannel).port1.onmessage=function(O){E(O.data)},function(O){y.port2.postMessage(O)}):C&&"onreadystatechange"in C.createElement("script")?(g=C.documentElement,function(O){var B=C.createElement("script");B.onreadystatechange=function(){E(O),B.onreadystatechange=null,g.removeChild(B),B=null},g.appendChild(B)}):function(O){setTimeout(E,0,O)},I.setImmediate=function(O){typeof O!="function"&&(O=new Function(""+O));for(var B=new Array(arguments.length-1),j=0;j<B.length;j++)B[j]=arguments[j+1];var U={callback:O,args:B};return v[w]=U,f(w),w++},I.clearImmediate=N}function N(O){delete v[O]}function E(O){if(k)setTimeout(E,0,O);else{var B=v[O];if(B){k=!0;try{(function(j){var U=j.callback,K=j.args;switch(K.length){case 0:U();break;case 1:U(K[0]);break;case 2:U(K[0],K[1]);break;case 3:U(K[0],K[1],K[2]);break;default:U.apply(p,K)}})(B)}finally{N(O),k=!1}}}}function R(O){O.source===d&&typeof O.data=="string"&&O.data.indexOf(x)===0&&E(+O.data.slice(x.length))}})(typeof self>"u"?h===void 0?this:h:self)}).call(this,typeof pa<"u"?pa:typeof self<"u"?self:typeof window<"u"?window:{})},{}]},{},[10])(10)})}),o=(()=>{var a=typeof document<"u"&&document.currentScript?document.currentScript.src:void 0;return typeof __filename<"u"&&(a=a||__filename),function(l){l=l||{};var i=typeof l<"u"?l:{},u,c;i.ready=new Promise(function(m,b){u=m,c=b});var h=Object.assign({},i),d="./this.program",p=(m,b)=>{throw b},f=typeof window=="object",g=typeof importScripts=="function",y=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",x="";function w(m){return i.locateFile?i.locateFile(m,x):x+m}var v,k,C,I,N,E;y?(g?x=require("path").dirname(x)+"/":x=__dirname+"/",E=()=>{N||(I=require("fs"),N=require("path"))},v=function(m,b){return E(),m=N.normalize(m),I.readFileSync(m,b?void 0:"utf8")},C=m=>{var b=v(m,!0);return b.buffer||(b=new Uint8Array(b)),b},k=(m,b,S)=>{E(),m=N.normalize(m),I.readFile(m,function($,F){$?S($):b(F.buffer)})},process.argv.length>1&&(d=process.argv[1].replace(/\\/g,"/")),process.argv.slice(2),process.on("uncaughtException",function(m){if(!(m instanceof Zy))throw m}),process.on("unhandledRejection",function(m){throw m}),p=(m,b)=>{throw process.exitCode=m,b},i.inspect=function(){return"[Emscripten Module object]"}):(f||g)&&(g?x=self.location.href:typeof document<"u"&&document.currentScript&&(x=document.currentScript.src),a&&(x=a),x.indexOf("blob:")!==0?x=x.substr(0,x.replace(/[?#].*/,"").lastIndexOf("/")+1):x="",v=m=>{var b=new XMLHttpRequest;return b.open("GET",m,!1),b.send(null),b.responseText},g&&(C=m=>{var b=new XMLHttpRequest;return b.open("GET",m,!1),b.responseType="arraybuffer",b.send(null),new Uint8Array(b.response)}),k=(m,b,S)=>{var $=new XMLHttpRequest;$.open("GET",m,!0),$.responseType="arraybuffer",$.onload=()=>{if($.status==200||$.status==0&&$.response){b($.response);return}S()},$.onerror=S,$.send(null)});var R=i.print||console.log.bind(console),O=i.printErr||console.warn.bind(console);Object.assign(i,h),h=null;var B=4,j=0,U=m=>{j=m},K=()=>j,H;typeof WebAssembly!="object"&&pn("no native wasm support detected");var Z,ue=!1;function M(m,b){m||pn(b)}var X=typeof TextDecoder<"u"?new TextDecoder("utf8"):void 0;function A(m,b,S){for(var $=b+S,F=b;m[F]&&!(F>=$);)++F;if(F-b>16&&m.buffer&&X)return X.decode(m.subarray(b,F));for(var L="";b<F;){var V=m[b++];if(!(V&128)){L+=String.fromCharCode(V);continue}var W=m[b++]&63;if((V&224)==192){L+=String.fromCharCode((V&31)<<6|W);continue}var re=m[b++]&63;if((V&240)==224?V=(V&15)<<12|W<<6|re:V=(V&7)<<18|W<<12|re<<6|m[b++]&63,V<65536)L+=String.fromCharCode(V);else{var ye=V-65536;L+=String.fromCharCode(55296|ye>>10,56320|ye&1023)}}return L}function ee(m,b){return m?A(qe,m,b):""}function be(m,b,S,$){if(!($>0))return 0;for(var F=S,L=S+$-1,V=0;V<m.length;++V){var W=m.charCodeAt(V);if(W>=55296&&W<=57343){var re=m.charCodeAt(++V);W=65536+((W&1023)<<10)|re&1023}if(W<=127){if(S>=L)break;b[S++]=W}else if(W<=2047){if(S+1>=L)break;b[S++]=192|W>>6,b[S++]=128|W&63}else if(W<=65535){if(S+2>=L)break;b[S++]=224|W>>12,b[S++]=128|W>>6&63,b[S++]=128|W&63}else{if(S+3>=L)break;b[S++]=240|W>>18,b[S++]=128|W>>12&63,b[S++]=128|W>>6&63,b[S++]=128|W&63}}return b[S]=0,S-F}function ie(m,b,S){return be(m,qe,b,S)}function xe(m){for(var b=0,S=0;S<m.length;++S){var $=m.charCodeAt(S);$>=55296&&$<=57343&&($=65536+(($&1023)<<10)|m.charCodeAt(++S)&1023),$<=127?++b:$<=2047?b+=2:$<=65535?b+=3:b+=4}return b}var le=typeof TextDecoder<"u"?new TextDecoder("utf-16le"):void 0;function ke(m,b){for(var S=m,$=S>>1,F=$+b/2;!($>=F)&&Ft[$];)++$;if(S=$<<1,S-m>32&&le)return le.decode(qe.subarray(m,S));for(var L="",V=0;!(V>=b/2);++V){var W=nt[m+V*2>>1];if(W==0)break;L+=String.fromCharCode(W)}return L}function oe(m,b,S){if(S===void 0&&(S=2147483647),S<2)return 0;S-=2;for(var $=b,F=S<m.length*2?S/2:m.length,L=0;L<F;++L){var V=m.charCodeAt(L);nt[b>>1]=V,b+=2}return nt[b>>1]=0,b-$}function se(m){return m.length*2}function $e(m,b){for(var S=0,$="";!(S>=b/4);){var F=T[m+S*4>>2];if(F==0)break;if(++S,F>=65536){var L=F-65536;$+=String.fromCharCode(55296|L>>10,56320|L&1023)}else $+=String.fromCharCode(F)}return $}function Ce(m,b,S){if(S===void 0&&(S=2147483647),S<4)return 0;for(var $=b,F=$+S-4,L=0;L<m.length;++L){var V=m.charCodeAt(L);if(V>=55296&&V<=57343){var W=m.charCodeAt(++L);V=65536+((V&1023)<<10)|W&1023}if(T[b>>2]=V,b+=4,b+4>F)break}return T[b>>2]=0,b-$}function we(m){for(var b=0,S=0;S<m.length;++S){var $=m.charCodeAt(S);$>=55296&&$<=57343&&++S,b+=4}return b}function Qe(m){var b=xe(m)+1,S=fi(b);return S&&be(m,We,S,b),S}function tt(m,b){We.set(m,b)}function Xe(m,b,S){for(var $=0;$<m.length;++$)We[b++>>0]=m.charCodeAt($);We[b>>0]=0}var je,We,qe,nt,Ft,T,pe,fe,q;function G(m){je=m,i.HEAP8=We=new Int8Array(m),i.HEAP16=nt=new Int16Array(m),i.HEAP32=T=new Int32Array(m),i.HEAPU8=qe=new Uint8Array(m),i.HEAPU16=Ft=new Uint16Array(m),i.HEAPU32=pe=new Uint32Array(m),i.HEAPF32=fe=new Float32Array(m),i.HEAPF64=q=new Float64Array(m)}var ae,Se=[],Ie=[],he=[];function Ae(){Lr(Se)}function Me(){!i.noFSInit&&!D.init.initialized&&D.init(),D.ignorePermissions=!1,Lr(Ie)}function De(){Lr(he)}function Je(m){Ie.unshift(m)}var pt=0,ot=null;function xn(m){pt++}function er(m){if(pt--,pt==0&&ot){var b=ot;ot=null,b()}}function pn(m){m="Aborted("+m+")",O(m),ue=!0,m+=". Build with -sASSERTIONS for more info.";var b=new WebAssembly.RuntimeError(m);throw c(b),b}var go="data:application/octet-stream;base64,";function Vt(m){return m.startsWith(go)}function yo(m){return m.startsWith("file://")}var wn;wn="inference.wasm",Vt(wn)||(wn=w(wn));function vs(m){try{if(m==wn&&H)return new Uint8Array(H);if(C)return C(m);throw"both async and sync fetching of the wasm failed"}catch(b){pn(b)}}function lu(){if(f||g){if(typeof fetch=="function"&&!yo(wn))return fetch(wn,i.fetchSettings||{credentials:"same-origin"}).then(function(m){if(!m.ok)throw"failed to load wasm binary file at '"+wn+"'";return m.arrayBuffer()}).catch(function(){return vs(wn)});if(k)return new Promise(function(m,b){k(wn,function(S){m(new Uint8Array(S))},b)})}return Promise.resolve().then(function(){return vs(wn)})}function gd(){var m={env:jy,wasi_snapshot_preview1:jy};function b(V,W){var re=V.exports;i.asm=re,Z=i.asm.memory,G(Z.buffer),ae=i.asm.__indirect_function_table,Je(i.asm.__wasm_call_ctors),er()}xn();function S(V){b(V.instance)}function $(V){return lu().then(function(W){return WebAssembly.instantiate(W,m)}).then(function(W){return W}).then(V,function(W){O("failed to asynchronously prepare wasm: "+W),pn(W)})}function F(){return typeof WebAssembly.instantiateStreaming=="function"&&!Vt(wn)&&!yo(wn)&&!y&&typeof fetch=="function"?fetch(wn,i.fetchSettings||{credentials:"same-origin"}).then(function(V){var W=WebAssembly.instantiateStreaming(V,m);return W.then(S,function(re){return O("wasm streaming compile failed: "+re),O("falling back to ArrayBuffer instantiation"),$(S)})}):$(S)}if(i.instantiateWasm)try{var L=i.instantiateWasm(m,b);return L}catch(V){return O("Module.instantiateWasm callback failed with error: "+V),!1}return F().catch(c),{}}var vt,_n,uu={358482:()=>typeof wasmOffsetConverter<"u"};function bo(){return typeof wasmOffsetConverter<"u"}function Lr(m){for(;m.length>0;)m.shift()(i)}var cu=[];function Un(m){var b=cu[m];return b||(m>=cu.length&&(cu.length=m+1),cu[m]=b=ae.get(m)),b}function by(){var m=new Error;if(!m.stack){try{throw new Error}catch(b){m=b}if(!m.stack)return"(no stack trace available)"}return m.stack.toString()}function QS(m){return fi(m+24)+24}var xy=[];function eC(m){m.add_ref()}var wy=0;function tC(m){var b=new ai(m);return b.get_caught()||(b.set_caught(!0),wy--),b.set_rethrown(!1),xy.push(b),eC(b),b.get_exception_ptr()}var la=0;function ai(m){this.excPtr=m,this.ptr=m-24,this.set_type=function(b){pe[this.ptr+4>>2]=b},this.get_type=function(){return pe[this.ptr+4>>2]},this.set_destructor=function(b){pe[this.ptr+8>>2]=b},this.get_destructor=function(){return pe[this.ptr+8>>2]},this.set_refcount=function(b){T[this.ptr>>2]=b},this.set_caught=function(b){b=b?1:0,We[this.ptr+12>>0]=b},this.get_caught=function(){return We[this.ptr+12>>0]!=0},this.set_rethrown=function(b){b=b?1:0,We[this.ptr+13>>0]=b},this.get_rethrown=function(){return We[this.ptr+13>>0]!=0},this.init=function(b,S){this.set_adjusted_ptr(0),this.set_type(b),this.set_destructor(S),this.set_refcount(0),this.set_caught(!1),this.set_rethrown(!1)},this.add_ref=function(){var b=T[this.ptr>>2];T[this.ptr>>2]=b+1},this.release_ref=function(){var b=T[this.ptr>>2];return T[this.ptr>>2]=b-1,b===1},this.set_adjusted_ptr=function(b){pe[this.ptr+16>>2]=b},this.get_adjusted_ptr=function(){return pe[this.ptr+16>>2]},this.get_exception_ptr=function(){var b=Yy(this.get_type());if(b)return pe[this.excPtr>>2];var S=this.get_adjusted_ptr();return S!==0?S:this.excPtr}}function vy(m){return nr(new ai(m).ptr)}function nC(m){if(m.release_ref()&&!m.get_rethrown()){var b=m.get_destructor();b&&Un(b)(m.excPtr),vy(m.excPtr)}}function sC(){Yn(0);var m=xy.pop();nC(m),la=0}function rC(m){throw la||(la=m),m}function oC(){var m=la;if(!m)return U(0),0;var b=new ai(m);b.set_adjusted_ptr(m);var S=b.get_type();if(!S)return U(0),m;for(var $=Array.prototype.slice.call(arguments),F=0;F<$.length;F++){var L=$[F];if(L===0||L===S)break;var V=b.ptr+16;if(Ad(L,S,V))return U(L),m}return U(S),m}function aC(){var m=la;if(!m)return U(0),0;var b=new ai(m);b.set_adjusted_ptr(m);var S=b.get_type();if(!S)return U(0),m;for(var $=Array.prototype.slice.call(arguments),F=0;F<$.length;F++){var L=$[F];if(L===0||L===S)break;var V=b.ptr+16;if(Ad(L,S,V))return U(L),m}return U(S),m}function iC(m,b,S){var $=new ai(m);throw $.init(b,S),la=m,wy++,m}function lC(m){return T[qy()>>2]=m,m}var wt={isAbs:m=>m.charAt(0)==="/",splitPath:m=>{var b=/^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/;return b.exec(m).slice(1)},normalizeArray:(m,b)=>{for(var S=0,$=m.length-1;$>=0;$--){var F=m[$];F==="."?m.splice($,1):F===".."?(m.splice($,1),S++):S&&(m.splice($,1),S--)}if(b)for(;S;S--)m.unshift("..");return m},normalize:m=>{var b=wt.isAbs(m),S=m.substr(-1)==="/";return m=wt.normalizeArray(m.split("/").filter($=>!!$),!b).join("/"),!m&&!b&&(m="."),m&&S&&(m+="/"),(b?"/":"")+m},dirname:m=>{var b=wt.splitPath(m),S=b[0],$=b[1];return!S&&!$?".":($&&($=$.substr(0,$.length-1)),S+$)},basename:m=>{if(m==="/")return"/";m=wt.normalize(m),m=m.replace(/\/$/,"");var b=m.lastIndexOf("/");return b===-1?m:m.substr(b+1)},join:function(){var m=Array.prototype.slice.call(arguments,0);return wt.normalize(m.join("/"))},join2:(m,b)=>wt.normalize(m+"/"+b)};function ky(){if(typeof crypto=="object"&&typeof crypto.getRandomValues=="function"){var m=new Uint8Array(1);return function(){return crypto.getRandomValues(m),m[0]}}else if(y)try{var b=require("crypto");return function(){return b.randomBytes(1)[0]}}catch{}return function(){pn("randomDevice")}}var xr={resolve:function(){for(var m="",b=!1,S=arguments.length-1;S>=-1&&!b;S--){var $=S>=0?arguments[S]:D.cwd();if(typeof $!="string")throw new TypeError("Arguments to path.resolve must be strings");if(!$)return"";m=$+"/"+m,b=wt.isAbs($)}return m=wt.normalizeArray(m.split("/").filter(F=>!!F),!b).join("/"),(b?"/":"")+m||"."},relative:(m,b)=>{m=xr.resolve(m).substr(1),b=xr.resolve(b).substr(1);function S(ye){for(var _e=0;_e<ye.length&&ye[_e]==="";_e++);for(var Re=ye.length-1;Re>=0&&ye[Re]==="";Re--);return _e>Re?[]:ye.slice(_e,Re-_e+1)}for(var $=S(m.split("/")),F=S(b.split("/")),L=Math.min($.length,F.length),V=L,W=0;W<L;W++)if($[W]!==F[W]){V=W;break}for(var re=[],W=V;W<$.length;W++)re.push("..");return re=re.concat(F.slice(V)),re.join("/")}},xo={ttys:[],init:function(){},shutdown:function(){},register:function(m,b){xo.ttys[m]={input:[],output:[],ops:b},D.registerDevice(m,xo.stream_ops)},stream_ops:{open:function(m){var b=xo.ttys[m.node.rdev];if(!b)throw new D.ErrnoError(43);m.tty=b,m.seekable=!1},close:function(m){m.tty.ops.flush(m.tty)},flush:function(m){m.tty.ops.flush(m.tty)},read:function(m,b,S,$,F){if(!m.tty||!m.tty.ops.get_char)throw new D.ErrnoError(60);for(var L=0,V=0;V<$;V++){var W;try{W=m.tty.ops.get_char(m.tty)}catch{throw new D.ErrnoError(29)}if(W===void 0&&L===0)throw new D.ErrnoError(6);if(W==null)break;L++,b[S+V]=W}return L&&(m.node.timestamp=Date.now()),L},write:function(m,b,S,$,F){if(!m.tty||!m.tty.ops.put_char)throw new D.ErrnoError(60);try{for(var L=0;L<$;L++)m.tty.ops.put_char(m.tty,b[S+L])}catch{throw new D.ErrnoError(29)}return $&&(m.node.timestamp=Date.now()),L}},default_tty_ops:{get_char:function(m){if(!m.input.length){var b=null;if(y){var S=256,$=Buffer.alloc(S),F=0;try{F=I.readSync(process.stdin.fd,$,0,S,-1)}catch(L){if(L.toString().includes("EOF"))F=0;else throw L}F>0?b=$.slice(0,F).toString("utf-8"):b=null}else typeof window<"u"&&typeof window.prompt=="function"?(b=window.prompt("Input: "),b!==null&&(b+=`
`)):typeof readline=="function"&&(b=readline(),b!==null&&(b+=`
`));if(!b)return null;m.input=vu(b,!0)}return m.input.shift()},put_char:function(m,b){b===null||b===10?(R(A(m.output,0)),m.output=[]):b!=0&&m.output.push(b)},flush:function(m){m.output&&m.output.length>0&&(R(A(m.output,0)),m.output=[])}},default_tty1_ops:{put_char:function(m,b){b===null||b===10?(O(A(m.output,0)),m.output=[]):b!=0&&m.output.push(b)},flush:function(m){m.output&&m.output.length>0&&(O(A(m.output,0)),m.output=[])}}};function uC(m,b){qe.fill(0,m,m+b)}function cC(m,b){return Math.ceil(m/b)*b}function Sy(m){m=cC(m,65536);var b=Xy(65536,m);return b?(uC(b,m),b):0}var at={ops_table:null,mount:function(m){return at.createNode(null,"/",16895,0)},createNode:function(m,b,S,$){if(D.isBlkdev(S)||D.isFIFO(S))throw new D.ErrnoError(63);at.ops_table||(at.ops_table={dir:{node:{getattr:at.node_ops.getattr,setattr:at.node_ops.setattr,lookup:at.node_ops.lookup,mknod:at.node_ops.mknod,rename:at.node_ops.rename,unlink:at.node_ops.unlink,rmdir:at.node_ops.rmdir,readdir:at.node_ops.readdir,symlink:at.node_ops.symlink},stream:{llseek:at.stream_ops.llseek}},file:{node:{getattr:at.node_ops.getattr,setattr:at.node_ops.setattr},stream:{llseek:at.stream_ops.llseek,read:at.stream_ops.read,write:at.stream_ops.write,allocate:at.stream_ops.allocate,mmap:at.stream_ops.mmap,msync:at.stream_ops.msync}},link:{node:{getattr:at.node_ops.getattr,setattr:at.node_ops.setattr,readlink:at.node_ops.readlink},stream:{}},chrdev:{node:{getattr:at.node_ops.getattr,setattr:at.node_ops.setattr},stream:D.chrdev_stream_ops}});var F=D.createNode(m,b,S,$);return D.isDir(F.mode)?(F.node_ops=at.ops_table.dir.node,F.stream_ops=at.ops_table.dir.stream,F.contents={}):D.isFile(F.mode)?(F.node_ops=at.ops_table.file.node,F.stream_ops=at.ops_table.file.stream,F.usedBytes=0,F.contents=null):D.isLink(F.mode)?(F.node_ops=at.ops_table.link.node,F.stream_ops=at.ops_table.link.stream):D.isChrdev(F.mode)&&(F.node_ops=at.ops_table.chrdev.node,F.stream_ops=at.ops_table.chrdev.stream),F.timestamp=Date.now(),m&&(m.contents[b]=F,m.timestamp=F.timestamp),F},getFileDataAsTypedArray:function(m){return m.contents?m.contents.subarray?m.contents.subarray(0,m.usedBytes):new Uint8Array(m.contents):new Uint8Array(0)},expandFileStorage:function(m,b){var S=m.contents?m.contents.length:0;if(!(S>=b)){var $=1048576;b=Math.max(b,S*(S<$?2:1.125)>>>0),S!=0&&(b=Math.max(b,256));var F=m.contents;m.contents=new Uint8Array(b),m.usedBytes>0&&m.contents.set(F.subarray(0,m.usedBytes),0)}},resizeFileStorage:function(m,b){if(m.usedBytes!=b)if(b==0)m.contents=null,m.usedBytes=0;else{var S=m.contents;m.contents=new Uint8Array(b),S&&m.contents.set(S.subarray(0,Math.min(b,m.usedBytes))),m.usedBytes=b}},node_ops:{getattr:function(m){var b={};return b.dev=D.isChrdev(m.mode)?m.id:1,b.ino=m.id,b.mode=m.mode,b.nlink=1,b.uid=0,b.gid=0,b.rdev=m.rdev,D.isDir(m.mode)?b.size=4096:D.isFile(m.mode)?b.size=m.usedBytes:D.isLink(m.mode)?b.size=m.link.length:b.size=0,b.atime=new Date(m.timestamp),b.mtime=new Date(m.timestamp),b.ctime=new Date(m.timestamp),b.blksize=4096,b.blocks=Math.ceil(b.size/b.blksize),b},setattr:function(m,b){b.mode!==void 0&&(m.mode=b.mode),b.timestamp!==void 0&&(m.timestamp=b.timestamp),b.size!==void 0&&at.resizeFileStorage(m,b.size)},lookup:function(m,b){throw D.genericErrors[44]},mknod:function(m,b,S,$){return at.createNode(m,b,S,$)},rename:function(m,b,S){if(D.isDir(m.mode)){var $;try{$=D.lookupNode(b,S)}catch{}if($)for(var F in $.contents)throw new D.ErrnoError(55)}delete m.parent.contents[m.name],m.parent.timestamp=Date.now(),m.name=S,b.contents[S]=m,b.timestamp=m.parent.timestamp,m.parent=b},unlink:function(m,b){delete m.contents[b],m.timestamp=Date.now()},rmdir:function(m,b){var S=D.lookupNode(m,b);for(var $ in S.contents)throw new D.ErrnoError(55);delete m.contents[b],m.timestamp=Date.now()},readdir:function(m){var b=[".",".."];for(var S in m.contents)!m.contents.hasOwnProperty(S)||b.push(S);return b},symlink:function(m,b,S){var $=at.createNode(m,b,41471,0);return $.link=S,$},readlink:function(m){if(!D.isLink(m.mode))throw new D.ErrnoError(28);return m.link}},stream_ops:{read:function(m,b,S,$,F){var L=m.node.contents;if(F>=m.node.usedBytes)return 0;var V=Math.min(m.node.usedBytes-F,$);if(V>8&&L.subarray)b.set(L.subarray(F,F+V),S);else for(var W=0;W<V;W++)b[S+W]=L[F+W];return V},write:function(m,b,S,$,F,L){if(b.buffer===We.buffer&&(L=!1),!$)return 0;var V=m.node;if(V.timestamp=Date.now(),b.subarray&&(!V.contents||V.contents.subarray)){if(L)return V.contents=b.subarray(S,S+$),V.usedBytes=$,$;if(V.usedBytes===0&&F===0)return V.contents=b.slice(S,S+$),V.usedBytes=$,$;if(F+$<=V.usedBytes)return V.contents.set(b.subarray(S,S+$),F),$}if(at.expandFileStorage(V,F+$),V.contents.subarray&&b.subarray)V.contents.set(b.subarray(S,S+$),F);else for(var W=0;W<$;W++)V.contents[F+W]=b[S+W];return V.usedBytes=Math.max(V.usedBytes,F+$),$},llseek:function(m,b,S){var $=b;if(S===1?$+=m.position:S===2&&D.isFile(m.node.mode)&&($+=m.node.usedBytes),$<0)throw new D.ErrnoError(28);return $},allocate:function(m,b,S){at.expandFileStorage(m.node,b+S),m.node.usedBytes=Math.max(m.node.usedBytes,b+S)},mmap:function(m,b,S,$,F){if(!D.isFile(m.node.mode))throw new D.ErrnoError(43);var L,V,W=m.node.contents;if(!(F&2)&&W.buffer===je)V=!1,L=W.byteOffset;else{if((S>0||S+b<W.length)&&(W.subarray?W=W.subarray(S,S+b):W=Array.prototype.slice.call(W,S,S+b)),V=!0,L=Sy(b),!L)throw new D.ErrnoError(48);We.set(W,L)}return{ptr:L,allocated:V}},msync:function(m,b,S,$,F){if(!D.isFile(m.node.mode))throw new D.ErrnoError(43);return F&2||at.stream_ops.write(m,b,0,$,S,!1),0}}};function hC(m,b,S,$){var F="al "+m;k(m,function(L){M(L,'Loading data file "'+m+'" failed (no arrayBuffer).'),b(new Uint8Array(L)),F&&er()},function(L){if(S)S();else throw'Loading data file "'+m+'" failed.'}),F&&xn()}var D={root:null,mounts:[],devices:{},streams:[],nextInode:1,nameTable:null,currentPath:"/",initialized:!1,ignorePermissions:!0,ErrnoError:null,genericErrors:{},filesystems:null,syncFSRequests:0,lookupPath:(m,b={})=>{if(m=xr.resolve(D.cwd(),m),!m)return{path:"",node:null};var S={follow_mount:!0,recurse_count:0};if(b=Object.assign(S,b),b.recurse_count>8)throw new D.ErrnoError(32);for(var $=wt.normalizeArray(m.split("/").filter(Re=>!!Re),!1),F=D.root,L="/",V=0;V<$.length;V++){var W=V===$.length-1;if(W&&b.parent)break;if(F=D.lookupNode(F,$[V]),L=wt.join2(L,$[V]),D.isMountpoint(F)&&(!W||W&&b.follow_mount)&&(F=F.mounted.root),!W||b.follow)for(var re=0;D.isLink(F.mode);){var ye=D.readlink(L);L=xr.resolve(wt.dirname(L),ye);var _e=D.lookupPath(L,{recurse_count:b.recurse_count+1});if(F=_e.node,re++>40)throw new D.ErrnoError(32)}}return{path:L,node:F}},getPath:m=>{for(var b;;){if(D.isRoot(m)){var S=m.mount.mountpoint;return b?S[S.length-1]!=="/"?S+"/"+b:S+b:S}b=b?m.name+"/"+b:m.name,m=m.parent}},hashName:(m,b)=>{for(var S=0,$=0;$<b.length;$++)S=(S<<5)-S+b.charCodeAt($)|0;return(m+S>>>0)%D.nameTable.length},hashAddNode:m=>{var b=D.hashName(m.parent.id,m.name);m.name_next=D.nameTable[b],D.nameTable[b]=m},hashRemoveNode:m=>{var b=D.hashName(m.parent.id,m.name);if(D.nameTable[b]===m)D.nameTable[b]=m.name_next;else for(var S=D.nameTable[b];S;){if(S.name_next===m){S.name_next=m.name_next;break}S=S.name_next}},lookupNode:(m,b)=>{var S=D.mayLookup(m);if(S)throw new D.ErrnoError(S,m);for(var $=D.hashName(m.id,b),F=D.nameTable[$];F;F=F.name_next){var L=F.name;if(F.parent.id===m.id&&L===b)return F}return D.lookup(m,b)},createNode:(m,b,S,$)=>{var F=new D.FSNode(m,b,S,$);return D.hashAddNode(F),F},destroyNode:m=>{D.hashRemoveNode(m)},isRoot:m=>m===m.parent,isMountpoint:m=>!!m.mounted,isFile:m=>(m&61440)===32768,isDir:m=>(m&61440)===16384,isLink:m=>(m&61440)===40960,isChrdev:m=>(m&61440)===8192,isBlkdev:m=>(m&61440)===24576,isFIFO:m=>(m&61440)===4096,isSocket:m=>(m&49152)===49152,flagModes:{r:0,"r+":2,w:577,"w+":578,a:1089,"a+":1090},modeStringToFlags:m=>{var b=D.flagModes[m];if(typeof b>"u")throw new Error("Unknown file open mode: "+m);return b},flagsToPermissionString:m=>{var b=["r","w","rw"][m&3];return m&512&&(b+="w"),b},nodePermissions:(m,b)=>D.ignorePermissions?0:b.includes("r")&&!(m.mode&292)||b.includes("w")&&!(m.mode&146)||b.includes("x")&&!(m.mode&73)?2:0,mayLookup:m=>{var b=D.nodePermissions(m,"x");return b||(m.node_ops.lookup?0:2)},mayCreate:(m,b)=>{try{var S=D.lookupNode(m,b);return 20}catch{}return D.nodePermissions(m,"wx")},mayDelete:(m,b,S)=>{var $;try{$=D.lookupNode(m,b)}catch(L){return L.errno}var F=D.nodePermissions(m,"wx");if(F)return F;if(S){if(!D.isDir($.mode))return 54;if(D.isRoot($)||D.getPath($)===D.cwd())return 10}else if(D.isDir($.mode))return 31;return 0},mayOpen:(m,b)=>m?D.isLink(m.mode)?32:D.isDir(m.mode)&&(D.flagsToPermissionString(b)!=="r"||b&512)?31:D.nodePermissions(m,D.flagsToPermissionString(b)):44,MAX_OPEN_FDS:4096,nextfd:(m=0,b=D.MAX_OPEN_FDS)=>{for(var S=m;S<=b;S++)if(!D.streams[S])return S;throw new D.ErrnoError(33)},getStream:m=>D.streams[m],createStream:(m,b,S)=>{D.FSStream||(D.FSStream=function(){this.shared={}},D.FSStream.prototype={},Object.defineProperties(D.FSStream.prototype,{object:{get:function(){return this.node},set:function(F){this.node=F}},isRead:{get:function(){return(this.flags&2097155)!==1}},isWrite:{get:function(){return(this.flags&2097155)!==0}},isAppend:{get:function(){return this.flags&1024}},flags:{get:function(){return this.shared.flags},set:function(F){this.shared.flags=F}},position:{get:function(){return this.shared.position},set:function(F){this.shared.position=F}}})),m=Object.assign(new D.FSStream,m);var $=D.nextfd(b,S);return m.fd=$,D.streams[$]=m,m},closeStream:m=>{D.streams[m]=null},chrdev_stream_ops:{open:m=>{var b=D.getDevice(m.node.rdev);m.stream_ops=b.stream_ops,m.stream_ops.open&&m.stream_ops.open(m)},llseek:()=>{throw new D.ErrnoError(70)}},major:m=>m>>8,minor:m=>m&255,makedev:(m,b)=>m<<8|b,registerDevice:(m,b)=>{D.devices[m]={stream_ops:b}},getDevice:m=>D.devices[m],getMounts:m=>{for(var b=[],S=[m];S.length;){var $=S.pop();b.push($),S.push.apply(S,$.mounts)}return b},syncfs:(m,b)=>{typeof m=="function"&&(b=m,m=!1),D.syncFSRequests++,D.syncFSRequests>1&&O("warning: "+D.syncFSRequests+" FS.syncfs operations in flight at once, probably just doing extra work");var S=D.getMounts(D.root.mount),$=0;function F(V){return D.syncFSRequests--,b(V)}function L(V){if(V)return L.errored?void 0:(L.errored=!0,F(V));++$>=S.length&&F(null)}S.forEach(V=>{if(!V.type.syncfs)return L(null);V.type.syncfs(V,m,L)})},mount:(m,b,S)=>{var $=S==="/",F=!S,L;if($&&D.root)throw new D.ErrnoError(10);if(!$&&!F){var V=D.lookupPath(S,{follow_mount:!1});if(S=V.path,L=V.node,D.isMountpoint(L))throw new D.ErrnoError(10);if(!D.isDir(L.mode))throw new D.ErrnoError(54)}var W={type:m,opts:b,mountpoint:S,mounts:[]},re=m.mount(W);return re.mount=W,W.root=re,$?D.root=re:L&&(L.mounted=W,L.mount&&L.mount.mounts.push(W)),re},unmount:m=>{var b=D.lookupPath(m,{follow_mount:!1});if(!D.isMountpoint(b.node))throw new D.ErrnoError(28);var S=b.node,$=S.mounted,F=D.getMounts($);Object.keys(D.nameTable).forEach(V=>{for(var W=D.nameTable[V];W;){var re=W.name_next;F.includes(W.mount)&&D.destroyNode(W),W=re}}),S.mounted=null;var L=S.mount.mounts.indexOf($);S.mount.mounts.splice(L,1)},lookup:(m,b)=>m.node_ops.lookup(m,b),mknod:(m,b,S)=>{var $=D.lookupPath(m,{parent:!0}),F=$.node,L=wt.basename(m);if(!L||L==="."||L==="..")throw new D.ErrnoError(28);var V=D.mayCreate(F,L);if(V)throw new D.ErrnoError(V);if(!F.node_ops.mknod)throw new D.ErrnoError(63);return F.node_ops.mknod(F,L,b,S)},create:(m,b)=>(b=b!==void 0?b:438,b&=4095,b|=32768,D.mknod(m,b,0)),mkdir:(m,b)=>(b=b!==void 0?b:511,b&=1023,b|=16384,D.mknod(m,b,0)),mkdirTree:(m,b)=>{for(var S=m.split("/"),$="",F=0;F<S.length;++F)if(S[F]){$+="/"+S[F];try{D.mkdir($,b)}catch(L){if(L.errno!=20)throw L}}},mkdev:(m,b,S)=>(typeof S>"u"&&(S=b,b=438),b|=8192,D.mknod(m,b,S)),symlink:(m,b)=>{if(!xr.resolve(m))throw new D.ErrnoError(44);var S=D.lookupPath(b,{parent:!0}),$=S.node;if(!$)throw new D.ErrnoError(44);var F=wt.basename(b),L=D.mayCreate($,F);if(L)throw new D.ErrnoError(L);if(!$.node_ops.symlink)throw new D.ErrnoError(63);return $.node_ops.symlink($,F,m)},rename:(m,b)=>{var S=wt.dirname(m),$=wt.dirname(b),F=wt.basename(m),L=wt.basename(b),V,W,re;if(V=D.lookupPath(m,{parent:!0}),W=V.node,V=D.lookupPath(b,{parent:!0}),re=V.node,!W||!re)throw new D.ErrnoError(44);if(W.mount!==re.mount)throw new D.ErrnoError(75);var ye=D.lookupNode(W,F),_e=xr.relative(m,$);if(_e.charAt(0)!==".")throw new D.ErrnoError(28);if(_e=xr.relative(b,S),_e.charAt(0)!==".")throw new D.ErrnoError(55);var Re;try{Re=D.lookupNode(re,L)}catch{}if(ye!==Re){var ve=D.isDir(ye.mode),Le=D.mayDelete(W,F,ve);if(Le)throw new D.ErrnoError(Le);if(Le=Re?D.mayDelete(re,L,ve):D.mayCreate(re,L),Le)throw new D.ErrnoError(Le);if(!W.node_ops.rename)throw new D.ErrnoError(63);if(D.isMountpoint(ye)||Re&&D.isMountpoint(Re))throw new D.ErrnoError(10);if(re!==W&&(Le=D.nodePermissions(W,"w"),Le))throw new D.ErrnoError(Le);D.hashRemoveNode(ye);try{W.node_ops.rename(ye,re,L)}catch(rt){throw rt}finally{D.hashAddNode(ye)}}},rmdir:m=>{var b=D.lookupPath(m,{parent:!0}),S=b.node,$=wt.basename(m),F=D.lookupNode(S,$),L=D.mayDelete(S,$,!0);if(L)throw new D.ErrnoError(L);if(!S.node_ops.rmdir)throw new D.ErrnoError(63);if(D.isMountpoint(F))throw new D.ErrnoError(10);S.node_ops.rmdir(S,$),D.destroyNode(F)},readdir:m=>{var b=D.lookupPath(m,{follow:!0}),S=b.node;if(!S.node_ops.readdir)throw new D.ErrnoError(54);return S.node_ops.readdir(S)},unlink:m=>{var b=D.lookupPath(m,{parent:!0}),S=b.node;if(!S)throw new D.ErrnoError(44);var $=wt.basename(m),F=D.lookupNode(S,$),L=D.mayDelete(S,$,!1);if(L)throw new D.ErrnoError(L);if(!S.node_ops.unlink)throw new D.ErrnoError(63);if(D.isMountpoint(F))throw new D.ErrnoError(10);S.node_ops.unlink(S,$),D.destroyNode(F)},readlink:m=>{var b=D.lookupPath(m),S=b.node;if(!S)throw new D.ErrnoError(44);if(!S.node_ops.readlink)throw new D.ErrnoError(28);return xr.resolve(D.getPath(S.parent),S.node_ops.readlink(S))},stat:(m,b)=>{var S=D.lookupPath(m,{follow:!b}),$=S.node;if(!$)throw new D.ErrnoError(44);if(!$.node_ops.getattr)throw new D.ErrnoError(63);return $.node_ops.getattr($)},lstat:m=>D.stat(m,!0),chmod:(m,b,S)=>{var $;if(typeof m=="string"){var F=D.lookupPath(m,{follow:!S});$=F.node}else $=m;if(!$.node_ops.setattr)throw new D.ErrnoError(63);$.node_ops.setattr($,{mode:b&4095|$.mode&-4096,timestamp:Date.now()})},lchmod:(m,b)=>{D.chmod(m,b,!0)},fchmod:(m,b)=>{var S=D.getStream(m);if(!S)throw new D.ErrnoError(8);D.chmod(S.node,b)},chown:(m,b,S,$)=>{var F;if(typeof m=="string"){var L=D.lookupPath(m,{follow:!$});F=L.node}else F=m;if(!F.node_ops.setattr)throw new D.ErrnoError(63);F.node_ops.setattr(F,{timestamp:Date.now()})},lchown:(m,b,S)=>{D.chown(m,b,S,!0)},fchown:(m,b,S)=>{var $=D.getStream(m);if(!$)throw new D.ErrnoError(8);D.chown($.node,b,S)},truncate:(m,b)=>{if(b<0)throw new D.ErrnoError(28);var S;if(typeof m=="string"){var $=D.lookupPath(m,{follow:!0});S=$.node}else S=m;if(!S.node_ops.setattr)throw new D.ErrnoError(63);if(D.isDir(S.mode))throw new D.ErrnoError(31);if(!D.isFile(S.mode))throw new D.ErrnoError(28);var F=D.nodePermissions(S,"w");if(F)throw new D.ErrnoError(F);S.node_ops.setattr(S,{size:b,timestamp:Date.now()})},ftruncate:(m,b)=>{var S=D.getStream(m);if(!S)throw new D.ErrnoError(8);if(!(S.flags&2097155))throw new D.ErrnoError(28);D.truncate(S.node,b)},utime:(m,b,S)=>{var $=D.lookupPath(m,{follow:!0}),F=$.node;F.node_ops.setattr(F,{timestamp:Math.max(b,S)})},open:(m,b,S)=>{if(m==="")throw new D.ErrnoError(44);b=typeof b=="string"?D.modeStringToFlags(b):b,S=typeof S>"u"?438:S,b&64?S=S&4095|32768:S=0;var $;if(typeof m=="object")$=m;else{m=wt.normalize(m);try{var F=D.lookupPath(m,{follow:!(b&131072)});$=F.node}catch{}}var L=!1;if(b&64)if($){if(b&128)throw new D.ErrnoError(20)}else $=D.mknod(m,S,0),L=!0;if(!$)throw new D.ErrnoError(44);if(D.isChrdev($.mode)&&(b&=-513),b&65536&&!D.isDir($.mode))throw new D.ErrnoError(54);if(!L){var V=D.mayOpen($,b);if(V)throw new D.ErrnoError(V)}b&512&&!L&&D.truncate($,0),b&=-131713;var W=D.createStream({node:$,path:D.getPath($),flags:b,seekable:!0,position:0,stream_ops:$.stream_ops,ungotten:[],error:!1});return W.stream_ops.open&&W.stream_ops.open(W),i.logReadFiles&&!(b&1)&&(D.readFiles||(D.readFiles={}),m in D.readFiles||(D.readFiles[m]=1)),W},close:m=>{if(D.isClosed(m))throw new D.ErrnoError(8);m.getdents&&(m.getdents=null);try{m.stream_ops.close&&m.stream_ops.close(m)}catch(b){throw b}finally{D.closeStream(m.fd)}m.fd=null},isClosed:m=>m.fd===null,llseek:(m,b,S)=>{if(D.isClosed(m))throw new D.ErrnoError(8);if(!m.seekable||!m.stream_ops.llseek)throw new D.ErrnoError(70);if(S!=0&&S!=1&&S!=2)throw new D.ErrnoError(28);return m.position=m.stream_ops.llseek(m,b,S),m.ungotten=[],m.position},read:(m,b,S,$,F)=>{if($<0||F<0)throw new D.ErrnoError(28);if(D.isClosed(m))throw new D.ErrnoError(8);if((m.flags&2097155)===1)throw new D.ErrnoError(8);if(D.isDir(m.node.mode))throw new D.ErrnoError(31);if(!m.stream_ops.read)throw new D.ErrnoError(28);var L=typeof F<"u";if(!L)F=m.position;else if(!m.seekable)throw new D.ErrnoError(70);var V=m.stream_ops.read(m,b,S,$,F);return L||(m.position+=V),V},write:(m,b,S,$,F,L)=>{if($<0||F<0)throw new D.ErrnoError(28);if(D.isClosed(m))throw new D.ErrnoError(8);if(!(m.flags&2097155))throw new D.ErrnoError(8);if(D.isDir(m.node.mode))throw new D.ErrnoError(31);if(!m.stream_ops.write)throw new D.ErrnoError(28);m.seekable&&m.flags&1024&&D.llseek(m,0,2);var V=typeof F<"u";if(!V)F=m.position;else if(!m.seekable)throw new D.ErrnoError(70);var W=m.stream_ops.write(m,b,S,$,F,L);return V||(m.position+=W),W},allocate:(m,b,S)=>{if(D.isClosed(m))throw new D.ErrnoError(8);if(b<0||S<=0)throw new D.ErrnoError(28);if(!(m.flags&2097155))throw new D.ErrnoError(8);if(!D.isFile(m.node.mode)&&!D.isDir(m.node.mode))throw new D.ErrnoError(43);if(!m.stream_ops.allocate)throw new D.ErrnoError(138);m.stream_ops.allocate(m,b,S)},mmap:(m,b,S,$,F)=>{if($&2&&!(F&2)&&(m.flags&2097155)!==2)throw new D.ErrnoError(2);if((m.flags&2097155)===1)throw new D.ErrnoError(2);if(!m.stream_ops.mmap)throw new D.ErrnoError(43);return m.stream_ops.mmap(m,b,S,$,F)},msync:(m,b,S,$,F)=>!m||!m.stream_ops.msync?0:m.stream_ops.msync(m,b,S,$,F),munmap:m=>0,ioctl:(m,b,S)=>{if(!m.stream_ops.ioctl)throw new D.ErrnoError(59);return m.stream_ops.ioctl(m,b,S)},readFile:(m,b={})=>{if(b.flags=b.flags||0,b.encoding=b.encoding||"binary",b.encoding!=="utf8"&&b.encoding!=="binary")throw new Error('Invalid encoding type "'+b.encoding+'"');var S,$=D.open(m,b.flags),F=D.stat(m),L=F.size,V=new Uint8Array(L);return D.read($,V,0,L,0),b.encoding==="utf8"?S=A(V,0):b.encoding==="binary"&&(S=V),D.close($),S},writeFile:(m,b,S={})=>{S.flags=S.flags||577;var $=D.open(m,S.flags,S.mode);if(typeof b=="string"){var F=new Uint8Array(xe(b)+1),L=be(b,F,0,F.length);D.write($,F,0,L,void 0,S.canOwn)}else if(ArrayBuffer.isView(b))D.write($,b,0,b.byteLength,void 0,S.canOwn);else throw new Error("Unsupported data type");D.close($)},cwd:()=>D.currentPath,chdir:m=>{var b=D.lookupPath(m,{follow:!0});if(b.node===null)throw new D.ErrnoError(44);if(!D.isDir(b.node.mode))throw new D.ErrnoError(54);var S=D.nodePermissions(b.node,"x");if(S)throw new D.ErrnoError(S);D.currentPath=b.path},createDefaultDirectories:()=>{D.mkdir("/tmp"),D.mkdir("/home"),D.mkdir("/home/web_user")},createDefaultDevices:()=>{D.mkdir("/dev"),D.registerDevice(D.makedev(1,3),{read:()=>0,write:(b,S,$,F,L)=>F}),D.mkdev("/dev/null",D.makedev(1,3)),xo.register(D.makedev(5,0),xo.default_tty_ops),xo.register(D.makedev(6,0),xo.default_tty1_ops),D.mkdev("/dev/tty",D.makedev(5,0)),D.mkdev("/dev/tty1",D.makedev(6,0));var m=ky();D.createDevice("/dev","random",m),D.createDevice("/dev","urandom",m),D.mkdir("/dev/shm"),D.mkdir("/dev/shm/tmp")},createSpecialDirectories:()=>{D.mkdir("/proc");var m=D.mkdir("/proc/self");D.mkdir("/proc/self/fd"),D.mount({mount:()=>{var b=D.createNode(m,"fd",16895,73);return b.node_ops={lookup:(S,$)=>{var F=+$,L=D.getStream(F);if(!L)throw new D.ErrnoError(8);var V={parent:null,mount:{mountpoint:"fake"},node_ops:{readlink:()=>L.path}};return V.parent=V,V}},b}},{},"/proc/self/fd")},createStandardStreams:()=>{i.stdin?D.createDevice("/dev","stdin",i.stdin):D.symlink("/dev/tty","/dev/stdin"),i.stdout?D.createDevice("/dev","stdout",null,i.stdout):D.symlink("/dev/tty","/dev/stdout"),i.stderr?D.createDevice("/dev","stderr",null,i.stderr):D.symlink("/dev/tty1","/dev/stderr"),D.open("/dev/stdin",0),D.open("/dev/stdout",1),D.open("/dev/stderr",1)},ensureErrnoError:()=>{D.ErrnoError||(D.ErrnoError=function(m,b){this.node=b,this.setErrno=function(S){this.errno=S},this.setErrno(m),this.message="FS error"},D.ErrnoError.prototype=new Error,D.ErrnoError.prototype.constructor=D.ErrnoError,[44].forEach(m=>{D.genericErrors[m]=new D.ErrnoError(m),D.genericErrors[m].stack="<generic error, no stack>"}))},staticInit:()=>{D.ensureErrnoError(),D.nameTable=new Array(4096),D.mount(at,{},"/"),D.createDefaultDirectories(),D.createDefaultDevices(),D.createSpecialDirectories(),D.filesystems={MEMFS:at}},init:(m,b,S)=>{D.init.initialized=!0,D.ensureErrnoError(),i.stdin=m||i.stdin,i.stdout=b||i.stdout,i.stderr=S||i.stderr,D.createStandardStreams()},quit:()=>{D.init.initialized=!1;for(var m=0;m<D.streams.length;m++){var b=D.streams[m];!b||D.close(b)}},getMode:(m,b)=>{var S=0;return m&&(S|=365),b&&(S|=146),S},findObject:(m,b)=>{var S=D.analyzePath(m,b);return S.exists?S.object:null},analyzePath:(m,b)=>{try{var S=D.lookupPath(m,{follow:!b});m=S.path}catch{}var $={isRoot:!1,exists:!1,error:0,name:null,path:null,object:null,parentExists:!1,parentPath:null,parentObject:null};try{var S=D.lookupPath(m,{parent:!0});$.parentExists=!0,$.parentPath=S.path,$.parentObject=S.node,$.name=wt.basename(m),S=D.lookupPath(m,{follow:!b}),$.exists=!0,$.path=S.path,$.object=S.node,$.name=S.node.name,$.isRoot=S.path==="/"}catch(F){$.error=F.errno}return $},createPath:(m,b,S,$)=>{m=typeof m=="string"?m:D.getPath(m);for(var F=b.split("/").reverse();F.length;){var L=F.pop();if(L){var V=wt.join2(m,L);try{D.mkdir(V)}catch{}m=V}}return V},createFile:(m,b,S,$,F)=>{var L=wt.join2(typeof m=="string"?m:D.getPath(m),b),V=D.getMode($,F);return D.create(L,V)},createDataFile:(m,b,S,$,F,L)=>{var V=b;m&&(m=typeof m=="string"?m:D.getPath(m),V=b?wt.join2(m,b):m);var W=D.getMode($,F),re=D.create(V,W);if(S){if(typeof S=="string"){for(var ye=new Array(S.length),_e=0,Re=S.length;_e<Re;++_e)ye[_e]=S.charCodeAt(_e);S=ye}D.chmod(re,W|146);var ve=D.open(re,577);D.write(ve,S,0,S.length,0,L),D.close(ve),D.chmod(re,W)}return re},createDevice:(m,b,S,$)=>{var F=wt.join2(typeof m=="string"?m:D.getPath(m),b),L=D.getMode(!!S,!!$);D.createDevice.major||(D.createDevice.major=64);var V=D.makedev(D.createDevice.major++,0);return D.registerDevice(V,{open:W=>{W.seekable=!1},close:W=>{$&&$.buffer&&$.buffer.length&&$(10)},read:(W,re,ye,_e,Re)=>{for(var ve=0,Le=0;Le<_e;Le++){var rt;try{rt=S()}catch{throw new D.ErrnoError(29)}if(rt===void 0&&ve===0)throw new D.ErrnoError(6);if(rt==null)break;ve++,re[ye+Le]=rt}return ve&&(W.node.timestamp=Date.now()),ve},write:(W,re,ye,_e,Re)=>{for(var ve=0;ve<_e;ve++)try{$(re[ye+ve])}catch{throw new D.ErrnoError(29)}return _e&&(W.node.timestamp=Date.now()),ve}}),D.mkdev(F,L,V)},forceLoadFile:m=>{if(m.isDevice||m.isFolder||m.link||m.contents)return!0;if(typeof XMLHttpRequest<"u")throw new Error("Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread.");if(v)try{m.contents=vu(v(m.url),!0),m.usedBytes=m.contents.length}catch{throw new D.ErrnoError(29)}else throw new Error("Cannot load without read() or XMLHttpRequest.")},createLazyFile:(m,b,S,$,F)=>{function L(){this.lengthKnown=!1,this.chunks=[]}if(L.prototype.get=function(ve){if(!(ve>this.length-1||ve<0)){var Le=ve%this.chunkSize,rt=ve/this.chunkSize|0;return this.getter(rt)[Le]}},L.prototype.setDataGetter=function(ve){this.getter=ve},L.prototype.cacheLength=function(){var ve=new XMLHttpRequest;if(ve.open("HEAD",S,!1),ve.send(null),!(ve.status>=200&&ve.status<300||ve.status===304))throw new Error("Couldn't load "+S+". Status: "+ve.status);var Le=Number(ve.getResponseHeader("Content-length")),rt,St=(rt=ve.getResponseHeader("Accept-Ranges"))&&rt==="bytes",qt=(rt=ve.getResponseHeader("Content-Encoding"))&&rt==="gzip",Ct=1024*1024;St||(Ct=Le);var Ee=(At,Wt)=>{if(At>Wt)throw new Error("invalid range ("+At+", "+Wt+") or no bytes requested!");if(Wt>Le-1)throw new Error("only "+Le+" bytes available! programmer error!");var zt=new XMLHttpRequest;if(zt.open("GET",S,!1),Le!==Ct&&zt.setRequestHeader("Range","bytes="+At+"-"+Wt),zt.responseType="arraybuffer",zt.overrideMimeType&&zt.overrideMimeType("text/plain; charset=x-user-defined"),zt.send(null),!(zt.status>=200&&zt.status<300||zt.status===304))throw new Error("Couldn't load "+S+". Status: "+zt.status);return zt.response!==void 0?new Uint8Array(zt.response||[]):vu(zt.responseText||"",!0)},ze=this;ze.setDataGetter(At=>{var Wt=At*Ct,zt=(At+1)*Ct-1;if(zt=Math.min(zt,Le-1),typeof ze.chunks[At]>"u"&&(ze.chunks[At]=Ee(Wt,zt)),typeof ze.chunks[At]>"u")throw new Error("doXHR failed!");return ze.chunks[At]}),(qt||!Le)&&(Ct=Le=1,Le=this.getter(0).length,Ct=Le,R("LazyFiles on gzip forces download of the whole file when length is accessed")),this._length=Le,this._chunkSize=Ct,this.lengthKnown=!0},typeof XMLHttpRequest<"u"){if(!g)throw"Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc";var V=new L;Object.defineProperties(V,{length:{get:function(){return this.lengthKnown||this.cacheLength(),this._length}},chunkSize:{get:function(){return this.lengthKnown||this.cacheLength(),this._chunkSize}}});var W={isDevice:!1,contents:V}}else var W={isDevice:!1,url:S};var re=D.createFile(m,b,W,$,F);W.contents?re.contents=W.contents:W.url&&(re.contents=null,re.url=W.url),Object.defineProperties(re,{usedBytes:{get:function(){return this.contents.length}}});var ye={},_e=Object.keys(re.stream_ops);_e.forEach(ve=>{var Le=re.stream_ops[ve];ye[ve]=function(){return D.forceLoadFile(re),Le.apply(null,arguments)}});function Re(ve,Le,rt,St,qt){var Ct=ve.node.contents;if(qt>=Ct.length)return 0;var Ee=Math.min(Ct.length-qt,St);if(Ct.slice)for(var ze=0;ze<Ee;ze++)Le[rt+ze]=Ct[qt+ze];else for(var ze=0;ze<Ee;ze++)Le[rt+ze]=Ct.get(qt+ze);return Ee}return ye.read=(ve,Le,rt,St,qt)=>(D.forceLoadFile(re),Re(ve,Le,rt,St,qt)),ye.mmap=(ve,Le,rt,St,qt)=>{D.forceLoadFile(re);var Ct=Sy(Le);if(!Ct)throw new D.ErrnoError(48);return Re(ve,We,Ct,Le,rt),{ptr:Ct,allocated:!0}},re.stream_ops=ye,re},createPreloadedFile:(m,b,S,$,F,L,V,W,re,ye)=>{var _e=b?xr.resolve(wt.join2(m,b)):m;function Re(ve){function Le(rt){ye&&ye(),W||D.createDataFile(m,b,rt,$,F,re),L&&L(),er()}Browser.handledByPreloadPlugin(ve,_e,Le,()=>{V&&V(),er()})||Le(ve)}xn(),typeof S=="string"?hC(S,ve=>Re(ve),V):Re(S)},indexedDB:()=>window.indexedDB||window.mozIndexedDB||window.webkitIndexedDB||window.msIndexedDB,DB_NAME:()=>"EM_FS_"+window.location.pathname,DB_VERSION:20,DB_STORE_NAME:"FILE_DATA",saveFilesToDB:(m,b,S)=>{b=b||(()=>{}),S=S||(()=>{});var $=D.indexedDB();try{var F=$.open(D.DB_NAME(),D.DB_VERSION)}catch(L){return S(L)}F.onupgradeneeded=()=>{R("creating db");var L=F.result;L.createObjectStore(D.DB_STORE_NAME)},F.onsuccess=()=>{var L=F.result,V=L.transaction([D.DB_STORE_NAME],"readwrite"),W=V.objectStore(D.DB_STORE_NAME),re=0,ye=0,_e=m.length;function Re(){ye==0?b():S()}m.forEach(ve=>{var Le=W.put(D.analyzePath(ve).object.contents,ve);Le.onsuccess=()=>{re++,re+ye==_e&&Re()},Le.onerror=()=>{ye++,re+ye==_e&&Re()}}),V.onerror=S},F.onerror=S},loadFilesFromDB:(m,b,S)=>{b=b||(()=>{}),S=S||(()=>{});var $=D.indexedDB();try{var F=$.open(D.DB_NAME(),D.DB_VERSION)}catch(L){return S(L)}F.onupgradeneeded=S,F.onsuccess=()=>{var L=F.result;try{var V=L.transaction([D.DB_STORE_NAME],"readonly")}catch(ve){S(ve);return}var W=V.objectStore(D.DB_STORE_NAME),re=0,ye=0,_e=m.length;function Re(){ye==0?b():S()}m.forEach(ve=>{var Le=W.get(ve);Le.onsuccess=()=>{D.analyzePath(ve).exists&&D.unlink(ve),D.createDataFile(wt.dirname(ve),wt.basename(ve),Le.result,!0,!0,!0),re++,re+ye==_e&&Re()},Le.onerror=()=>{ye++,re+ye==_e&&Re()}}),V.onerror=S},F.onerror=S}},It={DEFAULT_POLLMASK:5,calculateAt:function(m,b,S){if(wt.isAbs(b))return b;var $;if(m===-100)$=D.cwd();else{var F=D.getStream(m);if(!F)throw new D.ErrnoError(8);$=F.path}if(b.length==0){if(!S)throw new D.ErrnoError(44);return $}return wt.join2($,b)},doStat:function(m,b,S){try{var $=m(b)}catch(F){if(F&&F.node&&wt.normalize(b)!==wt.normalize(D.getPath(F.node)))return-54;throw F}return T[S>>2]=$.dev,T[S+4>>2]=0,T[S+8>>2]=$.ino,T[S+12>>2]=$.mode,T[S+16>>2]=$.nlink,T[S+20>>2]=$.uid,T[S+24>>2]=$.gid,T[S+28>>2]=$.rdev,T[S+32>>2]=0,_n=[$.size>>>0,(vt=$.size,+Math.abs(vt)>=1?vt>0?(Math.min(+Math.floor(vt/4294967296),4294967295)|0)>>>0:~~+Math.ceil((vt-+(~~vt>>>0))/4294967296)>>>0:0)],T[S+40>>2]=_n[0],T[S+44>>2]=_n[1],T[S+48>>2]=4096,T[S+52>>2]=$.blocks,T[S+56>>2]=$.atime.getTime()/1e3|0,T[S+60>>2]=0,T[S+64>>2]=$.mtime.getTime()/1e3|0,T[S+68>>2]=0,T[S+72>>2]=$.ctime.getTime()/1e3|0,T[S+76>>2]=0,_n=[$.ino>>>0,(vt=$.ino,+Math.abs(vt)>=1?vt>0?(Math.min(+Math.floor(vt/4294967296),4294967295)|0)>>>0:~~+Math.ceil((vt-+(~~vt>>>0))/4294967296)>>>0:0)],T[S+80>>2]=_n[0],T[S+84>>2]=_n[1],0},doMsync:function(m,b,S,$,F){var L=qe.slice(m,m+S);D.msync(b,L,F,S,$)},varargs:void 0,get:function(){It.varargs+=4;var m=T[It.varargs-4>>2];return m},getStr:function(m){var b=ee(m);return b},getStreamFromFD:function(m){var b=D.getStream(m);if(!b)throw new D.ErrnoError(8);return b}};function dC(m,b,S){It.varargs=S;try{var $=It.getStreamFromFD(m);switch(b){case 0:{var F=It.get();if(F<0)return-28;var L;return L=D.createStream($,F),L.fd}case 1:case 2:return 0;case 3:return $.flags;case 4:{var F=It.get();return $.flags|=F,0}case 5:{var F=It.get(),V=0;return nt[F+V>>1]=2,0}case 6:case 7:return 0;case 16:case 8:return-28;case 9:return lC(28),-1;default:return-28}}catch(W){if(typeof D>"u"||!(W instanceof D.ErrnoError))throw W;return-W.errno}}function pC(m,b){try{var S=It.getStreamFromFD(m);return It.doStat(D.stat,S.path,b)}catch($){if(typeof D>"u"||!($ instanceof D.ErrnoError))throw $;return-$.errno}}function fC(m,b,S){try{var $=It.getStreamFromFD(m);$.getdents||($.getdents=D.readdir($.path));for(var F=280,L=0,V=D.llseek($,0,1),W=Math.floor(V/F);W<$.getdents.length&&L+F<=S;){var re,ye,_e=$.getdents[W];if(_e===".")re=$.node.id,ye=4;else if(_e===".."){var Re=D.lookupPath($.path,{parent:!0});re=Re.node.id,ye=4}else{var ve=D.lookupNode($.node,_e);re=ve.id,ye=D.isChrdev(ve.mode)?2:D.isDir(ve.mode)?4:D.isLink(ve.mode)?10:8}_n=[re>>>0,(vt=re,+Math.abs(vt)>=1?vt>0?(Math.min(+Math.floor(vt/4294967296),4294967295)|0)>>>0:~~+Math.ceil((vt-+(~~vt>>>0))/4294967296)>>>0:0)],T[b+L>>2]=_n[0],T[b+L+4>>2]=_n[1],_n=[(W+1)*F>>>0,(vt=(W+1)*F,+Math.abs(vt)>=1?vt>0?(Math.min(+Math.floor(vt/4294967296),4294967295)|0)>>>0:~~+Math.ceil((vt-+(~~vt>>>0))/4294967296)>>>0:0)],T[b+L+8>>2]=_n[0],T[b+L+12>>2]=_n[1],nt[b+L+16>>1]=280,We[b+L+18>>0]=ye,ie(_e,b+L+19,256),L+=F,W+=1}return D.llseek($,W*F,0),L}catch(Le){if(typeof D>"u"||!(Le instanceof D.ErrnoError))throw Le;return-Le.errno}}function mC(m,b,S){It.varargs=S;try{var $=It.getStreamFromFD(m);switch(b){case 21509:case 21505:return $.tty?0:-59;case 21510:case 21511:case 21512:case 21506:case 21507:case 21508:return $.tty?0:-59;case 21519:{if(!$.tty)return-59;var F=It.get();return T[F>>2]=0,0}case 21520:return $.tty?-28:-59;case 21531:{var F=It.get();return D.ioctl($,b,F)}case 21523:return $.tty?0:-59;case 21524:return $.tty?0:-59;default:pn("bad ioctl syscall "+b)}}catch(L){if(typeof D>"u"||!(L instanceof D.ErrnoError))throw L;return-L.errno}}function gC(m,b){try{return m=It.getStr(m),It.doStat(D.lstat,m,b)}catch(S){if(typeof D>"u"||!(S instanceof D.ErrnoError))throw S;return-S.errno}}function yC(m,b,S){try{return b=It.getStr(b),b=It.calculateAt(m,b),b=wt.normalize(b),b[b.length-1]==="/"&&(b=b.substr(0,b.length-1)),D.mkdir(b,S,0),0}catch($){if(typeof D>"u"||!($ instanceof D.ErrnoError))throw $;return-$.errno}}function bC(m,b,S,$){try{b=It.getStr(b);var F=$&256,L=$&4096;return $=$&-4353,b=It.calculateAt(m,b,L),It.doStat(F?D.lstat:D.stat,b,S)}catch(V){if(typeof D>"u"||!(V instanceof D.ErrnoError))throw V;return-V.errno}}function xC(m,b,S,$){It.varargs=$;try{b=It.getStr(b),b=It.calculateAt(m,b);var F=$?It.get():0;return D.open(b,S,F).fd}catch(L){if(typeof D>"u"||!(L instanceof D.ErrnoError))throw L;return-L.errno}}function wC(m,b){try{return m=It.getStr(m),It.doStat(D.stat,m,b)}catch(S){if(typeof D>"u"||!(S instanceof D.ErrnoError))throw S;return-S.errno}}var hu={};function Cy(m){for(;m.length;){var b=m.pop(),S=m.pop();S(b)}}function ii(m){return this.fromWireType(T[m>>2])}var ua={},wo={},du={},vC=48,kC=57;function Iy(m){if(m===void 0)return"_unknown";m=m.replace(/[^a-zA-Z0-9_]/g,"$");var b=m.charCodeAt(0);return b>=vC&&b<=kC?"_"+m:m}function Ny(m,b){return m=Iy(m),function(){return b.apply(this,arguments)}}function yd(m,b){var S=Ny(b,function($){this.name=b,this.message=$;var F=new Error($).stack;F!==void 0&&(this.stack=this.toString()+`
`+F.replace(/^Error(:[^\n]*)?\n/,""))});return S.prototype=Object.create(m.prototype),S.prototype.constructor=S,S.prototype.toString=function(){return this.message===void 0?this.name:this.name+": "+this.message},S}var $y=void 0;function pu(m){throw new $y(m)}function Pr(m,b,S){m.forEach(function(W){du[W]=b});function $(W){var re=S(W);re.length!==m.length&&pu("Mismatched type converter count");for(var ye=0;ye<m.length;++ye)wr(m[ye],re[ye])}var F=new Array(b.length),L=[],V=0;b.forEach((W,re)=>{wo.hasOwnProperty(W)?F[re]=wo[W]:(L.push(W),ua.hasOwnProperty(W)||(ua[W]=[]),ua[W].push(()=>{F[re]=wo[W],++V,V===L.length&&$(F)}))}),L.length===0&&$(F)}function SC(m){var b=hu[m];delete hu[m];var S=b.rawConstructor,$=b.rawDestructor,F=b.fields,L=F.map(V=>V.getterReturnType).concat(F.map(V=>V.setterArgumentType));Pr([m],L,V=>{var W={};return F.forEach((re,ye)=>{var _e=re.fieldName,Re=V[ye],ve=re.getter,Le=re.getterContext,rt=V[ye+F.length],St=re.setter,qt=re.setterContext;W[_e]={read:Ct=>Re.fromWireType(ve(Le,Ct)),write:(Ct,Ee)=>{var ze=[];St(qt,Ct,rt.toWireType(ze,Ee)),Cy(ze)}}}),[{name:b.name,fromWireType:function(re){var ye={};for(var _e in W)ye[_e]=W[_e].read(re);return $(re),ye},toWireType:function(re,ye){for(var _e in W)if(!(_e in ye))throw new TypeError('Missing field:  "'+_e+'"');var Re=S();for(_e in W)W[_e].write(Re,ye[_e]);return re!==null&&re.push($,Re),Re},argPackAdvance:8,readValueFromPointer:ii,destructorFunction:$}]})}function CC(m,b,S,$,F){}function bd(m){switch(m){case 1:return 0;case 2:return 1;case 4:return 2;case 8:return 3;default:throw new TypeError("Unknown type size: "+m)}}function IC(){for(var m=new Array(256),b=0;b<256;++b)m[b]=String.fromCharCode(b);Ty=m}var Ty=void 0;function On(m){for(var b="",S=m;qe[S];)b+=Ty[qe[S++]];return b}var ca=void 0;function kt(m){throw new ca(m)}function wr(m,b,S={}){if(!("argPackAdvance"in b))throw new TypeError("registerType registeredInstance requires argPackAdvance");var $=b.name;if(m||kt('type "'+$+'" must have a positive integer typeid pointer'),wo.hasOwnProperty(m)){if(S.ignoreDuplicateRegistrations)return;kt("Cannot register type '"+$+"' twice")}if(wo[m]=b,delete du[m],ua.hasOwnProperty(m)){var F=ua[m];delete ua[m],F.forEach(L=>L())}}function NC(m,b,S,$,F){var L=bd(S);b=On(b),wr(m,{name:b,fromWireType:function(V){return!!V},toWireType:function(V,W){return W?$:F},argPackAdvance:8,readValueFromPointer:function(V){var W;if(S===1)W=We;else if(S===2)W=nt;else if(S===4)W=T;else throw new TypeError("Unknown boolean type size: "+b);return this.fromWireType(W[V>>L])},destructorFunction:null})}function $C(m){if(!(this instanceof zr)||!(m instanceof zr))return!1;for(var b=this.$$.ptrType.registeredClass,S=this.$$.ptr,$=m.$$.ptrType.registeredClass,F=m.$$.ptr;b.baseClass;)S=b.upcast(S),b=b.baseClass;for(;$.baseClass;)F=$.upcast(F),$=$.baseClass;return b===$&&S===F}function TC(m){return{count:m.count,deleteScheduled:m.deleteScheduled,preservePointerOnDelete:m.preservePointerOnDelete,ptr:m.ptr,ptrType:m.ptrType,smartPtr:m.smartPtr,smartPtrType:m.smartPtrType}}function xd(m){function b(S){return S.$$.ptrType.registeredClass.name}kt(b(m)+" instance already deleted")}var wd=!1;function _y(m){}function _C(m){m.smartPtr?m.smartPtrType.rawDestructor(m.smartPtr):m.ptrType.registeredClass.rawDestructor(m.ptr)}function Ey(m){m.count.value-=1;var b=m.count.value===0;b&&_C(m)}function Ay(m,b,S){if(b===S)return m;if(S.baseClass===void 0)return null;var $=Ay(m,b,S.baseClass);return $===null?null:S.downcast($)}var Dy={};function EC(){return Object.keys(ci).length}function AC(){var m=[];for(var b in ci)ci.hasOwnProperty(b)&&m.push(ci[b]);return m}var li=[];function vd(){for(;li.length;){var m=li.pop();m.$$.deleteScheduled=!1,m.delete()}}var ui=void 0;function DC(m){ui=m,li.length&&ui&&ui(vd)}function RC(){i.getInheritedInstanceCount=EC,i.getLiveInheritedInstances=AC,i.flushPendingDeletes=vd,i.setDelayFunction=DC}var ci={};function FC(m,b){for(b===void 0&&kt("ptr should not be undefined");m.baseClass;)b=m.upcast(b),m=m.baseClass;return b}function OC(m,b){return b=FC(m,b),ci[b]}function fu(m,b){(!b.ptrType||!b.ptr)&&pu("makeClassHandle requires ptr and ptrType");var S=!!b.smartPtrType,$=!!b.smartPtr;return S!==$&&pu("Both smartPtrType and smartPtr must be specified"),b.count={value:1},hi(Object.create(m,{$$:{value:b}}))}function LC(m){var b=this.getPointee(m);if(!b)return this.destructor(m),null;var S=OC(this.registeredClass,b);if(S!==void 0){if(S.$$.count.value===0)return S.$$.ptr=b,S.$$.smartPtr=m,S.clone();var $=S.clone();return this.destructor(m),$}function F(){return this.isSmartPointer?fu(this.registeredClass.instancePrototype,{ptrType:this.pointeeType,ptr:b,smartPtrType:this,smartPtr:m}):fu(this.registeredClass.instancePrototype,{ptrType:this,ptr:m})}var L=this.registeredClass.getActualType(b),V=Dy[L];if(!V)return F.call(this);var W;this.isConst?W=V.constPointerType:W=V.pointerType;var re=Ay(b,this.registeredClass,W.registeredClass);return re===null?F.call(this):this.isSmartPointer?fu(W.registeredClass.instancePrototype,{ptrType:W,ptr:re,smartPtrType:this,smartPtr:m}):fu(W.registeredClass.instancePrototype,{ptrType:W,ptr:re})}function hi(m){return typeof FinalizationRegistry>"u"?(hi=b=>b,m):(wd=new FinalizationRegistry(b=>{Ey(b.$$)}),hi=b=>{var S=b.$$,$=!!S.smartPtr;if($){var F={$$:S};wd.register(b,F,b)}return b},_y=b=>wd.unregister(b),hi(m))}function PC(){if(this.$$.ptr||xd(this),this.$$.preservePointerOnDelete)return this.$$.count.value+=1,this;var m=hi(Object.create(Object.getPrototypeOf(this),{$$:{value:TC(this.$$)}}));return m.$$.count.value+=1,m.$$.deleteScheduled=!1,m}function zC(){this.$$.ptr||xd(this),this.$$.deleteScheduled&&!this.$$.preservePointerOnDelete&&kt("Object already scheduled for deletion"),_y(this),Ey(this.$$),this.$$.preservePointerOnDelete||(this.$$.smartPtr=void 0,this.$$.ptr=void 0)}function BC(){return!this.$$.ptr}function MC(){return this.$$.ptr||xd(this),this.$$.deleteScheduled&&!this.$$.preservePointerOnDelete&&kt("Object already scheduled for deletion"),li.push(this),li.length===1&&ui&&ui(vd),this.$$.deleteScheduled=!0,this}function VC(){zr.prototype.isAliasOf=$C,zr.prototype.clone=PC,zr.prototype.delete=zC,zr.prototype.isDeleted=BC,zr.prototype.deleteLater=MC}function zr(){}function Ry(m,b,S){if(m[b].overloadTable===void 0){var $=m[b];m[b]=function(){return m[b].overloadTable.hasOwnProperty(arguments.length)||kt("Function '"+S+"' called with an invalid number of arguments ("+arguments.length+") - expects one of ("+m[b].overloadTable+")!"),m[b].overloadTable[arguments.length].apply(this,arguments)},m[b].overloadTable=[],m[b].overloadTable[$.argCount]=$}}function Fy(m,b,S){i.hasOwnProperty(m)?((S===void 0||i[m].overloadTable!==void 0&&i[m].overloadTable[S]!==void 0)&&kt("Cannot register public name '"+m+"' twice"),Ry(i,m,m),i.hasOwnProperty(S)&&kt("Cannot register multiple overloads of a function with the same number of arguments ("+S+")!"),i[m].overloadTable[S]=b):(i[m]=b,S!==void 0&&(i[m].numArguments=S))}function WC(m,b,S,$,F,L,V,W){this.name=m,this.constructor=b,this.instancePrototype=S,this.rawDestructor=$,this.baseClass=F,this.getActualType=L,this.upcast=V,this.downcast=W,this.pureVirtualFunctions=[]}function kd(m,b,S){for(;b!==S;)b.upcast||kt("Expected null or instance of "+S.name+", got an instance of "+b.name),m=b.upcast(m),b=b.baseClass;return m}function UC(m,b){if(b===null)return this.isReference&&kt("null is not a valid "+this.name),0;b.$$||kt('Cannot pass "'+Nd(b)+'" as a '+this.name),b.$$.ptr||kt("Cannot pass deleted object as a pointer of type "+this.name);var S=b.$$.ptrType.registeredClass,$=kd(b.$$.ptr,S,this.registeredClass);return $}function GC(m,b){var S;if(b===null)return this.isReference&&kt("null is not a valid "+this.name),this.isSmartPointer?(S=this.rawConstructor(),m!==null&&m.push(this.rawDestructor,S),S):0;b.$$||kt('Cannot pass "'+Nd(b)+'" as a '+this.name),b.$$.ptr||kt("Cannot pass deleted object as a pointer of type "+this.name),!this.isConst&&b.$$.ptrType.isConst&&kt("Cannot convert argument of type "+(b.$$.smartPtrType?b.$$.smartPtrType.name:b.$$.ptrType.name)+" to parameter type "+this.name);var $=b.$$.ptrType.registeredClass;if(S=kd(b.$$.ptr,$,this.registeredClass),this.isSmartPointer)switch(b.$$.smartPtr===void 0&&kt("Passing raw pointer to smart pointer is illegal"),this.sharingPolicy){case 0:b.$$.smartPtrType===this?S=b.$$.smartPtr:kt("Cannot convert argument of type "+(b.$$.smartPtrType?b.$$.smartPtrType.name:b.$$.ptrType.name)+" to parameter type "+this.name);break;case 1:S=b.$$.smartPtr;break;case 2:if(b.$$.smartPtrType===this)S=b.$$.smartPtr;else{var F=b.clone();S=this.rawShare(S,ha.toHandle(function(){F.delete()})),m!==null&&m.push(this.rawDestructor,S)}break;default:kt("Unsupporting sharing policy")}return S}function HC(m,b){if(b===null)return this.isReference&&kt("null is not a valid "+this.name),0;b.$$||kt('Cannot pass "'+Nd(b)+'" as a '+this.name),b.$$.ptr||kt("Cannot pass deleted object as a pointer of type "+this.name),b.$$.ptrType.isConst&&kt("Cannot convert argument of type "+b.$$.ptrType.name+" to parameter type "+this.name);var S=b.$$.ptrType.registeredClass,$=kd(b.$$.ptr,S,this.registeredClass);return $}function jC(m){return this.rawGetPointee&&(m=this.rawGetPointee(m)),m}function qC(m){this.rawDestructor&&this.rawDestructor(m)}function KC(m){m!==null&&m.delete()}function XC(){tr.prototype.getPointee=jC,tr.prototype.destructor=qC,tr.prototype.argPackAdvance=8,tr.prototype.readValueFromPointer=ii,tr.prototype.deleteObject=KC,tr.prototype.fromWireType=LC}function tr(m,b,S,$,F,L,V,W,re,ye,_e){this.name=m,this.registeredClass=b,this.isReference=S,this.isConst=$,this.isSmartPointer=F,this.pointeeType=L,this.sharingPolicy=V,this.rawGetPointee=W,this.rawConstructor=re,this.rawShare=ye,this.rawDestructor=_e,!F&&b.baseClass===void 0?$?(this.toWireType=UC,this.destructorFunction=null):(this.toWireType=HC,this.destructorFunction=null):this.toWireType=GC}function Oy(m,b,S){i.hasOwnProperty(m)||pu("Replacing nonexistant public symbol"),i[m].overloadTable!==void 0&&S!==void 0?i[m].overloadTable[S]=b:(i[m]=b,i[m].argCount=S)}function YC(m,b,S){var $=i["dynCall_"+m];return S&&S.length?$.apply(null,[b].concat(S)):$.call(null,b)}function ZC(m,b,S){if(m.includes("j"))return YC(m,b,S);var $=Un(b).apply(null,S);return $}function JC(m,b){var S=[];return function(){return S.length=0,Object.assign(S,arguments),ZC(m,b,S)}}function Gn(m,b){m=On(m);function S(){return m.includes("j")?JC(m,b):Un(b)}var $=S();return typeof $!="function"&&kt("unknown function pointer with signature "+m+": "+b),$}var Ly=void 0;function Py(m){var b=Ky(m),S=On(b);return nr(b),S}function mu(m,b){var S=[],$={};function F(L){if(!$[L]&&!wo[L]){if(du[L]){du[L].forEach(F);return}S.push(L),$[L]=!0}}throw b.forEach(F),new Ly(m+": "+S.map(Py).join([", "]))}function QC(m,b,S,$,F,L,V,W,re,ye,_e,Re,ve){_e=On(_e),L=Gn(F,L),W&&(W=Gn(V,W)),ye&&(ye=Gn(re,ye)),ve=Gn(Re,ve);var Le=Iy(_e);Fy(Le,function(){mu("Cannot construct "+_e+" due to unbound types",[$])}),Pr([m,b,S],$?[$]:[],function(rt){rt=rt[0];var St,qt;$?(St=rt.registeredClass,qt=St.instancePrototype):qt=zr.prototype;var Ct=Ny(Le,function(){if(Object.getPrototypeOf(this)!==Ee)throw new ca("Use 'new' to construct "+_e);if(ze.constructor_body===void 0)throw new ca(_e+" has no accessible constructor");var Iu=ze.constructor_body[arguments.length];if(Iu===void 0)throw new ca("Tried to invoke ctor of "+_e+" with invalid number of parameters ("+arguments.length+") - expected ("+Object.keys(ze.constructor_body).toString()+") parameters instead!");return Iu.apply(this,arguments)}),Ee=Object.create(qt,{constructor:{value:Ct}});Ct.prototype=Ee;var ze=new WC(_e,Ct,Ee,ve,St,L,W,ye),At=new tr(_e,ze,!0,!1,!1),Wt=new tr(_e+"*",ze,!1,!1,!1),zt=new tr(_e+" const*",ze,!1,!0,!1);return Dy[m]={pointerType:Wt,constPointerType:zt},Oy(Le,Ct),[At,Wt,zt]})}function Sd(m,b){for(var S=[],$=0;$<m;$++)S.push(pe[b+$*4>>2]);return S}function Cd(m,b,S,$,F){var L=b.length;L<2&&kt("argTypes array size mismatch! Must at least get return value and 'this' types!");for(var V=b[1]!==null&&S!==null,W=!1,re=1;re<b.length;++re)if(b[re]!==null&&b[re].destructorFunction===void 0){W=!0;break}var ye=b[0].name!=="void",_e=L-2,Re=new Array(_e),ve=[],Le=[];return function(){arguments.length!==_e&&kt("function "+m+" called with "+arguments.length+" arguments, expected "+_e+" args!"),Le.length=0;var rt;ve.length=V?2:1,ve[0]=F,V&&(rt=b[1].toWireType(Le,this),ve[1]=rt);for(var St=0;St<_e;++St)Re[St]=b[St+2].toWireType(Le,arguments[St]),ve.push(Re[St]);var qt=$.apply(null,ve);function Ct(Ee){if(W)Cy(Le);else for(var ze=V?1:2;ze<b.length;ze++){var At=ze===1?rt:Re[ze-2];b[ze].destructorFunction!==null&&b[ze].destructorFunction(At)}if(ye)return b[0].fromWireType(Ee)}return Ct(qt)}}function eI(m,b,S,$,F,L){M(b>0);var V=Sd(b,S);F=Gn($,F),Pr([],[m],function(W){W=W[0];var re="constructor "+W.name;if(W.registeredClass.constructor_body===void 0&&(W.registeredClass.constructor_body=[]),W.registeredClass.constructor_body[b-1]!==void 0)throw new ca("Cannot register multiple constructors with identical number of parameters ("+(b-1)+") for class '"+W.name+"'! Overload resolution is currently only performed using the parameter count, not actual type info!");return W.registeredClass.constructor_body[b-1]=()=>{mu("Cannot construct "+W.name+" due to unbound types",V)},Pr([],V,function(ye){return ye.splice(1,0,null),W.registeredClass.constructor_body[b-1]=Cd(re,ye,null,F,L),[]}),[]})}function tI(m,b,S,$,F,L,V,W){var re=Sd(S,$);b=On(b),L=Gn(F,L),Pr([],[m],function(ye){ye=ye[0];var _e=ye.name+"."+b;b.startsWith("@@")&&(b=Symbol[b.substring(2)]),W&&ye.registeredClass.pureVirtualFunctions.push(b);function Re(){mu("Cannot call "+_e+" due to unbound types",re)}var ve=ye.registeredClass.instancePrototype,Le=ve[b];return Le===void 0||Le.overloadTable===void 0&&Le.className!==ye.name&&Le.argCount===S-2?(Re.argCount=S-2,Re.className=ye.name,ve[b]=Re):(Ry(ve,b,_e),ve[b].overloadTable[S-2]=Re),Pr([],re,function(rt){var St=Cd(_e,rt,ye,L,V);return ve[b].overloadTable===void 0?(St.argCount=S-2,ve[b]=St):ve[b].overloadTable[S-2]=St,[]}),[]})}var Id=[],Vs=[{},{value:void 0},{value:null},{value:!0},{value:!1}];function zy(m){m>4&&--Vs[m].refcount===0&&(Vs[m]=void 0,Id.push(m))}function nI(){for(var m=0,b=5;b<Vs.length;++b)Vs[b]!==void 0&&++m;return m}function sI(){for(var m=5;m<Vs.length;++m)if(Vs[m]!==void 0)return Vs[m];return null}function rI(){i.count_emval_handles=nI,i.get_first_emval=sI}var ha={toValue:m=>(m||kt("Cannot use deleted val. handle = "+m),Vs[m].value),toHandle:m=>{switch(m){case void 0:return 1;case null:return 2;case!0:return 3;case!1:return 4;default:{var b=Id.length?Id.pop():Vs.length;return Vs[b]={refcount:1,value:m},b}}}};function oI(m,b){b=On(b),wr(m,{name:b,fromWireType:function(S){var $=ha.toValue(S);return zy(S),$},toWireType:function(S,$){return ha.toHandle($)},argPackAdvance:8,readValueFromPointer:ii,destructorFunction:null})}function Nd(m){if(m===null)return"null";var b=typeof m;return b==="object"||b==="array"||b==="function"?m.toString():""+m}function aI(m,b){switch(b){case 2:return function(S){return this.fromWireType(fe[S>>2])};case 3:return function(S){return this.fromWireType(q[S>>3])};default:throw new TypeError("Unknown float type: "+m)}}function iI(m,b,S){var $=bd(S);b=On(b),wr(m,{name:b,fromWireType:function(F){return F},toWireType:function(F,L){return L},argPackAdvance:8,readValueFromPointer:aI(b,$),destructorFunction:null})}function lI(m,b,S,$,F,L){var V=Sd(b,S);m=On(m),F=Gn($,F),Fy(m,function(){mu("Cannot call "+m+" due to unbound types",V)},b-1),Pr([],V,function(W){var re=[W[0],null].concat(W.slice(1));return Oy(m,Cd(m,re,null,F,L),b-1),[]})}function uI(m,b,S){switch(b){case 0:return S?function($){return We[$]}:function($){return qe[$]};case 1:return S?function($){return nt[$>>1]}:function($){return Ft[$>>1]};case 2:return S?function($){return T[$>>2]}:function($){return pe[$>>2]};default:throw new TypeError("Unknown integer type: "+m)}}function cI(m,b,S,$,F){b=On(b);var L=bd(S),V=Re=>Re;if($===0){var W=32-8*S;V=Re=>Re<<W>>>W}var re=b.includes("unsigned"),ye=(Re,ve)=>{},_e;re?_e=function(Re,ve){return ye(ve,this.name),ve>>>0}:_e=function(Re,ve){return ye(ve,this.name),ve},wr(m,{name:b,fromWireType:V,toWireType:_e,argPackAdvance:8,readValueFromPointer:uI(b,L,$!==0),destructorFunction:null})}function hI(m,b,S){var $=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array],F=$[b];function L(V){V=V>>2;var W=pe,re=W[V],ye=W[V+1];return new F(je,ye,re)}S=On(S),wr(m,{name:S,fromWireType:L,argPackAdvance:8,readValueFromPointer:L},{ignoreDuplicateRegistrations:!0})}function dI(m,b,S,$,F,L,V,W,re,ye,_e,Re){S=On(S),L=Gn(F,L),W=Gn(V,W),ye=Gn(re,ye),Re=Gn(_e,Re),Pr([m],[b],function(ve){ve=ve[0];var Le=new tr(S,ve.registeredClass,!1,!1,!0,ve,$,L,W,ye,Re);return[Le]})}function pI(m,b){b=On(b);var S=b==="std::string";wr(m,{name:b,fromWireType:function($){var F=pe[$>>2],L=$+4,V;if(S)for(var W=L,re=0;re<=F;++re){var ye=L+re;if(re==F||qe[ye]==0){var _e=ye-W,Re=ee(W,_e);V===void 0?V=Re:(V+="\0",V+=Re),W=ye+1}}else{for(var ve=new Array(F),re=0;re<F;++re)ve[re]=String.fromCharCode(qe[L+re]);V=ve.join("")}return nr($),V},toWireType:function($,F){F instanceof ArrayBuffer&&(F=new Uint8Array(F));var L,V=typeof F=="string";V||F instanceof Uint8Array||F instanceof Uint8ClampedArray||F instanceof Int8Array||kt("Cannot pass non-string to std::string"),S&&V?L=xe(F):L=F.length;var W=fi(4+L+1),re=W+4;if(pe[W>>2]=L,S&&V)ie(F,re,L+1);else if(V)for(var ye=0;ye<L;++ye){var _e=F.charCodeAt(ye);_e>255&&(nr(re),kt("String has UTF-16 code units that do not fit in 8 bits")),qe[re+ye]=_e}else for(var ye=0;ye<L;++ye)qe[re+ye]=F[ye];return $!==null&&$.push(nr,W),W},argPackAdvance:8,readValueFromPointer:ii,destructorFunction:function($){nr($)}})}function fI(m,b,S){S=On(S);var $,F,L,V,W;b===2?($=ke,F=oe,V=se,L=()=>Ft,W=1):b===4&&($=$e,F=Ce,V=we,L=()=>pe,W=2),wr(m,{name:S,fromWireType:function(re){for(var ye=pe[re>>2],_e=L(),Re,ve=re+4,Le=0;Le<=ye;++Le){var rt=re+4+Le*b;if(Le==ye||_e[rt>>W]==0){var St=rt-ve,qt=$(ve,St);Re===void 0?Re=qt:(Re+="\0",Re+=qt),ve=rt+b}}return nr(re),Re},toWireType:function(re,ye){typeof ye!="string"&&kt("Cannot pass non-string to C++ string type "+S);var _e=V(ye),Re=fi(4+_e+b);return pe[Re>>2]=_e>>W,F(ye,Re+4,_e+b),re!==null&&re.push(nr,Re),Re},argPackAdvance:8,readValueFromPointer:ii,destructorFunction:function(re){nr(re)}})}function mI(m,b,S,$,F,L){hu[m]={name:On(b),rawConstructor:Gn(S,$),rawDestructor:Gn(F,L),fields:[]}}function gI(m,b,S,$,F,L,V,W,re,ye){hu[m].fields.push({fieldName:On(b),getterReturnType:S,getter:Gn($,F),getterContext:L,setterArgumentType:V,setter:Gn(W,re),setterContext:ye})}function yI(m,b){b=On(b),wr(m,{isVoid:!0,name:b,argPackAdvance:0,fromWireType:function(){},toWireType:function(S,$){}})}function bI(){return Date.now()}var xI=!0;function wI(){return xI}function By(m,b){var S=wo[m];return S===void 0&&kt(b+" has unknown type "+Py(m)),S}function vI(m,b){for(var S=new Array(m),$=0;$<m;++$)S[$]=By(pe[b+$*B>>2],"parameter "+$);return S}function kI(m,b,S,$){m=ha.toValue(m);for(var F=vI(b,S),L=new Array(b),V=0;V<b;++V){var W=F[V];L[V]=W.readValueFromPointer($),$+=W.argPackAdvance}var re=m.apply(void 0,L);return ha.toHandle(re)}function SI(m){m>4&&(Vs[m].refcount+=1)}function CI(m,b){m=By(m,"_emval_take_value");var S=m.readValueFromPointer(b);return ha.toHandle(S)}function II(m,b){var S=new Date(T[m>>2]*1e3);T[b>>2]=S.getUTCSeconds(),T[b+4>>2]=S.getUTCMinutes(),T[b+8>>2]=S.getUTCHours(),T[b+12>>2]=S.getUTCDate(),T[b+16>>2]=S.getUTCMonth(),T[b+20>>2]=S.getUTCFullYear()-1900,T[b+24>>2]=S.getUTCDay();var $=Date.UTC(S.getUTCFullYear(),0,1,0,0,0,0),F=(S.getTime()-$)/(1e3*60*60*24)|0;T[b+28>>2]=F}function NI(m,b){var S=new Date(T[m>>2]*1e3);T[b>>2]=S.getSeconds(),T[b+4>>2]=S.getMinutes(),T[b+8>>2]=S.getHours(),T[b+12>>2]=S.getDate(),T[b+16>>2]=S.getMonth(),T[b+20>>2]=S.getFullYear()-1900,T[b+24>>2]=S.getDay();var $=new Date(S.getFullYear(),0,1),F=(S.getTime()-$.getTime())/(1e3*60*60*24)|0;T[b+28>>2]=F,T[b+36>>2]=-(S.getTimezoneOffset()*60);var L=new Date(S.getFullYear(),6,1).getTimezoneOffset(),V=$.getTimezoneOffset(),W=(L!=V&&S.getTimezoneOffset()==Math.min(V,L))|0;T[b+32>>2]=W}function $I(m){var b=new Date(T[m+20>>2]+1900,T[m+16>>2],T[m+12>>2],T[m+8>>2],T[m+4>>2],T[m>>2],0),S=T[m+32>>2],$=b.getTimezoneOffset(),F=new Date(b.getFullYear(),0,1),L=new Date(b.getFullYear(),6,1).getTimezoneOffset(),V=F.getTimezoneOffset(),W=Math.min(V,L);if(S<0)T[m+32>>2]=+(L!=V&&W==$);else if(S>0!=(W==$)){var re=Math.max(V,L),ye=S>0?W:re;b.setTime(b.getTime()+(ye-$)*6e4)}T[m+24>>2]=b.getDay();var _e=(b.getTime()-F.getTime())/(1e3*60*60*24)|0;return T[m+28>>2]=_e,T[m>>2]=b.getSeconds(),T[m+4>>2]=b.getMinutes(),T[m+8>>2]=b.getHours(),T[m+12>>2]=b.getDate(),T[m+16>>2]=b.getMonth(),b.getTime()/1e3|0}function TI(m,b,S,$,F,L){try{var V=D.getStream($);if(!V)return-8;var W=D.mmap(V,m,F,b,S),re=W.ptr;return T[L>>2]=W.allocated,re}catch(ye){if(typeof D>"u"||!(ye instanceof D.ErrnoError))throw ye;return-ye.errno}}function _I(m,b,S){var $=new Date().getFullYear(),F=new Date($,0,1),L=new Date($,6,1),V=F.getTimezoneOffset(),W=L.getTimezoneOffset(),re=Math.max(V,W);T[m>>2]=re*60,T[b>>2]=+(V!=W);function ye(rt){var St=rt.toTimeString().match(/\(([A-Za-z ]+)\)$/);return St?St[1]:"GMT"}var _e=ye(F),Re=ye(L),ve=Qe(_e),Le=Qe(Re);W<V?(pe[S>>2]=ve,pe[S+4>>2]=Le):(pe[S>>2]=Le,pe[S+4>>2]=ve)}function $d(m,b,S){$d.called||($d.called=!0,_I(m,b,S))}function EI(){pn("")}var Td=[];function AI(m,b){Td.length=0;var S;for(b>>=2;S=qe[m++];)b+=S!=105&b,Td.push(S==105?T[b]:q[b++>>1]),++b;return Td}function DI(m,b,S){var $=AI(b,S);return uu[m].apply(null,$)}function My(){return 2147483648}function RI(){return My()}var _d;y?_d=()=>{var m=process.hrtime();return m[0]*1e3+m[1]/1e6}:_d=()=>performance.now();function FI(m,b,S){qe.copyWithin(m,b,b+S)}function OI(m){try{return Z.grow(m-je.byteLength+65535>>>16),G(Z.buffer),1}catch{}}function LI(m){var b=qe.length;m=m>>>0;var S=My();if(m>S)return!1;let $=(re,ye)=>re+(ye-re%ye)%ye;for(var F=1;F<=4;F*=2){var L=b*(1+.2/F);L=Math.min(L,m+100663296);var V=Math.min(S,$(Math.max(m,L),65536)),W=OI(V);if(W)return!0}return!1}function gu(m){return pn("Cannot use convertFrameToPC (needed by __builtin_return_address) without -sUSE_OFFSET_CONVERTER"),0}var di={};function Vy(m){m.forEach(b=>{gu()})}function PI(){var m=by().split(`
`);return m[0]=="Error"&&m.shift(),Vy(m),di.last_addr=gu(m[3]),di.last_stack=m,di.last_addr}function zI(m,b,S){var $;di.last_addr==m?$=di.last_stack:($=by().split(`
`),$[0]=="Error"&&$.shift(),Vy($));for(var F=3;$[F]&&gu($[F])!=m;)++F;for(var L=0;L<S&&$[L+F];++L)T[b+L*4>>2]=gu($[L+F]);return L}var Ed={};function BI(){return d||"./this.program"}function pi(){if(!pi.strings){var m=(typeof navigator=="object"&&navigator.languages&&navigator.languages[0]||"C").replace("-","_")+".UTF-8",b={USER:"web_user",LOGNAME:"web_user",PATH:"/",PWD:"/",HOME:"/home/web_user",LANG:m,_:BI()};for(var S in Ed)Ed[S]===void 0?delete b[S]:b[S]=Ed[S];var $=[];for(var S in b)$.push(S+"="+b[S]);pi.strings=$}return pi.strings}function MI(m,b){var S=0;return pi().forEach(function($,F){var L=b+S;pe[m+F*4>>2]=L,Xe($,L),S+=$.length+1}),0}function VI(m,b){var S=pi();pe[m>>2]=S.length;var $=0;return S.forEach(function(F){$+=F.length+1}),pe[b>>2]=$,0}function WI(m){fN(m)}function UI(m){try{var b=It.getStreamFromFD(m);return D.close(b),0}catch(S){if(typeof D>"u"||!(S instanceof D.ErrnoError))throw S;return S.errno}}function GI(m,b,S,$){for(var F=0,L=0;L<S;L++){var V=pe[b>>2],W=pe[b+4>>2];b+=8;var re=D.read(m,We,V,W,$);if(re<0)return-1;if(F+=re,re<W)break}return F}function HI(m,b,S,$){try{var F=It.getStreamFromFD(m),L=GI(F,b,S);return T[$>>2]=L,0}catch(V){if(typeof D>"u"||!(V instanceof D.ErrnoError))throw V;return V.errno}}function jI(m,b){return b+2097152>>>0<4194305-!!m?(m>>>0)+b*4294967296:NaN}function qI(m,b,S,$,F){try{var L=jI(b,S);if(isNaN(L))return 61;var V=It.getStreamFromFD(m);return D.llseek(V,L,$),_n=[V.position>>>0,(vt=V.position,+Math.abs(vt)>=1?vt>0?(Math.min(+Math.floor(vt/4294967296),4294967295)|0)>>>0:~~+Math.ceil((vt-+(~~vt>>>0))/4294967296)>>>0:0)],T[F>>2]=_n[0],T[F+4>>2]=_n[1],V.getdents&&L===0&&$===0&&(V.getdents=null),0}catch(W){if(typeof D>"u"||!(W instanceof D.ErrnoError))throw W;return W.errno}}function KI(m,b,S,$){for(var F=0,L=0;L<S;L++){var V=pe[b>>2],W=pe[b+4>>2];b+=8;var re=D.write(m,We,V,W,$);if(re<0)return-1;F+=re}return F}function XI(m,b,S,$){try{var F=It.getStreamFromFD(m),L=KI(F,b,S);return pe[$>>2]=L,0}catch(V){if(typeof D>"u"||!(V instanceof D.ErrnoError))throw V;return V.errno}}function YI(){return K()}function yu(m,b){yu.randomDevice||(yu.randomDevice=ky());for(var S=0;S<b;S++)We[m+S>>0]=yu.randomDevice();return 0}function ZI(m){return m}function JI(m){U(m)}function bu(m){return m%4===0&&(m%100!==0||m%400===0)}function QI(m,b){for(var S=0,$=0;$<=b;S+=m[$++]);return S}var Wy=[31,29,31,30,31,30,31,31,30,31,30,31],Uy=[31,28,31,30,31,30,31,31,30,31,30,31];function eN(m,b){for(var S=new Date(m.getTime());b>0;){var $=bu(S.getFullYear()),F=S.getMonth(),L=($?Wy:Uy)[F];if(b>L-S.getDate())b-=L-S.getDate()+1,S.setDate(1),F<11?S.setMonth(F+1):(S.setMonth(0),S.setFullYear(S.getFullYear()+1));else return S.setDate(S.getDate()+b),S}return S}function Gy(m,b,S,$){var F=T[$+40>>2],L={tm_sec:T[$>>2],tm_min:T[$+4>>2],tm_hour:T[$+8>>2],tm_mday:T[$+12>>2],tm_mon:T[$+16>>2],tm_year:T[$+20>>2],tm_wday:T[$+24>>2],tm_yday:T[$+28>>2],tm_isdst:T[$+32>>2],tm_gmtoff:T[$+36>>2],tm_zone:F?ee(F):""},V=ee(S),W={"%c":"%a %b %d %H:%M:%S %Y","%D":"%m/%d/%y","%F":"%Y-%m-%d","%h":"%b","%r":"%I:%M:%S %p","%R":"%H:%M","%T":"%H:%M:%S","%x":"%m/%d/%y","%X":"%H:%M:%S","%Ec":"%c","%EC":"%C","%Ex":"%m/%d/%y","%EX":"%H:%M:%S","%Ey":"%y","%EY":"%Y","%Od":"%d","%Oe":"%e","%OH":"%H","%OI":"%I","%Om":"%m","%OM":"%M","%OS":"%S","%Ou":"%u","%OU":"%U","%OV":"%V","%Ow":"%w","%OW":"%W","%Oy":"%y"};for(var re in W)V=V.replace(new RegExp(re,"g"),W[re]);var ye=["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],_e=["January","February","March","April","May","June","July","August","September","October","November","December"];function Re(Ee,ze,At){for(var Wt=typeof Ee=="number"?Ee.toString():Ee||"";Wt.length<ze;)Wt=At[0]+Wt;return Wt}function ve(Ee,ze){return Re(Ee,ze,"0")}function Le(Ee,ze){function At(zt){return zt<0?-1:zt>0?1:0}var Wt;return(Wt=At(Ee.getFullYear()-ze.getFullYear()))===0&&(Wt=At(Ee.getMonth()-ze.getMonth()))===0&&(Wt=At(Ee.getDate()-ze.getDate())),Wt}function rt(Ee){switch(Ee.getDay()){case 0:return new Date(Ee.getFullYear()-1,11,29);case 1:return Ee;case 2:return new Date(Ee.getFullYear(),0,3);case 3:return new Date(Ee.getFullYear(),0,2);case 4:return new Date(Ee.getFullYear(),0,1);case 5:return new Date(Ee.getFullYear()-1,11,31);case 6:return new Date(Ee.getFullYear()-1,11,30)}}function St(Ee){var ze=eN(new Date(Ee.tm_year+1900,0,1),Ee.tm_yday),At=new Date(ze.getFullYear(),0,4),Wt=new Date(ze.getFullYear()+1,0,4),zt=rt(At),Iu=rt(Wt);return Le(zt,ze)<=0?Le(Iu,ze)<=0?ze.getFullYear()+1:ze.getFullYear():ze.getFullYear()-1}var qt={"%a":function(Ee){return ye[Ee.tm_wday].substring(0,3)},"%A":function(Ee){return ye[Ee.tm_wday]},"%b":function(Ee){return _e[Ee.tm_mon].substring(0,3)},"%B":function(Ee){return _e[Ee.tm_mon]},"%C":function(Ee){var ze=Ee.tm_year+1900;return ve(ze/100|0,2)},"%d":function(Ee){return ve(Ee.tm_mday,2)},"%e":function(Ee){return Re(Ee.tm_mday,2," ")},"%g":function(Ee){return St(Ee).toString().substring(2)},"%G":function(Ee){return St(Ee)},"%H":function(Ee){return ve(Ee.tm_hour,2)},"%I":function(Ee){var ze=Ee.tm_hour;return ze==0?ze=12:ze>12&&(ze-=12),ve(ze,2)},"%j":function(Ee){return ve(Ee.tm_mday+QI(bu(Ee.tm_year+1900)?Wy:Uy,Ee.tm_mon-1),3)},"%m":function(Ee){return ve(Ee.tm_mon+1,2)},"%M":function(Ee){return ve(Ee.tm_min,2)},"%n":function(){return`
`},"%p":function(Ee){return Ee.tm_hour>=0&&Ee.tm_hour<12?"AM":"PM"},"%S":function(Ee){return ve(Ee.tm_sec,2)},"%t":function(){return"	"},"%u":function(Ee){return Ee.tm_wday||7},"%U":function(Ee){var ze=Ee.tm_yday+7-Ee.tm_wday;return ve(Math.floor(ze/7),2)},"%V":function(Ee){var ze=Math.floor((Ee.tm_yday+7-(Ee.tm_wday+6)%7)/7);if((Ee.tm_wday+371-Ee.tm_yday-2)%7<=2&&ze++,ze){if(ze==53){var At=(Ee.tm_wday+371-Ee.tm_yday)%7;At!=4&&(At!=3||!bu(Ee.tm_year))&&(ze=1)}}else{ze=52;var Wt=(Ee.tm_wday+7-Ee.tm_yday-1)%7;(Wt==4||Wt==5&&bu(Ee.tm_year%400-1))&&ze++}return ve(ze,2)},"%w":function(Ee){return Ee.tm_wday},"%W":function(Ee){var ze=Ee.tm_yday+7-(Ee.tm_wday+6)%7;return ve(Math.floor(ze/7),2)},"%y":function(Ee){return(Ee.tm_year+1900).toString().substring(2)},"%Y":function(Ee){return Ee.tm_year+1900},"%z":function(Ee){var ze=Ee.tm_gmtoff,At=ze>=0;return ze=Math.abs(ze)/60,ze=ze/60*100+ze%60,(At?"+":"-")+("0000"+ze).slice(-4)},"%Z":function(Ee){return Ee.tm_zone},"%%":function(){return"%"}};V=V.replace(/%%/g,"\0\0");for(var re in qt)V.includes(re)&&(V=V.replace(new RegExp(re,"g"),qt[re](L)));V=V.replace(/\0\0/g,"%");var Ct=vu(V,!1);return Ct.length>b?0:(tt(Ct,m),Ct.length-1)}function tN(m,b,S,$){return Gy(m,b,S,$)}var Hy=function(m,b,S,$){m||(m=this),this.parent=m,this.mount=m.mount,this.mounted=null,this.id=D.nextInode++,this.name=b,this.mode=S,this.node_ops={},this.stream_ops={},this.rdev=$},xu=365,wu=146;Object.defineProperties(Hy.prototype,{read:{get:function(){return(this.mode&xu)===xu},set:function(m){m?this.mode|=xu:this.mode&=~xu}},write:{get:function(){return(this.mode&wu)===wu},set:function(m){m?this.mode|=wu:this.mode&=~wu}},isFolder:{get:function(){return D.isDir(this.mode)}},isDevice:{get:function(){return D.isChrdev(this.mode)}}}),D.FSNode=Hy,D.staticInit(),$y=i.InternalError=yd(Error,"InternalError"),IC(),ca=i.BindingError=yd(Error,"BindingError"),VC(),RC(),XC(),Ly=i.UnboundTypeError=yd(Error,"UnboundTypeError"),rI();function vu(m,b,S){var $=xe(m)+1,F=new Array($),L=be(m,F,0,F.length);return b&&(F.length=L),F}var jy={HaveOffsetConverter:bo,__cxa_allocate_exception:QS,__cxa_begin_catch:tC,__cxa_end_catch:sC,__cxa_find_matching_catch_2:oC,__cxa_find_matching_catch_3:aC,__cxa_free_exception:vy,__cxa_throw:iC,__resumeException:rC,__syscall_fcntl64:dC,__syscall_fstat64:pC,__syscall_getdents64:fC,__syscall_ioctl:mC,__syscall_lstat64:gC,__syscall_mkdirat:yC,__syscall_newfstatat:bC,__syscall_openat:xC,__syscall_stat64:wC,_embind_finalize_value_object:SC,_embind_register_bigint:CC,_embind_register_bool:NC,_embind_register_class:QC,_embind_register_class_constructor:eI,_embind_register_class_function:tI,_embind_register_emval:oI,_embind_register_float:iI,_embind_register_function:lI,_embind_register_integer:cI,_embind_register_memory_view:hI,_embind_register_smart_ptr:dI,_embind_register_std_string:pI,_embind_register_std_wstring:fI,_embind_register_value_object:mI,_embind_register_value_object_field:gI,_embind_register_void:yI,_emscripten_date_now:bI,_emscripten_get_now_is_monotonic:wI,_emval_call:kI,_emval_decref:zy,_emval_incref:SI,_emval_take_value:CI,_gmtime_js:II,_localtime_js:NI,_mktime_js:$I,_mmap_js:TI,_tzset_js:$d,abort:EI,emscripten_asm_const_int:DI,emscripten_get_heap_max:RI,emscripten_get_now:_d,emscripten_memcpy_big:FI,emscripten_resize_heap:LI,emscripten_stack_snapshot:PI,emscripten_stack_unwind_buffer:zI,environ_get:MI,environ_sizes_get:VI,exit:WI,fd_close:UI,fd_read:HI,fd_seek:qI,fd_write:XI,getTempRet0:YI,getentropy:yu,invoke_ii:iN,invoke_iii:sN,invoke_iiii:lN,invoke_iiiii:aN,invoke_iiiiii:hN,invoke_iiiiiii:uN,invoke_v:cN,invoke_vi:rN,invoke_vii:oN,invoke_viii:nN,invoke_viiii:dN,invoke_viiiii:pN,llvm_eh_typeid_for:ZI,setTempRet0:JI,strftime:Gy,strftime_l:tN};gd(),i.___wasm_call_ctors=function(){return(i.___wasm_call_ctors=i.asm.__wasm_call_ctors).apply(null,arguments)};var fi=i._malloc=function(){return(fi=i._malloc=i.asm.malloc).apply(null,arguments)},nr=i._free=function(){return(nr=i._free=i.asm.free).apply(null,arguments)},qy=i.___errno_location=function(){return(qy=i.___errno_location=i.asm.__errno_location).apply(null,arguments)},Ky=i.___getTypeName=function(){return(Ky=i.___getTypeName=i.asm.__getTypeName).apply(null,arguments)};i.___embind_register_native_and_builtin_types=function(){return(i.___embind_register_native_and_builtin_types=i.asm.__embind_register_native_and_builtin_types).apply(null,arguments)};var Xy=i._emscripten_builtin_memalign=function(){return(Xy=i._emscripten_builtin_memalign=i.asm.emscripten_builtin_memalign).apply(null,arguments)},Yn=i._setThrew=function(){return(Yn=i._setThrew=i.asm.setThrew).apply(null,arguments)},ps=i.stackSave=function(){return(ps=i.stackSave=i.asm.stackSave).apply(null,arguments)},fs=i.stackRestore=function(){return(fs=i.stackRestore=i.asm.stackRestore).apply(null,arguments)};i.stackAlloc=function(){return(i.stackAlloc=i.asm.stackAlloc).apply(null,arguments)},i.___cxa_demangle=function(){return(i.___cxa_demangle=i.asm.__cxa_demangle).apply(null,arguments)};var Ad=i.___cxa_can_catch=function(){return(Ad=i.___cxa_can_catch=i.asm.__cxa_can_catch).apply(null,arguments)},Yy=i.___cxa_is_pointer_type=function(){return(Yy=i.___cxa_is_pointer_type=i.asm.__cxa_is_pointer_type).apply(null,arguments)};i.dynCall_viijjii=function(){return(i.dynCall_viijjii=i.asm.dynCall_viijjii).apply(null,arguments)},i.dynCall_ji=function(){return(i.dynCall_ji=i.asm.dynCall_ji).apply(null,arguments)},i.dynCall_viiji=function(){return(i.dynCall_viiji=i.asm.dynCall_viiji).apply(null,arguments)},i.dynCall_viiiji=function(){return(i.dynCall_viiiji=i.asm.dynCall_viiiji).apply(null,arguments)},i.dynCall_viijii=function(){return(i.dynCall_viijii=i.asm.dynCall_viijii).apply(null,arguments)},i.dynCall_iij=function(){return(i.dynCall_iij=i.asm.dynCall_iij).apply(null,arguments)},i.dynCall_vij=function(){return(i.dynCall_vij=i.asm.dynCall_vij).apply(null,arguments)},i.dynCall_viji=function(){return(i.dynCall_viji=i.asm.dynCall_viji).apply(null,arguments)},i.dynCall_jii=function(){return(i.dynCall_jii=i.asm.dynCall_jii).apply(null,arguments)},i.dynCall_vj=function(){return(i.dynCall_vj=i.asm.dynCall_vj).apply(null,arguments)},i.dynCall_viij=function(){return(i.dynCall_viij=i.asm.dynCall_viij).apply(null,arguments)},i.dynCall_jiji=function(){return(i.dynCall_jiji=i.asm.dynCall_jiji).apply(null,arguments)},i.dynCall_iijjiiii=function(){return(i.dynCall_iijjiiii=i.asm.dynCall_iijjiiii).apply(null,arguments)},i.dynCall_iiiiij=function(){return(i.dynCall_iiiiij=i.asm.dynCall_iiiiij).apply(null,arguments)},i.dynCall_iiiiijj=function(){return(i.dynCall_iiiiijj=i.asm.dynCall_iiiiijj).apply(null,arguments)},i.dynCall_iiiiiijj=function(){return(i.dynCall_iiiiiijj=i.asm.dynCall_iiiiiijj).apply(null,arguments)};function nN(m,b,S,$){var F=ps();try{Un(m)(b,S,$)}catch(L){if(fs(F),L!==L+0)throw L;Yn(1,0)}}function sN(m,b,S){var $=ps();try{return Un(m)(b,S)}catch(F){if(fs($),F!==F+0)throw F;Yn(1,0)}}function rN(m,b){var S=ps();try{Un(m)(b)}catch($){if(fs(S),$!==$+0)throw $;Yn(1,0)}}function oN(m,b,S){var $=ps();try{Un(m)(b,S)}catch(F){if(fs($),F!==F+0)throw F;Yn(1,0)}}function aN(m,b,S,$,F){var L=ps();try{return Un(m)(b,S,$,F)}catch(V){if(fs(L),V!==V+0)throw V;Yn(1,0)}}function iN(m,b){var S=ps();try{return Un(m)(b)}catch($){if(fs(S),$!==$+0)throw $;Yn(1,0)}}function lN(m,b,S,$){var F=ps();try{return Un(m)(b,S,$)}catch(L){if(fs(F),L!==L+0)throw L;Yn(1,0)}}function uN(m,b,S,$,F,L,V){var W=ps();try{return Un(m)(b,S,$,F,L,V)}catch(re){if(fs(W),re!==re+0)throw re;Yn(1,0)}}function cN(m){var b=ps();try{Un(m)()}catch(S){if(fs(b),S!==S+0)throw S;Yn(1,0)}}function hN(m,b,S,$,F,L){var V=ps();try{return Un(m)(b,S,$,F,L)}catch(W){if(fs(V),W!==W+0)throw W;Yn(1,0)}}function dN(m,b,S,$,F){var L=ps();try{Un(m)(b,S,$,F)}catch(V){if(fs(L),V!==V+0)throw V;Yn(1,0)}}function pN(m,b,S,$,F,L){var V=ps();try{Un(m)(b,S,$,F,L)}catch(W){if(fs(V),W!==W+0)throw W;Yn(1,0)}}i.FS=D;var ku;function Zy(m){this.name="ExitStatus",this.message="Program terminated with exit("+m+")",this.status=m}ot=function m(){ku||Dd(),ku||(ot=m)};function Dd(m){if(pt>0||(Ae(),pt>0))return;function b(){ku||(ku=!0,i.calledRun=!0,!ue&&(Me(),u(i),i.onRuntimeInitialized&&i.onRuntimeInitialized(),De()))}b()}i.run=Dd;function fN(m,b){mN(m)}function mN(m){p(m,new Zy(m))}Dd();let Rd={NUMERICAL:"NUMERICAL",CATEGORICAL:"CATEGORICAL",CATEGORICAL_SET:"CATEGORICAL_SET"};function Su(m,b,S){let $=[];for(let F of m){if(!S.includes(F.type))continue;let L=-1;for(let V of b)if(F.specIdx==V.specIdx){L=V.internalIdx;break}$.push({specIdx:F.specIdx,internalIdx:L})}return $.sort((F,L)=>F.specIdx<L.specIdx?-1:1),Array.from({length:$.length}).map((F,L)=>$[L].internalIdx)}function Cu(m){return Array.from({length:m.size()}).map((b,S)=>m.get(S))}function gN(m){let b=i.CreateVectorString(m.length);for(let S of m)b.push_back(S);return b}function yN(m){return Array.from({length:m.size()}).map((b,S)=>Cu(m.get(S)))}function bN(m){return m.arrayBuffer?m.arrayBuffer():new Promise(b=>{let S=new FileReader;S.readAsArrayBuffer(m),S.onload=function($){b($.target.result)}})}class xN{constructor(b,S){this.internalModel=b,this.createdTFDFSignature=S;let $=this.internalModel.getInputFeatures();this.inputFeatures=Array.from({length:$.size()}).map((F,L)=>$.get(L)),this.numericalFeaturesIndex=null,this.booleanFeaturesIndex=null,this.categoricalIntFeaturesIndex=null,this.categoricalSetIntFeaturesIndex=null,this.createdTFDFSignature&&this.createdTFDFSignature_()}createdTFDFSignature_(){let b=this.internalModel.getProtoInputFeatures(),S=Cu(b);b.delete(),this.numericalFeaturesIndex=Su(S,this.inputFeatures,["NUMERICAL","DISCRETIZED_NUMERICAL"]),this.booleanFeaturesIndex=Su(S,this.inputFeatures,["BOOLEAN"]),this.categoricalIntFeaturesIndex=Su(S,this.inputFeatures,["CATEGORICAL"]),this.categoricalSetIntFeaturesIndex=Su(S,this.inputFeatures,["CATEGORICAL_SET"])}getInputFeatures(){return this.inputFeatures}predict(b){if(typeof b!="object")throw new Error("argument should be an array or an object");let S;for(let L of Object.values(b)){if(!Array.isArray(L))throw new Error("features should be arrays");if(S===void 0)S=L.length;else if(S!==L.length)throw new Error("features have a different number of values")}if(S===void 0)throw new Error("not features");this.internalModel.newBatchOfExamples(S);for(let L of this.inputFeatures){let V=b[L.name];if(L.type===Rd.NUMERICAL)for(let[W,re]of V.entries())re!==null&&this.internalModel.setNumerical(W,L.internalIdx,re);else if(L.type===Rd.CATEGORICAL)for(let[W,re]of V.entries())re!==null&&(typeof re=="string"?this.internalModel.setCategoricalString(W,L.internalIdx,re):this.internalModel.setCategoricalInt(W,L.internalIdx,re));else if(L.type===Rd.CATEGORICAL_SET)for(let[W,re]of V.entries()){if(re===null)continue;let ye=gN(re);this.internalModel.setCategoricalSetString(W,L.internalIdx,ye),ye.delete()}else throw new Error(`Non supported feature type ${L}`)}let $=this.internalModel.predict(),F=Cu($);return $.delete(),F}predictTFDFSignature(b){if(!this.createdTFDFSignature)throw new Error("Model not loaded with options.createdTFDFSignature=true");let S=0;if(b.numericalFeatures.length!=0){if(S!=0&&S!=b.numericalFeatures.length)throw new Error("features have a different number of values");if(this.numericalFeaturesIndex.length!=b.numericalFeatures[0].length)throw new Error("Unexpected numerical input feature shape");S=b.numericalFeatures.length}if(b.booleanFeatures.length!=0){if(S!=0&&S!=b.booleanFeatures.length)throw new Error("features have a different number of values");if(this.booleanFeaturesIndex.length!=b.booleanFeatures[0].length)throw new Error("Unexpected boolean input feature shape");S=b.booleanFeatures.length}if(b.categoricalIntFeatures.length!=0){if(S!=0&&S!=b.categoricalIntFeatures.length)throw new Error("features have a different number of values");if(this.categoricalIntFeaturesIndex.length!=b.categoricalIntFeatures[0].length)throw new Error("Unexpected categorical int input feature shape");S=b.categoricalIntFeatures.length}if(b.categoricalSetIntFeaturesRowSplitsDim2.length>1){if(this.categoricalSetIntFeaturesIndex.length==null||this.categoricalSetIntFeaturesIndex.length<=0)throw new Error("Invalid categoricalSetIntFeaturesIndex");let L=b.categoricalSetIntFeaturesRowSplitsDim2[b.categoricalSetIntFeaturesRowSplitsDim2.length-1]/this.categoricalSetIntFeaturesIndex.length;if(S!=0&&S!=L)throw new Error("Invalid categorical-set feature shape");S=L}this.internalModel.newBatchOfExamples(S);for(let L=0;L<this.numericalFeaturesIndex.length;L++){let V=this.numericalFeaturesIndex[L];if(V!=-1)for(let W=0;W<S;W++){let re=b.numericalFeatures[W][L];isNaN(re)||this.internalModel.setNumerical(W,V,re)}}for(let L=0;L<this.booleanFeaturesIndex.length;L++){let V=this.booleanFeaturesIndex[L];if(V!=-1)for(let W=0;W<S;W++){let re=b.booleanFeatures[W][L];isNaN(re)||this.internalModel.setBoolean(W,V,re)}}for(let L=0;L<this.categoricalIntFeaturesIndex.length;L++){let V=this.categoricalIntFeaturesIndex[L];if(V!=-1)for(let W=0;W<S;W++){let re=b.categoricalIntFeatures[W][L];re<0||this.internalModel.setCategoricalInt(W,V,re)}}for(let L=0;L<this.categoricalSetIntFeaturesIndex.length;L++){let V=this.categoricalSetIntFeaturesIndex[L];if(V!=-1)for(let W=0;W<S;W++){let re=W*this.categoricalSetIntFeaturesIndex.length+L,ye=b.categoricalSetIntFeaturesRowSplitsDim1[re],_e=b.categoricalSetIntFeaturesRowSplitsDim1[re+1],Re=i.CreateVectorInt(_e-ye);if(!(_e>ye&&b.categoricalSetIntFeaturesValues[ye]==-1)){for(let ve=ye;ve<_e;ve++)Re.push_back(b.categoricalSetIntFeaturesValues[ve]);this.internalModel.setCategoricalSetInt(W,V,Re),Re.delete()}}}let $=this.internalModel.predictTFDFSignature(b.denseOutputDim),F=Cu($.denseColRepresentation);return{densePredictions:yN($.densePredictions),denseColRepresentation:F}}unload(){this.internalModel!==null&&(this.internalModel.delete(),this.internalModel=null)}}return i.loadModelFromZipBlob=function(m,b){return s(this,null,function*(){b=b!==void 0?Object.assign({},b):{},b.createdTFDFSignature=b.createdTFDFSignature===void 0?!1:b.createdTFDFSignature,b.file_prefix=b.file_prefix===void 0?"__NO_PREFIX__":b.file_prefix;let S="model_"+Math.floor(Math.random()*4294967295);i.FS.mkdirTree(S);let $=yield r().loadAsync(m),F=[];$.forEach((V,W)=>{F.push(W.async("blob").then(re=>bN(re)).then(re=>{if(V.endsWith("/"))throw new Error("The model zipfile is expected to be a flat zip file, but it contains a sub-directory. If zipping the model manually with the `zip` tool, make sure to use the `-j` option.");i.FS.writeFile(S+"/"+V,new Uint8Array(re),{encoding:"binary"})}))}),yield Promise.all(F);let L=i.InternalLoadModel(S,b.createdTFDFSignature,b.file_prefix);for(let V of i.FS.readdir(S))V==="."||V===".."||i.FS.unlink(S+"/"+V);if(i.FS.rmdir(S),L==null)throw new Error("Cannot parse model");return new xN(L,b.createdTFDFSignature)})},i.loadModelFromUrl=function(m,b=void 0){return s(this,null,function*(){let S=yield fetch(m).then($=>$.blob());return i.loadModelFromZipBlob(S,b)})},l.ready}})();n.exports=o;/*!

	JSZip v3.10.1 - A JavaScript class for generating and reading zip files
	<http://stuartk.com/jszip>

	(c) 2009-2016 Stuart Knightley <stuart [at] stuartk.com>
	Dual licenced under the MIT license or GPLv3. See https://raw.github.com/Stuk/jszip/main/LICENSE.markdown.

	JSZip uses the library pako released under the MIT license :
	https://github.com/nodeca/pako/blob/main/LICENSE
	*/})(Dw);var E3=Dw.exports;/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const A3=E3;let Vd=null,Rw=null;var D3=()=>(Vd==null&&(Vd=A3({locateFile:Rw})),Vd),R3=n=>{Rw=n};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Hu,Fw;function Wd(n){Hu=n}Eg("SimpleMLCreateModelResource",()=>[Ye(0)]);Eg("SimpleMLLoadModelFromPathWithHandle",async n=>{const e=await D3(),t={createdTFDFSignature:!0};return Fw=typeof Hu=="string"?await e.loadModelFromUrl(Hu,t):await e.loadModelFromZipBlob(Hu,t),[Ye(0)]});Eg("SimpleMLInferenceOpWithHandle",async n=>{const e=n.inputs.map(l=>l.arraySync()),t=n.attrs.dense_output_dim,s={numericalFeatures:e[0],booleanFeatures:e[1],categoricalIntFeatures:e[2],categoricalSetIntFeaturesValues:e[3],categoricalSetIntFeaturesRowSplitsDim1:e[4],categoricalSetIntFeaturesRowSplitsDim2:e[5],denseOutputDim:t},r=Fw.predictTFDFSignature(s),o=Na(r.densePredictions),a=En(r.denseColRepresentation,"string");return[o,a]});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class F3{constructor(e,t){this.graphModel=e,this.assets=t}get inputs(){return this.graphModel.inputs}get outputs(){return this.graphModel.outputs}predict(e,t){return Wd(this.assets),this.graphModel.predict(e,t)}execute(e,t){return Wd(this.assets),this.graphModel.execute(e,t)}executeAsync(e,t){return Wd(this.assets),this.graphModel.executeAsync(e,t)}dispose(){this.graphModel.dispose()}}async function O3(n,e={},t=rg){if(n==null)throw new Error("modelUrl in loadTFDFModel() cannot be null. Please provide a url or an TFDFLoadHandler that loads the model");let s,r;typeof n=="string"?(s=n,r=new URL("assets.zip",n).href):(s={load:n.loadModel},r=await n.loadAssets());const o=await T3(s,e,t);return new F3(o,r)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ow={kernelName:Sc,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>J(n,Ka(Pe(t,"float32"),-1))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const L3={kernelName:Wi,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>{const s=_t(Pe(t,"float32")),r=Cn(Ve(Ye(1),s));return Pt(Ke(n,r))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const P3={kernelName:Ui,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>{const s=Cn(Ve(_t(Pe(t,"float32")),1));return Ke(n,s)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const z3={kernelName:Ha,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e,r=st(t.shape,s.shape);return{a:()=>{let l=n;const i=hn(t.shape,r);return i.length>0&&(l=Ue(l,i)),te(l,t.shape)},b:()=>{let l=n;const i=hn(s.shape,r);return i.length>0&&(l=Ue(l,i)),te(l,s.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const B3={kernelName:Cc,saveAllInputs:!0,gradFunc:(n,e)=>{const t={};return e.forEach((s,r)=>{t[r]=()=>n.clone()}),t}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const M3={kernelName:Ic,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>yt(t)}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const V3={kernelName:Nc,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>yt(t)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const W3={kernelName:Gi,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>Ke(n,Cn(Ve(Ye(1),_t(Pe(t,"float32")))))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const U3={kernelName:Hi,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>{const s=Cn(Ne(Ye(1),_t(Pe(t,"float32"))));return Ke(n,s)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const G3={kernelName:Ki,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e,r=st(t.shape,s.shape);return{a:()=>{const l=Ne(_t(t),_t(s));let i=J(n,Ke(s,l));const u=hn(t.shape,r);return u.length>0&&(i=Ue(i,u)),te(i,t.shape)},b:()=>{const l=Ne(_t(t),_t(s));let i=Pt(J(n,Ke(t,l)));const u=hn(s.shape,r);return u.length>0&&(i=Ue(i,u)),te(i,s.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const H3={kernelName:ji,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>Ke(n,Ne(_t(Pe(t,"float32")),1))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const j3={kernelName:qi,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>Ke(n,Ve(Ye(1),_t(Pe(t,"float32"))))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function q3(n,e,t,s,r,o){const a=z(n,"dy","avgPool3dGrad"),l=z(e,"input","avgPool3dGrad");let i=a,u=l,c=!1;l.rank===4&&(c=!0,i=te(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]]),u=te(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]])),P(i.rank===5,()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${i.rank}.`),P(u.rank===5,()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${u.rank}.`),Vn("avgPool3dGrad",r,o);const h={dy:i,input:u},d={filterSize:t,strides:s,pad:r,dimRoundingMode:o},p=Q.runKernel(af,h,d);return c?te(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}const K3=Y({avgPool3dGrad_:q3});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const X3={kernelName:Tc,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[s]=e,{filterSize:r,strides:o,pad:a,dimRoundingMode:l}=t;return{x:()=>K3(n,s,r,o,a,l)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Y3(n,e,t,s,r){const o=z(n,"dy","avgPoolGrad"),a=z(e,"input","avgPoolGrad");P(a.rank===o.rank,()=>`Rank of input (${a.rank}) does not match rank of dy (${o.rank})`);let l=a,i=o,u=!1;a.rank===3&&(u=!0,l=te(a,[1,a.shape[0],a.shape[1],a.shape[2]]),i=te(o,[1,o.shape[0],o.shape[1],o.shape[2]])),P(i.rank===4,()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${i.rank}.`),P(l.rank===4,()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${l.rank}.`);const c={dy:i,input:l},h={filterSize:t,strides:s,pad:r},d=Q.runKernel(of,c,h);return u?te(d,[d.shape[1],d.shape[2],d.shape[3]]):d}const Z3=Y({avgPoolGrad_:Y3});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const J3={kernelName:$c,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[s]=e,{filterSize:r,strides:o,pad:a}=t;return{x:()=>Z3(n,s,r,o,a)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Q3={kernelName:_c,inputsToSave:["a","b"],gradFunc:(n,e,t)=>{const[s,r]=e,{transposeA:o,transposeB:a}=t;return!o&&!a?{a:()=>dt(n,r,!1,!0),b:()=>dt(s,n,!0,!1)}:!o&&a?{a:()=>dt(n,r,!1,!1),b:()=>dt(n,s,!0,!1)}:o&&!a?{a:()=>dt(r,n,!1,!0),b:()=>dt(s,n,!1,!1)}:{a:()=>dt(r,n,!0,!0),b:()=>dt(n,s,!0,!0)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eL={kernelName:Ec,gradFunc:(n,e,t)=>{const{blockShape:s,crops:r}=t;return{x:()=>Ph(n,s,r)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tL={kernelName:WN,gradFunc:(n,e,t)=>{const s=t,r=s.inputShape,o=s.shape,a=Array.from(o);for(let i=r.length-1;i>=0;i--)if(r[i]===o[i])a[i]=1;else if(r[i]!==1)throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${o}].`);const l=[];for(let i=0;i<a.length;i++)a[i]>1&&l.push(i);return{x:()=>Ue(n,l,!0)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nL={kernelName:Xi,gradFunc:n=>({x:()=>n.clone()})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sL={kernelName:Yi,gradFunc:n=>({x:()=>yt(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rL={kernelName:Zi,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[s]=e,{clipValueMin:r,clipValueMax:o}=t;return{x:()=>An(fr(uo(s,r),Zo(s,o)),n,yt(n))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oL={kernelName:Dc,inputsToSave:["x"],gradFunc:Ow.gradFunc};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const aL={kernelName:Rc,saveAllInputs:!0,gradFunc:(n,e,t)=>{const s=e.map(i=>i.shape),{axis:r}=t,o=ct(r,e[0].shape)[0],a=s.map(i=>i[o]);return ss(n,a,o).map(i=>()=>i)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iL={kernelName:Fc,inputsToSave:["x","filter"],gradFunc:(n,e,t)=>{const[s,r]=e,{dilations:o,strides:a,pad:l,dataFormat:i}=t;return P(Yr(o),()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${o}'`),{x:()=>gm(s.shape,n,r,a,l,i),filter:()=>Ym(s,n,r.shape,a,l,i)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lL={kernelName:Oc,inputsToSave:["dy","filter"],gradFunc:(n,e,t)=>{const[s,r]=e,{strides:o,pad:a,dataFormat:l,dimRoundingMode:i}=t;return{dy:()=>Zr(n,r,o,a,l,1,i),filter:()=>Ym(n,s,r.shape,o,a,l,i)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uL(n,e,t,s,r){let o=n;n.rank===4&&(o=te(n,[1,n.shape[0],n.shape[1],n.shape[2],n.shape[3]]));let a=e;a.rank===4&&(a=te(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]])),P(o.rank===5,()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${o.shape}.`),P(a.rank===5,()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${a.shape}.`),P(t.length===5,()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${t}.`),P(o.shape[4]===t[3],()=>`Error in conv3dDerFilter: depth of input ${o.shape[4]}) must match input depth in filter (${t[3]}.`),P(a.shape[4]===t[4],()=>`Error in conv3dDerFilter: depth of dy (${a.shape[4]}) must match output depth for filter (${t[4]}).`);const l={x:o,dy:a},i={strides:s,pad:r,filterShape:t};return Q.runKernel(df,l,i)}const cL=Y({conv3DBackpropFilter_:uL});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hL={kernelName:Lc,inputsToSave:["x","filter"],gradFunc:(n,e,t)=>{const{dilations:s,strides:r,pad:o}=t;P(Yr(s),()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`);const[a,l]=e;return{x:()=>Zx(a.shape,n,l,r,o),filter:()=>cL(a,n,l.shape,r,o)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dL={kernelName:Ji,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>J(Pt(Mm(Pe(t,"float32"))),n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pL={kernelName:Qi,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>J(Vm(Pe(t,"float32")),n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fL={kernelName:Pc,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[s]=e,{axis:r,exclusive:o,reverse:a}=t;return{x:()=>{const l=jt([r],s.rank);let i=xm(n,r,o,!a);return l!=null&&(i=gt(i,l)),i}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mL={kernelName:zc,inputsToSave:["x","filter"],gradFunc:(n,e,t)=>{const{dilations:s,strides:r,pad:o,dimRoundingMode:a}=t,l=s??[1,1];P(Yr(l),()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${l}'`);const[i,u]=e;return P(i.rank===4,()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${i.rank}.`),P(u.rank===4,()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${u.rank}.`),P(i.shape[3]===u.shape[2],()=>`Error in gradient of depthwiseConv2d: number of input channels (${i.shape[3]}) must match the inChannels dimension in filter ${u.shape[2]}.`),P(In(r,l),()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${r} and dilations '${l}'.`),Vn("depthwiseConv2d",o,a),{x:()=>D1(i.shape,n,u,r,o,l,a),filter:()=>A1(i,n,u.shape,r,o,l,a)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gL={kernelName:Bc,inputsToSave:["x","filter"],gradFunc:(n,e,t)=>{const[s,r]=e,o={x:s,filter:r,dy:n},a={x:s,filter:r,dy:n};return{x:()=>Q.runKernel(ap,o,t),filter:()=>Q.runKernel(ip,a,t)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yL={kernelName:tl,outputsToSave:[!0],gradFunc:(n,e)=>{const[t]=e,s={dy:n,y:t};return{x:()=>Q.runKernel(kf,s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bL={kernelName:nl,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e,s=J(as(Pt(_t(t))),2/Math.sqrt(Math.PI));return{x:()=>J(n,s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xL={kernelName:sl,outputsToSave:[!0],gradFunc:(n,e)=>{const[t]=e;return{x:()=>J(n,t)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wL={kernelName:Vc,inputsToSave:["input"],gradFunc:(n,e)=>{const[t]=e;return{input:()=>te(n,t.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vL={kernelName:rl,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>J(n,as(t))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kL={kernelName:ol,gradFunc:n=>({x:()=>yt(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const SL={kernelName:al,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e,r=st(t.shape,s.shape);return{a:()=>{const l=Ke(n,Pe(s,"float32")),i=hn(t.shape,r);return i.length>0?te(Ue(l,i),t.shape):l},b:()=>{let l=J(n,Pe(t,"float32"));const i=hn(s.shape,r);i.length>0&&(l=te(Ue(l,i),s.shape));const u=_t(s);return Pt(Ke(l,Pe(u,"float32")))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const CL={kernelName:Wc,inputsToSave:["x","mean","variance","scale"],gradFunc:(n,e,t)=>{const{varianceEpsilon:s}=t,[r,o,a,l]=e,i=l??Ye(1),u=hn(o.shape,r.shape),c=[];if(o.rank===1){for(let k=0;k<r.shape.length-1;++k)c.push(r.shape[k]);c.push(1)}const h=Ve(r,o),d=J(n,i),p=Pm(Ne(a,Ye(s))),f=J(J(J(p,p),p),Ye(-.5));return{x:()=>o.rank===1?te(J(J(n,Es(te(p,[1,1,1,o.shape[0]]),c)),i),r.shape):te(J(J(n,p),i),r.shape),mean:()=>{let k=J(J(p,Ye(-1)),d);return o.rank===1&&(k=Ue(k,u)),te(k,o.shape)},variance:()=>{let k=J(J(f,h),d);return o.rank===1&&(k=Ue(k,u)),te(k,o.shape)},scale:()=>{const k=J(h,p);let C=J(n,k);return o.rank===1&&(C=Ue(C,u)),te(C,o.shape)},offset:()=>{let k=n;return o.rank===1&&(k=Ue(k,u)),te(k,o.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const IL={kernelName:Uc,inputsToSave:["x","indices"],gradFunc:(n,e,t)=>{const[s,r]=e,{axis:o,batchDims:a}=t,l=ct(o,s.shape)[0],i=(u,c,h)=>()=>{const d=u.shape,p=c.size,f=d.slice(0,l),g=f.length,y=d.slice(o,d.length).slice(1),x=y.length,w=Rb(0,g),v=Rb(g+1,g+1+x),k=Fb([f,[p],y]),C=te(h,k),I=te(c,[p]),N=Fb([[g],w,v]),E=gt(C,N);let R=qm(E,I,u.shape[l]);const O=lo(N);return R=gt(R,O),R};if(a===1){const u=s.shape[0],c=s.split(u,0);return{x:()=>is(c.map((p,f)=>i(p,r.slice(f,1),n.slice(f,1))())).reshape(s.shape),indices:()=>r}}else return{x:i(s,r,n),indices:()=>r}}};function Rb(n,e){const t=[];for(let s=n;s<e;++s)t.push(s);return t}function Fb(n){const e=[];for(let t=0;t<n.length;++t)for(let s=0;s<n[t].length;++s)e.push(n[t][s]);return e}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const NL={kernelName:il,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e;return{a:()=>yt(t),b:()=>yt(s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $L={kernelName:ll,gradFunc:n=>({x:()=>Pe(n,"float32")})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const TL={kernelName:ul,gradFunc:n=>({x:()=>yt(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _L={kernelName:cl,gradFunc:n=>({x:()=>yt(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const EL={kernelName:hl,gradFunc:n=>({x:()=>yt(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const AL={kernelName:Hc,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[s]=e,{alpha:r}=t,o=ds(s,0);return{x:()=>An(o,n,J(n,r))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const DL={kernelName:pl,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>Ke(n,Ne(t,1))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const RL={kernelName:dl,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>Ke(n,Pe(t,"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const FL={kernelName:GN,inputsToSave:[],outputsToSave:[!0],gradFunc:(n,e,t)=>{const[s]=e,{axis:r}=t;return{logits:()=>{const a=as(s);return Ve(n,J(Ue(n,r,!0),a))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OL(n,e,t,s=5,r=1,o=1,a=.5){const l={x:n,y:e,dy:t},i={depthRadius:s,bias:r,alpha:o,beta:a};return Q.runKernel(Ef,l,i)}const LL=Y({localResponseNormalizationBackprop_:OL});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const PL={kernelName:Zc,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,e,t)=>{const[s,r]=e,{depthRadius:o,bias:a,alpha:l,beta:i}=t;return{x:()=>LL(s,r,n,o,a,l,i)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Lw(n,e,t,s){return e.rank<t.rank&&(e=te(e,Jt(e.shape,s))),n.rank<t.rank&&(n=te(n,Jt(n.shape,s))),{x:()=>J(n,Pe(qs(t,e),n.dtype))}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ob={kernelName:Jc,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,e,t)=>{const s=t,{reductionIndices:r}=s,o=e[0],a=e[1],l=ct(r,o.shape),i=Lw(n,a,o,l);return{x:()=>i.x()}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zL={kernelName:fl,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e;return{a:()=>J(n,Pe(uo(t,s),"float32")),b:()=>J(n,Pe(_i(t,s),"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BL(n,e,t,s,r,o,a){const l=z(n,"dy","maxPool3dGrad"),i=z(e,"input","maxPool3dGrad"),u=z(t,"output","maxPool3dGrad");let c=l,h=i,d=u,p=!1;i.rank===4&&(p=!0,c=te(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]]),h=te(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]]),d=te(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]])),P(c.rank===5,()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${c.rank}.`),P(h.rank===5,()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${h.rank}.`),P(d.rank===5,()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${d.rank}.`),Vn("maxPool3dGrad",o,a);const f={dy:c,input:h,output:d},g={filterSize:s,strides:r,pad:o,dimRoundingMode:a},y=Q.runKernel(Df,f,g);return p?te(y,[y.shape[1],y.shape[2],y.shape[3],y.shape[4]]):y}const ML=Y({maxPool3dGrad_:BL});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const VL={kernelName:eh,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,e,t)=>{const[s,r]=e,{filterSize:o,strides:a,pad:l,dimRoundingMode:i}=t;return{x:()=>ML(n,s,r,o,a,l,i)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WL(n,e,t,s,r,o,a){const l=z(n,"dy","maxPoolGrad"),i=z(e,"input","maxPoolGrad"),u=z(t,"output","maxPoolGrad");P(i.rank===l.rank,()=>`Rank of input (${i.rank}) does not match rank of dy (${l.rank})`),P(l.rank===4,()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${l.rank}.`),P(i.rank===4,()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${i.rank}.`),Vn("maxPoolGrad",o,a);const c={dy:l,input:i,output:u},h={filterSize:s,strides:r,pad:o,dimRoundingMode:a};return Q.runKernel(Af,c,h)}const UL=Y({maxPoolGrad_:WL});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const GL={kernelName:Qc,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,e,t)=>{const[s,r]=e,{filterSize:o,strides:a,pad:l}=t;return{x:()=>UL(n,s,r,o,a,l)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const HL={kernelName:th,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[s]=e,{axis:r}=t,o=ct(r,s.shape),l=bn(s.shape,o)[1],i=me(l);return{x:()=>{const c=s.shape.slice();o.forEach(p=>{c[p]=1});const h=te(n,c);return Ke(J(h,ns(s.shape,"float32")),i)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jL={kernelName:nh,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,e,t)=>{const s=t,{axis:r}=s,[o,a]=e,l=ct(r,o.shape),i=Lw(n,a,o,l);return{x:()=>i.x()}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qL={kernelName:ml,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e;return{a:()=>J(n,Pe(Zo(t,s),"float32")),b:()=>J(n,Pe(ds(t,s),"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const KL={kernelName:sh,inputsToSave:["x"],gradFunc:(n,e,t)=>{const s=e[0],{paddings:r}=t,o=r.map(a=>a[0]);return{x:()=>mt(n,o,s.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const XL={kernelName:gl,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e,r=st(t.shape,s.shape);return{a:()=>{const l=hn(t.shape,r);return l.length>0?te(Ue(n,l),t.shape):n},b:()=>{const l=J(n,Pt(Ul(Ke(t,s)))),i=hn(s.shape,r);return i.length>0?te(Ue(l,i),s.shape):l}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const YL={kernelName:yl,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e,r=st(t.shape,s.shape);return{a:()=>{const l=J(n,Pe(s,"float32")),i=hn(t.shape,r);return i.length>0?te(Ue(l,i),t.shape):l},b:()=>{const l=J(n,Pe(t,"float32")),i=hn(s.shape,r);return i.length>0?te(Ue(l,i),s.shape):l}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ZL={kernelName:rh,gradFunc:n=>({x:()=>Pt(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const JL={kernelName:ih,inputsToSave:["indices"],gradFunc:(n,e)=>{const t=e[0];return{indices:()=>rn(t.shape,"float32")}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const QL={kernelName:ah,gradFunc:n=>({x:()=>yt(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eP={kernelName:lh,saveAllInputs:!0,gradFunc:(n,e,t)=>{const{axis:s}=t;return Ps(n,s).map(o=>()=>o)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Lb={kernelName:uh,inputsToSave:["x"],gradFunc:(n,e,t)=>{const s=e[0],{paddings:r}=t,o=r.map(a=>a[0]);return{x:()=>mt(n,o,s.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tP={kernelName:bl,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(n,e)=>{const[t,s,r]=e,o=t,a=s,l=st(o.shape,a.shape);return{a:()=>{const c=Pe(a,"float32");let h=J(n,J(c,$r(o,Ve(c,Ye(1)))));const d=hn(o.shape,l);return d.length>0&&(h=Ue(h,d)),te(h,o.shape)},b:()=>{const c=ds(o,0),h=An(c,ys(o),yt(o));let d=J(n,J(r,h));const p=hn(a.shape,l);return p.length>0&&(d=Ue(d,p)),te(d,a.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nP={kernelName:ch,inputsToSave:["x","alpha"],gradFunc:(n,e)=>{const[t,s]=e,r=ds(t,0);return{x:()=>An(r,n,J(n,s)),alpha:()=>{let o=An(r,yt(n),J(n,t));const a=hn(s.shape,n.shape);return a.length>0&&(o=Ue(o,a)),te(o,s.shape)}}}};/**
 * @license
 * Copyright 2022 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sP(n,e,t){const s=n.shape.slice();s[t]=1;const r=te(e,s),o=nc(n,t,!0,!1),a=nc(n,t,!0,!0),l=J(o,a);return J(r,l)}function rP(n,e,t){const s=n.shape.length,r=s-t.length,o=jt(t,s);let a=n;o!=null&&(a=gt(n,o));const l=a.shape.slice(),u=l.splice(s-t.length,t.length).reduce((d,p)=>d*p,1);l.push(u);const c=a.reshape(l);let h=sP(c,e,r);if(h=h.reshape(a.shape),o!=null){const d=lo(o);h=gt(h,d)}return h}const oP={kernelName:hh,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[s]=e,{axis:r}=t;let o=[];return r==null?o=s.shape.map((a,l)=>l):typeof r=="number"?o=[r]:o=r,{x:()=>rP(s,n,o)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const aP={kernelName:el,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e,r=st(t.shape,s.shape);return{a:()=>{const l=Ke(n,Pe(s,"float32")),i=hn(t.shape,r);return i.length>0?te(Ue(l,i),t.shape):l},b:()=>{let l=J(n,Pe(t,"float32"));const i=hn(s.shape,r);i.length>0&&(l=te(Ue(l,i),s.shape));const u=_t(s);return Pt(Ke(l,Pe(u,"float32")))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iP={kernelName:xl,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>Ke(n,Pt(_t(t)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lP={kernelName:vl,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e,s=J(Zo(t,6),Ka(t));return{x:()=>J(n,Pe(s,"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uP={kernelName:wl,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>J(n,Pe(Ka(t),"float32"))}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cP={kernelName:dh,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>te(n,t.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hP={kernelName:fh,inputsToSave:["images"],gradFunc:(n,e,t)=>{const[s]=e,r={dy:n,images:s};return{images:()=>Q.runKernel(Gf,r,t)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dP={kernelName:ph,inputsToSave:["images"],gradFunc:(n,e,t)=>{const[s]=e,r={dy:n,images:s};return{images:()=>Q.runKernel(Uf,r,t)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pP={kernelName:mh,gradFunc:(n,e,t)=>{const{dims:s}=t,r=ct(s,n.shape);return{x:()=>Ls(n,r)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fP={kernelName:kl,gradFunc:n=>({x:()=>yt(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mP={kernelName:Sl,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>Pt(Ke(n,J($r(t,1.5),2)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gP={kernelName:gh,inputsToSave:["condition"],gradFunc:(n,e)=>{const[t]=e;return{condition:()=>Pe(yt(t),"float32"),t:()=>J(n,Pe(t,n.dtype)),e:()=>J(n,Pe(Fh(t),n.dtype))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yP={kernelName:Cl,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>{const s=ds(t,Ye(0)),r=Ye(Zh),o=Ye(Jh),a=J(n,o),l=J(J(n,r),as(Pe(t,"float32")));return An(s,a,l)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bP={kernelName:Tl,outputsToSave:[!0],gradFunc:(n,e)=>{const[t]=e;return{x:()=>J(n,J(t,Ve(Ye(1),t)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xP={kernelName:$l,gradFunc:n=>({x:()=>yt(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wP={kernelName:Il,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>J(_h(Pe(t,"float32")),n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vP={kernelName:Nl,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>J(bm(Pe(t,"float32")),n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kP={kernelName:yh,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[s]=e,{begin:r,size:o}=t,a=s.shape,[l,i]=Xh(s,r,o),u=[];for(let c=0;c<n.rank;c++)u.push([l[c],a[c]-l[c]-i[c]]);return{x:()=>co(n,u)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const SP={kernelName:vh,outputsToSave:[!0],gradFunc:(n,e,t)=>{const[s]=e,{dim:r}=t,o=!0,a=J(n,s);return{logits:()=>Ve(a,J(Ue(a,[r],o),s))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const CP={kernelName:_l,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>J(n,cr(t))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Pb={kernelName:xh,gradFunc:(n,e,t)=>{const{blockShape:s,paddings:r}=t;return{x:()=>Th(n,s,r)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zb={kernelName:wh,gradFunc:(n,e,t)=>{const{axis:s}=t;return{x:()=>nn(n,s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const IP={kernelName:El,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>Ke(n,J(Cn(Pe(t,"float32")),2))}}};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const NP={kernelName:Qf,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>J(n,J(Pe(t,"float32"),2))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $P={kernelName:Al,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e,r=Ye(2);return{a:()=>J(n,J(r,Ve(t,s))),b:()=>J(n,J(r,Ve(s,t)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const TP={kernelName:Ll,gradFunc:n=>({x:()=>yt(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _P={kernelName:Dl,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e,r=st(t.shape,s.shape);return{a:()=>{let l=n;const i=hn(t.shape,r);return i.length>0&&(l=Ue(l,i)),te(l,t.shape)},b:()=>{let l=n;const i=hn(s.shape,r);return i.length>0&&(l=Ue(l,i)),te(Pt(l),s.shape)}}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const EP={kernelName:bh,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[s]=e,r=s.shape.slice(),{axis:o}=t;ct(o,s.shape).forEach(u=>{r[u]=1});const l=te(n,r),i=J(l,ns(s.shape,"float32"));return{x:()=>i}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const AP={kernelName:Rl,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>Ke(n,_t(_h(t)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const DP={kernelName:Fl,outputsToSave:[!0],gradFunc:(n,e)=>{const[t]=e;return{x:()=>J(Ve(Ye(1),_t(t)),n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const RP={kernelName:Ol,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[s]=e,{reps:r}=t;return{x:()=>{let a=yt(s);if(s.rank===1)for(let l=0;l<r[0];++l)a=Ne(a,mt(n,[l*s.shape[0]],[s.shape[0]]));else if(s.rank===2)for(let l=0;l<r[0];++l)for(let i=0;i<r[1];++i)a=Ne(a,mt(n,[l*s.shape[0],i*s.shape[1]],[s.shape[0],s.shape[1]]));else if(s.rank===3)for(let l=0;l<r[0];++l)for(let i=0;i<r[1];++i)for(let u=0;u<r[2];++u)a=Ne(a,mt(n,[l*s.shape[0],i*s.shape[1],u*s.shape[2]],[s.shape[0],s.shape[1],s.shape[2]]));else if(s.rank===4)for(let l=0;l<r[0];++l)for(let i=0;i<r[1];++i)for(let u=0;u<r[2];++u)for(let c=0;c<r[3];++c)a=Ne(a,mt(n,[l*s.shape[0],i*s.shape[1],u*s.shape[2],c*s.shape[3]],[s.shape[0],s.shape[1],s.shape[2],s.shape[3]]));else throw new Error(`Gradient for tile operation is not implemented for rank-${s.rank} tensors yet.`);return a}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const FP={kernelName:ka,gradFunc:(n,e,t)=>{const s=t,{perm:r}=s,o=lo(r);return{x:()=>gt(n,o)}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const OP={kernelName:Sh,gradFunc:(n,e,t)=>{const s=t,{axis:r}=s;return{value:()=>is(n,r)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LP={kernelName:Ch,inputsToSave:["segmentIds"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>PP(n,t)}}};function PP(n,e){const t=Rr(e,yt(e)),s=Gl(n,t);let r=uo(e,Ye(0,"int32"));const o=s.rank-r.rank;for(let l=0;l<o;++l)r=zn(r,l+1);r=fr(r,ns(s.shape,"bool"));const a=yt(s);return An(r,s,a)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zP={kernelName:Ih,gradFunc:n=>({x:()=>yt(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const BP=[Ow,L3,P3,z3,B3,M3,V3,W3,U3,G3,H3,j3,X3,J3,Q3,eL,tL,nL,sL,rL,oL,aL,lL,iL,hL,dL,pL,fL,mL,gL,aP,yL,bL,xL,wL,vL,SL,kL,CL,IL,NL,$L,TL,_L,EL,AL,DL,RL,FL,PL,Ob,Ob,zL,VL,GL,HL,jL,qL,KL,XL,YL,ZL,JL,QL,eP,Lb,Lb,tP,nP,oP,iP,lP,uP,cP,hP,dP,pP,fP,mP,gP,yP,bP,xP,wP,vP,kP,SP,CP,Pb,Pb,zb,zb,IP,$P,NP,TP,_P,EP,AP,DP,RP,FP,OP,LP,zP];for(const n of BP)qN(n);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ge().prototype.abs=function(){return this.throwIfDisposed(),sn(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ge().prototype.acos=function(){return this.throwIfDisposed(),Dx(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ge().prototype.acosh=function(){return this.throwIfDisposed(),Rx(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ge().prototype.add=function(n){return this.throwIfDisposed(),Ne(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ge().prototype.all=function(n,e){return this.throwIfDisposed(),pm(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ge().prototype.any=function(n,e){return this.throwIfDisposed(),tc(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ge().prototype.argMax=function(n){return this.throwIfDisposed(),Da(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ge().prototype.argMin=function(n){return this.throwIfDisposed(),Fx(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ge().prototype.asScalar=function(){return this.throwIfDisposed(),P(this.size===1,()=>"The array must have only 1 element."),te(this,[])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ge().prototype.asType=function(n){return this.throwIfDisposed(),Pe(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ge().prototype.as1D=function(){return this.throwIfDisposed(),te(this,[this.size])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ge().prototype.as2D=function(n,e){return this.throwIfDisposed(),te(this,[n,e])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ge().prototype.as3D=function(n,e,t){return this.throwIfDisposed(),te(this,[n,e,t])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ge().prototype.as4D=function(n,e,t,s){return this.throwIfDisposed(),te(this,[n,e,t,s])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ge().prototype.as5D=function(n,e,t,s,r){return this.throwIfDisposed(),te(this,[n,e,t,s,r])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ge().prototype.asin=function(){return this.throwIfDisposed(),Ox(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ge().prototype.asinh=function(){return this.throwIfDisposed(),Lx(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ge().prototype.atan=function(){return this.throwIfDisposed(),Px(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ge().prototype.atan2=function(n){return this.throwIfDisposed(),zx(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ge().prototype.atanh=function(){return this.throwIfDisposed(),Bx(this)};ge().prototype.avgPool=function(n,e,t,s){return this.throwIfDisposed(),$h(this,n,e,t,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ge().prototype.batchToSpaceND=function(n,e){return this.throwIfDisposed(),Th(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ge().prototype.batchNorm=function(n,e,t,s,r){return this.throwIfDisposed(),Bl(this,n,e,t,s,r)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ge().prototype.broadcastTo=function(n){return this.throwIfDisposed(),Ia(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ge().prototype.cast=function(n){return this.throwIfDisposed(),Pe(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ge().prototype.ceil=function(){return this.throwIfDisposed(),Hx(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ge().prototype.clipByValue=function(n,e){return this.throwIfDisposed(),os(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ge().prototype.concat=function(n,e){return this.throwIfDisposed(),n instanceof Gt&&(n=[n]),nn([this,...n],e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ge().prototype.conv1d=function(n,e,t,s,r,o){return this.throwIfDisposed(),mm(this,n,e,t,s,r,o)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ge().prototype.conv2dTranspose=function(n,e,t,s,r){return this.throwIfDisposed(),ym(this,n,e,t,s,r)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ge().prototype.conv2d=function(n,e,t,s,r,o){return this.throwIfDisposed(),Zr(this,n,e,t,s,r,o)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ge().prototype.cos=function(){return this.throwIfDisposed(),_h(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ge().prototype.cosh=function(){return this.throwIfDisposed(),bm(this)};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the 'License');
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an 'AS IS' BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ge().prototype.cumprod=function(n,e,t){return this.throwIfDisposed(),nc(this,n,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ge().prototype.cumsum=function(n,e,t){return this.throwIfDisposed(),xm(this,n,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ge().prototype.depthToSpace=function(n,e){return this.throwIfDisposed(),Qx(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ge().prototype.depthwiseConv2d=function(n,e,t,s,r,o){return this.throwIfDisposed(),Ml(this,n,e,t,s,r,o)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ge().prototype.dilation2d=function(n,e,t,s,r){return this.throwIfDisposed(),e1(this,n,e,t,s,r)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ge().prototype.divNoNan=function(n){return this.throwIfDisposed(),t1(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ge().prototype.div=function(n){return this.throwIfDisposed(),Ke(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ge().prototype.dot=function(n){return this.throwIfDisposed(),n1(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ge().prototype.elu=function(){return this.throwIfDisposed(),Vl(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ge().prototype.equal=function(n){return this.throwIfDisposed(),qs(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ge().prototype.erf=function(){return this.throwIfDisposed(),wm(this)};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ge().prototype.euclideanNorm=function(n,e){return this.throwIfDisposed(),o1(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ge().prototype.exp=function(){return this.throwIfDisposed(),as(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ge().prototype.expandDims=function(n){return this.throwIfDisposed(),zn(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ge().prototype.expm1=function(){return this.throwIfDisposed(),a1(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ge().prototype.fft=function(){return this.throwIfDisposed(),Uh(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ge().prototype.flatten=function(){return this.throwIfDisposed(),te(this,[this.size])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ge().prototype.floor=function(){return this.throwIfDisposed(),Ul(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ge().prototype.floorDiv=function(n){return this.throwIfDisposed(),dm(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ge().prototype.gather=function(n,e,t){return this.throwIfDisposed(),Gl(this,n,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ge().prototype.greaterEqual=function(n){return this.throwIfDisposed(),uo(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ge().prototype.greater=function(n){return this.throwIfDisposed(),ds(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ge().prototype.ifft=function(){return this.throwIfDisposed(),Di(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ge().prototype.irfft=function(){return this.throwIfDisposed(),Um(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ge().prototype.isFinite=function(){return this.throwIfDisposed(),i1(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ge().prototype.isInf=function(){return this.throwIfDisposed(),l1(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ge().prototype.isNaN=function(){return this.throwIfDisposed(),u1(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ge().prototype.leakyRelu=function(n){return this.throwIfDisposed(),Ah(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ge().prototype.lessEqual=function(n){return this.throwIfDisposed(),Zo(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ge().prototype.less=function(n){return this.throwIfDisposed(),_i(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ge().prototype.localResponseNormalization=function(n,e,t,s){return this.throwIfDisposed(),c1(this,n,e,t,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ge().prototype.logSigmoid=function(){return this.throwIfDisposed(),h1(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ge().prototype.logSoftmax=function(n){return this.throwIfDisposed(),Sm(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ge().prototype.logSumExp=function(n,e){return this.throwIfDisposed(),Rh(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ge().prototype.log=function(){return this.throwIfDisposed(),ys(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ge().prototype.log1p=function(){return this.throwIfDisposed(),Dh(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ge().prototype.logicalAnd=function(n){return this.throwIfDisposed(),fr(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ge().prototype.logicalNot=function(){return this.throwIfDisposed(),Fh(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ge().prototype.logicalOr=function(n){return this.throwIfDisposed(),Cm(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ge().prototype.logicalXor=function(n){return this.throwIfDisposed(),d1(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ge().prototype.matMul=function(n,e,t){return this.throwIfDisposed(),dt(this,n,e,t)};ge().prototype.maxPool=function(n,e,t,s){return this.throwIfDisposed(),Oh(this,n,e,t,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ge().prototype.max=function(n,e){return this.throwIfDisposed(),Fs(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ge().prototype.maximum=function(n){return this.throwIfDisposed(),Rr(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ge().prototype.mean=function(n,e){return this.throwIfDisposed(),Kt(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ge().prototype.min=function(n,e){return this.throwIfDisposed(),Ti(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ge().prototype.minimum=function(n){return this.throwIfDisposed(),Vo(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ge().prototype.mirrorPad=function(n,e){return this.throwIfDisposed(),f1(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ge().prototype.mod=function(n){return this.throwIfDisposed(),m1(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ge().prototype.mul=function(n){return this.throwIfDisposed(),J(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ge().prototype.neg=function(){return this.throwIfDisposed(),Pt(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ge().prototype.norm=function(n,e,t){return this.throwIfDisposed(),Wl(this,n,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ge().prototype.notEqual=function(n){return this.throwIfDisposed(),Fa(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ge().prototype.oneHot=function(n,e=1,t=0){return this.throwIfDisposed(),Nm(this,n,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ge().prototype.onesLike=function(){return this.throwIfDisposed(),bs(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ge().prototype.pad=function(n,e){return this.throwIfDisposed(),co(this,n,e)};ge().prototype.pool=function(n,e,t,s,r,o){return this.throwIfDisposed(),g1(this,n,e,t,s,r,o)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ge().prototype.pow=function(n){return this.throwIfDisposed(),$r(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ge().prototype.prelu=function(n){return this.throwIfDisposed(),zh(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ge().prototype.prod=function(n,e){return this.throwIfDisposed(),y1(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ge().prototype.reciprocal=function(){return this.throwIfDisposed(),x1(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ge().prototype.relu=function(){return this.throwIfDisposed(),yr(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ge().prototype.relu6=function(){return this.throwIfDisposed(),Om(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ge().prototype.reshapeAs=function(n){return this.throwIfDisposed(),te(this,n.shape)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ge().prototype.reshape=function(n){return this.throwIfDisposed(),te(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ge().prototype.resizeBilinear=function(n,e,t){return this.throwIfDisposed(),O1(this,n,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ge().prototype.resizeNearestNeighbor=function(n,e,t){return this.throwIfDisposed(),L1(this,n,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ge().prototype.reverse=function(n){return this.throwIfDisposed(),Ls(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ge().prototype.rfft=function(){return this.throwIfDisposed(),Gh(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ge().prototype.round=function(){return this.throwIfDisposed(),Lm(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ge().prototype.rsqrt=function(){return this.throwIfDisposed(),Pm(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ge().prototype.selu=function(){return this.throwIfDisposed(),zm(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ge().prototype.separableConv2d=function(n,e,t,s,r,o){return this.throwIfDisposed(),Bm(this,n,e,t,s,r,o)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ge().prototype.sigmoid=function(){return this.throwIfDisposed(),cr(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ge().prototype.sign=function(){return this.throwIfDisposed(),w1(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ge().prototype.sin=function(){return this.throwIfDisposed(),Mm(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ge().prototype.sinh=function(){return this.throwIfDisposed(),Vm(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ge().prototype.slice=function(n,e){return this.throwIfDisposed(),mt(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ge().prototype.softmax=function(n){return this.throwIfDisposed(),Wh(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ge().prototype.softplus=function(){return this.throwIfDisposed(),qa(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ge().prototype.spaceToBatchND=function(n,e){return this.throwIfDisposed(),Ph(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ge().prototype.split=function(n,e){return this.throwIfDisposed(),ss(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ge().prototype.sqrt=function(){return this.throwIfDisposed(),Cn(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ge().prototype.square=function(){return this.throwIfDisposed(),_t(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ge().prototype.squaredDifference=function(n){return this.throwIfDisposed(),Gm(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ge().prototype.squeeze=function(n){return this.throwIfDisposed(),ea(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ge().prototype.stack=function(n,e){this.throwIfDisposed();const t=n instanceof Gt?[this,n]:[this,...n];return is(t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ge().prototype.step=function(n){return this.throwIfDisposed(),Ka(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ge().prototype.stridedSlice=function(n,e,t,s,r,o,a,l){return this.throwIfDisposed(),v1(this,n,e,t,s,r,o,a,l)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ge().prototype.sub=function(n){return this.throwIfDisposed(),Ve(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ge().prototype.sum=function(n,e){return this.throwIfDisposed(),Ue(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ge().prototype.tan=function(){return this.throwIfDisposed(),k1(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ge().prototype.tanh=function(){return this.throwIfDisposed(),Mo(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ge().prototype.tile=function(n){return this.throwIfDisposed(),Es(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ge().prototype.toBool=function(){return this.throwIfDisposed(),Pe(this,"bool")};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ge().prototype.toFloat=function(){return this.throwIfDisposed(),Pe(this,"float32")};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ge().prototype.toInt=function(){return this.throwIfDisposed(),Pe(this,"int32")};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ge().prototype.topk=function(n,e){return this.throwIfDisposed(),C1(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ge().prototype.transpose=function(n){return this.throwIfDisposed(),gt(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ge().prototype.unique=function(n){return this.throwIfDisposed(),I1(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ge().prototype.unsortedSegmentSum=function(n,e){return this.throwIfDisposed(),qm(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ge().prototype.unstack=function(n){return this.throwIfDisposed(),Ps(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ge().prototype.where=function(n,e){return this.throwIfDisposed(),An(n,this,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ge().prototype.zerosLike=function(){return this.throwIfDisposed(),yt(this)};/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class rr extends Error{constructor(e){super(e),Object.setPrototypeOf(this,rr.prototype)}}class As extends Error{constructor(e){super(e),Object.setPrototypeOf(this,As.prototype)}}class ne extends Error{constructor(e){super(e),Object.setPrototypeOf(this,ne.prototype)}}class it extends Error{constructor(e){super(e),Object.setPrototypeOf(this,it.prototype)}}class Dg extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Dg.prototype)}}/**
 * @license
 * Copyright 2022 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Pw{constructor(e){this.maxEntries=e||100,this.cache=new Map}get(e){let t;return this.cache.has(e)&&(t=this.cache.get(e),this.cache.delete(e),this.cache.set(e,t)),t}put(e,t){if(this.cache.has(e))this.cache.delete(e);else if(this.cache.size>=this.maxEntries){const s=this.cache.keys().next().value;this.cache.delete(s)}this.cache.set(e,t)}getMaxEntries(){return this.maxEntries}setMaxEntries(e){if(e<0)throw new Error(`The maxEntries of LRU caches must be at least 0, but got ${e}.`);if(this.maxEntries>e)for(let t=0;t<this.maxEntries-e;t++){const s=this.cache.keys().next().value;this.cache.delete(s)}this.maxEntries=e}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Go(n,e){if(Array.isArray(n)){let t=[];for(let s=0;s<e;s++)t=t.concat(n);return t}else{const t=new Array(e);return t.fill(n),t}}function or(n,e){if(!n)throw new Dg(e)}function Bb(n,e){let t=0;for(const s of n)s===e&&t++;return t}function jn(n){return n.length===1?n[0]:n}function Nt(n){return Array.isArray(n)?n:[n]}function Sr(n){const t=n.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return t[0]!=="_"?t:"private"+t}function No(n){return n.length<=1||n.indexOf("_")===-1?n:n.replace(/[_]+(\w|$)/g,(e,t)=>t.toUpperCase())}let ks={};function Rg(n){if(n==null)return null;const e={};return e.className=n.getClassName(),e.config=n.getConfig(),e}function Pp(n){if(!(n==null||typeof n!="object"))if(Array.isArray(n))n.forEach(e=>Pp(e));else{const e=Object.keys(n);for(const t of e){const s=n[t];s!=null&&typeof s=="object"&&(!Array.isArray(s)&&s.type==="ndarray"&&typeof s.value=="number"?n[t]=s.value:Pp(s))}}}function Kl(n,e={},t={},s="object",r=!1){if(typeof n=="string"){const o=n;let a;if(o in t)a=t[o];else if(o in ks)a=ks[o];else if(a=e[o],a==null)throw new ne(`Unknown ${s}: ${n}. This may be due to one of the following reasons:
1. The ${s} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${s} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return a}else{const o=n;if(o.className==null||o.config==null)throw new ne(`${s}: Improper config format: ${JSON.stringify(o)}.
'className' and 'config' must set.`);const a=o.className;let l,i;if(a in t?[l,i]=t[a]:a in ks?[l,i]=ks.className:a in e&&([l,i]=e[a]),l==null)throw new ne(`Unknown ${s}: ${a}. This may be due to one of the following reasons:
1. The ${s} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${s} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(i!=null){const u={};for(const p of Object.keys(ks))u[p]=ks[p];for(const p of Object.keys(t))u[p]=t[p];const c=o.config;c.customObjects=u;const h=Object.assign({},ks);for(const p of Object.keys(t))ks[p]=t[p];Pp(o.config);const d=i(l,o.config,t,r);return ks=Object.assign({},h),d}else{const u=Object.assign({},ks);for(const h of Object.keys(t))ks[h]=t[h];const c=new l(o.config);return ks=Object.assign({},u),c}}}function MP(n,e){return n<e?-1:n>e?1:0}function Eu(n,e){return-1*MP(n,e)}function Hr(n){if(n==null)return n;const e=[];for(const t of n)e.indexOf(t)===-1&&e.push(t);return e}function VP(n){if(n==null)throw new ne(`Invalid value in obj: ${JSON.stringify(n)}`);for(const e in n)if(n.hasOwnProperty(e))return!1;return!0}function na(n,e,t){if(t!=null&&n.indexOf(t)<0)throw new ne(`${t} is not a valid ${e}.  Valid values are ${n} or null/undefined.`)}function Fg(n,e,t=0,s=1/0){return or(t>=0),or(s>=t),Array.isArray(n)&&n.length>=t&&n.length<=s&&n.every(r=>typeof r===e)}function gn(n,e){Array.isArray(n)?(P(n.length>0,()=>`${e} is unexpectedly an empty array.`),n.forEach((t,s)=>gn(t,`element ${s+1} of ${e}`))):P(Number.isInteger(n)&&n>0,()=>`Expected ${e} to be a positive integer, but got ${zw(n)}.`)}function zw(n){return n===null?"null":Array.isArray(n)?"["+n.map(e=>zw(e)).join(",")+"]":typeof n=="string"?`"${n}"`:`${n}`}function WP(n,e,t){let s=t!=null?t():Hn(),r;return(...a)=>{const l=t!=null?t():Hn();return l-s<e||(s=l,r=n(...a)),r}}function Bw(n){return n==="relu"?"relu":n==="linear"?"linear":n==="elu"?"elu":null}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */let UP=0;function Mw(){return UP++}const Au={};function Qh(n=""){return n in Au||(Au[n]=0),Au[n]+=1,n+Au[n].toString()}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const GP=["channelsFirst","channelsLast"],HP=["nearest","bilinear"],jP=["valid","same","causal"],qP=["max","avg"],KP=["sum","mul","concat","ave"];/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const fa=new Map;function en(n){na(GP,"DataFormat",n)}function XP(n){na(HP,"InterpolationFormat",n)}function ws(n){na(jP,"PaddingMode",n)}function Vw(n){na(qP,"PoolMode",n)}const Ii=[],Mb="/";function Ao(n,e){Ii.push(n);try{const t=e();return Ii.pop(),t}catch(t){throw Ii.pop(),t}}function YP(){return Ii.length===0?"":Ii.join(Mb)+Mb}function Ww(n){if(!Gw(n))throw new Error("Not a valid tensor name: '"+n+"'");return YP()+n}function Uw(n){if(!Gw(n))throw new Error("Not a valid tensor name: '"+n+"'");fa.has(n)||fa.set(n,0);const e=fa.get(n);if(fa.set(n,fa.get(n)+1),e>0){const t=`${n}_${e}`;return fa.set(t,1),t}else return n}const ZP=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function Gw(n){return!!n.match(ZP)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function JP(n){return n===parseInt(n.toString(),10)}function jr(n,e,t){e==null&&(e=0),t==null&&(t=n.length);let s=1;for(let r=e;r<t;++r)s*=n[r];return s}function La(n){if(n.length===0)return Number.NaN;let e=Number.POSITIVE_INFINITY;for(let t=0;t<n.length;t++){const s=n[t];s<e&&(e=s)}return e}function Jr(n){if(n.length===0)return Number.NaN;let e=Number.NEGATIVE_INFINITY;for(let t=0;t<n.length;t++){const s=n[t];s>e&&(e=s)}return e}function Ks(n,e){if(e<n)throw new ne(`end (${e}) < begin (${n}) is forbidden.`);const t=[];for(let s=n;s<e;++s)t.push(s);return t}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */let Ud;function on(){return Ud==null&&(Ud=gx().epsilon()),Ud}function Xs(){return"channelsLast"}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function dr(n,e){return Pe(n,e)}function Xl(n,e=-1){const t=n.shape.slice();return e<0&&(e=t.length+e+1),t.splice(e,0,1),te(n,t)}function QP(n,e){return ce(()=>{if(n.shape.length!==2)throw new ne(`repeat() expects a rank-2 tensor, but received a rank-${n.shape.length} tensor.`);const t=Xl(n,1);return zp(t,[1,e,1])})}function ez(n){const e=[jr(n.shape)];return te(n,e)}function tz(n){if(n.rank<=1)throw new ne(`batchFlatten requires a minimum rank of 2. Got rank: ${n.rank}.`);const e=[n.shape[0],jr(n.shape,1)];return te(n,e)}function Do(n,e,t){return ce(()=>{switch(n.rank){case 1:return Mh(n,e,t);case 2:return Wm(n,[e,0],[t,n.shape[1]]);case 3:return Vh(n,[e,0,0],[t,n.shape[1],n.shape[2]]);case 4:return Ai(n,[e,0,0,0],[t,n.shape[1],n.shape[2],n.shape[3]]);case 5:return mt(n,[e,0,0,0,0],[t,n.shape[1],n.shape[2],n.shape[3],n.shape[4]]);case 6:return mt(n,[e,0,0,0,0,0],[t,n.shape[1],n.shape[2],n.shape[3],n.shape[4],n.shape[5]]);default:throw new ne(`sliceAlongFirstAxis() received an unsupported tensor rank: ${n.rank}`)}})}function Gd(n,e,t){return ce(()=>{switch(n.rank){case 1:return Mh(n,e,t);case 2:return Wm(n,[0,e],[n.shape[0],t]);case 3:return Vh(n,[0,0,e],[n.shape[0],n.shape[1],t]);case 4:return Ai(n,[0,0,0,e],[n.shape[0],n.shape[1],n.shape[2],t]);default:throw new ne(`sliceAlongLastAxis() received an unsupported tensor rank: ${n.rank}`)}})}function Du(n,e,t,s){return ce(()=>{switch(n.rank){case 1:return Mh(n,e,t);case 2:switch(s){case 1:return Do(n,e,t);case 2:return Gd(n,e,t);default:throw new ne(`The axis is not within the rank of the tensor ${s}`)}case 3:switch(s){case 1:return Do(n,e,t);case 2:return Vh(n,[0,e,0],[n.shape[0],t,n.shape[2]]);case 3:return Gd(n,e,t);default:throw new ne(`The axis is not within the rank of the tensor ${s}`)}case 4:switch(s){case 1:return Do(n,e,t);case 2:return Ai(n,[0,e,0,0],[n.shape[0],t,n.shape[2],n.shape[3]]);case 3:return Ai(n,[0,0,e,0],[n.shape[0],n.shape[1],t,n.shape[3]]);case 4:return Gd(n,e,t);default:throw new ne(`The axis is not within the rank of the tensor ${s}`)}default:throw new ne(`sliceAlongLastAxis() received an unsupported tensor rank: ${n.rank}`)}})}function Og(n,e=-1){let t;return e<0&&(t=n[0].rank,t!==0?e=t:e=0),e===n[0].rank&&(e=-1),nn(n,e)}function Vb(n,e){switch(n.rank){case 1:return jx([n,e]);case 2:return qx([n,e],0);case 3:return Kx([n,e],0);case 4:return Xx([n,e],0);default:throw new ne(`concatAlongFirstAxis() received an unsupported tensor rank: ${n.rank}`)}}function zp(n,e){if(Array.isArray(e)||(e=[e]),n.rank!==e.length)throw new ne(`The length of input n (${e.length}) does not match the number of dimensions in input x (${n.rank})`);return Es(n,e)}function ed(n,e=0,t=1,s,r){return Fm(n,e,t,s,r)}function pr(n,e,t,s){if(n.rank<2||e.rank<2)throw new it(`dot requires both inputs to be rank >= 2 but got x shape = ${n.shape} and y shape = ${e.shape}`);if(e.rank>=3){const r=n.shape.slice(-1)[0],o=e.shape.slice(-2)[0];if(r!==o)throw new it(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${n.shape} and  y shape = ${e.shape}`)}if(n.rank===2&&e.rank===2)return kp({a:n,b:e,transposeA:!1,transposeB:!1,bias:s?Bp(n.rank,s,Xs()):null,activation:t});{const r=n.shape.slice(),o=r.pop();n=te(n,[-1,o]);const a=e.shape.slice(),l=a.pop(),i=a.pop(),u=[...a,l],c=Array.from({length:e.rank},(f,g)=>g===0?e.rank-2:g<=e.rank-2?g-1:g);e=te(gt(e,c),[i,-1]);const h=[...r,...u];return te(kp({a:n,b:e,transposeA:!1,transposeB:!1,bias:s?Bp(n.rank,s,Xs()):null,activation:t}),h)}}function Hw(n,e,t){return ce(()=>(Array.isArray(e)?e=En(e,"int32"):e=Pe(e,"int32"),Gl(n,e,t)))}function Yl(n){return J(n,n)}function Bp(n,e,t){const s=e.shape;if(e.rank!==1&&e.rank!==n)throw new ne(`Unexpected bias dimensions: ${e.rank}; expected it to be 1 or ${n}`);if(n===5){if(t==="channelsFirst")return s.length===1?te(e,[1,s[0],1,1,1]):te(e,[1,s[3],s[0],s[1],s[2]]);if(t==="channelsLast")return s.length===1?te(e,[1,1,1,1,s[0]]):te(e,[1].concat(s))}else if(n===4){if(t==="channelsFirst")return s.length===1?te(e,[1,s[0],1,1]):te(e,[1,s[2],s[0],s[1]]);if(t==="channelsLast")return s.length===1?te(e,[1,1,1,s[0]]):te(e,[1].concat(s))}else if(n===3){if(t==="channelsFirst")return s.length===1?te(e,[1,s[0],1]):te(e,[1,s[1],s[0]]);if(t==="channelsLast")return s.length===1?te(e,[1,1,s[0]]):te(e,[1].concat(s))}else if(n<3)return e;throw new ne(`Unsupported input rank by biasAdd: ${e.rank}`)}function Qs(n,e,t){return ce(()=>(t==null&&(t=Xs()),en(t),Ne(n,Bp(n.rank,e,t))))}function nz(n,e=1){if(e!==1)throw new it(`Support for alpha values other than 1 (${e}) is not implemented yet.`);return Vl(n)}function sz(n){return ce(()=>Ke(n,Ne(sn(n),1)))}function jw(n,e,t,s){return ce(()=>T1(n,e,t,s))}function rz(n){return ce(()=>{const e=Ne(.5,J(.2,n));return os(e,0,1)})}function Zl(n,e,t=!1){return t?n():e()}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const oz=["fanIn","fanOut","fanAvg"],az=["normal","uniform","truncatedNormal"];/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function iz(n){na(oz,"FanMode",n)}function lz(n){na(az,"Distribution",n)}class Bs extends Ya{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}class qw extends Bs{apply(e,t){return rn(e,t)}}qw.className="Zeros";Te(qw);class Lg extends Bs{apply(e,t){return ns(e,t)}}Lg.className="Ones";Te(Lg);class Kw extends Bs{constructor(e){if(super(),typeof e!="object")throw new ne(`Expected argument of type ConstantConfig but got ${e}`);if(e.value===void 0)throw new ne(`config must have value set but got ${e}`);this.value=e.value}apply(e,t){return ce(()=>J(Ye(this.value),ns(e,t)))}getConfig(){return{value:this.value}}}Kw.className="Constant";Te(Kw);class Xw extends Bs{constructor(e){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,t){return Qo(e,this.minval,this.maxval,t,this.seed)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}Xw.className="RandomUniform";Te(Xw);class Yw extends Bs{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if(t=t||"float32",t!=="float32"&&t!=="int32")throw new it(`randomNormal does not support dType ${t}.`);return ed(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}Yw.className="RandomNormal";Te(Yw);class Zw extends Bs{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if(t=t||"float32",t!=="float32"&&t!=="int32")throw new it(`truncatedNormal does not support dType ${t}.`);return jm(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}Zw.className="TruncatedNormal";Te(Zw);class Jw extends Bs{constructor(e){super(),this.gain=e.gain!=null?e.gain:1}apply(e,t){return ce(()=>{if(e.length!==2||e[0]!==e[1])throw new ne("Identity matrix initializer can only be used for 2D square matrices.");return J(this.gain,km(e[0]))})}getConfig(){return{gain:this.gain}}}Jw.className="Identity";Te(Jw);function uz(n,e="channelsLast"){let t,s;if(en(e),n.length===2)t=n[0],s=n[1];else if([3,4,5].indexOf(n.length)!==-1){if(e==="channelsFirst"){const r=jr(n,2);t=n[1]*r,s=n[0]*r}else if(e==="channelsLast"){const r=jr(n,0,n.length-2);t=n[n.length-2]*r,s=n[n.length-1]*r}}else{const r=jr(n);t=Math.sqrt(r),s=Math.sqrt(r)}return[t,s]}class ls extends Bs{constructor(e){if(super(),e.scale<0)throw new ne(`scale must be a positive float. Got: ${e.scale}`);this.scale=e.scale==null?1:e.scale,this.mode=e.mode==null?"fanIn":e.mode,iz(this.mode),this.distribution=e.distribution==null?"normal":e.distribution,lz(this.distribution),this.seed=e.seed}apply(e,t){const s=uz(e),r=s[0],o=s[1];let a=this.scale;if(this.mode==="fanIn"?a/=Math.max(1,r):this.mode==="fanOut"?a/=Math.max(1,o):a/=Math.max(1,(r+o)/2),this.distribution==="normal"){const l=Math.sqrt(a);if(t=t||"float32",t!=="float32"&&t!=="int32")throw new it(`${this.getClassName()} does not support dType ${t}.`);return jm(e,0,l,t,this.seed)}else{const l=Math.sqrt(3*a);return Qo(e,-l,l,t,this.seed)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}ls.className="VarianceScaling";Te(ls);class Pg extends ls{constructor(e){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return ls.className}}Pg.className="GlorotUniform";Te(Pg);class zg extends ls{constructor(e){super({scale:1,mode:"fanAvg",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return ls.className}}zg.className="GlorotNormal";Te(zg);class Bg extends ls{constructor(e){super({scale:2,mode:"fanIn",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return ls.className}}Bg.className="HeNormal";Te(Bg);class Mg extends ls{constructor(e){super({scale:2,mode:"fanIn",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return ls.className}}Mg.className="HeUniform";Te(Mg);class Vg extends ls{constructor(e){super({scale:1,mode:"fanIn",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return ls.className}}Vg.className="LeCunNormal";Te(Vg);class Wg extends ls{constructor(e){super({scale:1,mode:"fanIn",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return ls.className}}Wg.className="LeCunUniform";Te(Wg);class Qw extends Bs{constructor(e){super(),this.DEFAULT_GAIN=1,this.ELEMENTS_WARN_SLOW=2e3,this.gain=e.gain==null?this.DEFAULT_GAIN:e.gain,this.seed=e.seed}apply(e,t){return ce(()=>{if(e.length<2)throw new it("Shape must be at least 2D.");if(t!=="int32"&&t!=="float32"&&t!==void 0)throw new TypeError(`Unsupported data type ${t}.`);t=t;const s=me(e.slice(0,-1)),r=e[e.length-1],o=s*r;o>this.ELEMENTS_WARN_SLOW&&console.warn(`Orthogonal initializer is being called on a matrix with more than ${this.ELEMENTS_WARN_SLOW} (${o}) elements: Slowness may result.`);const a=[Math.max(r,s),Math.min(r,s)],l=ed(a,0,1,t,this.seed),i=P1.qr(l,!1);let u=i[0];const h=i[1].flatten().stridedSlice([0],[Math.min(r,s)*Math.min(r,s)],[Math.min(r,s)+1]);return u=J(u,h.sign()),s<r&&(u=u.transpose()),J(Ye(this.gain),u.reshape(e))})}getConfig(){return{gain:this.gain,seed:this.seed}}}Qw.className="Orthogonal";Te(Qw);const Wb={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function Ub(n,e={}){return Kl(n,Ns.getMap().classNameMap,e,"initializer")}function Ht(n){return Rg(n)}function Bt(n){if(typeof n=="string"){const e=n in Wb?Wb[n]:n;if(e==="GlorotNormal")return new zg;if(e==="GlorotUniform")return new Pg;if(e==="HeNormal")return new Bg;if(e==="HeUniform")return new Mg;if(e==="LeCunNormal")return new Vg;if(e==="LeCunUniform")return new Wg;{const t={};return t.className=e,t.config={},Ub(t)}}else return n instanceof Bs?n:Ub(n)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Mp(n){return Array.isArray(n)&&Array.isArray(n[0])}function oc(n){return n.length===0?[]:Array.isArray(n[0])?n:[n]}function et(n){let e;if(Array.isArray(n)){if(n.length!==1)throw new ne(`Expected Tensor length to be 1; got ${n.length}`);e=n[0]}else e=n;return e}function xt(n){if(Array.isArray(n)&&Array.isArray(n[0])){if(n.length===1)return n=n,n[0];throw new ne(`Expected exactly 1 Shape; got ${n.length}`)}else return n}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function ac(n){let e=0;for(const t of n)t.shape.length===0?e+=1:e+=t.shape.reduce((s,r)=>s*r);return e}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const Gb="Variable";class cz{constructor(e,t="float32",s=Gb,r=!0,o=null){this.dtype=t??"float32",this.shape=e.shape,this.id=Mw(),s=s??Gb,this.originalName=Ww(s),this.name=Uw(this.originalName),this.trainable_=r,this.constraint=o,this.val=N1(e,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(e){return this.assertNotDisposed(),hz(this.val,e),this.val.id!==e.id&&(this.val.assign(e),this.constraint!=null&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(e){this.trainable_=e,this.val.trainable=e}}function hz(n,e){if(n.shape.toString()!==e.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(n.shape)+" vs. "+JSON.stringify(e.shape))}function Vp(n){return n.map(e=>e.read())}function Ug(n){n.forEach(e=>{e[0].write(e[1])})}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class an{constructor(e){this.dtype=e.dtype,this.shape=e.shape,e.shape!=null?this.ndim=e.shape.length:this.ndim=e.ndim,this.maxNDim=e.maxNDim,this.minNDim=e.minNDim,this.axes=e.axes||{}}}class mr{constructor(e,t,s,r,o,a,l){this.dtype=e,this.shape=t,this.sourceLayer=s,this.inputs=r,this.callArgs=o,this.outputTensorIndex=l,this.id=Mw(),a!=null&&(this.originalName=Ww(a),this.name=Uw(this.originalName)),this.rank=t.length}}let dz=0;class td{constructor(e,t){this.callArgs=t,this.id=dz++,this.outboundLayer=e.outboundLayer,this.inboundLayers=e.inboundLayers,this.nodeIndices=e.nodeIndices,this.tensorIndices=e.tensorIndices,this.inputTensors=e.inputTensors,this.outputTensors=e.outputTensors,this.inputMasks=e.inputMasks,this.outputMasks=e.outputMasks,this.inputShapes=e.inputShapes,this.outputShapes=e.outputShapes;for(const s of e.inboundLayers)s!=null&&s.outboundNodes.push(this);e.outboundLayer.inboundNodes.push(this)}getConfig(){const e=[];for(const t of this.inboundLayers)t!=null?e.push(t.name):e.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:e,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let pz=0;class ht extends Ya{constructor(e={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=pz++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let t=e.name;if(!t){const s=this.getClassName();t=Sr(s)+"_"+Qh(s)}if(this.name=t,this.trainable_=e.trainable==null?!0:e.trainable,e.inputShape!=null||e.batchInputShape!=null){let s;if(e.batchInputShape!=null)s=e.batchInputShape;else if(e.inputShape!=null){let o=null;e.batchSize!=null&&(o=e.batchSize),s=[o].concat(e.inputShape)}this.batchInputShape=s;let r=e.dtype;r==null&&(r=e.inputDType),r==null&&(r="float32"),this.dtype=r}e.weights!=null?this.initialWeights=e.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(e,t){return e.name+"_ib-"+t.toString()}getNodeAtIndex(e,t){if(this.inboundNodes.length===0)throw new As(`The layer has never been called and thus has no defined ${t}.`);if(this.inboundNodes.length<=e)throw new ne(`Asked to get ${t} at node ${e}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[e]}getInputAt(e){return jn(this.getNodeAtIndex(e,"input").inputTensors)}getOutputAt(e){return jn(this.getNodeAtIndex(e,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new rr(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(this.inboundNodes.length===0)throw new rr(`Layer ${this.name} is not connected, no input to return.`);return jn(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(this.inboundNodes.length===0)throw new rr(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new rr(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return jn(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map(e=>e())}get updates(){return this._updates}get built(){return this._built}set built(e){this._built=e}get trainable(){return this.trainable_}set trainable(e){this._trainableWeights.forEach(t=>t.trainable=e),this.trainable_=e}get trainableWeights(){return this.trainable_?this._trainableWeights.filter(e=>e.trainable):[]}set trainableWeights(e){this._trainableWeights=e}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter(e=>!e.trainable).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(e){this._nonTrainableWeights=e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(e){const t=Nt(e);if(this.inputSpec==null||this.inputSpec.length===0)return;const s=Nt(this.inputSpec);if(t.length!==s.length)throw new ne(`Layer ${this.name} expects ${s.length} inputs, but it received ${t.length} input tensors. Input received: ${e}`);for(let r=0;r<t.length;r++){const o=t[r],a=s[r];if(a==null)continue;const l=o.rank;if(a.ndim!=null&&l!==a.ndim)throw new ne(`Input ${r} is incompatible with layer ${this.name}: expected ndim=${a.ndim}, found ndim=${l}`);if(a.maxNDim!=null&&l>a.maxNDim)throw new ne(`Input ${r} is incompatible with layer ${this.name}: expected max_ndim=${a.maxNDim}, found ndim=${l}`);if(a.minNDim!=null&&l<a.minNDim)throw new ne(`Input ${r} is incompatible with layer ${this.name}: expected min_ndim=${a.minNDim}, found ndim=${l}.`);if(a.dtype!=null&&o.dtype!==a.dtype)throw new ne(`Input ${r} is incompatible with layer ${this.name} : expected dtype=${a.dtype}, found dtype=${o.dtype}.`);if(a.axes){const i=o.shape;for(const u in a.axes){const c=Number(u),h=a.axes[u],d=c>=0?i[c]:i[i.length+c];if(h!=null&&[h,null].indexOf(d)===-1)throw new ne(`Input ${r} is incompatible with layer ${this.name}: expected axis ${c} of input shape to have value ${h} but got shape ${i}.`)}}if(a.shape!=null)for(let i=0;i<a.shape.length;++i){const u=a.shape[i],c=o.shape[i];if(u!=null&&c!=null&&u!==c)throw new ne(`Input ${r} is incompatible with layer ${this.name}: expected shape=${a.shape}, found shape=${o.shape}.`)}}}call(e,t){return e}invokeCallHook(e,t){this._callHook!=null&&this._callHook(e,t)}setCallHook(e){this._callHook=e}clearCallHook(){this._callHook=null}apply(e,t){t=t||{},this.assertNotDisposed();const s=Nt(e),r=gz(e),o=yz(e);if(r===o)throw new ne("Arguments to apply() must be all SymbolicTensors or all Tensors");return Ao(this.name,()=>{if(!this.built){this.assertInputCompatibility(e);const a=[];for(const l of Nt(e))a.push(l.shape);this.build(jn(a)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),this._refCount===null&&o&&(this._refCount=1)}if(this.assertInputCompatibility(e),o){let a=this.call(e,t);this.supportsMasking&&this.setMaskMetadata(e,a);const l=Nt(a),i=[];for(let u of l)s.indexOf(u)!==-1&&(u=u.clone()),i.push(u);if(a=jn(i),this.activityRegularizer!=null)throw new it("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return a}else{const a=fz(e),l=this.computeOutputShape(a);let i;const u=mz(e);if(this.warnOnIncompatibleInputShape(Array.isArray(e)?a[0]:a),l!=null&&l.length>0&&Array.isArray(l[0])?i=l.map((c,h)=>new mr(u,c,this,Nt(e),t,this.name,h)):i=new mr(u,l,this,Nt(e),t,this.name),this.addInboundNode(e,i,null,null,a,l,t),this._refCount++,this.activityRegularizer!=null)throw new it("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return i}})}warnOnIncompatibleInputShape(e){if(this.batchInputShape!=null)if(e.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(e)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let t=!1;this.batchInputShape.forEach((s,r)=>{s!=null&&e[r]!=null&&e[r]!==s&&(t=!0)}),t&&console.warn(`The shape of the input tensor (${JSON.stringify(e)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(this.inboundNodes==null||this.inboundNodes.length===0)throw new rr(`The layer ${this.name} has never been called and thus has no defined output shape.`);const e=[];for(const t of this.inboundNodes){const s=JSON.stringify(t.outputShapes);e.indexOf(s)===-1&&e.push(s)}if(e.length===1){const t=this.inboundNodes[0].outputShapes;return Array.isArray(t)&&Array.isArray(t[0])&&t.length===1?t[0]:t}else throw new rr(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new As(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return ac(this.weights)}build(e){this.built=!0}getWeights(e=!1){return Vp(e?this.trainableWeights:this.weights)}setWeights(e){ce(()=>{const t=this.weights;if(t.length!==e.length)throw new ne(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${e.length}, but the layer was expecting ${t.length} weights. Provided weights: ${e}...`);if(t.length===0)return;const s=[],r=Vp(t);for(let o=0;o<r.length;++o){const a=r[o],l=t[o],i=e[o];if(!ft(a.shape,i.shape))throw new ne(`Layer weight shape ${a.shape} not compatible with provided weight shape ${i.shape}`);s.push([l,i])}Ug(s)})}addWeight(e,t,s,r,o,a,l,i){if(this._addedWeightNames.indexOf(e)!==-1)throw new ne(`Duplicate weight name ${e} for layer ${this.name}`);this._addedWeightNames.push(e),s==null&&(s="float32"),this.fastWeightInitDuringBuild&&(r=i!=null?i():Bt("zeros"));const u=r.apply(t,s),c=new cz(u,s,e,a,l);return u.dispose(),o!=null&&this.addLoss(()=>o.apply(c.read())),a==null&&(a=!0),a?this._trainableWeights.push(c):this._nonTrainableWeights.push(c),c}setFastWeightInitDuringBuild(e){this.fastWeightInitDuringBuild=e}addLoss(e){e==null||Array.isArray(e)&&e.length===0||(e=Nt(e),this._losses!==void 0&&this._losses!==null&&this.losses.push(...e))}computeOutputShape(e){return e}computeMask(e,t){if(!this.supportsMasking){if(t!=null)if(Array.isArray(t))t.forEach(s=>{if(s!=null)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)});else throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);return null}return t}setMaskMetadata(e,t,s){if(!this.supportsMasking)return;const r=this.computeMask(e,s),o=Nt(t),a=Nt(r);if(o.length!==a.length)throw new Error(`${this.name} outputs ${o.length} tensors but ${o.length} masks for those tensors`);for(let l=0;l<o.length;l++)o[l].kerasMask=a[l]}addInboundNode(e,t,s,r,o,a,l=null){const i=Nt(e);t=Nt(t),s=Nt(s),r=Nt(r),o=oc(o),a=oc(a);const u=[],c=[],h=[];for(const d of i)u.push(d.sourceLayer),c.push(d.nodeIndex),h.push(d.tensorIndex);new td({outboundLayer:this,inboundLayers:u,nodeIndices:c,tensorIndices:h,inputTensors:i,outputTensors:t,inputMasks:s,outputMasks:r,inputShapes:o,outputShapes:a},l);for(let d=0;d<t.length;d++)t[d].sourceLayer=this,t[d].nodeIndex=this.inboundNodes.length-1,t[d].tensorIndex=d}getConfig(){const e={name:this.name,trainable:this.trainable};return this.batchInputShape!=null&&(e.batchInputShape=this.batchInputShape),this.dtype!=null&&(e.dtype=this.dtype),e}disposeWeights(){return this.weights.forEach(e=>e.dispose()),this.weights.length}assertNotDisposed(){if(this._refCount===0)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(this._refCount===null)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let e=0;return--this._refCount===0&&(e=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:e}}}function fz(n){n=Nt(n);const e=[];for(const t of n)e.push(t.shape);return jn(e)}function mz(n){return"float32"}function ev(n,e,t){if((e==null||t!=null&&t>0)&&(e=n.sourceLayer,t=n.nodeIndex),e.inboundNodes.length===0)return[n];{const s=e.inboundNodes[t];if(s.inboundLayers.length===0)return s.inputTensors;{const r=[];for(let o=0;o<s.inboundLayers.length;o++){const a=s.inputTensors[o],l=s.inboundLayers[o],i=s.nodeIndices[o],u=ev(a,l,i);for(const c of u)r.indexOf(c)===-1&&r.push(c)}return r}}}function gz(n){let e=!0;for(const t of Nt(n))if(!(t instanceof mr)){e=!1;break}return e}function yz(n){let e=!0;for(const t of Nt(n))if(t instanceof mr){e=!1;break}return e}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Jl extends ht{constructor(e){if(super({dtype:e.dtype,name:e.name!=null?e.name:Qh("input").toString()}),e.batchSize==null&&(e.batchSize=null),e.sparse==null&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,e.inputShape!=null&&e.batchInputShape!=null)throw new ne("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let t=e.batchInputShape;if(t==null){if(e.inputShape==null)throw new ne("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");t=[e.batchSize].concat(e.inputShape)}else if(e.batchSize!=null)throw new ne("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const s=e.dtype||"float32";this.batchInputShape=t,this.dtype=s,this.inputSpec=[{shape:t}];const r=new mr(this.dtype,this.batchInputShape,this,[],{},this.name);r.nodeIndex=0,r.tensorIndex=0,new td({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[r],outputTensors:[r],inputMasks:[null],outputMasks:[null],inputShapes:[t],outputShapes:[t]})}apply(e,t){throw new ne(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}Jl.className="InputLayer";Te(Jl);function bz(n){if(n.batchShape==null&&n.shape==null)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(n.batchShape!=null&&n.shape!=null)throw new ne("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let e=n.batchShape;n.shape!=null&&e==null&&(e=[null].concat(n.shape));let t=n.dtype;return t==null&&(t="float32"),new Jl({batchInputShape:e,name:n.name,dtype:t,sparse:n.sparse}).inboundNodes[0].outputTensors[0]}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function xz(n,e){if(n.dtype==null||n.dtype===e.dtype)return e;try{return Pe(e,n.dtype)}catch{throw new ne(`The dtype of the feed (${e.dtype}) can not be cast to the dtype of the key '${n.name}' (${n.dtype}).`)}}class Vr{constructor(e){if(this.id2Value={},this.id2Mask={},this.name2Id={},e instanceof Vr)for(const t in e.id2Value)this.id2Value[t]=e.id2Value[t],t in e.id2Mask&&(this.id2Mask[t]=e.id2Mask[t]);else{if(e==null)return;for(const t of e)this.add(t.key,t.value)}}add(e,t,s){if(this.id2Value[e.id]==null)this.id2Value[e.id]=xz(e,t),this.name2Id[e.name]=e.id,s!=null&&(this.id2Mask[e.id]=s);else throw new ne(`Duplicate key: name=${e.name}, id=${e.id}`);return this}addFeed(e){this.add(e.key,e.value)}hasKey(e){return this.id2Value[e.id]!=null}names(){return Object.keys(this.name2Id)}getValue(e){if(e instanceof mr){if(this.id2Value[e.id]==null)throw new ne(`Nonexistent key: ${e.name}`);return this.id2Value[e.id]}else{const t=this.name2Id[e];if(t==null)throw new ne(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Value[t]}}getMask(e){if(e instanceof mr){if(this.id2Value[e.id]==null)throw new ne(`Nonexistent key: ${e.name}`);return this.id2Mask[e.id]}else{const t=this.name2Id[e];if(t==null)throw new ne(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Mask[t]}}disposeMasks(){this.id2Mask!=null&&ut(this.id2Mask)}}const ic=new Pw,lc=new Pw;function wz(n){ic!=null&&ic.setMaxEntries(n),lc!=null&&lc.setMaxEntries(n)}function vi(n,e,t,s){const r=t==null?!1:t.training,o=Array.isArray(n),a=o?n:[n],l=a.map(f=>f.name),i=[],u=e.names();for(const f of l)u.indexOf(f)!==-1?i.push(e.getValue(f)):i.push(null);const c=l.join(",")+"|"+e.names().sort().join(",");let h=ic.get(c),d;if(h==null){const f=vz(a,e);h=f.sorted,d=f.recipientCounts,ic.put(c,h),lc.put(c,d)}d={},r||Object.assign(d,lc.get(c));const p=new Vr(e);for(let f=0;f<h.length;++f){const g=h[f],y=g.sourceLayer;if(y instanceof Jl)continue;const x=[],w=[],v=[];let k=!1;for(const R of g.inputs){const O=p.getValue(R),B=p.getMask(R);x.push(O),w.push(B),B!=null&&(k=!0),r||(d[R.name]--,d[R.name]===0&&!e.hasKey(R)&&l.indexOf(R.name)===-1&&!O.isDisposed&&R.sourceLayer.stateful!==!0&&v.push(O))}k&&(t=t||{},t.mask=w[0]);const C=Nt(y.apply(x,t));let I=null;y.supportsMasking&&(I=y.computeMask(x,w));const N=Sz(g),E=Array.isArray(N)?N:[N];for(let R=0;R<E.length;++R){p.hasKey(E[R])||p.add(E[R],C[R],Array.isArray(I)?I[0]:I);const O=l.indexOf(E[R].name);O!==-1&&(i[O]=C[R])}r||ut(v)}return p.disposeMasks(),o?i:i[0]}function vz(n,e){P(n!=null&&n.length>0,()=>"Expected at least one fetch, got none");let t=[],s={};if(n.length===1){const r=Hb(n[0],e);t=r.sorted,s=r.recipientMap}else{const r=new Set;for(const o of n){const{sorted:a,recipientMap:l}=Hb(o,e);for(const i of a)r.has(i.name)||(t.push(i),r.add(i.name));for(const i in l)s[i]==null&&(s[i]=new Set),l[i].forEach(u=>s[i].add(u))}}return{sorted:t,recipientCounts:kz(s)}}function kz(n){const e={};for(const t in n)e[t]=n[t].size;return e}function Hb(n,e){const t=new Set,s=[],r={};for(const l of e.names())t.add(l);const o=[],a=[];for(o.push(n);o.length>0;){const l=o[o.length-1];if(t.has(l.name)){o.pop();continue}const i=a[a.length-1]===o.length-1;if(l.inputs.length===0||i)o.pop(),s.push(l),t.add(l.name),i&&a.pop();else{a.push(o.length-1);for(const u of l.inputs)r[u.name]==null&&(r[u.name]=new Set),r[u.name].add(l.name),!t.has(u.name)&&o.push(u)}}return{sorted:s,recipientMap:r}}function Sz(n){let e;if(n.sourceLayer.inboundNodes.length===1)e=n.sourceLayer.output;else{let t=null;for(let s=0;s<n.sourceLayer.inboundNodes.length;++s)for(const r of n.sourceLayer.inboundNodes[s].outputTensors)if(r.id===n.id){t=s;break}e=n.sourceLayer.getOutputAt(t)}return e}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Cz=de();Cz.registerFlag("TOPOLOGICAL_SORT_CACHE_MAX_ENTRIES",()=>100,wz);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Gg(n,e){return ce(()=>Cn(Ue(J(n,n),e,!0)))}class Ql extends Ya{getConfig(){return{}}}class tv extends Ql{constructor(e){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=e.maxValue!=null?e.maxValue:this.defaultMaxValue,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return ce(()=>{const t=Gg(e,this.axis),s=os(t,0,this.maxValue);return J(e,Ke(s,Ne(on(),t)))})}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}tv.className="MaxNorm";Te(tv);class nv extends Ql{constructor(e){super(),this.defaultAxis=0,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return ce(()=>Ke(e,Ne(on(),Gg(e,this.axis))))}getConfig(){return{axis:this.axis}}}nv.className="UnitNorm";Te(nv);class sv extends Ql{apply(e){return yr(e)}}sv.className="NonNeg";Te(sv);class rv extends Ql{constructor(e){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=e.minValue!=null?e.minValue:this.defaultMinValue,this.maxValue=e.maxValue!=null?e.maxValue:this.defaultMaxValue,this.rate=e.rate!=null?e.rate:this.defaultRate,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return ce(()=>{const t=Gg(e,this.axis),s=Ne(J(this.rate,os(t,this.minValue,this.maxValue)),J(1-this.rate,t));return J(e,Ke(s,Ne(on(),t)))})}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}rv.className="MinMaxNorm";Te(rv);const jb={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function un(n){return Rg(n)}function qb(n,e={}){return Kl(n,Ns.getMap().classNameMap,e,"constraint")}function cn(n){if(n==null)return null;if(typeof n=="string"){const t={className:n in jb?jb[n]:n,config:{}};return qb(t)}else return n instanceof Ql?n:qb(n)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */async function vo(n){if(n==null)return;const e=[],t=[],s=[];for(const r in n){const o=n[r];if(typeof o!="number"){const a=o;e.push(a.data()),t.push(r),s.push(a)}}if(e.length>0){const r=await Promise.all(e);for(let o=0;o<r.length;++o)n[t[o]]=r[o][0];ut(s)}}function ov(n){if(n!=null)for(const e in n){const t=n[e];typeof t!="number"&&t.dispose()}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */var Kb;(function(n){n[n.SILENT=0]="SILENT",n[n.VERBOSE=1]="VERBOSE"})(Kb||(Kb={}));const Iz=125;class Ri{constructor(){this.validationData=null}setParams(e){this.params=e}async onEpochBegin(e,t){}async onEpochEnd(e,t){}async onBatchBegin(e,t){}async onBatchEnd(e,t){}async onTrainBegin(e){}async onTrainEnd(e){}setModel(e){}}class Nz{constructor(e,t=10){e==null&&(e=[]),this.callbacks=e,this.queueLength=t}append(e){this.callbacks.push(e)}setParams(e){for(const t of this.callbacks)t.setParams(e)}setModel(e){for(const t of this.callbacks)t.setModel(e)}async onEpochBegin(e,t){t==null&&(t={});for(const s of this.callbacks)await s.onEpochBegin(e,t)}async onEpochEnd(e,t){t==null&&(t={});for(const s of this.callbacks)await s.onEpochEnd(e,t)}async onBatchBegin(e,t){t==null&&(t={});for(const s of this.callbacks)await s.onBatchBegin(e,t)}async onBatchEnd(e,t){t==null&&(t={});for(const s of this.callbacks)await s.onBatchEnd(e,t)}async onTrainBegin(e){e==null&&(e={});for(const t of this.callbacks)await t.onTrainBegin(e)}async onTrainEnd(e){e==null&&(e={});for(const t of this.callbacks)await t.onTrainEnd(e)}}class $z extends Ri{constructor(){super()}async onEpochBegin(e){this.seen=0,this.totals={}}async onBatchEnd(e,t){t==null&&(t={});const s=t.size==null?0:t.size;this.seen+=s;for(const r in t){const o=t[r];if(typeof o=="number")this.totals.hasOwnProperty(r)||(this.totals[r]=0),this.totals[r]=this.totals[r]+o*s;else{let a;r in this.totals?a=this.totals[r]:this.totals[r]=0;const l=ce(()=>Ne(this.totals[r],J(o,s)));this.totals[r]=l,a!=null&&a.dispose()}}}async onEpochEnd(e,t){if(t!=null)for(const s of this.params.metrics)this.totals[s]!=null&&(typeof this.totals[s]=="number"?t[s]=this.totals[s]/this.seen:ce(()=>{const r=J(Ke(1,this.seen),this.totals[s]);t[s]=r,this.totals[s].dispose(),mn(t[s])}))}}class Tz extends Ri{async onTrainBegin(e){this.epoch=[],this.history={}}async onEpochEnd(e,t){t==null&&(t={}),this.epoch.push(e);for(const s in t)this.history[s]==null&&(this.history[s]=[]),this.history[s].push(t[s])}async syncData(){const e=[],t=[],s=[];for(const o in this.history){const a=this.history[o];for(let l=0;l<a.length;++l)if(typeof a[l]!="number"){const i=a[l];e.push(i.data()),t.push(o),s.push(l)}}const r=await Promise.all(e);for(let o=0;o<r.length;++o)this.history[t[o]][s[o]].dispose(),this.history[t[o]][s[o]]=r[o][0]}}class _z extends Ri{constructor(e,t){if(super(),this.currentEpoch=0,this.nowFunc=e.nowFunc,this.nextFrameFunc=e.nextFrameFunc||sw,this.yieldEvery=t||"auto",this.yieldEvery==="auto"&&(this.yieldEvery=Iz),this.yieldEvery==="never"&&e.onYield!=null)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");sp(this.yieldEvery)&&(this.maybeWait=WP(this.maybeWait.bind(this),this.yieldEvery,this.nowFunc)),this.trainBegin=e.onTrainBegin,this.trainEnd=e.onTrainEnd,this.epochBegin=e.onEpochBegin,this.epochEnd=e.onEpochEnd,this.batchBegin=e.onBatchBegin,this.batchEnd=e.onBatchEnd,this.yield=e.onYield}async maybeWait(e,t,s){const r=[];this.yield!=null&&(await vo(s),r.push(this.yield(e,t,s))),r.push(this.nextFrameFunc()),await Promise.all(r)}async onEpochBegin(e,t){this.currentEpoch=e,this.epochBegin!=null&&(await vo(t),await this.epochBegin(e,t))}async onEpochEnd(e,t){const s=[];this.epochEnd!=null&&(await vo(t),s.push(this.epochEnd(e,t))),this.yieldEvery==="epoch"&&s.push(this.nextFrameFunc()),await Promise.all(s)}async onBatchBegin(e,t){this.batchBegin!=null&&(await vo(t),await this.batchBegin(e,t))}async onBatchEnd(e,t){const s=[];this.batchEnd!=null&&(await vo(t),s.push(this.batchEnd(e,t))),this.yieldEvery==="batch"?s.push(this.nextFrameFunc()):sp(this.yieldEvery)&&s.push(this.maybeWait(this.currentEpoch,e,t)),await Promise.all(s)}async onTrainBegin(e){this.trainBegin!=null&&(await vo(e),await this.trainBegin(e))}async onTrainEnd(e){this.trainEnd!=null&&(await vo(e),await this.trainEnd(e))}}function av(n,e){return n==null&&(n={}),n instanceof Ri?[n]:Array.isArray(n)&&n[0]instanceof Ri?n:Nt(n).map(s=>new _z(s,e))}class Cs{constructor(){}static registerCallbackConstructor(e,t){P(e>=0&&Number.isInteger(e),()=>`Verbosity level is expected to be an integer >= 0, but got ${e}`),Cs.checkForDuplicate(t),Cs.constructors[e]==null&&(Cs.constructors[e]=[]),Cs.constructors[e].push(t)}static checkForDuplicate(e){for(const t in Cs.constructors)Cs.constructors[+t].forEach(r=>{if(r===e)throw new ne("Duplicate callback constructor.")})}static clear(){Cs.constructors={}}static createCallbacks(e){const t=[];for(const s in Cs.constructors){const r=+s;e>=r&&t.push(...Cs.constructors[r])}return t.map(s=>new s)}}Cs.constructors={};function iv(n,e,t,s,r,o,a,l,i){const u=new Tz,c=[new $z,...Cs.createCallbacks(e)];n!=null&&c.push(...n),c.push(u);const h=new Nz(c);return h.setParams({epochs:t,initialEpoch:s,samples:r,steps:o,batchSize:a,verbose:e,doValidation:l,metrics:i}),{callbackList:h,history:u}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Nr(n,e={},t=!1){return Kl(n,Ns.getMap().classNameMap,e,"layer",t)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function uc(n,e){return ce(()=>{n.dtype!=="float32"&&(n=Pe(n,"float32"));const t=Ue(Yl(n),e,!0),s=ja(t.shape,on()),r=Cn(Rr(t,s));return Ke(n,r)})}function nd(n,e){return ce(()=>Kt(Yl(Ve(e,n)),-1))}function Hg(n,e){return ce(()=>Kt(sn(Ve(e,n)),-1))}function jg(n,e){return ce(()=>{const t=Ve(n,e),s=os(sn(n),on(),Number.MAX_VALUE),r=sn(Ke(t,s));return J(100,Kt(r,-1))})}function Ez(n,e){return ce(()=>{const t=os(e,on(),Number.MAX_VALUE),s=ys(Ne(1,t)),r=os(n,on(),Number.MAX_VALUE),o=ys(Ne(1,r));return Kt(Yl(Ve(s,o)),-1)})}function Az(n,e){return ce(()=>{const t=Rr(0,Ve(1,J(n,e)));return Kt(Yl(t),-1)})}function Dz(n,e){return ce(()=>{const t=Rr(0,Ve(1,J(n,e)));return Kt(t,-1)})}function Rz(n,e){return ce(()=>{const t=Ue(J(n,e),-1),s=Fs(J(Ve(1,n),e),-1);return Rr(0,Ne(1,Ve(s,t)))})}function Fz(n,e){return ce(()=>{const t=Math.log(2),s=Ve(e,n),r=Ve(Ne(s,qa(J(-2,s))),t);return Kt(r,-1)})}function Fi(n,e,t=!1){return ce(()=>{if(t)e=Wh(e);else{const s=Ue(e,e.shape.length-1,!0);e=Ke(e,s)}return e=os(e,on(),1-on()),Pt(Ue(J(Pe(n,"float32"),ys(e)),e.shape.length-1))})}function cc(n,e,t=!1){return ce(()=>{const s=Pe(Ul(ez(n)),"int32");e=os(e,on(),1-on());const r=e.shape,o=te(Nm(s,r[r.length-1]),r);return Fi(o,e,t)})}function Oz(n,e){if(!ft(n.shape,e.shape))throw new ne(`logits and labels must have the same shape, but got shapes ${JSON.stringify(n.shape)} and ${JSON.stringify(e.shape)}`);return ce(()=>{const t=yr(e),s=Pt(sn(e));return Ne(Ve(t,J(e,n)),Dh(as(s)))})}function sd(n,e){return ce(()=>{let t;return t=os(e,on(),1-on()),t=ys(Ke(t,Ve(1,t))),Kt(Oz(n,t),-1)})}function Lz(n,e){return ce(()=>{const t=os(n,on(),1),s=os(e,on(),1);return Ue(J(n,ys(Ke(t,s))),-1)})}function Pz(n,e){return ce(()=>{const t=ys(Ne(on(),e));return Kt(Ve(e,J(n,t)),-1)})}function lv(n,e){return ce(()=>{const t=uc(n,-1),s=uc(e,-1),r=J(t,s);return Pt(Ue(r,-1))})}const hc={meanSquaredError:nd,meanAbsoluteError:Hg,meanAbsolutePercentageError:jg,meanSquaredLogarithmicError:Ez,squaredHinge:Az,hinge:Dz,categoricalHinge:Rz,logcosh:Fz,categoricalCrossentropy:Fi,sparseCategoricalCrossentropy:cc,binaryCrossentropy:sd,kullbackLeiblerDivergence:Lz,poisson:Pz,cosineProximity:lv};function Hd(n){if(typeof n=="string"){if(n in hc)return hc[n];let e=`Unknown loss ${n}`;throw n.toLowerCase().includes("softmaxcrossentropy")&&(e=`Unknown loss ${n}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new ne(e)}else return n}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function uv(n,e){return ce(()=>{const t=J(.5,bs(e)),s=dr(ds(e,t),n.dtype);return Kt(qs(n,s),-1)})}function cv(n,e){return ce(()=>dr(qs(Da(n,-1),Da(e,-1)),"float32"))}function zz(n,e){return ce(()=>Pe(Ue(fr(qs(n,1),qs(e,1))),"float32"))}function Bz(n,e){return ce(()=>Pe(Ue(fr(qs(n,0),qs(e,1))),"float32"))}function Mz(n,e){return ce(()=>{const t=zz(n,e),s=Bz(n,e),r=Ne(t,s);return Pe(An(ds(r,0),Ke(t,r),0),"float32")})}function Vz(n,e){return sd(n,e)}function Wz(n,e){return n.rank===e.rank&&(n=ea(n,[n.rank-1])),e=Da(e,-1),e.dtype!==n.dtype&&(e=Pe(e,n.dtype)),Pe(qs(n,e),"float32")}const Uz=nd,Gz=nd,Hz=Hg,jz=Hg,qz=jg,Kz=jg,hv=Fi,Xz=lv,dv=cc,dc={binaryAccuracy:uv,categoricalAccuracy:cv,precision:Mz,categoricalCrossentropy:hv,sparseCategoricalCrossentropy:dv,mse:Uz,MSE:Gz,mae:Hz,MAE:jz,mape:qz,MAPE:Kz,cosine:Xz};function Yz(n){if(typeof n=="string"&&n in dc)return dc[n];if(typeof n!="string"&&n!=null)return n;throw new ne(`Unknown metric ${n}`)}function Ru(n){if(or(n!==null,`Unknown LossOrMetricFn ${n}`),typeof n=="string")return n;{let e;for(const t of Object.keys(hc))if(hc[t]===n){e=t;break}if(e!==void 0)return e;for(const t of Object.keys(dc))if(dc[t]===n){e=t;break}return e!==void 0?e:n.name}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Zz(n){const e={Adagrad:()=>da.adagrad(.01),Adadelta:()=>da.adadelta(1,.95,on()),Adam:()=>da.adam(.001,.9,.999,on()),Adamax:()=>da.adamax(.002,.9,.999,on(),0),RMSProp:()=>da.rmsprop(.001,.9,0,on()),SGD:()=>da.sgd(.01)};if(e.adagrad=e.Adagrad,e.adadelta=e.Adadelta,e.adam=e.Adam,e.adamax=e.Adamax,e.rmsprop=e.RMSProp,e.sgd=e.SGD,n in e)return e[n]();throw new ne(`Unknown Optimizer ${n}`)}/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const Xb=1*1024*1024;function Yb(n,e,t=!1){if(n==null||typeof n!="object"||Object.getPrototypeOf(n)!==Object.prototype||!Wp(n))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(t){const s=JSON.stringify(n);s.length>Xb&&console.warn(`User-defined metadata of model "${e}" is too large in size (length=${s.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= ${Xb}.`)}}function Wp(n){if(n===null)return!0;if(typeof n=="object")if(Object.getPrototypeOf(n)===Object.prototype){const e=Object.keys(n);for(const t of e)if(typeof t!="string"||!Wp(n[t]))return!1;return!0}else if(Array.isArray(n)){for(const e of n)if(!Wp(e))return!1;return!0}else return!1;else{const e=typeof n;return e==="string"||e==="number"||e==="boolean"}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Jz(n,e,t,s=console.log){const r=eB(n),o=["Layer (type)","Input Shape","Output shape","Param #"];r?(e=e||90,t=t||[.32,.61,.89,1]):(e=e||115,t=t||[.24,.48,.7,.8,1]),t[t.length-1]<=1&&(t=t.map(c=>Math.floor(e*c)));let a;if(!r){o.push("Receives inputs"),a=[];for(const c in n.nodesByDepth)a.push(...n.nodesByDepth[c])}s("_".repeat(e)),pc(o,t,s),s("=".repeat(e));const l=n.layers;for(let c=0;c<l.length;++c)r?tB(l[c],t,s):nB(l[c],t,a,s),s((c===l.length-1?"=":"_").repeat(e));n.checkTrainableWeightsConsistency();const i=Qz(n),u=ac(n.nonTrainableWeights);s(`Total params: ${i+u}`),s(`Trainable params: ${i}`),s(`Non-trainable params: ${u}`),s("_".repeat(e))}function Qz(n){let e;return n.collectedTrainableWeights!=null?e=ac(n.collectedTrainableWeights):e=ac(n.trainableWeights),e}function eB(n){let e=!0;const t=[],s=[];for(const r in n.nodesByDepth)t.push(n.nodesByDepth[r]);for(const r of t){if(r.length>1||r.length===1&&r[0].inboundLayers.length>1){e=!1;break}s.push(...r)}if(e)for(const r of n.layers){let o=!1;for(const a of r.inboundNodes)if(s.indexOf(a)!==-1)if(o){e=!1;break}else o=!0;if(!e)break}return e}function pc(n,e,t=console.log){let s="";for(let r=0;r<n.length;++r)r>0&&(s=s.slice(0,s.length-1)+" "),s+=n[r],s=s.slice(0,e[r]),s+=" ".repeat(e[r]-s.length);t(s)}function tB(n,e,t){let s,r;try{r=n.inboundNodes.map(i=>JSON.stringify(i.inputShapes)).join(",")}catch{r="multiple"}try{s=JSON.stringify(n.outputShape)}catch{s="multiple"}const o=n.name,a=n.getClassName(),l=[`${o} (${a})`,r,s,n.countParams().toString()];pc(l,e,t)}function nB(n,e,t,s){let r,o;try{o=n.inboundNodes.map(h=>JSON.stringify(h.inputShapes)).join(",")}catch{o="multiple"}try{r=JSON.stringify(n.outputShape)}catch{r="multiple"}const a=[];for(const h of n.inboundNodes)if(!(t!=null&&t.length>0&&t.indexOf(h)===-1))for(let d=0;d<h.inboundLayers.length;++d){const p=h.inboundLayers[d].name,f=h.nodeIndices[d],g=h.tensorIndices[d];a.push(`${p}[${f}][${g}]`)}const l=n.name,i=n.getClassName(),u=a.length===0?"":a[0],c=[`${l} (${i})`,o,r,n.countParams().toString(),u];pc(c,e,s);for(let h=1;h<a.length;++h)pc(["","","","",a[h]],e,s)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function pv(n,e,t){return(n==="inboundNodes"||n==="outputLayers"||n==="inputLayers")&&e===0&&typeof t=="string"}function Up(n,e){if(n===null)return null;if(typeof n=="string")return No(n);if(typeof n=="number"||typeof n=="boolean")return n;if(n instanceof Array){const t=[],s=n.length;for(let r=0;r<s;++r){const o=n[r];pv(e,r,o)?t.push(o):t.push(Up(o,e))}return t}else{const t={};for(const s of Object.keys(n)){const r=n[s];if(s==="name"&&typeof r=="string")t[s]=r;else{const o=No(s);t[o]=Up(r,o)}}return t}}function Gp(n,e){if(n==null)return null;if(typeof n=="string")return Sr(n);if(typeof n=="number"||typeof n=="boolean")return n;if(n instanceof Array){const t=[],s=n.length;for(let r=0;r<s;++r){const o=n[r];pv(e,r,o)?t.push(o):t.push(Gp(o,e))}return t}else{const t={};for(const s of Object.keys(n)){const r=n[s],o=Sr(s);(s==="name"||s==="className")&&typeof r=="string"?t[o]=r:t[o]=Gp(r,s)}return t}}/** @license See the LICENSE file. */const fv="4.21.0";/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const sB=n=>{const e=Object.keys(n);if(e.length===0)return!1;const t=e[0].split("/");return!isNaN(parseInt(t[t.length-1],10))};class Us extends ht{constructor(e){if(super({}),this.containerNodes=new Set,this.name=e.name,this.name==null){const w=this.getClassName().toLowerCase();this.name=Qh(w)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(e.inputs)?this.inputs=e.inputs.slice():this.inputs=[e.inputs],Array.isArray(e.outputs)?this.outputs=e.outputs.slice():this.outputs=[e.outputs],Hr(this.inputs).length!==this.inputs.length)throw new ne(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map(w=>w.name)}`);Hr(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map(w=>w.name)}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(const w of this.outputs){const v=w.sourceLayer,k=w.nodeIndex,C=w.tensorIndex;this.outputLayers.push(v),this.outputLayersNodeIndices.push(k),this.outputLayersTensorIndices.push(C)}for(const w of this.inputs){const v=w.sourceLayer,k=w.nodeIndex,C=w.tensorIndex;or(k===0,"input layer has >1 nodes"),or(C===0,"input layer has >1 tensors"),this.inputLayers.push(v),this.inputLayersNodeIndices.push(k),this.inputLayersTensorIndices.push(C)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let w=0;w<this.inputLayers.length;w++){const v=this.inputLayers[w];if(!(v instanceof Jl))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${e.inputs}. Input ${w} (0-based) originates from layer type ${v.getClassName()}.`);this.inputNames.push(v.name),this.feedInputShapes.push(v.batchInputShape),this.feedInputNames.push(v.name)}for(const w of this.outputLayers)this.outputNames.push(w.name);this.internalInputShapes=this.inputs.map(w=>w.shape),this.internalOutputShapes=this.outputs.map(w=>w.shape);const t={},s={},r={},o={},a={},l=[],i=(w,v,k,C,I,N)=>{(C==null||I==null||N==null)&&(C=w.sourceLayer,I=w.nodeIndex,N=w.tensorIndex);const E=C.inboundNodes[I];if(k.indexOf(E)!==-1)throw new As(`The tensor ${w.name} at layer "${C.name}" is part of a cycle.`);if(v.indexOf(E)!==-1)return;this.containerNodes.add(Us.nodeKey(C,I)),C.id in a||(a[C.id]=Object.keys(a).length),k.indexOf(E)===-1&&k.push(E);const R=E.inboundLayers.length;for(let O=0;O<R;O++){const B=E.inputTensors[O],j=E.inboundLayers[O],U=E.nodeIndices[O],K=E.tensorIndices[O];i(B,v,k,j,U,K)}for(v.push(E);k.indexOf(E)>=0;)k.splice(k.indexOf(E),1);l.push(E)},u=[],c=[];for(const w of this.outputs)i(w,u,c);const h=l.slice().reverse();for(const w of h){s[w.id]=w,w.id in t||(t[w.id]=0);let v=t[w.id];const k=r[w.outboundLayer.id]==null?0:r[w.outboundLayer.id];v=Math.max(v,k),r[w.outboundLayer.id]=v,o[w.outboundLayer.id]=w.outboundLayer,t[w.id]=v;for(let C=0;C<w.inboundLayers.length;C++){const I=w.inboundLayers[C],N=w.nodeIndices[C],E=I.inboundNodes[N],R=t[E.id]==null?0:t[E.id];t[E.id]=Math.max(v+1,R),s[E.id]=E}}const d={};for(const w in t){const v=t[w];v in d||(d[v]=[]),d[v].push(s[w])}const p={};for(const w in r){const v=r[w];v in p||(p[v]=[]),p[v].push(o[w])}let f=Object.keys(p).map(w=>parseInt(w,10)).sort(Eu);this.layers=[];for(const w of f){const v=p[w];v.sort((k,C)=>{const I=a[k.id],N=a[C.id];return I<N?-1:I>N?1:0});for(const k of v)k instanceof Us&&this.internalContainerRefs.push(k),this.layers.push(k)}this.layersByDepth=p,f=Object.keys(d).map(w=>parseInt(w,10)).sort(Eu);const g=this.inputs.slice(),y=[];for(const w of f)for(const v of d[w]){const k=v.outboundLayer;if(k!=null){for(const C of v.inputTensors)if(g.indexOf(C)===-1)throw new As(`Graph disconnected: cannot obtain value for tensor ${C} at layer "${k.name}". The following previous layers were accessed without issue: ${y}`);for(const C of v.outputTensors)g.push(C);y.push(k.name)}}this.nodesByDepth=d;const x=this.layers.map(w=>w.name);for(const w of x){const v=x.filter(k=>k===w).length;if(v!==1)throw new As(`The name "${w}" is used ${v} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(x))}this.outboundNodes=[],this.inboundNodes=[],new td({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map(w=>null),outputMasks:this.outputs.map(w=>null),inputShapes:this.inputs.map(w=>w.shape),outputShapes:this.outputs.map(w=>w.shape)}),this.built=!0,this._refCount=1}assertNotDisposed(){if(this._refCount===0)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();const e={refCountAfterDispose:null,numDisposedVariables:0};if(--this._refCount===0){for(const t of this.layers)e.numDisposedVariables+=t.dispose().numDisposedVariables;for(const t of this.internalContainerRefs)e.numDisposedVariables+=t.dispose().numDisposedVariables}return e.refCountAfterDispose=this._refCount,e}get trainable(){return this.trainable_}set trainable(e){this.layers.forEach(t=>{t._trainableWeights.forEach(s=>s.trainable=e)}),this.trainable_=e}get trainableWeights(){if(this._trainableWeights.length>0)throw new ne("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let e=[];for(const t of this.layers)e=e.concat(t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.layers)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const s of this.layers)t.push(...s.trainableWeights);return t.concat(e)}return e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(e,t=!0){const s={};let r=0;const o=sB(e);o&&this.parseWeights(e);for(const l of this.layers)for(const[i,u]of l.weights.entries()){const c=o?`${u.name.split("/").slice(0,-1).join("/")+"/"}${i}`:u.originalName;if(s[c]!=null)throw new ne(`Duplicate weight name: ${c}`);s[c]=u,r++}const a=[];for(const l in e){let i=l;if(s[l]==null){const u=l.split("/");i=u.slice(0,-2).concat([u[u.length-1]]).join("/")}if(s[i]!=null)a.push([s[i],e[l]]);else if(t)throw new ne(`Provided weight data has no target variable: ${l}`);delete s[i]}if(t){const l=[];for(const i in s)l.push(i);if(l.length>0)throw new ne(`${l.length} of ${r} weights are not set: ${l}`)}Ug(a)}parseWeights(e){for(const t in Object.keys(e)){const s=t.split("/"),r=["vars","layer_checkpoint_dependencies"],o=s.map(a=>a.startsWith("_")?a.slice(1):a).filter(a=>!r.includes(a)).join("/");o!==t&&(e[o]=e[t],delete e[t])}}updatedConfig(){const e=this.getConfig(),t={};return t.className=this.getClassName(),t.config=e,t.kerasVersion=`tfjs-layers ${fv}`,t.backend="TensorFlow.js",t}toJSON(e,t=!0){const s=Gp(this.updatedConfig());return t?JSON.stringify(s):s}call(e,t){return ce(()=>{e=Nt(e);const s=new Vr;for(let r=0;r<this.inputs.length;++r)s.add(this.inputs[r],e[r]);return vi(this.outputs,s,t)})}computeMask(e,t){return ce(()=>{e=Nt(e);let s;return t==null?s=Go(null,e.length):s=Nt(t),this.runInternalGraph(e,s)[1]})}computeOutputShape(e){const t=oc(e);if(t.length!==this.inputLayers.length)throw new ne(`Invalid inputShape argument ${e}: model has ${this.inputLayers.length} tensor inputs.`);const s={};for(let l=0;l<t.length;l++){const i=this.inputLayers[l],u=t[l],c=i.name+"_0_0";s[c]=u}const r=Object.keys(this.nodesByDepth).map(l=>parseInt(l,10)).sort(Eu);if(r.length>1)for(const l of r){const i=this.nodesByDepth[l];for(const u of i){const c=u.outboundLayer;if(this.inputLayers.map(g=>g.id).indexOf(c.id)!==-1)continue;const h=[];for(let g=0;g<u.inboundLayers.length;g++){const y=u.inboundLayers[g],x=u.nodeIndices[g],w=u.tensorIndices[g],v=`${y.name}_${x}_${w}`,k=s[v];h.push(k)}const d=c.computeOutputShape(jn(h)),p=oc(d),f=c.inboundNodes.indexOf(u);for(let g=0;g<p.length;g++){const y=`${c.name}_${f}_${g}`;s[y]=p[g]}}}const o=[],a=[];for(let l=0;l<this.outputLayers.length;l++){const i=this.outputLayers[l],u=this.outputLayersNodeIndices[l],c=this.outputLayersTensorIndices[l],h=`${i.name}_${u}_${c}`;a.push(h)}for(let l=0;l<a.length;l++){const i=a[l];or(i in s),o.push(s[i])}return jn(o)}runInternalGraph(e,t){t==null&&(t=Go(null,e.length));const s={};for(let i=0;i<this.inputs.length;++i){const u=this.inputs[i],c=e[i],h=t[i];s[u.id]=[c,h]}const r=Object.keys(this.nodesByDepth).map(i=>parseInt(i,10)).sort(Eu);for(const i of r){const u=this.nodesByDepth[i];for(const c of u){const h=c.outboundLayer,d=c.inputTensors,p=c.outputTensors,f=new Array;for(const g of d)g.id in s&&f.push(s[g.id]);if(f.length===d.length){let g={},y,x,w,v;if(c.callArgs!=null&&(g=c.callArgs),f.length===1){const[k,C]=f[0];g.mask==null&&(g.mask=C),w=Nt(h.call(k,g)),v=Nt(h.computeMask(k,C)),y=[k],x=[C]}else y=f.map(k=>k[0]),x=f.map(k=>k[1]),g.mask==null&&(g.mask=x),w=Nt(h.call(y,g)),v=Nt(h.computeMask(y,x));if(h.activityRegularizer)throw new it("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let k=0;k<p.length;++k){const C=p[k],I=w[k],N=v[k];s[C.id]=[I,N]}}}}const o=[],a=[],l=[];for(const i of this.outputs){or(i.id in s,`Could not compute output ${i.name} : ${i.id}`);const[u,c]=s[i.id];l.push(u.shape),o.push(u),a.push(c)}return[o,a,l]}buildNodeConversionMap(e){const t={};let s;for(const r of this.layers){s=r instanceof Us?1:0;for(let o=0;o<r.inboundNodes.length;o++){const a=Us.nodeKey(r,o);this.containerNodes.has(a)&&(t[a]=s,s+=1)}}return t}getLayer(e,t){if(t!=null)return this.findLayer(t);if(e==null)throw new ne("Provide either a layer name or layer index");if(typeof e=="number")return this.findLayer(e);for(const s of this.layers)if(s.name===e)return s;throw new ne(`No such layer: ${e}`)}findLayer(e){if(this.layers.length<=e)throw new ne(`Was asked to retrieve layer at index ${e}, but model only has ${this.layers.length} layer(s).`);return this.layers[e]}calculateLosses(){return ce(()=>{const e=[];for(const t of this.layers)for(let s=0;s<t.inboundNodes.length;++s){const r=Us.nodeKey(t,s);this.containerNodes.has(r)&&e.push(...t.calculateLosses())}return e})}getConfig(){const e={name:this.name},t=this.buildNodeConversionMap(this.layers),s=[];for(const a of this.layers){const l=a.getClassName(),i=a.getConfig(),u=[];for(let h=0;h<a.inboundNodes.length;h++){const d=a.inboundNodes[h],p=Us.nodeKey(a,h);let f={};if(this.containerNodes.has(p)){if(d.callArgs)try{JSON.stringify(d.callArgs),f=d.callArgs}catch{console.warn(`Layer ${a.name} was passed non-serializable keyword arguments: ${d.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),f={}}if(d.inboundLayers.length>0){const g=[];for(let y=0;y<d.inboundLayers.length;y++){const x=d.inboundLayers[y],w=d.nodeIndices[y],v=d.tensorIndices[y],k=Us.nodeKey(x,w);let C=t[k];C==null&&(C=0),g.push([x.name,C,v,f])}u.push(g)}}}const c={};c.name=a.name,c.className=l,c.config=i,c.inboundNodes=u,s.push(c)}e.layers=s;const r=[];for(let a=0;a<this.inputLayers.length;a++){const l=this.inputLayers[a],i=this.inputLayersNodeIndices[a],u=Us.nodeKey(l,i);if(!this.containerNodes.has(u))continue;let c=t[u];c==null&&(c=0);const h=this.inputLayersTensorIndices[a];r.push([l.name,c,h])}e.inputLayers=r;const o=[];for(let a=0;a<this.outputLayers.length;a++){const l=this.outputLayers[a],i=this.outputLayersNodeIndices[a],u=Us.nodeKey(l,i);if(!this.containerNodes.has(u))continue;let c=t[u];c==null&&(c=0);const h=this.outputLayersTensorIndices[a];o.push([l.name,c,h])}return e.outputLayers=o,e}static fromConfig(e,t,s={},r=!1){const o={},a={};function l(y,x){y.name in a?a[y.name].push(x):a[y.name]=[x]}function i(y,x){const w=[];let v;for(const k of x){const C=k[0],I=k[1],N=k[2];if(v=k[3]==null?{}:k[3],!(C in o)){l(y,x);return}const E=o[C];if(E.inboundNodes.length<=I){l(y,x);return}const R=E.inboundNodes[I];w.push(R.outputTensors[N])}w.length>0&&y.apply(jn(w),v)}function u(y){const x=y.name,w=Nr(y,t.customObjects!=null?t.customObjects:{});w.setFastWeightInitDuringBuild(r),o[x]=w,y.inboundNodes.forEach(k=>{if(!(k instanceof Array))throw new ne(`Corrupted configuration, expected array for nodeData: ${k}`);l(w,k)})}const c=t.name,h=t.layers;for(const y of h)u(y);for(;!VP(a);)for(const y of h){const x=o[y.name];if(x.name in a){const w=a[x.name];delete a[x.name];for(const v of w)i(x,v)}}const d=[],p=[],f=t.inputLayers;for(const y of f){const x=y[0],w=y[1],v=y[2];or(x in o);const C=o[x].inboundNodes[w].outputTensors;d.push(C[v])}const g=t.outputLayers;for(const y of g){const x=y[0],w=y[1],v=y[2];or(x in o);const C=o[x].inboundNodes[w].outputTensors;p.push(C[v])}return new e({inputs:d,outputs:p,name:c})}get stateful(){if(this._stateful)throw new ne("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(const e of this.layers)if(e.stateful)return!0;return!1}resetStates(){ce(()=>{this.layers.forEach(e=>{e.stateful&&e.resetStates()})})}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function rB(n,e,t){const s=e.length;if(n==null||Array.isArray(n)&&n.length===0)return e.map(r=>null);if(s===1)return Array.isArray(n)&&n.length===1?n:typeof n=="object"&&e[0]in n?[n[e[0]]]:[n];if(Array.isArray(n)){if(n.length!==s)throw new Error(`Provided ${t} is an array of ${n.length} element(s), but the model has ${s} outputs. Make sure a set of weights is provided for each model output.`);return n}else if(typeof n=="object"&&Object.keys(n).length>0&&typeof n[Object.keys(n)[0]]=="object"){const r=[];return e.forEach(o=>{o in n?r.push(n[o]):r.push(null)}),r}else throw new Error(`The model has multiple (${s}) outputs, so ${t} must be either an array with ${s} elements or an object with ${e} keys. Provided ${t} not understood: ${JSON.stringify(n)}`)}function mv(n,e){return rB(n,e,"classWeight")}async function gv(n,e,t,s){if(t!=null){const r=ce(()=>{if(n.shape.length===1)return Ir(n);if(n.shape.length===2){if(n.shape[1]>1)return Da(n,1);if(n.shape[1]===1)return te(n,[n.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${n.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}else throw new Error(`Unexpected rank of target (y) tensor (${n.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)}),o=Array.from(await r.data());ut(r);const a=[];return o.forEach(l=>{if(t[l]==null)throw new Error(`classWeight must contain all classes in the training data. The class ${l} exists in the data but not in classWeight`);a.push(t[l])}),En(a,"float32")}else return null}function oB(n,e){return J(n,e)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const aB=32;function yv(n,e){let t,s;const r=e;t=r.xs,s=r.ys,P(t!=null&&s!=null,()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${e}`);const o=Zb("input",n.inputNames,t),a=Zb("output",n.outputNames,s),l=o[0].shape[0];P(o.length===n.inputs.length,()=>`LayersModel has ${n.inputs.length} inputs, but the dataset provides ${o.length} inputs.  (Expected input keys: ${JSON.stringify(n.inputNames)})`),P(a.length===n.outputs.length,()=>`LayersModel has ${n.outputs.length} outputs, but the dataset provides ${a.length} outputs.  (Expected output keys: ${JSON.stringify(n.outputNames)})`);for(let i=0;i<o.length;i++)P(o[i].shape[0]===l,()=>`Batch size mismatch: input ${n.inputNames[i]} has ${o[i].shape[0]}; expected  ${l} based on input ${n.inputNames[0]}.`);for(let i=0;i<a.length;i++)P(a[i].shape[0]===l,()=>`Batch size mismatch: output ${n.outputNames[i]} has ${a[i].shape[0]}; expected  ${l} based on input ${n.inputNames[0]}.`);return{xs:o,ys:a}}function Zb(n,e,t){if(t instanceof Gt)return[t];if(Array.isArray(t))return P(t.length===e.length,()=>`Received an array of ${t.length} Tensors, but expected ${e.length} to match the ${n} keys ${e}.`),t;{const s=[];for(const r of e){if(t[r]==null)throw new ne(`The feature data generated by the dataset lacks the required ${n} key '${r}'.`);s.push(t[r])}return s}}function iB(n){if(n.length===3)throw new it("Validation with sample weights is not implemented yet.");return{xs:n[0],ys:n[1]}}async function lB(n,e,t){const s=t.batchesPerEpoch!=null;if(P(n.optimizer!=null,()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig)."),P(t!=null,()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call."),P(t.epochs!=null&&t.epochs>0&&Number.isInteger(t.epochs),()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${t.epochs}`),P(!s||t.batchesPerEpoch>0&&Number.isInteger(t.batchesPerEpoch),()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${t.batchesPerEpoch}`),P(t.validationSplit==null,()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead."),n.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");n.isTraining=!0;try{const r=t.validationData!=null;let o,a;if(r)if(Jb(t.validationData))P(t.validationBatches==null||t.validationBatches>0&&Number.isInteger(t.validationBatches),()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${t.validationBatches}`);else{const y=iB(t.validationData);o=y.xs,a=y.ys}const l=n.makeTrainFunction(),i=n.getDedupedMetricsNames();let u;r?u=i.slice().concat(i.map(y=>"val_"+y)):u=i.slice();const c=av(t.callbacks,t.yieldEvery),h=t.verbose==null?1:t.verbose,{callbackList:d,history:p}=iv(c,h,t.epochs,null,null,uB(e,t),null,r,u);d.setModel(n),n.history=p,await d.onTrainBegin(),n.stopTraining_=!1;let f=t.initialEpoch==null?0:t.initialEpoch,g=await e.iterator();for(;f<t.epochs;){const y={};await d.onEpochBegin(f);let x=0,w=0;for(s||(g=await e.iterator());!s||x<t.batchesPerEpoch;){const v=await g.next();if(s&&v.done){console.warn(`You provided \`batchesPerEpoch\` as ${t.batchesPerEpoch}, but your dataset iterator ran out of data after ${x} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, ${t.batchesPerEpoch*t.epochs} batches). You may need to use the repeat() function when building your dataset.`);break}if(v.value!=null){const{xs:k,ys:C}=yv(n,v.value),I={};I.batch=w,I.size=k[0].shape[0],await d.onBatchBegin(w,I);const N=[];if(t.classWeight!=null){const O=mv(t.classWeight,n.outputNames);for(let B=0;B<O.length;++B)N.push(await gv(C[B],null,O[B]))}const E=k.concat(C).concat(N),R=l(E);ut(E);for(let O=0;O<i.length;++O){const B=i[O],j=R[O];I[B]=j,mn(j)}await d.onBatchEnd(w,I),ov(I),w++,x++}if(s?x>=t.batchesPerEpoch:v.done){if(r){let k;Jb(t.validationData)?k=Nt(await n.evaluateDataset(t.validationData,{batches:t.validationBatches})):k=Nt(n.evaluate(o,a,{batchSize:t.validationBatchSize==null?aB:t.validationBatchSize,verbose:0}));for(let C=0;C<n.metricsNames.length;++C)y[`val_${n.metricsNames[C]}`]=k[C]}break}if(n.stopTraining_)break}if(await d.onEpochEnd(f,y),f++,n.stopTraining_)break}return await d.onTrainEnd(),await n.history.syncData(),n.history}finally{n.isTraining=!1}}function uB(n,e){let t=null;return e.batchesPerEpoch!=null?t=e.batchesPerEpoch:Number.isFinite(n.size)&&(t=n.size),t}function Jb(n){return typeof n.iterator=="function"}function cB(n){return typeof n.next=="function"}async function hB(n,e,t){t=t||{};const s=t.batches!=null,r=n.testFunction;let o=[];if(t.verbose>0)throw new it("Verbose mode is not implemented yet.");P(!s||t.batches>0&&Number.isInteger(t.batches),()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(t.batches)}`);const a=cB(e)?e:await e.iterator();let l=0,i=0;for(;!s||i<t.batches;){const u=await a.next();if(o=ce(()=>{if(u.value){const{xs:c,ys:h}=yv(n,u.value),d=c.concat(h),p=ce(()=>r(d));if(ut(d),i===0)for(let g=0;g<p.length;++g)o.push(Ye(0));const f=d[0].shape[0];for(let g=0;g<p.length;++g){const y=p[g],x=o[g];o[g]=ce(()=>Ne(o[g],J(f,y))),i>0&&ut(x)}ut(p),l+=f,++i}return o}),u.done){s&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${t.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let u=0;u<o.length;++u){const c=o[u];o[u]=Ke(o[u],l),ut(c)}return jn(o)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function jd(n){P(n>0&&Number.isInteger(n),()=>`batchSize is required to be a positive integer, but got ${n}`)}function yi(n,e,t){return n==null?[null]:Array.isArray(n)?n.map(s=>Do(s,e,t-e)):Do(n,e,t-e)}function Hp(n,e){return ce(()=>n==null?null:Array.isArray(n)?n.map(t=>Hp(t,e)):Hw(n,e.dtype==="int32"?e:Pe(e,"int32")))}function qd(n,e){const t=[];let s=0,r=null;for(;s<n;)r=s+e,r>=n&&(r=n),t.push([s,r]),s=r;return t}function bv(n){const e=[];n instanceof Gt&&(n=[n]);for(let t=0;t<n.length;++t){const s=n[t];if(s.rank===1)e.push(Xl(s,1));else{if(s.rank===0)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");e.push(s)}}return e}function Ws(n,e){if(n==null)return;const t=[];if(e instanceof Gt)t.push(e.id);else if(Array.isArray(e))e.forEach(r=>t.push(r.id));else if(e!=null)for(const r in e){const o=e[r];t.push(o.id)}const s=[];if(n instanceof Gt)t.indexOf(n.id)===-1&&s.push(n);else if(Array.isArray(n))n.forEach(r=>{t.indexOf(r.id)===-1&&s.push(r)});else if(n!=null)for(const r in n){const o=n[r];t.indexOf(o.id)===-1&&s.push(o)}s.forEach(r=>{r.isDisposed||r.dispose()})}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function dB(n){return n instanceof Gt}function jp(n){return Array.isArray(n)}function Qb(n){return!dB(n)&&!jp(n)}function e0(n,e,t,s=!0,r=""){if(e==null||e.length===0){if(n!=null){let a=!1;if(jp(n)&&n.length>0)a=!0;else if(Qb(n)){for(const l in n)if(n.hasOwnProperty(l)){a=!0;break}}else a=!0;if(a)throw new ne(`Error when checking model ${r} expected no data, but got ${n}`)}return[]}if(n==null)return e.map(a=>null);let o;if(Qb(n)){n=n,o=[];for(const a of e){if(n[a]==null)throw new ne(`No data provided for "${a}". Need data for each key in: ${e}`);o.push(n[a])}}else if(jp(n)){if(n=n,n.length!==e.length)throw new ne(`Error when checking model ${r}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${e.length} Tensor(s), but instead got the following list of Tensor(s): ${n}`);o=n}else{if(n=n,e.length>1)throw new ne(`The model ${r} expects ${e.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${n.shape}`);o=[n]}if(o=bv(o),t!=null)for(let a=0;a<e.length;++a){if(t[a]==null)continue;const l=o[a];if(l.shape.length!==t[a].length)throw new ne(`Error when checking ${r}: expected ${e[a]} to have ${t[a].length} dimension(s). but got array with shape ${l.shape}`);for(let i=0;i<t[a].length;++i){if(i===0&&!s)continue;const u=l.shape[i],c=t[a][i];if(c!=null&&c>=0&&u!==c)throw new ne(`${r} expected a batch of elements where each example has shape [${t[a].slice(1,t[a].length)}] (i.e.,tensor shape [*,${t[a].slice(1,t[a].length)}]) but the ${r} received an input with ${l.shape[0]} examples, each with shape [${l.shape.slice(1,l.shape.length)}] (tensor shape [${l.shape}])`)}}return o}function pB(n,e,t){const s=Hr(n.map(o=>o.shape[0]));s.sort();const r=Hr(e.map(o=>o.shape[0]));if(r.sort(),s.length>1)throw new ne(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(n.map(o=>o.shape))}`);if(r.length>1)throw new ne(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(e.map(o=>o.shape))}`);if(s.length>0&&r.length>0&&!ft(s,r))throw new ne(`Input Tensors should have the same number of samples as target Tensors. Found ${s[0]} input sample(s) and ${r[0]} target sample(s).`)}function fB(n,e,t){const s=[nd,sd,Fi];for(let r=0;r<n.length;++r){const o=n[r],a=e[r],l=t[r];if(a!=null){if(a===Fi&&o.shape[o.shape.length-1]===1)throw new ne(`You are passing a target array of shape ${o.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(s.indexOf(a)!==-1){const i=o.shape.slice(1),u=l.slice(1);for(let c=0;c<i.length;++c){const h=i[c],d=u[c];if(d!=null&&h!==d)throw new ne(`A target Tensor with shape ${o.shape} was passed for an output of shape ${l}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}function t0(n,e,t,s=!0,r=""){let o;if(Array.isArray(n)){if(n.length!==e.length)throw new ne(`Error when checking model ${r}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${e.length} Tensor(s), but instead got ${n.length} Tensors(s).`);o=n}else{if(e.length>1)throw new ne(`The model expects ${e.length} ${r} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(n.shape)}.`);o=[n]}if(t!=null)for(let a=0;a<e.length;++a){if(t[a]==null)continue;const l=o[a];if(l.shape.length!==t[a].length)throw new ne(`Error when checking ${r}: expected ${e[a]} to have ${t[a].length} dimension(s), but got array with shape ${JSON.stringify(l.shape)}`);for(let i=0;i<t[a].length;++i){if(i===0&&!s)continue;const u=l.shape[i],c=t[a][i];if(c!=null&&c!==u)throw new ne(`Error when checking ${r}: expected ${e[a]} to have shape ${JSON.stringify(t[a])} but got array with shape ${JSON.stringify(l.shape)}.`)}}}function mB(n,e){if(n==null||Array.isArray(n)&&n.length===0)return e.map(s=>[]);let t;if(typeof n=="string"||typeof n=="function")t=[n];else if(Array.isArray(n)||typeof n=="object")t=n;else throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${n}`);if(Array.isArray(t))return e.map(s=>t);{const s=[];for(const r of e){let o=t.hasOwnProperty(r)?t[r]:[];Array.isArray(o)||(o=[o]),s.push(o)}return s}}const gB="layers-model";class $a extends Us{constructor(e){super(e),this.isTraining=!1}summary(e,t,s=console.log){if(!this.built)throw new ne("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");Jz(this,e,t,s)}compile(e){if(e.loss==null&&(e.loss=[]),this.loss=e.loss,typeof e.optimizer=="string")this.optimizer_=Zz(e.optimizer),this.isOptimizerOwned=!0;else{if(!(e.optimizer instanceof ho))throw new ne("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=e.optimizer,this.isOptimizerOwned=!1}let t=[];if(!Array.isArray(e.loss)&&typeof e.loss!="string"&&typeof e.loss!="function"){e.loss=e.loss;for(const a in e.loss)if(this.outputNames.indexOf(a)===-1)throw new ne(`Unknown entry in loss dictionary: "${a}". Only expected the following keys: ${this.outputNames}`);for(const a of this.outputNames)e.loss[a]==null&&console.warn(`Output "${a}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${a} during training`),t.push(Hd(e.loss[a]))}else if(Array.isArray(e.loss)){if(e.loss.length!==this.outputs.length)throw new ne(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${e.loss}.`);t=e.loss.map(l=>Hd(l))}else{const a=Hd(e.loss);this.outputs.forEach(l=>{t.push(a)})}this.lossFunctions=t,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let a=0;a<this.outputs.length;++a){const l=this.internalOutputShapes[a],i=this.outputNames[a];this.feedOutputNames.push(i),this.feedOutputShapes.push(l),this.feedLossFns.push(this.lossFunctions[a])}const s=[];this.metrics=e.metrics,this.metricsNames=["loss"],this.metricsTensors=[],Ao("loss",()=>{for(let a=0;a<this.outputs.length;++a){if(s.indexOf(a)!==-1)continue;const l=this.lossFunctions[a];this.outputs.length>1&&(this.metricsTensors.push([l,a]),this.metricsNames.push(this.outputNames[a]+"_loss"))}});const r=mB(e.metrics,this.outputNames),o=(a,l,i)=>{this.outputNames.length>1&&(l=this.outputNames[a]+"_"+l),this.metricsNames.push(l),this.metricsTensors.push([i,a])};Ao("metric",()=>{for(let a=0;a<this.outputs.length;++a){if(s.indexOf(a)!==-1)continue;const l=r[a];(u=>{const c="";let h,d,p;for(const f of u){if(typeof f=="string"&&["accuracy","acc","crossentropy","ce"].indexOf(f)!==-1){const y=this.internalOutputShapes[a];y[y.length-1]===1||this.lossFunctions[a]===sd?["accuracy","acc"].indexOf(f)!==-1?d=uv:["crossentropy","ce"].indexOf(f)!==-1&&(d=Vz):this.lossFunctions[a]===cc?["accuracy","acc"].indexOf(f)!==-1?d=Wz:["crossentropy","ce"].indexOf(f)!==-1&&(d=dv):["accuracy","acc"].indexOf(f)!==-1?d=cv:["crossentropy","ce"].indexOf(f)!==-1&&(d=hv);let x;["accuracy","acc"].indexOf(f)!==-1?x="acc":["crossentropy","ce"].indexOf(f)!==-1&&(x="ce"),p=d,h=c+x}else p=Yz(f),h=c+Ru(f);let g;Ao(h,()=>{g=p}),o(a,h,g)}})(l)}}),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){this.collectedTrainableWeights!=null&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(e,t,s={}){const r=s.batchSize==null?32:s.batchSize;jd(r);const a=this.standardizeUserDataXY(e,t,!0,r);try{const l=a[0].concat(a[1]);this.makeTestFunction();const i=this.testFunction,u=this.testLoop(i,l,r,s.verbose,s.steps);return jn(u)}finally{Ws(a[0],e),Ws(a[1],t)}}async evaluateDataset(e,t){return this.makeTestFunction(),hB(this,e,t)}checkNumSamples(e,t,s,r="steps"){let o;if(s!=null){if(o=null,t!=null)throw new ne(`If ${r} is set, batchSize must be null or undefined.Got batchSize = ${t}`)}else if(e!=null)Array.isArray(e)?o=e[0].shape[0]:o=e.shape[0];else throw new ne(`Either the input data should have a defined shape, or ${r} shoud be specified.`);return o}execute(e,t){if(Array.isArray(t)&&t.length===0)throw new ne("`outputs` is an empty Array, which is not allowed.");const s=Array.isArray(t),r=s?t:[t],o=this.retrieveSymbolicTensors(r),a=new Vr;if(e instanceof Gt&&(e=[e]),Array.isArray(e)){if(e.length!==this.inputs.length)throw new ne(`The number of inputs provided (${e.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let i=0;i<this.inputs.length;++i)a.add(this.inputs[i],e[i])}else for(const i of this.inputs){const u=e[i.name];if(u==null)throw new ne(`No value is provided for the model's input ${i.name}`);a.add(i,u)}const l=vi(o,a);return s?l:l[0]}retrieveSymbolicTensors(e){const t=Go(null,e.length);let s=e.length;for(const r of this.layers){const o=Array.isArray(r.output)?r.output:[r.output],a=o.map(l=>l.name);for(let l=0;l<e.length;++l){const i=a.indexOf(e[l]);if(i!==-1&&(t[l]=o[i],s--),s===0)break}if(s===0)break}if(s>0){const r=[];throw t.forEach((o,a)=>{o==null&&r.push(e[a])}),new ne(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(r)}`)}return t}predictLoop(e,t=32,s=!1){return ce(()=>{const r=this.checkNumSamples(e);if(s)throw new it("Verbose predictLoop() is not implemented yet.");const o=qd(r,t),a=this.outputs.map(l=>[]);for(let l=0;l<o.length;++l)ce(()=>{const u=o[l][0],c=o[l][1],h=yi(e,u,c),d=[];if(Array.isArray(h))for(let f=0;f<h.length;++f)d.push({key:this.inputs[f],value:h[f]});else d.push({key:this.inputs[0],value:h});const p=new Vr(d);return vi(this.outputs,p)}).forEach((u,c)=>a[c].push(u));return jn(a.map(l=>nn(l,0)))})}predict(e,t={}){const s=bv(e);t0(s,this.inputNames,this.feedInputShapes,!1);try{const r=t.batchSize==null?32:t.batchSize;return jd(r),this.predictLoop(s,r)}finally{Ws(s,e)}}predictOnBatch(e){t0(e,this.inputNames,this.feedInputShapes,!0);const t=(Array.isArray(e)?e[0]:e).shape[0];return this.predictLoop(e,t)}standardizeUserDataXY(e,t,s=!0,r){if(this.optimizer_==null)throw new As("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const o=[];for(let a=0;a<this.feedOutputShapes.length;++a){const l=this.feedOutputShapes[a];this.feedLossFns[a]===cc?o.push(l.slice(0,l.length-1).concat([1])):o.push(l)}if(e=e0(e,this.feedInputNames,this.feedInputShapes,!1,"input"),t=e0(t,this.feedOutputNames,o,!1,"target"),pB(e,t),fB(t,this.feedLossFns,this.feedOutputShapes),this.stateful&&r!=null&&r>0&&e[0].shape[0]%r!==0)throw new ne(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${r}. Found: ${e[0].shape[0]} sample(s).`);return[e,t]}async standardizeUserData(e,t,s,r,o=!0,a){const[l,i]=this.standardizeUserDataXY(e,t,o,a);if(s!=null)throw new Error("sample weight is not supported yet.");let u=null;if(r!=null){const c=mv(r,this.outputNames);u=[];for(let h=0;h<c.length;++h)u.push(await gv(i[h],null,c[h]))}return[l,i,u]}testLoop(e,t,s,r=0,o){return ce(()=>{const a=this.checkNumSamples(t,s,o,"steps"),l=[];if(r>0)throw new it("Verbose mode is not implemented yet.");if(o!=null)throw new it("steps mode in testLoop() is not implemented yet");{const i=qd(a,s),u=En(Ks(0,a));for(let c=0;c<i.length;++c){const h=i[c][0],d=i[c][1],p=Do(u,h,d-h),f=Hp(t,p),g=e(f);if(c===0)for(let y=0;y<g.length;++y)l.push(Ye(0));for(let y=0;y<g.length;++y){const x=g[y];l[y]=Ne(l[y],J(d-h,x))}}for(let c=0;c<l.length;++c)l[c]=Ke(l[c],a)}return l})}getDedupedMetricsNames(){const e=this.metricsNames,t=[];for(let s=0;s<e.length;++s){const r=e[s];let o=r;if(Bb(e,r)>1){const a=Bb(e.slice(0,s),r);o+=`_${a}`}t.push(o)}return t}makeTrainFunction(){return e=>{const t=[],s=e.slice(0,this.inputs.length),r=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),o=e.slice(this.inputs.length+this.outputs.length,this.inputs.length+this.outputs.length*2),a=[],l=()=>{const h=[];for(let g=0;g<this.inputs.length;++g)h.push({key:this.inputs[g],value:s[g]});const d=new Vr(h),p=vi(this.outputs,d,{training:!0});let f;for(let g=0;g<this.lossFunctions.length;++g){const y=this.lossFunctions[g];let x=y(r[g],p[g]);o[g]!=null&&(x=oB(x,o[g]));const w=Kt(x);t.push(w),g===0?f=x:f=Ne(f,x)}for(let g=0;g<this.metricsTensors.length;++g){let y;if(this.outputs.length>1&&g<this.outputs.length)y=t[g];else{const x=this.metricsTensors[g][0],w=this.metricsTensors[g][1];y=Kt(x(r[w],p[w]))}mn(y),a.push(y)}return f=Kt(f),this.calculateLosses().forEach(g=>{f=Ne(f,g)}),f},i=this.collectedTrainableWeights.map(h=>h.read());return[this.optimizer_.minimize(l,!0,i)].concat(a)}}makeTestFunction(){this.testFunction=e=>ce(()=>{const t=[];let s;const r=e.slice(0,this.inputs.length),o=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),a=[];for(let u=0;u<this.inputs.length;++u)a.push({key:this.inputs[u],value:r[u]});const l=new Vr(a),i=vi(this.outputs,l);for(let u=0;u<this.lossFunctions.length;++u){const c=this.lossFunctions[u],h=Kt(c(o[u],i[u]));u===0?s=h:s=Ne(s,h),t.push(s)}for(let u=0;u<this.metricsTensors.length;++u){const c=this.metricsTensors[u][0],h=this.metricsTensors[u][1],d=Kt(c(o[h],i[h]));t.push(d)}return t})}async fit(e,t,s={}){if(this.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");this.isTraining=!0;let r,o,a,l,i,u,c,h,d;try{const p=s.batchSize==null?32:s.batchSize;jd(p);const g=await this.standardizeUserData(e,t,s.sampleWeight,s.classWeight,!1,p);r=g[0],o=g[1],d=g[2];let y=!1,x;if(s.validationData!=null&&s.validationData.length>0){if(y=!0,s.validationData.length===2)i=s.validationData[0],u=s.validationData[1];else throw s.validationData.length===3?new it("validationData including sample weights is not supported yet."):new ne(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${s.validationData} is invalid.`);const O=await this.standardizeUserData(i,u,null,null,!0,p);c=O[0],h=O[1],x=c.concat(h)}else if(s.validationSplit!=null&&s.validationSplit>0&&s.validationSplit<1){y=!0;const R=Math.floor(r[0].shape[0]*(1-s.validationSplit)),O=r[0].shape[0];c=yi(r,R,O),a=r,r=yi(r,0,R),h=yi(o,R,O),l=o,o=yi(o,0,R),x=c.concat(h)}else s.validationSteps!=null&&(y=!0);const w=r.concat(o).concat(d);this.checkTrainableWeightsConsistency();const v=this.makeTrainFunction(),k=this.getDedupedMetricsNames();let C,I;y?(this.makeTestFunction(),C=this.testFunction,I=k.slice().concat(k.map(R=>"val_"+R))):(C=null,x=[],I=k.slice());const N=av(s.callbacks,s.yieldEvery);return await this.fitLoop(v,w,k,p,s.epochs,s.verbose,N,C,x,s.shuffle,I,s.initialEpoch,null,null)}finally{this.isTraining=!1,Ws(r,e),Ws(o,t),Ws(a,e),Ws(l,t),Ws(c,i),Ws(h,u),d!=null&&ut(d)}}async fitLoop(e,t,s,r,o,a,l,i,u,c,h,d,p,f){r==null&&(r=32),o==null&&(o=1),c==null&&(c=!0),d==null&&(d=0);let g=!1;if(i!=null&&u!=null&&(g=!0),f!=null&&(g=!0,p==null))throw new ne("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");const y=this.checkNumSamples(t,r,p,"steps_per_epoch");let x;y!=null&&(x=Ks(0,y)),a==null&&(a=1);const{callbackList:w,history:v}=iv(l,a,o,d,y,p,r,g,h);w.setModel(this),this.history=v,await w.onTrainBegin(),this.stopTraining_=!1;for(let k=d;k<o;++k){await w.onEpochBegin(k);const C={};if(p!=null)throw new it("stepsPerEpoch mode is not implemented yet.");{if(c==="batch")throw new it("batch shuffling is not implemneted yet");c&&TN(x);const I=En(x),N=qd(y,r);for(let E=0;E<N.length;++E){const R={};if(await w.onBatchBegin(E,R),ce(()=>{const O=N[E][0],B=N[E][1],j=Do(I,O,B-O);R.batch=E,R.size=B-O;const U=Hp(t,j),K=e(U);for(let H=0;H<s.length;++H){const Z=s[H],ue=K[H];R[Z]=ue,mn(ue)}if(E===N.length-1&&g){const H=this.testLoop(i,u,r);for(let Z=0;Z<s.length;++Z){const ue=s[Z],M=H[Z];mn(M),C["val_"+ue]=M}}}),await w.onBatchEnd(E,R),ov(R),this.stopTraining_)break}I.dispose()}if(await w.onEpochEnd(k,C),this.stopTraining_)break}return await w.onTrainEnd(),await this.history.syncData(),this.history}async fitDataset(e,t){return lB(this,e,t)}async trainOnBatch(e,t){const s=await this.standardizeUserData(e,t),r=s[0],o=s[1],l=this.makeTrainFunction()(r.concat(o)),i=[];for(const u of l){const c=await u.data();i.push(c[0])}return ut(l),Ws(s[0],e),Ws(s[1],t),jn(i)}getNamedWeights(e){const t=[],s=e!=null&&e.trainableOnly,r=s?this.trainableWeights:this.weights,o=this.getWeights(s);for(let a=0;a<r.length;++a)s&&!r[a].trainable||t.push({name:r[a].originalName,tensor:o[a]});return t}set stopTraining(e){this.stopTraining_=e}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(e){this.optimizer_!==e&&(this.optimizer_=e,this.isOptimizerOwned=!1)}dispose(){const e=super.dispose();if(e.refCountAfterDispose===0&&this.optimizer!=null&&this.isOptimizerOwned){const t=pb().numTensors;this.optimizer_.dispose(),e.numDisposedVariables+=t-pb().numTensors}return e}getLossIdentifiers(){let e;if(typeof this.loss=="string")e=Sr(this.loss);else if(Array.isArray(this.loss)){for(const t of this.loss)if(typeof t!="string")throw new Error("Serialization of non-string loss is not supported.");e=this.loss.map(t=>Sr(t))}else{const t=Object.keys(this.loss);e={};const s=this.loss;for(const r of t)if(typeof s[r]=="string")e[r]=Sr(s[r]);else throw new Error("Serialization of non-string loss is not supported.")}return e}getMetricIdentifiers(){if(typeof this.metrics=="string"||typeof this.metrics=="function")return[Sr(Ru(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map(e=>Sr(Ru(e)));{const e={};for(const t in this.metrics)e[t]=Sr(Ru(this.metrics[t]));return e}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(e){if(e.weighted_metrics!=null)throw new Error("Loading weight_metrics is not supported yet.");if(e.loss_weights!=null)throw new Error("Loading loss_weights is not supported yet.");if(e.sample_weight_mode!=null)throw new Error("Loading sample_weight_mode is not supported yet.");const t=Up(e.optimizer_config),s=Nr(t);let r;if(typeof e.loss=="string")r=No(e.loss);else if(Array.isArray(e.loss))r=e.loss.map(a=>No(a));else if(e.loss!=null){r={};for(const a in e.loss)r[a]=No(e.loss[a])}let o;if(Array.isArray(e.metrics))o=e.metrics.map(a=>No(a));else if(e.metrics!=null){o={};for(const a in e.metrics)o[a]=No(e.metrics[a])}this.compile({loss:r,metrics:o,optimizer:s})}async save(e,t){if(typeof e=="string"){const u=Sx(e);if(u.length===0)throw new ne(`Cannot find any save handlers for URL '${e}'`);if(u.length>1)throw new ne(`Found more than one (${u.length}) save handlers for URL '${e}'`);e=u[0]}if(e.save==null)throw new ne("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const s=await mp(this.getNamedWeights(t)),l={modelTopology:this.toJSON(null,!1),format:gB,generatedBy:`TensorFlow.js tfjs-layers v${fv}`,convertedBy:null};if((t==null?!1:t.includeOptimizer)&&this.optimizer!=null){l.trainingConfig=this.getTrainingConfig();const u="optimizer",{data:c,specs:h}=await mp(await this.optimizer.getWeights(),u);s.specs.push(...h),s.data=wx([s.data,c])}return this.userDefinedMetadata!=null&&(Yb(this.userDefinedMetadata,this.name,!0),l.userDefinedMetadata=this.userDefinedMetadata),l.weightData=s.data,l.weightSpecs=s.specs,e.save(l)}setUserDefinedMetadata(e){Yb(e,this.name),this.userDefinedMetadata=e}getUserDefinedMetadata(){return this.userDefinedMetadata}}$a.className="Model";Te($a);class xv extends $a{}xv.className="Functional";Te(xv);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Oi extends $a{constructor(e){if(super({inputs:[],outputs:[]}),e=e||{},this.trainable=!0,this.built=!1,this.name=e.name!=null?e.name:Qh("sequential_"),e.layers!=null)for(const t of e.layers)this.add(t)}checkShape(e){if(e.inboundNodes[0].outputTensors[0].shape.some(s=>s<0))throw new ne(`Negative dimension size caused by adding layer ${e.name} with input shape [${e.inboundNodes[0].inputTensors[0].shape}]`)}add(e){const t=e instanceof Oi||e instanceof $a;let s;if(t){if(s=e,s.outputs.length!==1)throw new ne("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(s.inputs.length!==1)throw new ne("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(this.outputs.length===0){if(e.inboundNodes.length===0){if(e.batchInputShape==null)throw new ne("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const r=bz({batchShape:e.batchInputShape,dtype:e.dtype,name:e.name+"_input"});e.apply(r)}if(t)this.outputs=s.outputs,this.inputs=s.inputs;else{if(e.inboundNodes.length!==1)throw new ne(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${e.name} which has ${e.inboundNodes.length} pre-existing inbound connections.`);if(e.inboundNodes[0].outputTensors.length!==1)throw new ne("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[e.inboundNodes[0].outputTensors[0]],this.inputs=ev(this.outputs[0])}this.inboundNodes=[],new td({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:Go(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map(r=>r.shape),outputShapes:this.outputs[0].shape})}else{const r=e.apply(this.outputs[0]);if(Array.isArray(r))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[r],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(e),this.built=!1}pop(){if(this.layers.length===0)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),this.layers.length===0)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const e=this.layers.length-1;this.layers[e].outboundNodes=[],this.outputs=[this.layers[e].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(e,t){return this.model==null&&this.build(),this.model.call(e,t)}build(e){if(xt(e),this.inputs.length===0||this.outputs.length===0)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new $a({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(e,t,s=console.log){this.built||this.build(),super.summary(e,t,s)}setWeights(e){this.model==null&&this.build(),this.model.setWeights(e)}evaluate(e,t,s={}){if(!this.built)throw new As("The model needs to be compiled before being used.");return this.model.evaluate(e,t,s)}async evaluateDataset(e,t){if(!this.built)throw new As("The model needs to be compiled before being used.");return this.model.evaluateDataset(e,t)}predict(e,t={}){return this.model==null&&this.build(),this.model.predict(e,t)}predictOnBatch(e){return this.model==null&&this.build(),this.model.predictOnBatch(e)}compile(e){this.build(),this.model.compile(e),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return this.model==null?void 0:this.model.optimizer}set optimizer(e){this.model.optimizer=e}async fit(e,t,s={}){if(!this.built)throw new As("The model needs to be compiled before being used.");return this.model.fit(e,t,s)}async fitDataset(e,t){if(!this.built)throw new As("The model needs to be compiled before being used.");return this.model.fitDataset(e,t)}async trainOnBatch(e,t){return this.model.trainOnBatch(e,t)}static fromConfig(e,t,s={},r=!1){let o,a={};if(t instanceof Array){if(t[0].className==null||t[0].className==="Merge")throw new ne("Legacy serialization format not supported yet.");o=t}else P(t.layers!=null,()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field."),o=t.layers,delete t.layers,a=t;const l=new e(a);if(!(l instanceof Oi))throw new it(`Sequential.fromConfig called on non-Sequential input: ${l}`);for(const i of o){const c=Nr(i,void 0,r);r&&c.setFastWeightInitDuringBuild(!0),l.add(c)}return l}set stopTraining(e){if(this.model==null)throw new ne("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=e}get stopTraining(){if(this.model==null)throw new ne("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const e=[];for(const t of this.layers){const s={};s.className=t.getClassName(),s.config=t.getConfig(),e.push(s)}return{name:this.name,layers:e}}}Oi.className="Sequential";Te(Oi);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */let Rn=class extends Ya{getConfig(){return{}}};class wv extends Rn{apply(e,t=1){return nz(e,t)}}wv.className="elu";Te(wv);class vv extends Rn{apply(e){return zm(e)}}vv.className="selu";Te(vv);class kv extends Rn{apply(e){return yr(e)}}kv.className="relu";Te(kv);class Sv extends Rn{apply(e){return ce(()=>Vo(6,yr(e)))}}Sv.className="relu6";Te(Sv);class Cv extends Rn{apply(e){return e}}Cv.className="linear";Te(Cv);class Iv extends Rn{apply(e){return cr(e)}}Iv.className="sigmoid";Te(Iv);class Nv extends Rn{apply(e){return rz(e)}}Nv.className="hardSigmoid";Te(Nv);class $v extends Rn{apply(e){return qa(e)}}$v.className="softplus";Te($v);class Tv extends Rn{apply(e){return sz(e)}}Tv.className="softsign";Te(Tv);class _v extends Rn{apply(e){return Mo(e)}}_v.className="tanh";Te(_v);let qg=class extends Rn{apply(e,t=-1){return Wh(e,t)}};qg.className="softmax";Te(qg);class Ev extends Rn{apply(e,t=-1){return Sm(e,t)}}Ev.className="logSoftmax";Te(Ev);class Av extends Rn{apply(e){return ce(()=>ce(()=>{const t=Math.sqrt(2),s=J(.5,Ne(1,wm(Ke(e,t))));return J(e,s)}))}}Av.className="gelu";Te(Av);class Dv extends Rn{apply(e){return ce(()=>J(.5,J(e,Ne(1,Mo(J(Cn(Ke(2,Math.PI)),Ne(e,J(.044715,$r(e,3)))))))))}}Dv.className="gelu_new";Te(Dv);class Rv extends Rn{apply(e){return ce(()=>J(e,Mo(qa(e))))}}Rv.className="mish";Te(Rv);class Fv extends Rn{apply(e,t=1){return ce(()=>J(cr(J(e,t)),e))}}Fv.className="swish";Te(Fv);function Qr(n){return n.getClassName()}function Kd(n,e={}){return Kl(n,Ns.getMap().classNameMap,e,"activation")}function eo(n){if(n==null){const e={};return e.className="linear",e.config={},Kd(e)}if(typeof n=="string"){const e={};return e.className=n,e.config={},Kd(e)}else return n instanceof Rn?n:Kd(n)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function yB(n){if(n!=null&&typeof n!="object")throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${n}`)}class Ov extends Ya{}class Lv extends Ov{constructor(e){super(),yB(e),this.l1=e==null||e.l1==null?.01:e.l1,this.l2=e==null||e.l2==null?.01:e.l2,this.hasL1=this.l1!==0,this.hasL2=this.l2!==0}apply(e){return ce(()=>{let t=rn([1]);return this.hasL1&&(t=Ne(t,Ue(J(this.l1,sn(e))))),this.hasL2&&(t=Ne(t,Ue(J(this.l2,Yl(e))))),te(t,[])})}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,t){return new e({l1:t.l1,l2:t.l2})}}Lv.className="L1L2";Te(Lv);const n0={l1l2:"L1L2"};function Et(n){return Rg(n)}function s0(n,e={}){return Kl(n,Ns.getMap().classNameMap,e,"regularizer")}function Mt(n){if(n==null)return null;if(typeof n=="string"){const t={className:n in n0?n0[n]:n,config:{}};return s0(t)}else return n instanceof Ov?n:s0(n)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Pv extends ht{constructor(e){super(e??{}),this.supportsMasking=!0,e!=null&&(this.maxValue=e.maxValue)}call(e,t){e=et(e);let s=yr(e);return this.maxValue!=null&&(s=os(s,0,this.maxValue)),s}computeOutputShape(e){return e}getConfig(){const e={maxValue:this.maxValue},t=super.getConfig();return Object.assign(e,t),e}}Pv.className="ReLU";Te(Pv);class zv extends ht{constructor(e){super(e??{}),this.DEFAULT_ALPHA=.3,e==null&&(e={}),this.alpha=e.alpha==null?this.DEFAULT_ALPHA:e.alpha}call(e,t){const s=et(e);return Ah(s,this.alpha)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}zv.className="LeakyReLU";Te(zv);class Bv extends ht{constructor(e){if(super(e??{}),this.DEFAULT_ALPHA_INITIALIZER="zeros",e==null&&(e={}),this.supportsMasking=!0,this.alphaInitializer=Bt(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=Mt(e.alphaRegularizer),this.alphaConstraint=cn(e.alphaConstraint),e.sharedAxes==null)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else if(typeof e.sharedAxes=="number")this.sharedAxes=[e.sharedAxes];else throw new ne(`Expected sharedAxes to be a number or an array of numbers, but got ${e.sharedAxes}`)}build(e){e=xt(e);const t=e.slice(1);if(this.sharedAxes!=null)for(const r of this.sharedAxes)t[r-1]=1;this.alpha=this.addWeight("alpha",t,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const s={};if(this.sharedAxes!=null)for(let r=1;r<e.length;++r)s[r]=e[r];this.inputSpec=[new an({ndim:e.length,axes:s})],this.built=!0}call(e,t){return e=et(e),zh(e,this.alpha.read())}getConfig(){const e={alphaInitializer:Ht(this.alphaInitializer),alphaRegularizer:Et(this.alphaRegularizer),alphaConstraint:un(this.alphaConstraint),sharedAxes:this.sharedAxes},t=super.getConfig();return Object.assign(e,t),e}}Bv.className="PReLU";Te(Bv);let Mv=class extends ht{constructor(e){if(super(e??{}),this.DEFAULT_ALPHA=1,e==null&&(e={}),e.alpha!=null&&e.alpha!==this.DEFAULT_ALPHA)throw new it(`Non-default alpha value (${e.alpha}) is not supported by the ELU layer yet.`);this.alpha=e.alpha==null?this.DEFAULT_ALPHA:e.alpha}call(e,t){const s=et(e);return Vl(s)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}};Mv.className="ELU";Te(Mv);class Vv extends ht{constructor(e){super(e??{}),this.DEFAULT_THETA=1,e==null&&(e={}),this.theta=e.theta==null?this.DEFAULT_THETA:e.theta}call(e,t){const s=et(e);return J(s,Pe(ds(s,this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){const e={theta:this.theta},t=super.getConfig();return Object.assign(e,t),e}}Vv.className="ThresholdedReLU";Te(Vv);class Wv extends ht{constructor(e){super(e??{}),this.DEFAULT_AXIS=1,e==null&&(e={}),this.softmax=new qg().apply,this.axis=e.axis==null?this.DEFAULT_AXIS:e.axis}call(e,t){return ce(()=>{let s=et(e);const r=t.mask;if(r!=null){const o=J(Ve(ns(s.shape),Pe(r,s.dtype)),Ye(-1e9));s=Ne(s,o)}return this.axis instanceof Array?this.axis.length>1?as(Ve(s,Rh(s,this.axis,!0))):this.softmax(s,this.axis[0]):this.softmax(s,this.axis)})}computeOutputShape(e){return e}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}Wv.className="Softmax";Te(Wv);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Ta(n,e,t){if(typeof n=="number")return Go(n,e);if(n.length!==e)throw new ne(`The ${t} argument must be an integer or tuple of ${e} integers. Received: ${n.length} elements.`);for(let s=0;s<e;++s){const r=n[s];if(!JP(r))throw new ne(`The ${t} argument must be an integer or tuple of ${e} integers. Received: ${JSON.stringify(n)} including a non-integer number ${r}`)}return n}function js(n,e,t,s,r=1){if(n==null)return n;const o=e+(e-1)*(r-1);let a;return t==="same"?a=n:a=n-o+1,Math.floor((a+s-1)/s)}function ar(n,e,t,s){if(n==null)return null;if(s==="valid")n=n*e+Jr([t-e,0]);else if(s==="same")n=n*e;else throw new ne(`Unsupport padding mode: ${s}.`);return n}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Kg(n,e){return ce(()=>(en(e),e==="channelsFirst"?gt(n,[0,2,3,1]):n))}function Uv(n,e){return ce(()=>(en(e),e==="channelsFirst"?gt(n,[0,2,3,4,1]):n))}function bB(n,e,t,s=1,r="valid",o,a=1){return ce(()=>{if(o==null&&(o=Xs()),en(o),n.shape.length!==3)throw new ne(`The input of a conv1dWithBias operation should be 3, but is ${n.shape.length} instead.`);if(e.shape.length!==3)throw new ne(`The kernel for a conv1dWithBias operation should be 3, but is ${e.shape.length} instead`);if(t!=null&&t.shape.length!==1)throw new ne(`The bias for a conv1dWithBias operation should be 1, but is ${t.shape.length} instead`);if(o==="channelsFirst"&&(n=gt(n,[0,2,1])),r==="causal")throw new it("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let l=mm(n,e,s,r==="same"?"same":"valid","NWC",a);return t!=null&&(l=Qs(l,t)),l})}function r0(n,e,t,s=[1,1],r="valid",o,a,l=null){return ce(()=>{if(o==null&&(o=Xs()),en(o),n.rank!==3&&n.rank!==4)throw new ne(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${n.rank}.`);if(e.rank!==3&&e.rank!==4)throw new ne(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${n.rank}.`);let i=Kg(n,o);if(r==="causal")throw new it("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return i=E1({x:i,filter:e,strides:s,pad:r==="same"?"same":"valid",dilations:a,dataFormat:"NHWC",bias:t,activation:l}),o==="channelsFirst"&&(i=gt(i,[0,3,1,2])),i})}function xB(n,e,t,s=[1,1,1],r="valid",o,a){return ce(()=>{if(o==null&&(o=Xs()),en(o),n.rank!==4&&n.rank!==5)throw new ne(`conv3dWithBias expects input to be of rank 4 or 5, but received ${n.rank}.`);if(e.rank!==4&&e.rank!==5)throw new ne(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${n.rank}.`);let l=Uv(n,o);if(r==="causal")throw new it("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return l=Yx(l,e,s,r==="same"?"same":"valid","NDHWC",a),t!=null&&(l=Qs(l,t)),o==="channelsFirst"&&(l=gt(l,[0,4,1,2,3])),l})}class rd extends ht{constructor(e,t){if(super(t),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",rd.verifyArgs(t),this.rank=e,gn(this.rank,"rank"),this.rank!==1&&this.rank!==2&&this.rank!==3)throw new it(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=Ta(t.kernelSize,e,"kernelSize"),this.strides=Ta(t.strides==null?1:t.strides,e,"strides"),this.padding=t.padding==null?"valid":t.padding,ws(this.padding),this.dataFormat=t.dataFormat==null?"channelsLast":t.dataFormat,en(this.dataFormat),this.activation=eo(t.activation),this.useBias=t.useBias==null?!0:t.useBias,this.biasInitializer=Bt(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=cn(t.biasConstraint),this.biasRegularizer=Mt(t.biasRegularizer),this.activityRegularizer=Mt(t.activityRegularizer),this.dilationRate=Ta(t.dilationRate==null?1:t.dilationRate,e,"dilationRate"),this.rank===1&&Array.isArray(this.dilationRate)&&this.dilationRate.length!==1)throw new ne(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(this.rank===2){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==2)throw new ne(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(this.rank===3){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==3)throw new ne(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}}static verifyArgs(e){if(or("kernelSize"in e,"required key 'kernelSize' not in config"),typeof e.kernelSize!="number"&&!Fg(e.kernelSize,"number",1,3))throw new ne(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(e.kernelSize)}.`)}getConfig(){const e={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:Qr(this.activation),useBias:this.useBias,biasInitializer:Ht(this.biasInitializer),biasRegularizer:Et(this.biasRegularizer),activityRegularizer:Et(this.activityRegularizer),biasConstraint:un(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}class Za extends rd{constructor(e,t){super(e,t),this.kernel=null,Za.verifyArgs(t),this.filters=t.filters,gn(this.filters,"filters"),this.kernelInitializer=Bt(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=cn(t.kernelConstraint),this.kernelRegularizer=Mt(t.kernelRegularizer)}build(e){e=xt(e);const t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null)throw new ne(`The channel dimension of the input should be defined. Found ${e[t]}`);const s=e[t],r=this.kernelSize.concat([s,this.filters]);this.kernel=this.addWeight("kernel",r,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[t]:s}}],this.built=!0}call(e,t){return ce(()=>{e=et(e);let s;const r=this.bias==null?null:this.bias.read(),o=Bw(this.activation.getClassName());if(o!=null&&this.rank===2)s=r0(e,this.kernel.read(),r,this.strides,this.padding,this.dataFormat,this.dilationRate,o);else{if(this.rank===1)s=bB(e,this.kernel.read(),r,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(this.rank===2)s=r0(e,this.kernel.read(),r,this.strides,this.padding,this.dataFormat,this.dilationRate);else if(this.rank===3)s=xB(e,this.kernel.read(),r,this.strides,this.padding,this.dataFormat,this.dilationRate);else throw new it("convolutions greater than 3D are not implemented yet.");this.activation!=null&&(s=this.activation.apply(s))}return s})}computeOutputShape(e){e=xt(e);const t=[],s=this.dataFormat==="channelsLast"?e.slice(1,e.length-1):e.slice(2);for(let o=0;o<s.length;++o){const a=js(s[o],this.kernelSize[o],this.padding,this.strides[o],typeof this.dilationRate=="number"?this.dilationRate:this.dilationRate[o]);t.push(a)}let r=[e[0]];return this.dataFormat==="channelsLast"?(r=r.concat(t),r.push(this.filters)):(r.push(this.filters),r=r.concat(t)),r}getConfig(){const e={filters:this.filters,kernelInitializer:Ht(this.kernelInitializer),kernelRegularizer:Et(this.kernelRegularizer),kernelConstraint:un(this.kernelConstraint)},t=super.getConfig();return Object.assign(e,t),e}static verifyArgs(e){if(!("filters"in e)||typeof e.filters!="number"||e.filters<1)throw new ne(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(e.filters)}`)}}class eu extends Za{constructor(e){super(2,e),eu.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!Fg(e.kernelSize,"number",1,2))throw new ne(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(e.kernelSize)}.`)}}eu.className="Conv2D";Te(eu);class tu extends Za{constructor(e){super(3,e),tu.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!(Array.isArray(e.kernelSize)&&(e.kernelSize.length===1||e.kernelSize.length===3)))throw new ne(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(e.kernelSize)}.`)}}tu.className="Conv3D";Te(tu);class Gv extends eu{constructor(e){if(super(e),this.inputSpec=[new an({ndim:4})],this.padding!=="same"&&this.padding!=="valid")throw new ne(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(e=xt(e),e.length!==4)throw new ne("Input should have rank 4; Received input shape: "+JSON.stringify(e));const t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null)throw new ne("The channel dimension of the inputs should be defined. Found `None`.");const s=e[t],r=this.kernelSize.concat([this.filters,s]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new an({ndim:4,axes:{[t]:s}})],this.built=!0}call(e,t){return ce(()=>{let s=et(e);if(s.shape.length!==4)throw new ne(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${s.shape.length}`);const r=s.shape,o=r[0];let a,l;this.dataFormat==="channelsFirst"?(a=2,l=3):(a=1,l=2);const i=r[a],u=r[l],c=this.kernelSize[0],h=this.kernelSize[1],d=this.strides[0],p=this.strides[1],f=ar(i,d,c,this.padding),g=ar(u,p,h,this.padding),y=[o,f,g,this.filters];this.dataFormat!=="channelsLast"&&(s=gt(s,[0,2,3,1]));let x=ym(s,this.kernel.read(),y,this.strides,this.padding);return this.dataFormat!=="channelsLast"&&(x=gt(x,[0,3,1,2])),this.bias!=null&&(x=Qs(x,this.bias.read(),this.dataFormat)),this.activation!=null&&(x=this.activation.apply(x)),x})}computeOutputShape(e){e=xt(e);const t=e.slice();let s,r,o;this.dataFormat==="channelsFirst"?(s=1,r=2,o=3):(s=3,r=1,o=2);const a=this.kernelSize[0],l=this.kernelSize[1],i=this.strides[0],u=this.strides[1];return t[s]=this.filters,t[r]=ar(t[r],i,a,this.padding),t[o]=ar(t[o],u,l,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}Gv.className="Conv2DTranspose";Te(Gv);class Hv extends tu{constructor(e){if(super(e),this.inputSpec=[new an({ndim:5})],this.padding!=="same"&&this.padding!=="valid")throw new ne(`Conv3DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(e=xt(e),e.length!==5)throw new ne("Input should have rank 5; Received input shape: "+JSON.stringify(e));const t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null)throw new ne("The channel dimension of the inputs should be defined. Found `None`.");const s=e[t],r=this.kernelSize.concat([this.filters,s]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new an({ndim:5,axes:{[t]:s}})],this.built=!0}call(e,t){return ce(()=>{let s=et(e);if(s.shape.length!==5)throw new ne(`Conv3DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${s.shape.length}`);const r=s.shape,o=r[0];let a,l,i;this.dataFormat==="channelsFirst"?(i=2,a=3,l=4):(i=1,a=2,l=3);const u=r[i],c=r[a],h=r[l],d=this.kernelSize[0],p=this.kernelSize[1],f=this.kernelSize[2],g=this.strides[0],y=this.strides[1],x=this.strides[2],w=ar(u,g,d,this.padding),v=ar(c,y,p,this.padding),k=ar(h,x,f,this.padding),C=[o,w,v,k,this.filters];this.dataFormat!=="channelsLast"&&(s=gt(s,[0,2,3,4,1]));let I=Jx(s,this.kernel.read(),C,this.strides,this.padding);return this.dataFormat!=="channelsLast"&&(I=gt(I,[0,4,1,2,3])),this.bias!==null&&(I=Qs(I,this.bias.read(),this.dataFormat)),this.activation!==null&&(I=this.activation.apply(I)),I})}computeOutputShape(e){e=xt(e);const t=e.slice();let s,r,o,a;this.dataFormat==="channelsFirst"?(s=1,r=2,o=3,a=4):(s=4,r=1,o=2,a=3);const l=this.kernelSize[0],i=this.kernelSize[1],u=this.kernelSize[2],c=this.strides[0],h=this.strides[1],d=this.strides[2];return t[s]=this.filters,t[r]=ar(t[r],c,l,this.padding),t[o]=ar(t[o],h,i,this.padding),t[a]=ar(t[a],d,u,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}Hv.className="Conv3DTranspose";Te(Hv);class jv extends Za{constructor(e,t){if(super(e,t),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,t.filters==null)throw new ne("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(t.kernelInitializer!=null||t.kernelRegularizer!=null||t.kernelConstraint!=null)throw new ne("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(t.padding!=null&&t.padding!=="same"&&t.padding!=="valid")throw new ne(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(t.padding)}`);this.depthMultiplier=t.depthMultiplier==null?1:t.depthMultiplier,this.depthwiseInitializer=Bt(t.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=Mt(t.depthwiseRegularizer),this.depthwiseConstraint=cn(t.depthwiseConstraint),this.pointwiseInitializer=Bt(t.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=Mt(t.pointwiseRegularizer),this.pointwiseConstraint=cn(t.pointwiseConstraint)}build(e){if(e=xt(e),e.length<this.rank+2)throw new ne(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(e)}`);const t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null||e[t]<0)throw new ne(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(e[t])}`);const s=e[t],r=this.kernelSize.concat([s,this.depthMultiplier]),o=[];for(let l=0;l<this.rank;++l)o.push(1);o.push(s*this.depthMultiplier,this.filters);const a=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",r,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,a,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",o,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,a,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,a,this.biasConstraint):this.bias=null,this.inputSpec=[new an({ndim:this.rank+2,axes:{[t]:s}})],this.built=!0}call(e,t){return ce(()=>{e=et(e);let s;if(this.rank===1)throw new it("1D separable convolution is not implemented yet.");return this.rank===2&&(this.dataFormat==="channelsFirst"&&(e=gt(e,[0,2,3,1])),s=Bm(e,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(s=Qs(s,this.bias.read(),this.dataFormat)),this.activation!=null&&(s=this.activation.apply(s)),this.dataFormat==="channelsFirst"&&(s=gt(s,[0,3,1,2])),s})}getConfig(){const e=super.getConfig();return delete e.rank,delete e.kernelInitializer,delete e.kernelRegularizer,delete e.kernelConstraint,e.depthwiseInitializer=Ht(this.depthwiseInitializer),e.pointwiseInitializer=Ht(this.pointwiseInitializer),e.depthwiseRegularizer=Et(this.depthwiseRegularizer),e.pointwiseRegularizer=Et(this.pointwiseRegularizer),e.depthwiseConstraint=un(this.depthwiseConstraint),e.pointwiseConstraint=un(this.pointwiseConstraint),e}}jv.className="SeparableConv";class qv extends jv{constructor(e){super(2,e)}}qv.className="SeparableConv2D";Te(qv);class od extends Za{constructor(e){super(1,e),od.verifyArgs(e),this.inputSpec=[{ndim:3}]}getConfig(){const e=super.getConfig();return delete e.rank,delete e.dataFormat,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!Fg(e.kernelSize,"number",1,1))throw new ne(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(e.kernelSize)}.`)}}od.className="Conv1D";Te(od);class Kv extends ht{constructor(e){super(e),typeof e.cropping=="number"?this.cropping=[[e.cropping,e.cropping],[e.cropping,e.cropping]]:typeof e.cropping[0]=="number"?this.cropping=[[e.cropping[0],e.cropping[0]],[e.cropping[1],e.cropping[1]]]:this.cropping=e.cropping,this.dataFormat=e.dataFormat===void 0?"channelsLast":e.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(e){return this.dataFormat==="channelsFirst"?[e[0],e[1],e[2]-this.cropping[0][0]-this.cropping[0][1],e[3]-this.cropping[1][0]-this.cropping[1][1]]:[e[0],e[1]-this.cropping[0][0]-this.cropping[0][1],e[2]-this.cropping[1][0]-this.cropping[1][1],e[3]]}call(e,t){return ce(()=>{if(e=et(e),this.dataFormat==="channelsLast"){const s=Du(e,this.cropping[0][0],e.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return Du(s,this.cropping[1][0],e.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}else{const s=Du(e,this.cropping[0][0],e.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return Du(s,this.cropping[1][0],e.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}})}getConfig(){const e={cropping:this.cropping,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}Kv.className="Cropping2D";Te(Kv);class Xv extends ht{constructor(e){super(e),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=e.size==null?this.DEFAULT_SIZE:e.size,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,en(this.dataFormat),this.interpolation=e.interpolation==null?"nearest":e.interpolation,XP(this.interpolation)}computeOutputShape(e){if(this.dataFormat==="channelsFirst"){const t=e[2]==null?null:this.size[0]*e[2],s=e[3]==null?null:this.size[1]*e[3];return[e[0],e[1],t,s]}else{const t=e[1]==null?null:this.size[0]*e[1],s=e[2]==null?null:this.size[1]*e[2];return[e[0],t,s,e[3]]}}call(e,t){return ce(()=>{let s=et(e);const r=s.shape;if(this.dataFormat==="channelsFirst"){s=gt(s,[0,2,3,1]);const o=this.size[0]*r[2],a=this.size[1]*r[3],l=this.interpolation==="nearest"?ir.resizeNearestNeighbor(s,[o,a]):ir.resizeBilinear(s,[o,a]);return gt(l,[0,3,1,2])}else{const o=this.size[0]*r[1],a=this.size[1]*r[2];return this.interpolation==="nearest"?ir.resizeNearestNeighbor(s,[o,a]):ir.resizeBilinear(s,[o,a])}})}getConfig(){const e={size:this.size,dataFormat:this.dataFormat,interpolation:this.interpolation},t=super.getConfig();return Object.assign(e,t),e}}Xv.className="UpSampling2D";Te(Xv);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function wB(n,e,t=[1,1],s="valid",r,o){return ce(()=>{r==null&&(r=Xs()),en(r);let a=Kg(n,r);if(n.rank!==4)throw new ne(`Input for depthwiseConv2d is required to be 4-D, but is instead ${n.rank}-D`);if(e.rank!==4)throw new ne(`depthwiseKernel is required to be 4-D, but is instead ${e.rank}-D`);return a=Ml(a,e,t,s==="same"?"same":"valid","NHWC",o),r==="channelsFirst"&&(a=gt(a,[0,3,1,2])),a})}class Yv extends rd{constructor(e){super(2,e),this.depthwiseKernel=null,this.depthMultiplier=e.depthMultiplier==null?1:e.depthMultiplier,this.depthwiseInitializer=Bt(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=cn(e.depthwiseConstraint),this.depthwiseRegularizer=Mt(e.depthwiseRegularizer)}build(e){if(e=xt(e),e.length<4)throw new ne(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(e)}.`);const t=this.dataFormat==="channelsFirst"?1:3;if(e[t]==null||e[t]<0)throw new ne(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${e[t]}).`);const s=e[t],r=[this.kernelSize[0],this.kernelSize[1],s,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",r,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[s*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return ce(()=>{e=et(e);let s=wB(e,this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(s=Qs(s,this.bias.read(),this.dataFormat)),this.activation!=null&&(s=this.activation.apply(s)),s})}computeOutputShape(e){e=xt(e);const t=this.dataFormat==="channelsFirst"?e[2]:e[1],s=this.dataFormat==="channelsFirst"?e[3]:e[2],r=this.dataFormat==="channelsFirst"?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,o=js(t,this.kernelSize[0],this.padding,this.strides[0]),a=js(s,this.kernelSize[1],this.padding,this.strides[1]);return this.dataFormat==="channelsFirst"?[e[0],r,o,a]:[e[0],o,a,r]}getConfig(){const e=super.getConfig();return e.depthMultiplier=this.depthMultiplier,e.depthwiseInitializer=Ht(this.depthwiseInitializer),e.depthwiseRegularizer=Et(this.depthwiseRegularizer),e.depthwiseConstraint=un(this.depthwiseRegularizer),e}}Yv.className="DepthwiseConv2D";Te(Yv);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Zv(n,e,t,s){if(Array.isArray(n)){if(e!=null||t!=null)throw new ne("When inputs is an array, neither initialState or constants should be provided");s!=null&&(t=n.slice(n.length-s,n.length),n=n.slice(0,n.length-s)),n.length>1&&(e=n.slice(1,n.length)),n=n[0]}function r(o){return o==null||Array.isArray(o)?o:[o]}return e=r(e),t=r(t),{inputs:n,initialState:e,constants:t}}function Jv(n,e,t,s=!1,r,o,a=!1,l=!1){return ce(()=>{const i=e.shape.length;if(i<3)throw new ne(`Input should be at least 3D, but is ${i}D.`);const u=[1,0].concat(Ks(2,i));e=gt(e,u),a&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),r!=null&&(r=Pe(Pe(r,"bool"),"float32"),r.rank===i-1&&(r=zn(r,-1)),r=gt(r,u)),s&&(e=Ls(e,0),r!=null&&(r=Ls(r,0)));const c=[];let h,d=t;const p=e.shape[0],f=Ps(e);let g;r!=null&&(g=Ps(r));for(let x=0;x<p;++x){const w=f[x],v=ce(()=>n(w,d));if(r==null)h=v[0],d=v[1];else{const k=ce(()=>{const C=g[x],I=Ve(bs(C),C),N=Ne(J(v[0],C),J(d[0],I)),E=d.map((R,O)=>Ne(J(v[1][O],C),J(R,I)));return{output:N,newStates:E}});h=k.output,d=k.newStates}l&&c.push(h)}let y;return l&&(y=is(c,1)),[h,y,d]})}class po extends ht{constructor(e){super(e);let t;if(e.cell==null)throw new ne("cell property is missing for the constructor of RNN.");if(Array.isArray(e.cell)?t=new Zg({cells:e.cell}):t=e.cell,t.stateSize==null)throw new ne("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=t,this.returnSequences=e.returnSequences==null?!1:e.returnSequences,this.returnState=e.returnState==null?!1:e.returnState,this.goBackwards=e.goBackwards==null?!1:e.goBackwards,this._stateful=e.stateful==null?!1:e.stateful,this.unroll=e.unroll==null?!1:e.unroll,this.supportsMasking=!0,this.inputSpec=[new an({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){if(this.states_==null){const e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;return Ks(0,e).map(t=>null)}else return this.states_}setStates(e){this.states_=e}computeOutputShape(e){Mp(e)&&(e=e[0]),e=e;let t=this.cell.stateSize;Array.isArray(t)||(t=[t]);const s=t[0];let r;if(this.returnSequences?r=[e[0],e[1],s]:r=[e[0],s],this.returnState){const o=[];for(const a of t)o.push([e[0],a]);return[r].concat(o)}else return r}computeMask(e,t){return ce(()=>{Array.isArray(t)&&(t=t[0]);const s=this.returnSequences?t:null;if(this.returnState){const r=this.states.map(o=>null);return[s].concat(r)}else return s})}get states(){if(this.states_==null){const e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,t=[];for(let s=0;s<e;++s)t.push(null);return t}else return this.states_}set states(e){this.states_=e}build(e){if(this.numConstants!=null)throw new it("Constants support is not implemented in RNN yet.");Mp(e)&&(e=e[0]),e=e;const t=this.stateful?e[0]:null,s=e.slice(2);this.inputSpec[0]=new an({shape:[t,null,...s]});const r=[e[0]].concat(e.slice(2));this.cell.build(r);let o;if(Array.isArray(this.cell.stateSize)?o=this.cell.stateSize:o=[this.cell.stateSize],this.stateSpec!=null){if(!ft(this.stateSpec.map(a=>a.shape[a.shape.length-1]),o))throw new ne(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=o.map(a=>new an({shape:[null,a]}));this.stateful&&this.resetStates()}resetStates(e,t=!1){ce(()=>{if(!this.stateful)throw new rr("Cannot call resetStates() on an RNN Layer that is not stateful.");const s=this.inputSpec[0].shape[0];if(s==null)throw new ne("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.states_==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(r=>rn([s,r])):this.states_=[rn([s,this.cell.stateSize])];else if(e==null)ut(this.states_),this.keptStates!=null&&(ut(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(r=>rn([s,r])):this.states_[0]=rn([s,this.cell.stateSize]);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new ne(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t===!0?this.keptStates.push(this.states_.slice()):ut(this.states_);for(let r=0;r<this.states_.length;++r){const o=e[r],a=Array.isArray(this.cell.stateSize)?this.cell.stateSize[r]:this.cell.stateSize,l=[s,a];if(!ft(o.shape,l))throw new ne(`State ${r} is incompatible with layer ${this.name}: expected shape=${l}, received shape=${o.shape}`);this.states_[r]=o}}this.states_=this.states_.map(r=>mn(r.clone()))})}apply(e,t){let s=t==null?null:t.initialState,r=t==null?null:t.constants;t==null&&(t={});const o=Zv(e,s,r,this.numConstants);e=o.inputs,s=o.initialState,r=o.constants;let a=[],l=[];if(s!=null){t.initialState=s,a=a.concat(s),this.stateSpec=[];for(const u of s)this.stateSpec.push(new an({shape:u.shape}));l=l.concat(this.stateSpec)}if(r!=null&&(t.constants=r,a=a.concat(r),this.numConstants=r.length),a[0]instanceof mr){const u=[e].concat(a),c=this.inputSpec.concat(l),h=this.inputSpec;this.inputSpec=c;const d=super.apply(u,t);return this.inputSpec=h,d}else return super.apply(e,t)}call(e,t){return ce(()=>{const s=t==null?null:t.mask,r=t==null?null:t.training;let o=t==null?null:t.initialState;e=et(e),o==null&&(this.stateful?o=this.states_:o=this.getInitialState(e));const a=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(o.length!==a)throw new ne(`RNN Layer has ${a} state(s) but was passed ${o.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");const l={training:r},u=Jv((f,g)=>{const y=this.cell.call([f].concat(g),l);return[y[0],y.slice(1)]},e,o,this.goBackwards,s,null,this.unroll,this.returnSequences),c=u[0],h=u[1],d=u[2];this.stateful&&this.resetStates(d,r);const p=this.returnSequences?h:c;return this.returnState?[p].concat(d):p})}getInitialState(e){return ce(()=>{let t=rn(e.shape);return t=Ue(t,[1,2]),t=Xl(t),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map(s=>s>1?zp(t,[1,s]):t):this.cell.stateSize>1?[zp(t,[1,this.cell.stateSize])]:[t]})}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.cell!=null&&this.cell.setFastWeightInitDuringBuild(e)}getConfig(){const e=super.getConfig(),t={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};this.numConstants!=null&&(t.numConstants=this.numConstants);const s=this.cell.getConfig();return this.getClassName()===po.className&&(t.cell={className:this.cell.getClassName(),config:s}),Object.assign(Object.assign(Object.assign({},s),e),t)}static fromConfig(e,t,s={}){const r=t.cell,o=Nr(r,s);return new e(Object.assign(t,{cell:o}))}}po.className="RNN";Te(po);class ad extends ht{}class Xg extends ad{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,gn(this.units,"units"),this.activation=eo(e.activation==null?this.DEFAULT_ACTIVATION:e.activation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=Bt(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Bt(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Bt(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=Mt(e.kernelRegularizer),this.recurrentRegularizer=Mt(e.recurrentRegularizer),this.biasRegularizer=Mt(e.biasRegularizer),this.kernelConstraint=cn(e.kernelConstraint),this.recurrentConstraint=cn(e.recurrentConstraint),this.biasConstraint=cn(e.biasConstraint),this.dropout=La([1,Jr([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=La([1,Jr([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=xt(e),this.kernel=this.addWeight("kernel",[e[e.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return ce(()=>{if(e=e,e.length!==2)throw new ne(`SimpleRNNCell expects 2 input Tensors, got ${e.length}.`);let s=e[1];e=e[0];const r=t.training==null?!1:t.training;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=to({ones:()=>bs(e),rate:this.dropout,training:r,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=to({ones:()=>bs(s),rate:this.recurrentDropout,training:r,dropoutFunc:this.dropoutFunc}));let o;const a=this.dropoutMask,l=this.recurrentDropoutMask;a!=null?o=pr(J(e,a),this.kernel.read()):o=pr(e,this.kernel.read()),this.bias!=null&&(o=Qs(o,this.bias.read())),l!=null&&(s=J(s,l));let i=Ne(o,pr(s,this.recurrentKernel.read()));return this.activation!=null&&(i=this.activation.apply(i)),[i,i]})}getConfig(){const e=super.getConfig(),t={units:this.units,activation:Qr(this.activation),useBias:this.useBias,kernelInitializer:Ht(this.kernelInitializer),recurrentInitializer:Ht(this.recurrentInitializer),biasInitializer:Ht(this.biasInitializer),kernelRegularizer:Et(this.kernelRegularizer),recurrentRegularizer:Et(this.recurrentRegularizer),biasRegularizer:Et(this.biasRegularizer),activityRegularizer:Et(this.activityRegularizer),kernelConstraint:un(this.kernelConstraint),recurrentConstraint:un(this.recurrentConstraint),biasConstraint:un(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign(Object.assign({},e),t)}}Xg.className="SimpleRNNCell";Te(Xg);class Qv extends po{constructor(e){e.cell=new Xg(e),super(e)}call(e,t){return ce(()=>{this.cell.dropoutMask!=null&&(ut(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(ut(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const s=t==null?null:t.mask,r=t==null?null:t.training,o=t==null?null:t.initialState;return super.call(e,{mask:s,training:r,initialState:o})})}static fromConfig(e,t){return new e(t)}}Qv.className="SimpleRNN";Te(Qv);class Yg extends ad{constructor(e){if(super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.resetAfter)throw new ne("GRUCell does not support reset_after parameter set to true.");this.units=e.units,gn(this.units,"units"),this.activation=eo(e.activation===void 0?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=eo(e.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=Bt(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Bt(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Bt(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=Mt(e.kernelRegularizer),this.recurrentRegularizer=Mt(e.recurrentRegularizer),this.biasRegularizer=Mt(e.biasRegularizer),this.kernelConstraint=cn(e.kernelConstraint),this.recurrentConstraint=cn(e.recurrentConstraint),this.biasConstraint=cn(e.biasConstraint),this.dropout=La([1,Jr([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=La([1,Jr([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=xt(e);const t=e[e.length-1];this.kernel=this.addWeight("kernel",[t,this.units*3],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*3],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units*3],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return ce(()=>{if(e=e,e.length!==2)throw new ne(`GRUCell expects 2 input Tensors (inputs, h, c), got ${e.length}.`);const s=t.training==null?!1:t.training;let r=e[1];e=e[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=to({ones:()=>bs(e),rate:this.dropout,training:s,count:3,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=to({ones:()=>bs(r),rate:this.recurrentDropout,training:s,count:3,dropoutFunc:this.dropoutFunc}));const o=this.dropoutMask,a=this.recurrentDropoutMask;let l,i,u;0<this.dropout&&this.dropout<1&&(e=J(e,o[0]));let c=pr(e,this.kernel.read());this.useBias&&(c=Qs(c,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(r=J(r,a[0]));const h=this.recurrentKernel.read(),[d,p]=ss(h,[2*this.units,this.units],h.rank-1),f=pr(r,d),[g,y,x]=ss(c,3,c.rank-1),[w,v]=ss(f,2,f.rank-1);l=this.recurrentActivation.apply(Ne(g,w)),i=this.recurrentActivation.apply(Ne(y,v));const k=pr(J(i,r),p);u=this.activation.apply(Ne(x,k));const C=Ne(J(l,r),J(Ne(1,Pt(l)),u));return[C,C]})}getConfig(){const e=super.getConfig(),t={units:this.units,activation:Qr(this.activation),recurrentActivation:Qr(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Ht(this.kernelInitializer),recurrentInitializer:Ht(this.recurrentInitializer),biasInitializer:Ht(this.biasInitializer),kernelRegularizer:Et(this.kernelRegularizer),recurrentRegularizer:Et(this.recurrentRegularizer),biasRegularizer:Et(this.biasRegularizer),activityRegularizer:Et(this.activityRegularizer),kernelConstraint:un(this.kernelConstraint),recurrentConstraint:un(this.recurrentConstraint),biasConstraint:un(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign(Object.assign({},e),t)}}Yg.className="GRUCell";Te(Yg);class ek extends po{constructor(e){e.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new Yg(e),super(e)}call(e,t){return ce(()=>{this.cell.dropoutMask!=null&&(ut(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(ut(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const s=t==null?null:t.mask,r=t==null?null:t.training,o=t==null?null:t.initialState;return super.call(e,{mask:s,training:r,initialState:o})})}static fromConfig(e,t){return t.implmentation===0&&(t.implementation=1),new e(t)}}ek.className="GRU";Te(ek);class id extends ad{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,gn(this.units,"units"),this.activation=eo(e.activation===void 0?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=eo(e.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=Bt(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Bt(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Bt(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=e.unitForgetBias,this.kernelRegularizer=Mt(e.kernelRegularizer),this.recurrentRegularizer=Mt(e.recurrentRegularizer),this.biasRegularizer=Mt(e.biasRegularizer),this.kernelConstraint=cn(e.kernelConstraint),this.recurrentConstraint=cn(e.recurrentConstraint),this.biasConstraint=cn(e.biasConstraint),this.dropout=La([1,Jr([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=La([1,Jr([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){var t;e=xt(e);const s=e[e.length-1];this.kernel=this.addWeight("kernel",[s,this.units*4],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*4],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint);let r;if(this.useBias){if(this.unitForgetBias){const o=this.biasInitializer,a=this.units;r=new(t=class extends Bs{apply(i,u){const c=o.apply([a]),h=new Lg().apply([a]),d=o.apply([a*2]);return Vb(Vb(c,h),d)}},t.className="CustomInit",t)}else r=this.biasInitializer;this.bias=this.addWeight("bias",[this.units*4],null,r,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(e,t){return ce(()=>{const s=t.training==null?!1:t.training;if(e=e,e.length!==3)throw new ne(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let r=e[1];const o=e[2];e=e[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=to({ones:()=>bs(e),rate:this.dropout,training:s,count:4,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=to({ones:()=>bs(r),rate:this.recurrentDropout,training:s,count:4,dropoutFunc:this.dropoutFunc}));const a=this.dropoutMask,l=this.recurrentDropoutMask;let i,u,c,h;0<this.dropout&&this.dropout<1&&(e=J(e,a[0]));let d=pr(e,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(r=J(r,l[0])),d=Ne(d,pr(r,this.recurrentKernel.read())),this.useBias&&(d=Qs(d,this.bias.read()));const[p,f,g,y]=ss(d,4,d.rank-1);i=this.recurrentActivation.apply(p),u=this.recurrentActivation.apply(f),c=Ne(J(u,o),J(i,this.activation.apply(g))),h=this.recurrentActivation.apply(y);const x=J(h,this.activation.apply(c));return[x,x,c]})}getConfig(){const e=super.getConfig(),t={units:this.units,activation:Qr(this.activation),recurrentActivation:Qr(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Ht(this.kernelInitializer),recurrentInitializer:Ht(this.recurrentInitializer),biasInitializer:Ht(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:Et(this.kernelRegularizer),recurrentRegularizer:Et(this.recurrentRegularizer),biasRegularizer:Et(this.biasRegularizer),activityRegularizer:Et(this.activityRegularizer),kernelConstraint:un(this.kernelConstraint),recurrentConstraint:un(this.recurrentConstraint),biasConstraint:un(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign(Object.assign({},e),t)}}id.className="LSTMCell";Te(id);class tk extends po{constructor(e){e.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new id(e),super(e)}call(e,t){return ce(()=>{this.cell.dropoutMask!=null&&(ut(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(ut(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const s=t==null?null:t.mask,r=t==null?null:t.training,o=t==null?null:t.initialState;return super.call(e,{mask:s,training:r,initialState:o})})}static fromConfig(e,t){return t.implmentation===0&&(t.implementation=1),new e(t)}}tk.className="LSTM";Te(tk);class Zg extends ad{constructor(e){super(e),this.cells=e.cells}get stateSize(){const e=[];for(const t of this.cells.slice().reverse())Array.isArray(t.stateSize)?e.push(...t.stateSize):e.push(t.stateSize);return e}call(e,t){return ce(()=>{e=e;let s=e.slice(1);const r=[];for(const l of this.cells.slice().reverse())Array.isArray(l.stateSize)?r.push(s.splice(0,l.stateSize.length)):r.push(s.splice(0,1));r.reverse();const o=[];let a;for(let l=0;l<this.cells.length;++l){const i=this.cells[l];s=r[l],l===0?a=[e[0]].concat(s):a=[a[0]].concat(s),a=i.call(a,t),o.push(a.slice(1))}s=[];for(const l of o.slice().reverse())s.push(...l);return[a[0]].concat(s)})}build(e){Mp(e)&&(e=e[0]),e=e;let t;this.cells.forEach((s,r)=>{Ao(`RNNCell_${r}`,()=>{s.build(e),Array.isArray(s.stateSize)?t=s.stateSize[0]:t=s.stateSize,e=[e[0],t]})}),this.built=!0}getConfig(){const e=super.getConfig(),t=o=>({className:o.getClassName(),config:o.getConfig()}),r={cells:this.cells.map(t)};return Object.assign(Object.assign({},e),r)}static fromConfig(e,t,s={}){const r=[];for(const o of t.cells)r.push(Nr(o,s));return new e({cells:r})}get trainableWeights(){if(!this.trainable)return[];const e=[];for(const t of this.cells)e.push(...t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.cells)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const s of this.cells)t.push(...s.trainableWeights);return t.concat(e)}return e}getWeights(){const e=[];for(const t of this.cells)e.push(...t.weights);return Vp(e)}setWeights(e){const t=[];for(const s of this.cells){const r=s.weights.length,o=e.splice(r);for(let a=0;a<s.weights.length;++a)t.push([s.weights[a],o[a]])}Ug(t)}}Zg.className="StackedRNNCells";Te(Zg);function to(n){const{ones:e,rate:t,training:s=!1,count:r=1,dropoutFunc:o}=n,a=()=>o!=null?o(e(),t):jw(e(),t),l=()=>Zl(a,e,s);return!r||r<=1?mn(l().clone()):Array(r).fill(void 0).map(l).map(u=>mn(u.clone()))}/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */var vB=function(n,e){var t={};for(var s in n)Object.prototype.hasOwnProperty.call(n,s)&&e.indexOf(s)<0&&(t[s]=n[s]);if(n!=null&&typeof Object.getOwnPropertySymbols=="function")for(var r=0,s=Object.getOwnPropertySymbols(n);r<s.length;r++)e.indexOf(s[r])<0&&Object.prototype.propertyIsEnumerable.call(n,s[r])&&(t[s[r]]=n[s[r]]);return t};class nk extends po{constructor(e){if(e.unroll)throw new it("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new it("It is not possible at the moment to stack convolutional cells.");super(e),this.inputSpec=[new an({ndim:5})]}call(e,t){return ce(()=>{if(this.cell.dropoutMask!=null&&(ut(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(ut(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),t&&t.constants)throw new ne("ConvRNN2D cell does not support constants");const s=t==null?null:t.mask,r=t==null?null:t.training,o=t==null?null:t.initialState;return super.call(e,{mask:s,training:r,initialState:o})})}computeOutputShape(e){let t=this.computeSingleOutputShape(e);return this.returnSequences||(t=[t[0],...t.slice(2)]),this.returnState&&(t=[t,...Array(2).fill([e[0],...t.slice(-3)])]),t}getInitialState(e){return ce(()=>{const{stateSize:t}=this.cell,s=e.shape,r=this.computeSingleOutputShape(s),o=[r[0],...r.slice(2)],a=rn(o);return Array.isArray(t)?Array(t.length).fill(a):[a]})}resetStates(e,t=!1){ce(()=>{if(!this.stateful)throw new rr("Cannot call resetStates() on an RNN Layer that is not stateful.");const s=this.inputSpec[0].shape,r=this.computeSingleOutputShape(s),o=[r[0],...r.slice(2)];if(s[0]==null)throw new ne("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.getStates()==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>rn(o)):this.states_=[rn(o)];else if(e==null)ut(this.states_),this.keptStates!=null&&(ut(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>rn(o)):this.states_[0]=rn(o);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new ne(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t?this.keptStates.push(this.states_.slice()):ut(this.states_);for(let l=0;l<this.states_.length;++l){const i=e[l],u=o;if(!ft(i.shape,u))throw new ne(`State ${l} is incompatible with layer ${this.name}: expected shape=${u}, received shape=${i.shape}`);this.states_[l]=i}}this.states_=this.states_.map(l=>mn(l.clone()))})}computeSingleOutputShape(e){const{dataFormat:t,filters:s,kernelSize:r,padding:o,strides:a,dilationRate:l}=this.cell,i=t==="channelsFirst",u=e[i?3:2],c=e[i?4:3],h=js(u,r[0],o,a[0],l[0]),d=js(c,r[1],o,a[1],l[1]);return[...e.slice(0,2),...i?[s,h,d]:[h,d,s]]}}nk.className="ConvRNN2D";class Jg extends id{constructor(e){const{filters:t,kernelSize:s,strides:r,padding:o,dataFormat:a,dilationRate:l}=e;super(Object.assign(Object.assign({},e),{units:t})),this.filters=t,gn(this.filters,"filters"),this.kernelSize=Ta(s,2,"kernelSize"),this.kernelSize.forEach(i=>gn(i,"kernelSize")),this.strides=Ta(r||1,2,"strides"),this.strides.forEach(i=>gn(i,"strides")),this.padding=o||"valid",ws(this.padding),this.dataFormat=a||"channelsLast",en(this.dataFormat),this.dilationRate=Ta(l||1,2,"dilationRate"),this.dilationRate.forEach(i=>gn(i,"dilationRate"))}build(e){var t;e=xt(e);const s=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[s]==null)throw new ne(`The channel dimension of the input should be defined. Found ${e[s]}`);const r=e[s],o=4,a=this.kernelSize.concat([r,this.filters*o]);this.kernel=this.addWeight("kernel",a,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);const l=this.kernelSize.concat([this.filters,this.filters*o]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",l,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let i;if(this.unitForgetBias){const u=this.biasInitializer,c=this.filters;i=new(t=class extends Bs{apply(d,p){const f=u.apply([c]),g=ns([c]),y=u.apply([c*2]);return Og([f,g,y])}},t.className="CustomInit",t)}else i=this.biasInitializer;this.bias=this.addWeight("bias",[this.filters*o],null,i,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(e,t){return ce(()=>{if(e.length!==3)throw new ne(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);const s=t.training||!1,r=e[0],o=e[1],a=e[2],l=4;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=to({ones:()=>bs(r),rate:this.dropout,training:s,count:l,dropoutFunc:this.dropoutFunc}));const i=this.dropoutMask,u=(A,ee,be)=>!ee||!ee[be]?A:J(ee[be],A);let c=u(r,i,0),h=u(r,i,1),d=u(r,i,2),p=u(r,i,3);0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=to({ones:()=>bs(o),rate:this.recurrentDropout,training:s,count:l,dropoutFunc:this.dropoutFunc}));const f=this.recurrentDropoutMask;let g=u(o,f,0),y=u(o,f,1),x=u(o,f,2),w=u(o,f,3);const v=3,[k,C,I,N]=ss(this.kernel.read(),l,v),[E,R,O,B]=this.useBias?ss(this.bias.read(),l):[null,null,null,null];c=this.inputConv(c,k,E,this.padding),h=this.inputConv(h,C,R,this.padding),d=this.inputConv(d,I,O,this.padding),p=this.inputConv(p,N,B,this.padding);const[j,U,K,H]=ss(this.recurrentKernel.read(),l,v);g=this.recurrentConv(g,j),y=this.recurrentConv(y,U),x=this.recurrentConv(x,K),w=this.recurrentConv(w,H);const Z=this.recurrentActivation.apply(Ne(c,g)),ue=this.recurrentActivation.apply(Ne(h,y)),M=Ne(J(ue,a),J(Z,this.activation.apply(Ne(d,x)))),X=J(this.recurrentActivation.apply(Ne(p,w)),this.activation.apply(M));return[X,X,M]})}getConfig(){const e=super.getConfig(),t=vB(e,["units"]),s={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign(Object.assign({},t),s)}inputConv(e,t,s,r){const o=Zr(e,t,this.strides,r||"valid",this.dataFormat==="channelsFirst"?"NCHW":"NHWC",this.dilationRate);return s?Qs(o,s,this.dataFormat):o}recurrentConv(e,t){return Zr(e,t,1,"same",this.dataFormat==="channelsFirst"?"NCHW":"NHWC")}}Jg.className="ConvLSTM2DCell";Te(Jg);class sk extends nk{constructor(e){const t=new Jg(e);super(Object.assign(Object.assign({},e),{cell:t}))}static fromConfig(e,t){return new e(t)}}sk.className="ConvLSTM2D";Te(sk);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Qg extends ht{constructor(e){super(e),this.rate=Math.max(Math.min(e.rate,1),0),this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(e){if(this.noiseShape==null)return this.noiseShape;const t=e.shape,s=[];for(let r=0;r<this.noiseShape.length;++r)s.push(this.noiseShape[r]==null?t[r]:this.noiseShape[r]);return s}call(e,t){return ce(()=>{this.invokeCallHook(e,t);const s=et(e);if(0<this.rate&&this.rate<1){const r=t.training==null?!1:t.training,o=this.getNoiseShape(s);return Zl(()=>jw(s,this.rate,o,this.seed),()=>s,r)}return e})}getConfig(){const e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},t=super.getConfig();return Object.assign(e,t),e}dispose(){return super.dispose()}}Qg.className="Dropout";Te(Qg);class rk extends Qg{constructor(e){super(e),this.inputSpec=[{ndim:3}]}getNoiseShape(e){const t=e.shape;return[t[0],1,t[2]]}}rk.className="SpatialDropout1D";Te(rk);class ok extends ht{constructor(e){if(super(e),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.batchInputShape==null&&e.inputShape==null&&e.inputDim!=null){let t=null;e.batchSize!=null&&(t=e.batchSize),this.batchInputShape=[t,e.inputDim]}this.units=e.units,gn(this.units,"units"),this.activation=eo(e.activation),e.useBias!=null&&(this.useBias=e.useBias),this.kernelInitializer=Bt(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=Bt(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=cn(e.kernelConstraint),this.biasConstraint=cn(e.biasConstraint),this.kernelRegularizer=Mt(e.kernelRegularizer),this.biasRegularizer=Mt(e.biasRegularizer),this.activityRegularizer=Mt(e.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){e=xt(e);const t=e[e.length-1];this.kernel==null&&(this.kernel=this.addWeight("kernel",[t,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:t}}],this.built=!0}computeOutputShape(e){e=xt(e);const t=e.slice();return t[t.length-1]=this.units,t}call(e,t){return ce(()=>{this.invokeCallHook(e,t);const s=et(e),r=Bw(this.activation.getClassName());let o;return r!=null?o=pr(s,this.kernel.read(),r,this.bias?this.bias.read():null):(o=pr(s,this.kernel.read()),this.bias!=null&&(o=Qs(o,this.bias.read())),this.activation!=null&&(o=this.activation.apply(o))),o})}getConfig(){const e={units:this.units,activation:Qr(this.activation),useBias:this.useBias,kernelInitializer:Ht(this.kernelInitializer),biasInitializer:Ht(this.biasInitializer),kernelRegularizer:Et(this.kernelRegularizer),biasRegularizer:Et(this.biasRegularizer),activityRegularizer:Et(this.activityRegularizer),kernelConstraint:un(this.kernelConstraint),biasConstraint:un(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}ok.className="Dense";Te(ok);class ak extends ht{constructor(e){e=e||{},super(e),this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){e=xt(e);for(const t of e.slice(1))if(t==null)throw new ne(`The shape of the input to "Flatten" is not fully defined (got ${e.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[e[0],jr(e,1)]}call(e,t){return ce(()=>{this.invokeCallHook(e,t);let s=et(e);if(this.dataFormat==="channelsFirst"&&s.rank>1){const r=[0];for(let o=2;o<s.rank;++o)r.push(o);r.push(1),s=gt(s,r)}return tz(s)})}getConfig(){const e={};this.dataFormat!=null&&(e.dataFormat=this.dataFormat);const t=super.getConfig();return Object.assign(e,t),e}}ak.className="Flatten";Te(ak);class ik extends ht{constructor(e){super(e),this.supportsMasking=!0,this.activation=eo(e.activation)}call(e,t){return ce(()=>{this.invokeCallHook(e,t);const s=et(e);return this.activation.apply(s)})}getConfig(){const e={activation:Qr(this.activation)},t=super.getConfig();return Object.assign(e,t),e}}ik.className="Activation";Te(ik);class lk extends ht{constructor(e){super(e),this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(e,t){return ce(()=>(e=et(e),QP(e,this.n)))}getConfig(){const e={n:this.n},t=super.getConfig();return Object.assign(e,t),e}}lk.className="RepeatVector";Te(lk);class uk extends ht{constructor(e){super(e),this.targetShape=e.targetShape;for(let t=0;t<this.targetShape.length;++t)this.isUnknown(this.targetShape[t])&&(this.targetShape[t]=null)}isUnknown(e){return e<0||e==null}fixUnknownDimension(e,t){const s="Total size of new array must be unchanged.",r=t.slice();let o=1,a=null;for(let i=0;i<r.length;++i){const u=r[i];if(this.isUnknown(u))if(a===null)a=i;else throw new ne("Can only specifiy one unknown dimension.");else o*=u}const l=jr(e);if(a!==null){if(o===0||l%o!==0)throw new ne(s);r[a]=l/o}else if(l!==o)throw new ne(s);return r}computeOutputShape(e){let t=!1;for(let s=0;s<e.length;++s)if(this.isUnknown(e[s])){t=!0;break}return t?e.slice(0,1).concat(this.targetShape):e.slice(0,1).concat(this.fixUnknownDimension(e.slice(1),this.targetShape))}call(e,t){return ce(()=>{this.invokeCallHook(e,t);const s=et(e),r=s.shape,o=r.slice(0,1).concat(this.fixUnknownDimension(r.slice(1),this.targetShape));return te(s,o)})}getConfig(){const e={targetShape:this.targetShape},t=super.getConfig();return Object.assign(e,t),e}}uk.className="Reshape";Te(uk);class ck extends ht{constructor(e){if(super(e),e.dims==null)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${e.dims} instead.`);const t=Ks(1,e.dims.length+1);if(!ft(e.dims.slice().sort(),t))throw new Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new an({ndim:this.dims.length+1})]}computeOutputShape(e){e=xt(e);const t=e.slice();return this.dims.forEach((s,r)=>{t[r+1]=e[s]}),t}call(e,t){return gt(et(e),this.dimsIncludingBatch)}getConfig(){const e={dims:this.dims},t=super.getConfig();return Object.assign(e,t),e}}ck.className="Permute";Te(ck);class hk extends ht{constructor(e){super(e??{}),this.supportsMasking=!0,e!=null?this.maskValue=e.maskValue==null?0:e.maskValue:this.maskValue=0}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={maskValue:this.maskValue};return Object.assign(t,e),t}computeMask(e,t){const s=et(e);return tc(Fa(s,this.maskValue),-1)}call(e,t){return ce(()=>{this.invokeCallHook(e,t);const s=et(e),a=tc(Fa(s,this.maskValue),-1,!0);return J(s,Pe(a,s.dtype))})}}hk.className="Masking";Te(hk);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class dk extends ht{constructor(e){if(super(e),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",e.batchInputShape==null&&e.inputShape==null){let t=null;e.batchSize!=null&&(t=e.batchSize),e.inputLength==null?this.batchInputShape=[t,null]:this.batchInputShape=[t].concat(Nt(e.inputLength))}this.inputDim=e.inputDim,gn(this.inputDim,"inputDim"),this.outputDim=e.outputDim,gn(this.outputDim,"outputDim"),this.embeddingsInitializer=Bt(e.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=Mt(e.embeddingsRegularizer),this.activityRegularizer=Mt(e.activityRegularizer),this.embeddingsConstraint=cn(e.embeddingsConstraint),this.maskZero=e.maskZero,this.supportsMasking=e.maskZero,this.inputLength=e.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(e){}computeMask(e,t){return ce(()=>this.maskZero?(e=et(e),Fa(e,yt(e))):null)}computeOutputShape(e){if(e=xt(e),this.inputLength==null)return[...e,this.outputDim];const t=Nt(this.inputLength);if(t.length!==e.length-1)throw new ne(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);{let s=0;for(let r=0;r<t.length;++r){const o=t[r],a=e[r+1];if(o!=null&&a!=null&&o!==a)throw new ne(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);o==null&&(t[s]=a),s++}}return[e[0],...t,this.outputDim]}call(e,t){return ce(()=>{this.invokeCallHook(e,t);let s=et(e);s.dtype!=="int32"&&(s=dr(s,"int32"));const r=Hw(this.embeddings.read(),te(s,[s.size]));return te(r,xt(this.computeOutputShape(s.shape)))})}getConfig(){const e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:Ht(this.embeddingsInitializer),embeddingsRegularizer:Et(this.embeddingsRegularizer),activityRegularizer:Et(this.activityRegularizer),embeddingsConstraint:un(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},t=super.getConfig();return Object.assign(e,t),e}}dk.className="Embedding";Te(dk);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class sa extends ht{constructor(e){super(e||{}),this.supportsMasking=!0}mergeFunction(e){throw new it}computeElementwiseOpOutputShape(e,t){if(e==null||t==null)return null;if(e.length<t.length)return this.computeElementwiseOpOutputShape(t,e);if(t.length===0)return e;const s=e.slice(0,e.length-t.length);for(let r=0;r<t.length;++r){const o=e[e.length-t.length+r],a=t[r];if(o==null||a==null||o<0||a<0)s.push(null);else if(o===1)s.push(a);else if(a===1)s.push(o);else{if(o!==a)throw new ne("Operands could not be broadcast together with shapes "+JSON.stringify(e)+" "+JSON.stringify(t));s.push(o)}}return s}build(e){if(Array.isArray(e)&&!Array.isArray(e[0])&&(e=[xt(e)]),e=e,e.length<2)throw new ne(`A merge layer should be called on an Array of at least 2 inputs. Got ${e.length} input(s).`);let t=[];for(const o of e)o!=null&&o[0]!==null&&t.push(o[0]);if(t=Hr(t),t.length>1)throw new ne(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(e)}.`);let s=e[0]==null?null:e[0].slice(1);for(let o=1;o<e.length;++o){const a=e[o]==null?null:e[o].slice(1);s=this.computeElementwiseOpOutputShape(s,a)}const r=e.map(o=>o.length);e.indexOf(null)===-1&&Hr(r).length===1?this.reshapeRequired=!1:this.reshapeRequired=!0}call(e,t){return ce(()=>{if(e=e,this.reshapeRequired){const s=[],r=e.map(o=>o.rank);if(r.indexOf(null)===-1){const o=Jr(r);for(let a of e){const l=a.rank;for(let i=0;i<o-l;++i)a=Xl(a,1);s.push(a)}return this.mergeFunction(s)}else{let o=!1;for(const i of e){const u=i.rank;if(u==null){const c=i.shape,h=c[0],d=c.slice(1).concat([h]);let p=te(i,[h].concat(jr(c.slice(1))));p=gt(p,[1,0]),p=te(p,d),s.push(p),o=!0}else if(u>1){const c=Ks(1,u).concat([0]);s.push(gt(i,c)),o=!0}else s.push(i)}let a=this.mergeFunction(s);const l=a.rank;if(o){if(l==null){const i=a.shape,u=i.length,c=i[u-1],h=[c].concat(i.slice(0,i.length-1));a=te(gt(te(a,[-1,c]),[1,0]),h)}else if(l>1){const i=[l-1].concat(Ks(0,l-1));a=gt(a,i)}}return a}}else return this.mergeFunction(e)})}computeOutputShape(e){e=e;let t;e[0]==null?t=null:t=e[0].slice(1);for(let r=1;r<e.length;++r){const o=e[r]==null?null:e[r].slice(1);t=this.computeElementwiseOpOutputShape(t,o)}let s=[];for(const r of e)r!=null&&r[0]!==null&&s.push(r[0]);return s=Hr(s),s.length===1?t=s.concat(t):t=[null].concat(t),t}computeMask(e,t){return ce(()=>{if(t==null)return null;if(!Array.isArray(t))throw new ne("`mask` should be an Array");if(!Array.isArray(e))throw new ne("`inputs` should be an Array");if(t.length!==e.length)throw new ne(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${e.length} vs ${t.length})`);if(t.every(r=>r==null))return null;t=t.map(r=>r==null?r:zn(r,0));let s=t[0];for(let r=1;r<t.length-1;++r)s=fr(s,t[r]);return s})}}class pk extends sa{constructor(e){super(e)}mergeFunction(e){return ce(()=>{let t=e[0].clone();for(let s=1;s<e.length;++s)t=Ne(t,e[s]);return t})}}pk.className="Add";Te(pk);class fk extends sa{constructor(e){super(e)}mergeFunction(e){return ce(()=>{let t=e[0].clone();for(let s=1;s<e.length;++s)t=J(t,e[s]);return t})}}fk.className="Multiply";Te(fk);class mk extends sa{constructor(e){super(e)}mergeFunction(e){return ce(()=>{let t=e[0].clone();for(let s=1;s<e.length;++s)t=Ne(t,e[s]);return J(1/e.length,t)})}}mk.className="Average";Te(mk);class gk extends sa{constructor(e){super(e)}mergeFunction(e){return ce(()=>{let t=e[0];for(let s=1;s<e.length;++s)t=Rr(t,e[s]);return t})}}gk.className="Maximum";Te(gk);class yk extends sa{constructor(e){super(e)}mergeFunction(e){return ce(()=>{let t=e[0];for(let s=1;s<e.length;++s)t=Vo(t,e[s]);return t})}}yk.className="Minimum";Te(yk);class bk extends sa{constructor(e){super(e),this.DEFAULT_AXIS=-1,e==null&&(e={}),this.axis=e.axis==null?this.DEFAULT_AXIS:e.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){if(!(Array.isArray(e)&&Array.isArray(e[0]))||e.length===1)throw new ne("A `Concatenate` layer should be called on a list of at least 2 inputs");e=e;let t=!0;for(const r of e)if(r!=null){t=!1;break}if(t)return;const s=[];for(let r=0;r<e.length;++r){const o=e[r].slice();o.splice(this.axis,1);let a=!1;for(const l of s)if(ft(l,o)){a=!0;break}a||s.push(o)}if(s.length>1)throw new ne("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(e))}mergeFunction(e){return ce(()=>Og(e,this.axis))}computeOutputShape(e){if(!(Array.isArray(e)&&Array.isArray(e[0])))throw new ne("A `Concatenate` layer should be called on a list of inputs.");const t=e,s=t[0].slice(),r=this.axis<0?s.length+this.axis:this.axis;for(const o of t.slice(1)){if(s[r]==null||o[r]==null){s[r]=null;break}s[r]+=o[r]}return s}computeMask(e,t){if(t==null)return null;if(!Array.isArray(t))throw new ne("`mask` should be an array for Concatenate");if(!Array.isArray(e))throw new ne("`inputs` should be an array for Concatenate");if(t.length!==e.length)throw new ne(`Mismatch in the length of mask (${t.length}) and the legnth of inputs (${e.length})`);return ce(()=>{let s=!0;if(t.forEach(a=>{if(a!=null){s=!1;return}}),s)return null;const r=[];for(let a=0;a<e.length;++a)t[a]==null?r.push(Pe(bs(e[a]),"bool")):t[a].rank<e[a].rank?r.push(zn(t[a],-1)):r.push(t[a]);const o=nn(r,this.axis);return pm(o,-1,!1)})}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}bk.className="Concatenate";Te(bk);function bi(n,e){for(;n<0;)n+=e;return n}function kB(n,e,t){if(n.shape.length>3||e.shape.length>3)throw new it("batchDot is not implemented for tensors of 4D or higher rank yet");if(P(n.shape.length>=2,()=>`batchDot requires the rank of x to be >= 2, but got ${n.shape.length}`),P(n.shape.length>=2,()=>`batchDot requires the rank of y to be >= 2, but got ${e.shape.length}`),typeof t=="number"&&(t=[t,t]),n.dtype==="complex64"||e.dtype==="complex64")throw new it("batchDot is not implemented for complex64-type Tensors yet.");const s=n.shape.length,r=e.shape.length;t==null&&(t=[s-1,r-2]);const o=t;return ce(()=>{let a;if(s>r){a=s-r;const i=[];for(let u=0;u<a;++u)i.push(1);e=te(e,e.shape.concat(i))}else if(r>s){a=r-s;const i=[];for(let u=0;u<a;++u)i.push(1);n=te(n,n.shape.concat(i))}else a=0;let l;if(n.shape.length===2&&e.shape.length===2)o[0]===o[1]?l=Ue(J(n,e),o[0]):l=Ue(J(gt(n,[1,0]),e),o[1]);else{const i=o[0]!==n.shape.length-1,u=o[1]===e.shape.length-1;l=dt(n,e,i,u)}if(a>0){let i;s>r?i=s+r-3:i=s-1;const u=[];for(let c=i;c<i+a;++c)u.push(c);l=ea(l,u)}return l.shape.length===1&&(l=zn(l,1)),l})}class xk extends sa{constructor(e){super(e),this.axes=e.axes,this.normalize=e.normalize==null?!1:e.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){P(Array.isArray(e)&&e.length===2&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");const t=e[0],s=e[1];if(t.length>3||s.length>3)throw new it("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(t,s);if(t[r[0]]!==s[r[1]])throw new ne(`Dimension incompatibility: ${t[r[0]]} !== ${s[r[1]]}`)}mergeFunction(e){if(e.length!==2)throw new ne(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${e.length} input(s).`);let t=e[0],s=e[1],r;return Array.isArray(this.axes)?r=this.axes.map((o,a)=>bi(o,e[a].shape.length)):r=[bi(this.axes,t.shape.length),bi(this.axes,s.shape.length)],this.normalize&&(t=uc(t,r[0]),s=uc(s,r[1])),kB(t,s,r)}interpretAxes(e,t){let s;return Array.isArray(this.axes)?s=this.axes:s=[bi(this.axes,e.length),bi(this.axes,t.length)],s}computeOutputShape(e){P(Array.isArray(e)&&e.length===2&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");const t=e[0].slice(),s=e[1].slice();if(t.length>3||s.length>3)throw new it("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(t,s);t.splice(r[0],1),s.splice(r[1],1),s.splice(0,1);const o=t.concat(s);return o.length===1&&o.push(1),o}computeMask(e,t){return null}getConfig(){const e={axes:this.axes,normalize:this.normalize},t=super.getConfig();return Object.assign(e,t),e}}xk.className="Dot";Te(xk);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class wk extends ht{constructor(e){super(e),this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={stddev:this.stddev};return Object.assign(t,e),t}call(e,t){return ce(()=>{this.invokeCallHook(e,t);const s=et(e);return Zl(()=>Ne(ed(s.shape,0,this.stddev),s),()=>s,t.training||!1)})}}wk.className="GaussianNoise";Te(wk);class vk extends ht{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return ce(()=>{this.invokeCallHook(e,t);const s=et(e);return this.rate>0&&this.rate<1?Zl(()=>{const o=Math.sqrt(this.rate/(1-this.rate));return J(s,ed(s.shape,1,o))},()=>s,t.training||!1):s})}}vk.className="GaussianDropout";Te(vk);class kk extends ht{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||et(e).shape}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return ce(()=>{if(this.rate<1&&this.rate>0){const s=this._getNoiseShape(e);return Zl(()=>{const o=et(e),i=-1.6732632423543772*1.0507009873554805;let u=uo(Qo(s),this.rate);u=dr(u,"float32");const c=((1-this.rate)*(1+this.rate*i**2))**-.5,h=-c*i*this.rate,d=Ne(J(o,u),J(Ne(u,-1),i));return Ne(J(d,c),h)},()=>et(e),t.training||!1)}return e})}}kk.className="AlphaDropout";Te(kk);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Li(n,e,t,s,r,o=.001){let a;if(n.rank===2)a=Vx(n,e,t,s,r,o);else if(n.rank===3)a=Wx(n,e,t,s,r,o);else if(n.rank===4)a=Ux(n,e,t,s,r,o);else throw new it(`batchNormalization is not implemented for array of rank ${n.rank} yet`);return a}function SB(n,e,t,s,r=.001){return ce(()=>{const o=Lh(n,s),a=o.mean,l=o.variance;return[Li(n,a,l,t,e,r),a,l]})}function CB(n,e,t,s,r=.001){return ce(()=>{const o=Lh(n,s),a=o.mean,l=o.variance,i=[];for(const f of Ks(0,n.rank))s.indexOf(f)!==-1?i.push(1):i.push(n.shape[f]);const u=te(a,i),c=te(l,i),h=e==null?null:te(e,i),d=t==null?null:te(t,i);return[Li(n,u,c,d,h,r),a,l]})}function IB(n,e,t,s,r=.001){return ft(s.slice().sort(),Ks(0,n.rank-1))?SB(n,e,t,s,r):CB(n,e,t,s,r)}class Sk extends ht{constructor(e){e==null&&(e={}),super(e),this.supportsMasking=!0,this.axis=e.axis==null?-1:e.axis,this.momentum=e.momentum==null?.99:e.momentum,this.epsilon=e.epsilon==null?.001:e.epsilon,this.center=e.center==null?!0:e.center,this.scale=e.scale==null?!0:e.scale,this.betaInitializer=Bt(e.betaInitializer||"zeros"),this.gammaInitializer=Bt(e.gammaInitializer||"ones"),this.movingMeanInitializer=Bt(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=Bt(e.movingVarianceInitializer||"ones"),this.betaConstraint=cn(e.betaConstraint),this.gammaConstraint=cn(e.gammaConstraint),this.betaRegularizer=Mt(e.betaRegularizer),this.gammaRegularizer=Mt(e.gammaRegularizer)}build(e){e=xt(e);const t=this.axis>=0?this.axis:this.axis+e.length,s=e[t];if(s==null)throw new ne(`Axis ${t} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(e)}.`);this.inputSpec=[new an({ndim:e.length,axes:{[t]:s}})];const r=[s];this.scale&&(this.gamma=this.addWeight("gamma",r,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",r,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",r,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",r,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(e,t){return ce(()=>{const s=t.training==null?!1:t.training,r=et(e),o=r.shape,a=o.length,l=Ks(0,a),i=this.axis>=0?this.axis:this.axis+a;l.splice(i,1);const u=Go(1,a);u[i]=o[i];const c=l.slice();c.sort();const h=!ft(c,Ks(0,a).slice(0,a-1)),d=()=>{if(h){const w=te(this.movingMean.read(),u),v=te(this.movingVariance.read(),u),k=this.center?te(this.beta.read(),u):null,C=this.scale?te(this.gamma.read(),u):null;return Li(r,w,v,k,C,this.epsilon)}else return Li(r,this.movingMean.read(),this.movingVariance.read(),this.beta==null?null:this.beta.read(),this.gamma==null?null:this.gamma.read(),this.epsilon)};if(!s)return d();const[p,f,g]=IB(r,this.gamma.read(),this.beta.read(),l,this.epsilon),y=(w,v,k)=>{ce(()=>{const C=1-k,I=w.read(),N=J(Ve(I,v),C);w.write(Ve(I,N))})};return(()=>{y(this.movingMean,f,this.momentum),y(this.movingVariance,g,this.momentum)})(),p})}getConfig(){const e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Ht(this.betaInitializer),gammaInitializer:Ht(this.gammaInitializer),movingMeanInitializer:Ht(this.movingMeanInitializer),movingVarianceInitializer:Ht(this.movingVarianceInitializer),betaRegularizer:Et(this.betaRegularizer),gammaRegularizer:Et(this.gammaRegularizer),betaConstraint:un(this.betaConstraint),gammaConstraint:un(this.gammaConstraint)},t=super.getConfig();return Object.assign(e,t),e}}Sk.className="BatchNormalization";Te(Sk);class Ck extends ht{constructor(e){if(e==null&&(e={}),super(e),this.axis=e.axis==null?-1:e.axis,typeof this.axis=="number"){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else if(Array.isArray(this.axis)){for(const t of this.axis)if(!Number.isInteger(t))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}else throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);this.epsilon=e.epsilon==null?.001:e.epsilon,this.center=e.center==null?!0:e.center,this.scale=e.scale==null?!0:e.scale,this.betaInitializer=Bt(e.betaInitializer||"zeros"),this.gammaInitializer=Bt(e.gammaInitializer||"ones"),this.betaRegularizer=Mt(e.betaRegularizer),this.gammaRegularizer=Mt(e.gammaRegularizer),this.supportsMasking=!0}build(e){e=xt(e);const t=e.length;typeof this.axis=="number"&&(this.axis=[this.axis]);for(let o=0;o<this.axis.length;++o)this.axis[o]<0&&(this.axis[o]+=t);for(const o of this.axis)if(o<0||o>=t)throw new Error(`Invalid axis: ${o}`);if(this.axis.length!==Hr(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);const s=this.axis.map(o=>e[o]),r=!0;this.scale?this.gamma=this.addWeight("gamma",s,"float32",this.gammaInitializer,this.gammaRegularizer,r):this.gamma=null,this.center?this.beta=this.addWeight("beta",s,"float32",this.betaInitializer,this.betaRegularizer,r):this.beta=null,this.built=!0}call(e,t){const s=et(e),r=s.shape,o=r.length;return ce(()=>{let{mean:l,variance:i}=Lh(s,this.axis,!0);const u=Go(1,o);for(const g of this.axis)u[g]=r[g];const c=g=>g!=null&&g.shape.length!==o?te(g,u):g;let h=this.scale?c(this.gamma.read()):null,d=this.center?c(this.beta.read()):null;const p=[],f=[];for(let g=0;g<o;++g)this.axis.indexOf(g)!==-1?(p.push(r[g]),f.push(1)):(p.push(1),f.push(r[g]));return l=Es(l,p),i=Es(i,p),h!=null&&(h=Es(h,f)),d!=null&&(d=Es(d,f)),Li(s,l,i,d,h,this.epsilon)})}getConfig(){const e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Ht(this.betaInitializer),gammaInitializer:Ht(this.gammaInitializer),betaRegularizer:Et(this.betaRegularizer),gammaRegularizer:Et(this.gammaRegularizer)},t=super.getConfig();return Object.assign(e,t),e}}Ck.className="LayerNormalization";Te(Ck);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function NB(n,e,t){return ce(()=>{if(n.rank!==4)throw new ne(`temporalPadding expects input tensor to be 4-D, but received a ${n.rank}-D tensor.`);if(e==null&&(e=[[1,1],[1,1]]),e.length!==2||e[0].length!==2||e[1].length!==2)throw new ne("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(t==null&&(t=Xs()),t!=="channelsLast"&&t!=="channelsFirst")throw new ne(`Unknown data format: ${t}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let s;return t==="channelsFirst"?s=[[0,0],[0,0],e[0],e[1]]:s=[[0,0],e[0],e[1],[0,0]],co(n,s)})}class Ik extends ht{constructor(e){if(e==null&&(e={}),super(e),this.dataFormat=e.dataFormat==null?Xs():e.dataFormat,e.padding==null)this.padding=[[1,1],[1,1]];else if(typeof e.padding=="number")this.padding=[[e.padding,e.padding],[e.padding,e.padding]];else{if(e.padding=e.padding,e.padding.length!==2)throw new ne(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${e.padding.length} array.`);let t,s;if(typeof e.padding[0]=="number")t=[e.padding[0],e.padding[0]],s=[e.padding[1],e.padding[1]];else{if(e.padding=e.padding,e.padding[0].length!==2)throw new ne(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${e.padding[0].length} array.`);if(t=e.padding[0],e.padding[1].length!==2)throw new ne(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${e.padding[1].length} array.`);s=e.padding[1]}this.padding=[t,s]}this.inputSpec=[new an({ndim:4})]}computeOutputShape(e){e=xt(e);let t,s;return this.dataFormat==="channelsFirst"?(e[2]!=null&&e[2]>=0?t=e[2]+this.padding[0][0]+this.padding[0][1]:t=null,e[3]!=null&&e[3]>=0?s=e[3]+this.padding[1][0]+this.padding[1][1]:s=null,[e[0],e[1],t,s]):(e[1]!=null&&e[1]>=0?t=e[1]+this.padding[0][0]+this.padding[0][1]:t=null,e[2]!=null&&e[2]>=0?s=e[2]+this.padding[1][0]+this.padding[1][1]:s=null,[e[0],t,s,e[3]])}call(e,t){return ce(()=>NB(et(e),this.padding,this.dataFormat))}getConfig(){const e={padding:this.padding,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}Ik.className="ZeroPadding2D";Te(Ik);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function ld(n,e,t,s,r,o){return ce(()=>{en(r),Vw(o),ws(s),t==null&&(t=[1,1]),s==null&&(s="valid"),r==null&&(r=Xs()),o==null&&(o="max"),n=Kg(n,r);let a;const l=s==="same"?"same":"valid";return o==="max"?a=Oh(n,e,t,l):a=$h(n,e,t,l),r==="channelsFirst"&&(a=gt(a,[0,3,1,2])),a})}function Nk(n,e,t,s,r,o){return ce(()=>{en(r),Vw(o),ws(s),t==null&&(t=[1,1,1]),s==null&&(s="valid"),r==null&&(r=Xs()),o==null&&(o="max"),n=Uv(n,r);let a;const l=s==="same"?"same":"valid";return o==="max"?a=p1(n,e,t,l):a=Mx(n,e,t,l),r==="channelsFirst"&&(a=gt(a,[0,4,1,2,3])),a})}class $k extends ht{constructor(e){if(e.poolSize==null&&(e.poolSize=2),super(e),typeof e.poolSize=="number")this.poolSize=[e.poolSize];else if(Array.isArray(e.poolSize)&&e.poolSize.length===1&&typeof e.poolSize[0]=="number")this.poolSize=e.poolSize;else throw new ne(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.poolSize)}`);if(gn(this.poolSize,"poolSize"),e.strides==null)this.strides=this.poolSize;else if(typeof e.strides=="number")this.strides=[e.strides];else if(Array.isArray(e.strides)&&e.strides.length===1&&typeof e.strides[0]=="number")this.strides=e.strides;else throw new ne(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.strides)}`);gn(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,ws(this.padding),this.inputSpec=[new an({ndim:3})]}computeOutputShape(e){e=xt(e);const t=js(e[1],this.poolSize[0],this.padding,this.strides[0]);return[e[0],t,e[2]]}call(e,t){return ce(()=>{this.invokeCallHook(e,t),e=Xl(et(e),2);const s=this.poolingFunction(et(e),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return ea(s,[2])})}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides},t=super.getConfig();return Object.assign(e,t),e}}class Tk extends $k{constructor(e){super(e)}poolingFunction(e,t,s,r,o){return en(o),ws(r),ld(e,t,s,r,o,"max")}}Tk.className="MaxPooling1D";Te(Tk);class _k extends $k{constructor(e){super(e)}poolingFunction(e,t,s,r,o){return en(o),ws(r),ld(e,t,s,r,o,"avg")}}_k.className="AveragePooling1D";Te(_k);class Ek extends ht{constructor(e){if(e.poolSize==null&&(e.poolSize=[2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize],e.strides==null)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(e.strides.length!==2)throw new ne(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides];gn(this.poolSize,"poolSize"),gn(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,en(this.dataFormat),ws(this.padding),this.inputSpec=[new an({ndim:4})]}computeOutputShape(e){e=xt(e);let t=this.dataFormat==="channelsFirst"?e[2]:e[1],s=this.dataFormat==="channelsFirst"?e[3]:e[2];return t=js(t,this.poolSize[0],this.padding,this.strides[0]),s=js(s,this.poolSize[1],this.padding,this.strides[1]),this.dataFormat==="channelsFirst"?[e[0],e[1],t,s]:[e[0],t,s,e[3]]}call(e,t){return ce(()=>(this.invokeCallHook(e,t),this.poolingFunction(et(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class Ak extends Ek{constructor(e){super(e)}poolingFunction(e,t,s,r,o){return en(o),ws(r),ld(e,t,s,r,o,"max")}}Ak.className="MaxPooling2D";Te(Ak);class Dk extends Ek{constructor(e){super(e)}poolingFunction(e,t,s,r,o){return en(o),ws(r),ld(e,t,s,r,o,"avg")}}Dk.className="AveragePooling2D";Te(Dk);class Rk extends ht{constructor(e){if(e.poolSize==null&&(e.poolSize=[2,2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize,e.poolSize],e.strides==null)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(e.strides.length!==3)throw new ne(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides,e.strides];gn(this.poolSize,"poolSize"),gn(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,en(this.dataFormat),ws(this.padding),this.inputSpec=[new an({ndim:5})]}computeOutputShape(e){e=xt(e);let t=this.dataFormat==="channelsFirst"?e[2]:e[1],s=this.dataFormat==="channelsFirst"?e[3]:e[2],r=this.dataFormat==="channelsFirst"?e[4]:e[3];return t=js(t,this.poolSize[0],this.padding,this.strides[0]),s=js(s,this.poolSize[1],this.padding,this.strides[1]),r=js(r,this.poolSize[2],this.padding,this.strides[2]),this.dataFormat==="channelsFirst"?[e[0],e[1],t,s,r]:[e[0],t,s,r,e[4]]}call(e,t){return ce(()=>(this.invokeCallHook(e,t),this.poolingFunction(et(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class Fk extends Rk{constructor(e){super(e)}poolingFunction(e,t,s,r,o){return en(o),ws(r),Nk(e,t,s,r,o,"max")}}Fk.className="MaxPooling3D";Te(Fk);class Ok extends Rk{constructor(e){super(e)}poolingFunction(e,t,s,r,o){return en(o),ws(r),Nk(e,t,s,r,o,"avg")}}Ok.className="AveragePooling3D";Te(Ok);class Lk extends ht{constructor(e){super(e),this.inputSpec=[new an({ndim:3})]}computeOutputShape(e){return[e[0],e[2]]}call(e,t){throw new it}}class Pk extends Lk{constructor(e){super(e||{})}call(e,t){return ce(()=>{const s=et(e);return Kt(s,1)})}}Pk.className="GlobalAveragePooling1D";Te(Pk);class zk extends Lk{constructor(e){super(e||{})}call(e,t){return ce(()=>{const s=et(e);return Fs(s,1)})}}zk.className="GlobalMaxPooling1D";Te(zk);class Bk extends ht{constructor(e){super(e),this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,en(this.dataFormat),this.inputSpec=[new an({ndim:4})]}computeOutputShape(e){return e=e,this.dataFormat==="channelsLast"?[e[0],e[3]]:[e[0],e[1]]}call(e,t){throw new it}getConfig(){const e={dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class Mk extends Bk{call(e,t){return ce(()=>{const s=et(e);return this.dataFormat==="channelsLast"?Kt(s,[1,2]):Kt(s,[2,3])})}}Mk.className="GlobalAveragePooling2D";Te(Mk);class Vk extends Bk{call(e,t){return ce(()=>{const s=et(e);return this.dataFormat==="channelsLast"?Fs(s,[1,2]):Fs(s,[2,3])})}}Vk.className="GlobalMaxPooling2D";Te(Vk);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Wk extends ht{constructor(e){super(e),this.layer=e.layer}build(e){this.built=!0}get trainable(){return this.layer!=null?this.layer.trainable:!1}set trainable(e){this.layer!=null&&(this.layer.trainable=e)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(e){this.layer.setWeights(e)}getConfig(){const e={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},t=super.getConfig();return Object.assign(e,t),e}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.layer!=null&&this.layer.setFastWeightInitDuringBuild(e)}static fromConfig(e,t,s={}){const r=t.layer,o=Nr(r,s);delete t.layer;const a={layer:o};return Object.assign(a,t),new e(a)}}class Uk extends Wk{constructor(e){super(e),this.supportsMasking=!0}build(e){if(e=xt(e),e.length<3)throw new ne(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(e)}`);this.inputSpec=[{shape:e}];const t=[e[0]].concat(e.slice(2));this.layer.built||(this.layer.build(t),this.layer.built=!0),super.build(e)}computeOutputShape(e){e=xt(e);const t=[e[0]].concat(e.slice(2)),s=this.layer.computeOutputShape(t),r=e[1];return[s[0],r].concat(s.slice(1))}call(e,t){return ce(()=>(e=et(e),Jv((a,l)=>[et(this.layer.call(a,t)),[]],e,[],!1,null,null,!1,!0)[1]))}}Uk.className="TimeDistributed";Te(Uk);function $B(n){na(KP,"BidirectionalMergeMode",n)}const TB="concat";class Gk extends Wk{constructor(e){super(e);const t=e.layer.getConfig(),s={};s.className=e.layer.getClassName(),s.config=t,this.forwardLayer=Nr(s),t.goBackwards=t.goBackwards!==!0;const r={};if(r.className=e.layer.getClassName(),r.config=t,this.backwardLayer=Nr(r),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=e.mergeMode===void 0?TB:e.mergeMode,$B(this.mergeMode),e.weights)throw new it("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,this.forwardLayer!=null&&(this.forwardLayer.trainable=e),this.backwardLayer!=null&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){const t=e.length,s=Math.floor(t/2);this.forwardLayer.setWeights(e.slice(0,s)),this.backwardLayer.setWeights(e.slice(s))}computeOutputShape(e){let t=this.forwardLayer.computeOutputShape(e);Array.isArray(t)&&Array.isArray(t[0])||(t=[t]),t=t;let s,r,o;return this.returnState&&(o=t.slice(1)),s=t[0],s=s,this.mergeMode==="concat"?(s[s.length-1]*=2,r=[s]):this.mergeMode==null?r=[s,s.slice()]:r=[s],this.returnState?this.mergeMode==null?r.concat(o).concat(o.slice()):[s].concat(o).concat(o.slice()):jn(r)}apply(e,t){let s=t==null?null:t.initialState,r=t==null?null:t.constants;t==null&&(t={});const o=Zv(e,s,r,this.numConstants);if(e=o.inputs,s=o.initialState,r=o.constants,Array.isArray(e)&&(s=e.slice(1),e=e[0]),(s==null||s.length===0)&&r==null)return super.apply(e,t);const a=[],l=[];if(s!=null){const u=s.length;if(u%2>0)throw new ne("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");t.initialState=s,a.push(...s);const c=s.map(h=>new an({shape:h.shape}));this.forwardLayer.stateSpec=c.slice(0,u/2),this.backwardLayer.stateSpec=c.slice(u/2),l.push(...c)}if(r!=null)throw new it("Support for constants in Bidirectional layers is not implemented yet.");const i=a[0]instanceof mr;for(const u of a)if(u instanceof mr!==i)throw new ne("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(i){const u=[e].concat(a),c=this.inputSpec.concat(l),h=this.inputSpec;this.inputSpec=c;const d=super.apply(u,t);return this.inputSpec=h,d}else return super.apply(e,t)}call(e,t){return ce(()=>{const s=t.initialState;let r,o;if(s==null)r=this.forwardLayer.call(e,t),o=this.backwardLayer.call(e,t);else{const i=s.slice(0,s.length/2),u=s.slice(s.length/2);r=this.forwardLayer.call(e,Object.assign(t,{initialState:i})),o=this.backwardLayer.call(e,Object.assign(t,{initialState:u}))}let a;this.returnState&&(Array.isArray(r)&&(a=r.slice(1).concat(o.slice(1))),r=r[0],o=o[0]),this.returnSequences&&(o=Ls(o,1));let l;return this.mergeMode==="concat"?l=Og([r,o]):this.mergeMode==="sum"?l=Ne(r,o):this.mergeMode==="ave"?l=J(.5,Ne(r,o)):this.mergeMode==="mul"?l=J(r,o):this.mergeMode==null&&(l=[r,o]),this.returnState?this.mergeMode==null?l.concat(a):[l].concat(a):l})}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){Ao(this.forwardLayer.name,()=>{this.forwardLayer.build(e)}),Ao(this.backwardLayer.name,()=>{this.backwardLayer.build(e)}),this.built=!0}computeMask(e,t){Array.isArray(t)&&(t=t[0]);let s;if(this.returnSequences?this.mergeMode==null?s=[t,t]:s=t:this.mergeMode==null?s=[null,null]:s=null,this.returnState){const o=this.forwardLayer.states.map(a=>null);return Array.isArray(s)?s.concat(o).concat(o):[s].concat(o).concat(o)}else return s}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.forwardLayer!=null&&this.forwardLayer.setFastWeightInitDuringBuild(e),this.backwardLayer!=null&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){const e={mergeMode:this.mergeMode},t=super.getConfig();return Object.assign(e,t),e}static fromConfig(e,t){const s=Nr(t.layer);if(delete t.layer,t.numConstants!=null)throw new it("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const r=t;return r.layer=s,new e(r)}}Gk.className="Bidirectional";Te(Gk);/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Hk extends ht{constructor(e){super(e),this.scale=e.scale,e.offset?this.offset=e.offset:this.offset=0}getConfig(){const e={scale:this.scale,offset:this.offset},t=super.getConfig();return Object.assign(e,t),e}call(e,t){return ce(()=>(e=et(e),e.dtype!=="float32"&&(e=dr(e,"float32")),Ne(J(e,this.scale),this.offset)))}}Hk.className="Rescaling";Te(Hk);/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const{resizeBilinear:_B,cropAndResize:EB}=ir;class jk extends ht{constructor(e){super(e),this.height=e.height,this.width=e.width}centerCrop(e,t,s,r,o,a,l,i){return ce(()=>{let u,c=!1;const h=t/a,d=s/l,p=(r+t)/a,f=(o+s)/l,g=[h,d,p,f],y=[];e.rank===3?(c=!0,u=is([e])):u=e;for(let C=0;C<u.shape[0];C++)y.push(g);const x=Yt(y,[y.length,4]),w=Oa(0,y.length,1,"int32"),k=EB(u,x,w,[r,o],"nearest");return dr(c?et(Ps(k)):k,i)})}upsize(e,t,s,r){return ce(()=>{const o=_B(e,[t,s]);return dr(o,r)})}call(e,t){return ce(()=>{const s=et(e),r=s.dtype,o=s.shape,a=o[o.length-3],l=o[o.length-2];let i=0;a!==this.height&&(i=Math.floor((a-this.height)/2));let u=0;return l!==this.width&&(u=Math.floor((l-this.width)/2),u===0&&(u=1)),i>=0&&u>=0?this.centerCrop(s,i,u,this.height,this.width,a,l,r):this.upsize(e,this.height,this.width,r)})}getConfig(){const e={height:this.height,width:this.width},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){e=xt(e);const t=e.length-3,s=e.length-2;return e[t]=this.height,e[s]=this.width,e}}jk.className="CenterCrop";Te(jk);/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function AB(n,e,t,s){let r=et(n);if(r.dtype!=="int32"&&(r=dr(r,"int32")),e==="int")return r;const o=r.shape;if(r.rank===0&&(r=zn(r,-1)),e==="oneHot"&&r.shape[r.shape.length-1]!==1&&(r=zn(r,-1)),r.rank>2)throw new ne(`When outputMode is not int, maximum output rank is 2 Received outputMode ${e} and input shape ${o} which would result in output rank ${r.rank}.`);const a=["multiHot","oneHot"].includes(e),l=r;let i;if(typeof s<"u"&&e==="count"?i=vp(l,s,t,a):i=vp(l,[],t,a),e!=="tfIdf")return i;if(s)return J(i,s);throw new ne("When outputMode is 'tfIdf', weights must be provided.")}/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class qk extends ht{constructor(e){super(e),this.numTokens=e.numTokens,e.outputMode?this.outputMode=e.outputMode:this.outputMode="multiHot"}getConfig(){const e={numTokens:this.numTokens,outputMode:this.outputMode},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){return e=xt(e),e==null?[this.numTokens]:this.outputMode==="oneHot"&&e[e.length-1]!==1?(e.push(this.numTokens),e):(e[e.length-1]=this.numTokens,e)}call(e,t){return ce(()=>{e=et(e),e.dtype!=="int32"&&(e=dr(e,"int32"));let s;if(typeof t.countWeights<"u"){if(this.outputMode!=="count")throw new ne(`countWeights is not used when outputMode !== count.
              Received countWeights=${t.countWeights}`);s=et(t.countWeights)}const r=Fs(e),o=Ti(e),a=ds(this.numTokens,r).bufferSync().get(0),l=uo(o,0).bufferSync().get(0);if(!(a&&l))throw new ne(`Input values must be between 0 < values <= numTokens with numTokens=${this.numTokens}`);return AB(e,this.outputMode,this.numTokens,s)})}}qk.className="CategoryEncoding";Te(qk);/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const DB=["bilinear","nearest"],o0=new Set(DB);class Kk extends ht{constructor(e){if(super(e),this.height=e.height,this.width=e.width,e.interpolation)if(o0.has(e.interpolation))this.interpolation=e.interpolation;else throw new ne(`Invalid interpolation parameter: ${e.interpolation} is not implemented`);else this.interpolation="bilinear";this.cropToAspectRatio=!!e.cropToAspectRatio}computeOutputShape(e){e=xt(e);const t=e[2];return[this.height,this.width,t]}getConfig(){const e={height:this.height,width:this.width,interpolation:this.interpolation,cropToAspectRatio:this.cropToAspectRatio},t=super.getConfig();return Object.assign(e,t),e}call(e,t){return ce(()=>{const s=[this.height,this.width];if(this.interpolation==="bilinear")return ir.resizeBilinear(e,s,!this.cropToAspectRatio);if(this.interpolation==="nearest")return ir.resizeNearestNeighbor(e,s,!this.cropToAspectRatio);throw new Error(`Interpolation is ${this.interpolation} but only ${[...o0]} are supported`)})}}Kk.className="Resizing";Te(Kk);/**
 * @license
 * Copyright 2023 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Xk{constructor(e){this.seed=e}next(){if(this.seed!==void 0)return this.seed++}}Xk.className="RandomSeed";/**
 * @license
 * Copyright 2023 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Yk extends ht{constructor(e){super(e),this.randomGenerator=new Xk(e.seed)}getConfig(){const e={seed:this.randomGenerator.seed},t=super.getConfig();return Object.assign(e,t),e}}Yk.className="BaseRandomLayer";/**
 * @license
 * Copyright 2023 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const RB=["bilinear","nearest"],a0=new Set(RB);class Zk extends Yk{constructor(e){super(e);const{factor:t,interpolation:s="bilinear"}=e;if(this.factor=t,Array.isArray(this.factor)&&this.factor.length===2)this.widthLower=this.factor[0],this.widthUpper=this.factor[1];else if(!Array.isArray(this.factor)&&this.factor>0)this.widthLower=-this.factor,this.widthUpper=this.factor;else throw new ne(`Invalid factor: ${this.factor}. Must be positive number or tuple of 2 numbers`);if(this.widthLower<-1||this.widthUpper<-1)throw new ne(`factor must have values larger than -1. Got: ${this.factor}`);if(this.widthUpper<this.widthLower)throw new ne(`factor cannot have upper bound less than lower bound.
        Got upper bound: ${this.widthUpper}.
        Got lower bound: ${this.widthLower}
      `);if(s)if(a0.has(s))this.interpolation=s;else throw new ne(`Invalid interpolation parameter: ${s} is not implemented`)}getConfig(){const e={factor:this.factor,interpolation:this.interpolation},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){e=xt(e);const t=e[2];return[this.imgHeight,-1,t]}call(e,t){return ce(()=>{const s=et(e);this.imgHeight=s.shape[s.shape.length-3];const r=s.shape[s.shape.length-2];this.widthFactor=Qo([1],1+this.widthLower,1+this.widthUpper,"float32",this.randomGenerator.next());let o=this.widthFactor.dataSync()[0]*r;o=Math.round(o);const a=[this.imgHeight,o];switch(this.interpolation){case"bilinear":return ir.resizeBilinear(e,a);case"nearest":return ir.resizeNearestNeighbor(e,a);default:throw new Error(`Interpolation is ${this.interpolation}
          but only ${[...a0]} are supported`)}})}}Zk.className="RandomWidth";Te(Zk);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */var i0;(function(n){n[n.FAIL=0]="FAIL",n[n.SHORTEST=1]="SHORTEST",n[n.LONGEST=2]="LONGEST"})(i0||(i0={}));/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ge(n,e){Array.isArray(n)||(n=[n]),n.forEach(t=>{t!=null&&P(t.dtype!=="complex64",()=>`${e} does not support complex64 tensors in the CPU backend.`)})}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const FB=Km;class ud extends Qp{nextDataId(){return ud.nextDataId++}constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new V0(this,sr())}write(e,t,s){this.firstUse&&(this.firstUse=!1,de().get("IS_NODE")&&ms(`
============================
Hi, looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, visit https://github.com/tensorflow/tfjs-node for more details. 
============================`));const r={id:this.nextDataId()};return this.data.set(r,{values:e,dtype:s,refCount:1}),r}makeTensorInfo(e,t,s){let r;if(t==="string"&&s!=null&&s.length>0&&Vi(s[0])){const o=s.map(a=>Gr(a));r=this.write(o,e,t)}else r=this.write(s,e,t);return{dataId:r,shape:e,dtype:t}}refCount(e){return this.data.has(e)?this.data.get(e).refCount:0}incRef(e){const t=this.data.get(e);t.refCount++}decRef(e){if(this.data.has(e)){const t=this.data.get(e);t.refCount--}}move(e,t,s,r,o){this.data.set(e,{values:t,dtype:r,refCount:o})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){const{dtype:t,complexTensorInfos:s}=this.data.get(e);if(t==="complex64"){const r=this.readSync(s.real.dataId),o=this.readSync(s.imag.dataId);return _r(r,o)}return ON(this.data.get(e).values,t)}bufferSync(e){const t=this.readSync(e.dataId);if(e.dtype==="string")try{const s=t.map(r=>qr(r));return lt(e.shape,e.dtype,s)}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return lt(e.shape,e.dtype,t)}makeOutput(e,t,s){return sr().makeTensorFromTensorInfo(this.makeTensorInfo(t,s,e),this)}disposeData(e,t=!1){if(this.data.has(e)){if(this.data.get(e).refCount--,!t&&this.data.get(e).refCount>0)return!1;const{complexTensorInfos:s}=this.data.get(e);s!=null&&(this.disposeData(s.real.dataId,!0),this.disposeData(s.imag.dataId,!0)),this.data.delete(e)}return!0}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}async time(e){const t=Hn();return e(),{kernelMs:Hn()-t}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){Ge([e],"where");const t=this.readSync(e.dataId);return FB(e.shape,t)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}}ud.nextDataId=0;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Jk(n){const e=new Float32Array(n.length);for(let t=0;t<n.length;++t)e[t]=Math.abs(n[t]);return e}const OB=n=>{const{x:e}=n.inputs,t=n.backend;Ge(e,"abs");let s=new Float32Array(me(e.shape));const r=t.data.get(e.dataId).values;return s=Jk(r),t.makeOutput(s,e.shape,e.dtype)},LB={kernelName:Sc,backendName:"cpu",kernelFunc:OB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tn(n){return(e,t,s,r,o)=>{const a=st(e,t),l=a.length,i=Ze(a),u=me(a),c=Sn(o,u),h=e.length,d=t.length,p=Ze(e),f=Ze(t),g=Ra(e,a),y=Ra(t,a);if(g.length+y.length===0)for(let x=0;x<c.length;++x)c[x]=n(s[x%s.length],r[x%r.length]);else for(let x=0;x<c.length;++x){const w=Ga(x,l,i),v=w.slice(-h);g.forEach(N=>v[N]=0);const k=ur(v,h,p),C=w.slice(-d);y.forEach(N=>C[N]=0);const I=ur(C,d,f);c[x]=n(s[k],r[I])}return[c,a]}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function es(n){const{inputs:e,backend:t}=n,{real:s,imag:r}=e,o=t.data.get(s.dataId).values,a=t.data.get(r.dataId).values,l=t.makeTensorInfo(s.shape,"complex64"),i=t.data.get(l.dataId);return i.complexTensorInfos={real:t.makeTensorInfo(s.shape,"float32",o),imag:t.makeTensorInfo(r.shape,"float32",a)},l}const PB={kernelName:cf,backendName:"cpu",kernelFunc:es};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fc(n,e,t="float32"){if(t==="complex64"){const r=fc(n,e,"float32"),o=fc(n,e,"float32");return es({inputs:{real:r,imag:o},backend:n})}const s=Dn(me(e),t);return n.makeTensorInfo(e,t,s)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gr(n){const{inputs:e,backend:t}=n,{x:s}=e;return t.incRef(s.dataId),{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}const zB={kernelName:ll,backendName:"cpu",kernelFunc:gr};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ho(n){const{inputs:e,backend:t}=n,{input:s}=e,r=t.data.get(s.dataId).complexTensorInfos.real,o=t.data.get(r.dataId).values;return t.makeTensorInfo(r.shape,r.dtype,o)}const BB={kernelName:Wf,backendName:"cpu",kernelFunc:Ho};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Qk(n,e,t,s){if(s==="int32"){const r=Int32Array.from(n);return[e,"int32",r]}if(s==="bool"){const r=Yo([0],t),[o,a]=tn((l,i)=>l!==i?1:0)(e,[],n,r,"bool");return[a,"bool",o]}throw new Error(`Error in Cast: failed to cast ${t} to ${s}`)}function no(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{dtype:o}=s;if(o==="complex64"){if(r.dtype==="complex64")return gr({inputs:{x:r},backend:t});const c=fc(t,r.shape,r.dtype),h=no({inputs:{x:r},backend:t,attrs:{dtype:"float32"}}),d=es({inputs:{real:h,imag:c},backend:t});return t.disposeIntermediateTensorInfo(c),t.disposeIntermediateTensorInfo(h),d}if(r.dtype==="complex64"){const c=Ho({inputs:{input:r},backend:t}),h=no({inputs:{x:c},backend:t,attrs:{dtype:o}});return t.disposeIntermediateTensorInfo(c),h}if(!U0(r.dtype,o)){const c=gr({inputs:{x:r},backend:t});return{dataId:c.dataId,shape:c.shape,dtype:o}}const a=t.data.get(r.dataId).values,[l,i,u]=Qk(a,r.shape,r.dtype,o);return t.makeTensorInfo(l,i,u)}const MB={kernelName:Xi,backendName:"cpu",kernelFunc:no};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dn(n,e,t,s){return t==null?({inputs:r,backend:o})=>{const{a,b:l}=r,i=o;Ge([a,l],n);const u=i.data.get(a.dataId).values,c=i.data.get(l.dataId).values,h=a.dtype==="string"?Er(u):u,d=a.dtype==="string"?Er(c):c,p=s||a.dtype,[f,g]=e(a.shape,l.shape,h,d,p);return i.makeTensorInfo(g,p,f)}:({inputs:r,backend:o})=>{const{a,b:l}=r,i=o;if(a.dtype==="complex64"||l.dtype==="complex64"){const u=no({inputs:{x:a},backend:i,attrs:{dtype:"complex64"}}),c=i.data.get(u.dataId),h=c.complexTensorInfos.real,d=c.complexTensorInfos.imag,p=i.data.get(h.dataId).values,f=i.data.get(d.dataId).values,g=no({inputs:{x:l},backend:i,attrs:{dtype:"complex64"}}),y=i.data.get(g.dataId),x=y.complexTensorInfos.real,w=y.complexTensorInfos.imag,v=i.data.get(x.dataId).values,k=i.data.get(w.dataId).values,[C,I,N]=t(a.shape,l.shape,p,f,v,k),E=i.makeTensorInfo(N,"float32",C),R=i.makeTensorInfo(N,"float32",I),O=es({inputs:{real:E,imag:R},backend:i});return i.disposeIntermediateTensorInfo(u),i.disposeIntermediateTensorInfo(g),i.disposeIntermediateTensorInfo(E),i.disposeIntermediateTensorInfo(R),O}else{const u=i.data.get(a.dataId).values,c=i.data.get(l.dataId).values,h=s||a.dtype,[d,p]=e(a.shape,l.shape,u,c,h);return i.makeTensorInfo(p,h,d)}}}function ey(n){return(e,t,s,r,o,a)=>{const l=st(e,t),i=me(l),u=l.length,c=Ze(l),h=Sn("float32",i),d=Sn("float32",i),p=Ra(e,l),f=Ra(t,l),g=_r(s,r),y=_r(o,a),x=e.length,w=Ze(e),v=t.length,k=Ze(t);if(p.length+f.length===0)for(let C=0;C<h.length;C++){const I=C%g.length,N=C%y.length,E=n(g[I*2],g[I*2+1],y[N*2],y[N*2+1]);h[C]=E.real,d[C]=E.imag}else for(let C=0;C<h.length;C++){const I=Ga(C,u,c),N=I.slice(-x);p.forEach(j=>N[j]=0);const E=ur(N,x,w),R=I.slice(-v);f.forEach(j=>R[j]=0);const O=ur(R,v,k),B=n(g[E*2],g[E*2+1],y[O*2],y[O*2+1]);h[C]=B.real,d[C]=B.imag}return[h,d,l]}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const e2=tn((n,e)=>n+e),VB=ey((n,e,t,s)=>({real:n+t,imag:e+s})),Pa=dn(Ha,e2,VB),WB={kernelName:Ha,backendName:"cpu",kernelFunc:Pa};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ty(n,e,t,s,r){const o=me(s),a=Dn(r,t);for(let l=0;l<n.length;l++){const i=n[l];if(i<0)throw new Error("Input x must be non-negative!");i>=r||(o>0?a[i]+=e[l]:a[i]+=1)}return a}function t2(n,e,t,s=!1){const r=n.shape[0],o=n.shape[1],a=lt([r,t],e.dtype);for(let l=0;l<r;l++)for(let i=0;i<o;i++){const u=n.get(l,i);if(u<0)throw new Error("Input x must be non-negative!");u>=t||(s?a.set(1,l,u):e.size>0?a.set(a.get(l,u)+e.get(l,i),l,u):a.set(a.get(l,u)+1,l,u))}return a}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const n2=tn((n,e)=>n&e),UB=dn(Ac,n2),GB={kernelName:Ac,backendName:"cpu",kernelFunc:UB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function br(n){return(e,t,s)=>{const r=Zt(t,e.length);for(let o=0;o<e.length;++o)r[o]=n(e[o],s);return r}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $t(n,e,t){const s=br(e);return fo(n,s,t)}function fo(n,e,t){return({inputs:s,attrs:r,backend:o})=>{const{x:a}=s;Ge(a,n);const l=o,i=l.data.get(a.dataId).values;let u;if(a.dtype==="string"){if(!Array.isArray(i))throw new Error("String tensor's value was not an instance of Array");u=Er(i)}else u=i;const c=t||a.dtype,h=e(u,c,r);return l.makeTensorInfo(a.shape,c,h)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const s2=br(n=>Math.ceil(n)),HB=fo(Yi,s2),jB={kernelName:Yi,backendName:"cpu",kernelFunc:HB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function r2(n,e,t,s){const r=Zt(t,me(e));if(s&&t!=="string"){let o=0;n.forEach(a=>{const l=me(a.shape);r.set(a.vals,o),o+=l})}else{let o=0;n.forEach(a=>{const l=t==="string"?Er(a.vals):a.vals;let i=0;for(let u=0;u<a.shape[0];++u){const c=u*e[1]+o;for(let h=0;h<a.shape[1];++h)r[c+h]=l[i++]}o+=a.shape[1]})}return r}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const o2=tn((n,e)=>n===e?1:0),a2=dn(Mc,o2,null,"bool"),qB={kernelName:Mc,backendName:"cpu",kernelFunc:a2};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const i2=br(n=>Math.exp(n)),l2=fo(sl,i2,"float32"),KB={kernelName:sl,backendName:"cpu",kernelFunc:l2};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const u2=br(n=>Math.expm1(n)),XB=fo(rl,u2),YB={kernelName:rl,backendName:"cpu",kernelFunc:XB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const c2=br(n=>Math.floor(n)),ZB=fo(ol,c2),JB={kernelName:ol,backendName:"cpu",kernelFunc:ZB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const h2=tn((n,e)=>Math.floor(n/e)),QB=dn(al,h2,null,"int32"),eM={kernelName:al,backendName:"cpu",kernelFunc:QB};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function d2(n,e,t,s,r,o,a,l,i){const u=lt([s,o],t);for(let c=0;c<s;c++){const h=[];let d=0;for(let p=0;p<r;p++){const f=n[c*r+p];d+=f*a[p],h.push(f)}if(d<0||d>=i/o)throw new Error(`Invalid indices: ${h} does not index into ${l}`);for(let p=0;p<o;p++)u.values[c*o+p]=e.get(...e.indexToLoc(d*o+p))}return u}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function p2(n,e,t){const s=lt(t,n.dtype);for(let r=0;r<s.size;++r){const a=s.indexToLoc(r).slice(),l=a[0],i=a[2],u=e.locToIndex([l,i]);a[2]=e.values[u];const c=n.locToIndex(a);0<=c&&c<n.values.length&&(s.values[r]=n.values[c])}return s}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const f2=tn((n,e)=>n>e?1:0),tM=dn(Gc,f2,null,"bool"),nM={kernelName:Gc,backendName:"cpu",kernelFunc:tM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const m2=tn((n,e)=>n>=e?1:0),sM=dn(il,m2,null,"bool"),rM={kernelName:il,backendName:"cpu",kernelFunc:sM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const g2=tn((n,e)=>n<e?1:0),oM=dn(jc,g2,null,"bool"),aM={kernelName:jc,backendName:"cpu",kernelFunc:oM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const y2=tn((n,e)=>n<=e?1:0),iM=dn(qc,y2,null,"bool"),lM={kernelName:qc,backendName:"cpu",kernelFunc:iM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function b2(n,e,t){const s=(e-n)/(t-1),r=Dn(t,"float32");r[0]=n;for(let o=1;o<r.length;o++)r[o]=r[o-1]+s;return r}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const x2=br(n=>Math.log(n)),uM=fo(dl,x2),cM={kernelName:dl,backendName:"cpu",kernelFunc:uM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function w2(n,e,t,s){const r=Sn(s,me(t));for(let o=0;o<r.length;++o){const a=o*e;let l=n[a];for(let i=0;i<e;++i){const u=n[a+i];(Number.isNaN(u)||u>l)&&(l=u)}r[o]=l}return r}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const v2=tn((n,e)=>Math.max(n,e)),hM=dn(fl,v2),dM={kernelName:fl,backendName:"cpu",kernelFunc:hM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const k2=tn((n,e)=>Math.min(n,e)),pM=dn(ml,k2),fM={kernelName:ml,backendName:"cpu",kernelFunc:pM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ny=tn((n,e)=>n*e),mM=ey((n,e,t,s)=>({real:n*t-e*s,imag:n*s+e*t})),cd=dn(yl,ny,mM),gM={kernelName:yl,backendName:"cpu",kernelFunc:cd};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function S2(n,e,t){const s=ro(-1,t);return ny([],e,s,n,t)}function yM(n){const{inputs:e,backend:t}=n,{x:s}=e;Ge(s,"neg");const r=t.data.get(s.dataId).values,[o,a]=S2(r,s.shape,s.dtype);return t.makeTensorInfo(a,s.dtype,o)}const bM={kernelName:rh,backendName:"cpu",kernelFunc:yM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const C2=tn((n,e)=>n!==e?1:0),xM=dn(oh,C2,null,"bool"),wM={kernelName:oh,backendName:"cpu",kernelFunc:xM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sy(n,e,t,s,r){const o=e.length,a=me(e),l=Ze(e),i=Ze(r),u=Sn(t,me(r));for(let c=0;c<a;++c){const h=Ga(c,o,l),d=new Array(h.length);for(let f=0;f<d.length;f++)d[f]=h[s[f]];const p=ur(d,o,i);u[p]=n[c]}return u}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xn(n){const{inputs:e,attrs:t,backend:s}=n,{x:r}=e,{perm:o}=t;Ge(r,"transpose");const a=r.shape.length,l=new Array(a);for(let h=0;h<l.length;h++)l[h]=r.shape[o[h]];const i=s.data.get(r.dataId).values,u=sy(i,r.shape,r.dtype,o,l);return{dataId:s.write(u,l,r.dtype),shape:l,dtype:r.dtype}}const vM={kernelName:ka,backendName:"cpu",kernelFunc:Xn};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function I2(n,e,t,s){const[r,o]=bn(n,s),a=rs(e,"int32"),l=Dn(me(r),a),i=me(o);for(let u=0;u<l.length;++u){const c=u*i;let h=1;for(let d=0;d<i;++d)h*=t[c+d];l[u]=h}return{outVals:l,outShape:r,outDtype:a}}function kM(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o,keepDims:a}=s;Ge(r,"prod");const l=r.shape.length,i=ct(o,r.shape),u=jt(i,l);let c=i,h=r;const d=[];u!=null&&(h=Xn({inputs:{x:r},backend:t,attrs:{perm:u}}),d.push(h),c=Qt(c.length,l));const p=t.data.get(h.dataId).values,{outVals:f,outShape:g,outDtype:y}=I2(h.shape,h.dtype,p,c);let x=g;return a&&(x=Jt(g,i)),d.forEach(w=>t.disposeIntermediateTensorInfo(w)),t.makeTensorInfo(x,y,f)}const SM={kernelName:hh,backendName:"cpu",kernelFunc:kM};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CM(n,e,t){n.forEach((s,r)=>{if(s<0||s>=t){const o=Ga(r,e.length,Ze(e)).join(",");throw new Error(`indices[${o}] = ${s} is not in [0, ${t})`)}})}function IM(n,e){for(let t=0;t<n.length;++t){const s=n[t],r=t===n.length-1?e:n[t+1].length;if(s.length===0)throw new Error("Ragged splits may not be empty");if(s[0]<0)throw new Error("Ragged splits must be non-negative");if(s[s.length-1]>r)throw new Error("Ragged splits must not point past values");for(let o=1;o<s.length;++o)if(s[o-1]>s[o])throw new Error("Ragged splits must be sorted in ascending order")}}function NM(n,e,t,s){const r=[];let o=0;const a=e.length-1+t.length,l=new Array(a).fill(null).map(()=>[0]);IM(t,s);let i=1;for(let u=0;u<e.length-1;++u){i*=e[u];const c=e[u+1];for(let h=1;h<i+1;++h)l[u].push(h*c)}for(let u=0;u<n.length;++u){let c=n[u],h=n[u]+1;for(let d=0;d<t.length;++d){const p=t[d],f=d+e.length-1;if(f>=0){const g=l[f],y=g[g.length-1]-p[c];for(let x=c;x<h;++x)l[f].push(p[x+1]+y)}c=p[c],h=p[h]}h!==c&&(r.push([c,h]),o+=h-c)}return{outSplits:l,valueSlices:r,numValues:o}}function $M(n){const e=[];for(let t=0;t<n.length;++t){const s=n[t].length,r=Zt("int32",s);e.push(r),n[t].forEach((o,a)=>r[a]=o)}return e}function l0(n,e){const t=n.slice(0,e);for(;t.length<e;)t.push(1);for(let s=e;s<n.length;s++)t[e-1]*=n[s];return t}function TM(n,e,t,s,r,o){const a=l0(e,2)[1],l=l0(o,2)[1];let i=0;for(const u of t)for(let c=u[0];c<u[1];++c){for(let h=0;h<s;++h)r[i*l+h]=n[c*a+h];++i}}function _M(n,e,t,s,r){const o=e.slice();o[0]=r;const a=Zt(t,me(o)),l=n.length,i=l===0?0:l/e[0];return TM(n,e,s,i,a,o),[a,o]}function N2(n,e,t,s,r,o,a,l){if(n.length===0)throw new Error("paramsNestedSplits must be non empty");if(e[0].length===0)throw new Error("Split tensors must not be scalars");const i=e[0][0]-1;if(CM(o,a,i),s.length===0)throw new Error("params.rank must be nonzero");const u=s[0],{outSplits:c,valueSlices:h,numValues:d}=NM(o,a,n,u),p=$M(c),f=_M(t,s,r,h,d);return[p,f[0],f[1]]}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const u0=2147483647;function $2(n,e,t,s,r,o,a){if(e.length>1)throw new Error("starts must be a scalar or vector");if(r.length>1)throw new Error("limits must be a scalar or vector");if(a.length>1)throw new Error("deltas must be a scalar or vector");const l=e.length===0,i=r.length===0,u=a.length===0,c=[];l||c.push(e[0]),i||c.push(r[0]),u||c.push(a[0]);for(let y=1;y<c.length;++y)if(c[y]!==c[y-1])throw new Error("starts, limits, and deltas must have the same shape");const h=c.length===0?1:c[0],d=Zt("int32",h+1);d[0]=0;for(let y=0;y<h;++y){const x=l?n[0]:n[y],w=i?s[0]:s[y],v=u?o[0]:o[y];if(v===0)throw new Error("Requires delta != 0");let k;if(v>0&&w<x||v<0&&w>x)k=0;else if(k=Math.ceil(Math.abs((w-x)/v)),k>u0)throw new Error(`Requires ((limit - start) / delta) <= ${u0}`);d[y+1]=d[y]+k}const p=d[h],f=Zt(t,p);let g=0;for(let y=0;y<h;++y){const x=d[y+1]-d[y];let w=l?n[0]:n[y];const v=u?o[0]:o[y];for(let k=0;k<x;++k)f[g++]=w,w+=v}return[d,f]}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Ss=Hs;class mc{constructor(e,t,s,r,o,a,l,i,u,c){this.shape=e,this.shapeShape=t,this.values=s,this.valuesShape=r,this.valuesDType=o,this.defaultValue=a,this.defaultValueShape=l,this.rowPartitionValues=i,this.rowPartitionValuesShapes=u,this.rowPartitionTypes=ow(c),this.raggedRank=aw(this.rowPartitionTypes)}getRowPartitionTypeByDimension(e){return this.rowPartitionTypes[0]===Ss.FIRST_DIM_SIZE?this.rowPartitionTypes[e+1]:this.rowPartitionTypes[e]}getRowPartitionTensor(e){return this.rowPartitionTypes[0]===Ss.FIRST_DIM_SIZE?this.rowPartitionValues[e+1]:this.rowPartitionValues[e]}getMaxWidth(e){const t=this.getRowPartitionTensor(e-1);switch(this.getRowPartitionTypeByDimension(e-1)){case Ss.VALUE_ROWIDS:return mc.getMaxWidthValueRowID(t);case Ss.ROW_SPLITS:return mc.getMaxWidthRowSplit(t);default:throw new Error(`Cannot handle partition type ${Ss[this.getRowPartitionTypeByDimension(e-1)]}`)}}static getMaxWidthRowSplit(e){const t=e.length;if(t===0||t===1)return 0;let s=0;for(let r=0;r<t-1;++r){const o=e[r+1]-e[r];o>s&&(s=o)}return s}static getMaxWidthValueRowID(e){const t=e.length;if(t===0)return 0;let s=0,r=e[0],o=0;for(let a=1;a<t;++a){const l=e[a];l!==r&&(r=l,o=Math.max(a-s,o),s=a)}return Math.max(t-s,o)}tensorShapeFromTensor(e,t,s=!0){if(t.length===0){if(e[0]===-1)return[];throw new Error("The only valid scalar shape tensor is the fully unknown shape specified as -1.")}return h0(e,s)}calculateOutputSize(e){const t=this.valuesShape,s=this.defaultValueShape;iw(s,t);const r=this.tensorShapeFromTensor(this.shape,this.shapeShape),a=rw(this.raggedRank,r,t);a[0]<0&&(a[0]=e);for(let l=1;l<=this.raggedRank;++l)a[l]<0&&(a[l]=this.getMaxWidth(l));return a}calculateFirstParentOutputIndex(e,t,s){const r=Math.min(e,s),o=[];let a=0;for(let l=0;l<r;++l,a+=t)o.push(a);for(let l=r;l<e;++l)o.push(-1);return P(o.length===e,()=>"Final length of result must be equal to firstDimension."),o}calculateOutputIndexRowSplit(e,t,s,r){const o=e.length,a=[];for(let l=0;l<o-1;++l){const i=e[l+1]-e[l];let u=Math.min(r,i),c=t[l];c===-1&&(u=0);for(let h=0;h<u;++h)a.push(c),c+=s;for(let h=0;h<i-u;++h)a.push(-1)}if(o>0&&a.length!==e[o-1])throw new Error("Invalid row split size.");return a}calculateOutputIndexValueRowID(e,t,s,r){const o=e.length,a=[];if(o===0)return[];let l=0,i=e[0];if(i>=t.length)throw new Error(`Got currentValueRowId=${i}, which is not less than ${t.length}`);let u=t[i];a.push(u);for(let c=1;c<o;++c){const h=e[c];if(h===i)u>=0&&(++l,l<r?u+=s:u=-1);else{if(l=0,i=h,h>=t.length)throw new Error(`Got nextValueRowId=${h} which is not less than ${t.length}`);u=t[h]}a.push(u)}if(a.length!==e.length)throw new Error("Invalid row ids.");return a}calculateOutputIndex(e,t,s,r){const o=this.getRowPartitionTensor(e),a=this.getRowPartitionTypeByDimension(e);switch(a){case Ss.VALUE_ROWIDS:return this.calculateOutputIndexValueRowID(o,t,s,r);case Ss.ROW_SPLITS:if(o.length-1>t.length)throw new Error(`Row partition size is greater than output size: ${o.length-1} > ${t.length}`);return this.calculateOutputIndexRowSplit(o,t,s,r);default:throw new Error(`Unsupported partition type: ${Ss[a]}`)}}getFirstDimensionSize(){const e=this.rowPartitionValues[0];if(this.rowPartitionTypes.length===0)throw new Error("No row_partition_types given.");const t=this.rowPartitionTypes[0];switch(t){case Ss.FIRST_DIM_SIZE:return e[0];case Ss.VALUE_ROWIDS:throw new Error("Cannot handle VALUE_ROWIDS in first dimension.");case Ss.ROW_SPLITS:return this.rowPartitionValuesShapes[0][0]-1;default:throw new Error(`Cannot handle type ${Ss[t]}`)}}compute(){if(this.rowPartitionValues[0].length<=0)throw new Error("Invalid first partition input. Tensor requires at least one element.");const t=this.getFirstDimensionSize(),s=this.calculateOutputSize(t),r=new Array(this.raggedRank+1);r[r.length-1]=1;for(let i=r.length-2;i>=0;--i)r[i]=r[i+1]*s[i+1];const o=h0(s,!1),a=Zt(this.valuesDType,me(o));if(r[0]*s[0]>0){let i=this.calculateFirstParentOutputIndex(t,r[0],s[0]);for(let u=1;u<=this.raggedRank;++u)i=this.calculateOutputIndex(u-1,i,r[u],s[u]);this.setOutput(this.raggedRank,i,a,o)}return[o,a]}setOutput(e,t,s,r){if(s.length===0)return;const o=this.values,a=s;let l=r.slice();l=l.slice(e+1);const i=me(l),u=t.length;let c=this.defaultValue;if(c.length!==i&&c.length!==1){const f=this.defaultValueShape;ce(()=>{const g=te(c,f);c=Ia(g,l).dataSync()})}let h=0,d=0,p=0;for(let f=0;f<=u;++f){let g=f<u?t[f]:-1;if(g===p){++p;continue}if(d<p){const y=o.subarray(h*i),x=a.subarray(d*i),w=(p-d)*i;c0(x,y,w)}if(f>=u){const y=s.length;g=Math.floor(y/i)}if(g>p)if(this.defaultValue.length===1)a.subarray(p*i,g*i).fill(this.defaultValue[0]),p=g;else for(;g>p;){const y=a.slice(p*i);c0(y,c,i),++p}g<0?(h=f+1,d=p):(h=f,d=p,p=d+1)}}}function c0(n,e,t){for(let s=0;s<t;s++)n[s]=e[s]}function h0(n,e){const t=[];for(let s of n){if(s<0){if(!e)throw new Error(`Dimension ${s} must be >= 0`);if(s<-1)throw new Error(`Dimension ${s} must be >= -1`);s=-1}t.push(s)}return t}function T2(n,e,t,s,r,o,a,l,i,u){return new mc(n,e,t,s,r,o,a,l,i,u).compute()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _2(n,e,t,s){const r=n===e,o=n<e&&t<0,a=e<n&&t>1;if(r||o||a)return Dn(0,s);const l=Math.abs(Math.ceil((e-n)/t)),i=Dn(l,s);e<n&&t===1&&(t=-1),i[0]=n;for(let u=1;u<i.length;u++)i[u]=i[u-1]+t;return i}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const E2=br(n=>1/Math.sqrt(n)),EM=fo(Sl,E2),AM={kernelName:Sl,backendName:"cpu",kernelFunc:EM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Eo(n,e,t,s,r,o,a,l,i,u){const c=[s/r,r],h=n.values,d=e.values;if(s===0)return lt(t,e.dtype);const p=i instanceof ln?i:lt(c,e.dtype);typeof i=="string"||typeof i=="number"?p.values.fill(i):typeof i=="boolean"&&p.values.fill(+i);for(let f=0;f<o;f++){const g=[];let y=0;for(let x=0;x<a;x++){const w=h[f*a+x];g.push(w),y+=w*l[x]}if(y<0||y>=s/r)throw new Error(`Invalid indices: ${g} does not index into ${t}`);for(let x=0;x<r;x++)u?p.values[y*r+x]+=d[f*r+x]:p.values[y*r+x]=e.rank===0?d[0]:d[f*r+x]}return p}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const DM=br(n=>1/(1+Math.exp(-n))),A2=$t(Tl,n=>1/(1+Math.exp(-n))),RM={kernelName:Tl,backendName:"cpu",kernelFunc:A2};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function D2(n,e,t,s,r){const o=lg(s,e,t),a=me(t),l=Ze(s);if(o){const h=ug(e,l);return r==="string"?n.slice(h,h+a):n.subarray(h,h+a)}const i=r==="string"?Er(n):n,u=lt(s,r,i),c=lt(t,r);for(let h=0;h<c.size;++h){const d=c.indexToLoc(h),p=d.map((f,g)=>f+e[g]);c.set(u.get(...p),...d)}return r==="string"?$w(c.values):c.values}function jo(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{begin:o,size:a}=s;Ge(r,"slice");const[l,i]=Xh(r,o,a);ag(r,l,i);const u=t.data.get(r.dataId).values,c=D2(u,l,i,r.shape,r.dtype);return t.makeTensorInfo(i,r.dtype,c)}const FM={kernelName:yh,backendName:"cpu",kernelFunc:jo};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function R2(n,e,t,s,r,o,a){const l=e[0],i=o[0],u=new Array(i),c=new Array(l),h=e[1];if(i===0){if(l!==0)throw new Error(fw(l));const y=Zt(t,0),x=Zt(r,0);return[y,[0,h],x,u,c]}let d=!0,p=0;const f=new Array(i).fill(0);for(let y=0;y<l;++y){const x=n[y*h];if(x<0)throw new Error(mw(y,x));if(x>=i)throw new Error(gw(y,x,i));++f[x],d=d&&x>=p,p=x}let g=!0;for(let y=0;y<i;++y){const x=f[y]===0;u[y]=x,g=g&&!x,f[y]=Math.max(f[y],1),y>0&&(f[y]+=f[y-1])}if(g&&d){const y=n,x=s;for(let w=0;w<l;++w)c[w]=w;return[y,[l,h],x,u,c]}else{const y=f[i-1],x=Zt(t,y*h),w=Zt(r,y),v=new Array(i).fill(0);for(let k=0;k<l;++k){const C=n[k*h],I=v[C],N=(C===0?0:f[C-1])+I;v[C]++;for(let E=0;E<h;++E)x[N*h+E]=n[k*h+E];w[N]=s[k],c[k]=N}for(let k=0;k<i;++k)if(v[k]===0){const I=k===0?0:f[k-1];x[I*h+0]=k;for(let N=1;N<h;++N)x[I*h+N]=0;w[I]=a}return[x,[y,h],w,u,c]}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function F2(n,e,t,s,r){const o=me(s),a=e[0],l=r.length,i=[];let u=1,c=-1;for(let y=0;y<l;++y){const x=r[y];if(x===-1){if(c!==-1)throw new Error(yw(c,y));c=y,i.push(1)}else{if(x<0)throw new Error(bw(y,x));u*=x,i.push(x)}}if(c!==-1){if(u<=0)throw new Error(xw());const y=Math.trunc(o/u);if(u*y!==o)throw new Error(ww(s,i));i[c]=y}if(me(i)!==o)throw new Error(vw(s,i));const d=s.length,p=[];if(d>0){p[d-1]=1;for(let y=d-2;y>=0;--y)p[y]=p[y+1]*s[y+1]}const f=[];if(l>0){f[l-1]=1;for(let y=l-2;y>=0;--y)f[y]=f[y+1]*i[y+1]}const g=Zt(t,a*l);for(let y=0;y<a;++y){let x=0;for(let w=0;w<d;++w)x+=n[y*d+w]*p[w];for(let w=0;w<l;++w)g[y*l+w]=Math.trunc(x/f[w]),x%=f[w]}return[g,[a,l],i]}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ry(n,e,t,s,r,o=!1,a=0){const l=s.length,i=[e[0],n.length/e[0]],u=i[1],h=l>0?r[l-1]+1:0;if(h<0)throw new Error(Ip());const d=e.slice();d[0]=h;const p=d.reduce((v,k)=>v*k,1),f=Zt(t,p);if(l===0)return h>0&&f.fill(a),[f,d];if(h<=0)throw new Error(Ip());let g=0,y=1,x=0,w=r[g];for(;;){let v=0;if(y<l){if(v=r[y],w===v){++y;continue}if(w>=v)throw new Error(kw())}if(w<0||w>=h)throw new Error(Sw(w,h));w>x&&f.fill(a,x*u,w*u);for(let k=g;k<y;++k){const C=s[k];if(C<0||C>=i[0])throw new Error(Cw(k,s[k],i[0]));for(let I=0;I<u;I++)f[w*u+I]+=n[C*u+I]}if(o)for(let k=0;k<u;k++)f[w*u+k]/=y-g;if(g=y,++y,x=w+1,w=v,y>l)break}return x<h&&f.fill(a,x*u,h*u),[f,d]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const OM=br(n=>Math.sqrt(n)),LM=$t(El,n=>Math.sqrt(n)),PM={kernelName:El,backendName:"cpu",kernelFunc:LM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const O2=tn((n,e)=>{const t=n-e;return t*t}),zM=dn(Al,O2),BM={kernelName:Al,backendName:"cpu",kernelFunc:zM};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const L2=br((n,e)=>{const{pattern:t,replaceGlobal:s,rewrite:r}=e;return n.replace(new RegExp(t,s?"g":""),r)}),MM=fo(kh,L2),VM={kernelName:kh,backendName:"cpu",kernelFunc:MM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function P2(n,e,t,s){const r=lt(n,e.dtype);for(let o=0;o<r.size;o++){const a=r.indexToLoc(o),l=new Array(a.length);for(let i=0;i<l.length;i++)l[i]=a[i]*t[i]+s[i];r.set(e.get(...l),...a)}return r}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class WM{constructor(e,t,s,r,o,a){this.separator=Gr(e),this.nGramWidths=t,this.leftPad=Gr(s),this.rightPad=Gr(r),this.padWidth=o,this.preserveShort=a}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,t){const s=this.getPadWidth(t);return Math.max(0,e+2*s-t+1)}createNGrams(e,t,s,r,o,a){for(let l=0;l<o;++l){const i=this.getPadWidth(a),u=Math.max(0,i-l),c=Math.max(0,i-(o-(l+1))),h=a-(u+c),d=t+(u>0?0:l-i);let p=0;p+=u*this.leftPad.length;for(let w=0;w<h;++w)p+=e[d+w].length;p+=c*this.rightPad.length;const f=u+c+h-1;p+=f*this.separator.length,s[r+l]=new Uint8Array(p);const g=s[r+l];let y=0;const x=w=>w.forEach(v=>g[y++]=v);for(let w=0;w<u;++w)x(this.leftPad),x(this.separator);for(let w=0;w<h-1;++w)x(e[d+w]),x(this.separator);if(h>0){x(e[d+h-1]);for(let w=0;w<c;++w)x(this.separator),x(this.rightPad)}else{for(let w=0;w<c-1;++w)x(this.rightPad),x(this.separator);x(this.rightPad)}}}compute(e,t){const s=e.length,r=t.length;if(r>0){let i=t[0];if(i!==0)throw new Error(`First split value must be 0, got ${i}`);for(let u=1;u<r;++u){let c=t[u]>=i;if(c=c&&t[u]<=s,!c)throw new Error(`Invalid split value ${t[u]}, must be in [${i}, ${s}]`);i=t[u]}if(i!==s)throw new Error(`Last split value must be data size. Expected ${s}, got ${i}`)}const o=r-1,a=Zt("int32",r);if(s===0||r===0){const i=new Array(s);for(let u=0;u<=o;++u)a[u]=0;return[i,a]}a[0]=0;for(let i=1;i<=o;++i){const u=t[i]-t[i-1];let c=0;this.nGramWidths.forEach(h=>{c+=this.getNumNGrams(u,h)}),this.preserveShort&&u>0&&c===0&&(c=1),a[i]=a[i-1]+c}const l=new Array(a[o]);for(let i=0;i<o;++i){const u=t[i];let c=a[i];if(this.nGramWidths.forEach(h=>{const d=t[i+1]-t[i],p=this.getNumNGrams(d,h);this.createNGrams(e,u,l,c,p,h),c+=p}),this.preserveShort&&c===a[i]){const h=t[i+1]-t[i];if(h===0)continue;const d=h+2*this.padWidth;this.createNGrams(e,u,l,c,1,d)}}return[l,a]}}function z2(n,e,t,s,r,o,a,l){return new WM(t,s,r,o,a,l).compute(n,e)}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UM(n,e,t,s){if(!n.length)return;if(e.length===0){for(let o=0;o<n.length;++o)s.push(n.subarray(o,o+1));return}if(e.length===1){const o=e[0];let a=n.indexOf(o);for(;a!==-1;){const l=n.subarray(0,a);(!t||l.length!==0)&&s.push(l),n=n.subarray(a+1),a=n.indexOf(o)}(!t||n.length!==0)&&s.push(n);return}let r=0;for(let o=0;o<n.length+1;o++)if(o===n.length||e.indexOf(n[o])!==-1){const a=n.subarray(r,o);(!t||a.length!==0)&&s.push(a),r=o+1}}function B2(n,e,t){const s=n.length,r=[];let o=0,a=0;const l=new Array(s);for(let d=0;d<s;++d){const p=r.length;UM(n[d],e,t,r);const f=r.length-p;l[d]=f,o+=f,a=Math.max(a,f)}const i=Zt("int32",o*2),u=new Array(o),c=[s,a];let h=0;for(let d=0;d<s;++d)for(let p=0;p<l[d];++p)i[h*2]=d,i[h*2+1]=p,u[h]=r[h],++h;return[i,u,c]}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function M2(n,e){const t=Zt("int32",n.length);for(let s=0;s<n.length;++s)t[s]=e$(n[s]).modulo(e).getLowBitsUnsigned();return t}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const V2=tn((n,e)=>n-e),GM=ey((n,e,t,s)=>({real:n-t,imag:e-s})),oy=dn(Dl,V2,GM),HM={kernelName:Dl,backendName:"cpu",kernelFunc:oy};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function W2(n,e){const t=new Array(n.rank);for(let r=0;r<t.length;r++)t[r]=n.shape[r]*e[r];const s=lt(t,n.dtype);for(let r=0;r<s.values.length;++r){const o=s.indexToLoc(r),a=new Array(n.rank);for(let i=0;i<a.length;i++)a[i]=o[i]%n.shape[i];const l=n.locToIndex(a);s.values[r]=n.values[l]}return s}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ki=(n,e)=>{const t=e.value-n.value;return t===0?n.index-e.index:t};function U2(n,e,t=0,s=n.length-1){for(;s>t;){if(s-t>600){const l=s-t+1,i=e-t+1,u=Math.log(l),c=.5*Math.exp(2*u/3),h=.5*Math.sqrt(u*c*(l-c)/l)*Math.sign(i-l/2),d=Math.max(t,Math.floor(e-i*c/l+h)),p=Math.min(s,Math.floor(e+(l-i)*c/l+h));U2(n,e,d,p)}const r=n[e];let o=t,a=s;for(ga(n,t,e),ki(n[s],r)>0&&ga(n,t,s);o<a;){for(ga(n,o,a),o++,a--;ki(n[o],r)<0;)o=o+1;for(;ki(n[a],r)>0;)a=a-1}ki(n[t],r)===0?ga(n,t,a):(a=a+1,ga(n,a,s)),a<=e&&(t=a+1),e<=a&&(s=a-1)}}function G2(n,e,t,s,r){const o=e[e.length-1],[a,l]=[n.length/o,o],i=Sn(t,a*s),u=Sn("int32",a*s);for(let h=0;h<a;h++){const d=h*l,p=n.subarray(d,d+l);let f=new Array(p.length);p.forEach((w,v)=>f[v]={value:w,index:v}),s<f.length&&(U2(f,s),f=f.slice(0,s)),r&&f.sort(ki);const g=h*s,y=i.subarray(g,g+s),x=u.subarray(g,g+s);for(let w=0;w<s;w++)y[w]=f[w].value,x[w]=f[w].index}const c=e.slice();return c[c.length-1]=s,[lt(c,t,i),lt(c,"int32",u)]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function H2(n,e,t,s){const r=ct(e,t)[0],o=[1,t[0],1];for(let f=0;f<r;f++)o[0]*=t[f];o[1]=t[r];for(let f=r+1;f<t.length;f++)o[2]*=t[f];const a=new Map,l=new Int32Array(t[r]),i=new ln(o,s,n),u=[],c=o[0]===1&&o[2]===1;for(let f=0;f<t[r];f++){let g;if(c)g=n[f].toString();else{const x=[];for(let w=0;w<o[0];w++)for(let v=0;v<o[2];v++)x.push(i.get(w,f,v));g=x.join(",")}const y=a.get(g);if(y!=null)l[f]=y;else{const x=a.size;a.set(g,x),l[f]=x,u.push(f)}}const h=o.slice();h[1]=a.size;const d=new ln(h,s);u.forEach((f,g)=>{for(let y=0;y<o[0];y++)for(let x=0;x<o[2];x++)d.set(i.get(y,f,x),y,g,x)});const p=t.slice();return p[r]=h[1],{outputValues:d.values,outputShape:p,indices:l}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jM=Object.freeze(Object.defineProperty({__proto__:null,addImpl:e2,bincountImpl:ty,bincountReduceImpl:t2,bitwiseAndImpl:n2,castImpl:Qk,ceilImpl:s2,concatImpl:r2,equalImpl:o2,expImpl:i2,expm1Impl:u2,floorDivImpl:h2,floorImpl:c2,gatherNdImpl:d2,gatherV2Impl:p2,greaterEqualImpl:m2,greaterImpl:f2,lessEqualImpl:y2,lessImpl:g2,linSpaceImpl:b2,logImpl:x2,maxImpl:w2,maximumImpl:v2,minimumImpl:k2,multiplyImpl:ny,negImpl:S2,notEqualImpl:C2,prodImpl:I2,raggedGatherImpl:N2,raggedRangeImpl:$2,raggedTensorToTensorImpl:T2,rangeImpl:_2,rsqrtImpl:E2,scatterImpl:Eo,sigmoidImpl:DM,simpleAbsImpl:Jk,sliceImpl:D2,sparseFillEmptyRowsImpl:R2,sparseReshapeImpl:F2,sparseSegmentReductionImpl:ry,sqrtImpl:OM,squaredDifferenceImpl:O2,staticRegexReplaceImpl:L2,stridedSliceImpl:P2,stringNGramsImpl:z2,stringSplitImpl:B2,stringToHashBucketFastImpl:M2,subImpl:V2,tileImpl:W2,topKImpl:G2,transposeImpl:sy,uniqueImpl:H2},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */mx("cpu",()=>new ud,1);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const j2=$t(tl,n=>n>=0?n:Math.exp(n)-1),qM={kernelName:tl,backendName:"cpu",kernelFunc:j2};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function q2(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{alpha:o}=s;Ge([r],"leakyRelu");const a=me(r.shape),l=t.data.get(r.dataId).values,i=Sn("float32",a);for(let u=0;u<l.length;u++)i[u]=l[u]<0?o*l[u]:l[u];return t.makeTensorInfo(r.shape,"float32",i)}const KM={kernelName:Hc,backendName:"cpu",kernelFunc:q2};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const XM=tn((n,e)=>n<0?e*n:n);function K2(n){const{inputs:e,backend:t}=n,{x:s,alpha:r}=e;Ge([s,r],"prelu");const o=t.data.get(s.dataId).values,a=t.data.get(r.dataId).values,[l,i]=XM(s.shape,r.shape,o,a,"float32");return t.makeTensorInfo(i,"float32",l)}const YM={kernelName:ch,backendName:"cpu",kernelFunc:K2};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const X2=$t(wl,n=>Math.max(0,n)),ZM={kernelName:wl,backendName:"cpu",kernelFunc:X2};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Y2=$t(vl,n=>Math.min(Math.max(0,n),6)),JM={kernelName:vl,backendName:"cpu",kernelFunc:Y2};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gc(n,e,t,s,r){if(t==="linear")return gr({inputs:{x:e},backend:n});if(t==="relu")return X2({inputs:{x:e},backend:n});if(t==="elu")return j2({inputs:{x:e},backend:n});if(t==="relu6")return Y2({inputs:{x:e},backend:n});if(t==="prelu")return K2({inputs:{x:e,alpha:s},backend:n});if(t==="leakyrelu")return q2({inputs:{x:e},backend:n,attrs:{alpha:r}});if(t==="sigmoid")return A2({inputs:{x:e},backend:n});throw new Error(`Activation ${t} has not been implemented for the CPU backend.`)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Rt(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{shape:o}=s,a=me(r.shape),l=W0(o,a),i=me(l);P(a===i,()=>`The new shape (${l}) has ${i} elements and the old shape (${r.shape}) has ${a} elements. The new shape and old shape must have the same number of elements.`),t.incRef(r.dataId);const u=t.data.get(r.dataId);if(u.complexTensorInfos!=null){const c=u.complexTensorInfos.real,h=u.complexTensorInfos.imag;c.shape=l,h.shape=l}return{dataId:r.dataId,shape:l,dtype:r.dtype}}const QM={kernelName:dh,backendName:"cpu",kernelFunc:Rt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Z2(n){const{inputs:e,backend:t,attrs:s}=n,{a:r,b:o}=e,{transposeA:a,transposeB:l}=s;Ge([r,o],"matMul");const i=r.shape.length,u=o.shape.length,c=a?r.shape[i-2]:r.shape[i-1],h=l?o.shape[u-1]:o.shape[u-2],d=a?r.shape[i-1]:r.shape[i-2],p=l?o.shape[u-2]:o.shape[u-1],f=r.shape.slice(0,-2),g=o.shape.slice(0,-2),y=me(f),x=me(g),v=st(r.shape.slice(0,-2),o.shape.slice(0,-2)).concat([d,p]);P(c===h,()=>`Error in matMul: inner shapes (${c}) and (${h}) of Tensors with shapes ${r.shape} and ${o.shape} and transposeA=${a} and transposeB=${l} must match.`);const k=a?[y,c,d]:[y,d,c],C=l?[x,p,h]:[x,h,p],I=Rt({inputs:{x:r},backend:t,attrs:{shape:k}}),N=Rt({inputs:{x:o},backend:t,attrs:{shape:C}}),E=a?I.shape[1]:I.shape[2],R=a?I.shape[2]:I.shape[1],O=l?N.shape[1]:N.shape[2],B=Math.max(y,x),j=t.data.get(I.dataId).values,U=t.data.get(N.dataId).values,K=Ze(I.shape),H=Ze(N.shape),[Z,ue,M]=a?[K[0],1,K[1]]:[K[0],K[1],1],[X,A,ee]=l?[1,H[1],H[0]]:[H[1],1,H[0]],be=R*O,ie=lt([B,R,O],I.dtype),xe=ie.values,le=t.blockSize;for(let ke=0;ke<B;ke++){const oe=ke%y,se=ke%x;for(let $e=0;$e<R;$e+=le){const Ce=Math.min($e+le,R);for(let we=0;we<O;we+=le){const Qe=Math.min(we+le,O);for(let tt=0;tt<E;tt+=le){const Xe=Math.min(tt+le,E);for(let je=$e;je<Ce;je++)for(let We=we;We<Qe;We++){let qe=0;for(let nt=tt;nt<Xe;nt++){const Ft=j[oe*Z+je*ue+nt*M],T=U[nt*X+We*A+se*ee];qe+=Ft*T}xe[ke*be+(je*O+We)]+=qe}}}}}return t.disposeIntermediateTensorInfo(I),t.disposeIntermediateTensorInfo(N),t.makeTensorInfo(v,ie.dtype,ie.values)}const e4={kernelName:_c,backendName:"cpu",kernelFunc:Z2};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function t4(n){const{inputs:e,backend:t,attrs:s}=n,{a:r,b:o,bias:a,preluActivationWeights:l}=e,{transposeA:i,transposeB:u,activation:c,leakyreluAlpha:h}=s;let d,p,f;const g=[];d=Z2({inputs:{a:r,b:o},attrs:{transposeA:i,transposeB:u},backend:t}),a&&(p=Pa({inputs:{a:d,b:a},backend:t}),g.push(d),d=p),c&&(f=gc(t,d,c,l,h),g.push(d),d=f);for(const x of g)t.disposeIntermediateTensorInfo(x);return d}const n4={kernelName:Ku,backendName:"cpu",kernelFunc:t4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const s4=$t(Wi,n=>Math.acos(n)),r4={kernelName:Wi,backendName:"cpu",kernelFunc:s4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const o4=$t(Ui,n=>Math.acosh(n)),a4={kernelName:Ui,backendName:"cpu",kernelFunc:o4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function i4(n){const{inputs:e,backend:t}=n,s=e;Ge(e,"addN");const r=s.map(l=>t.data.get(l.dataId).values),o=lt(s[0].shape,s[0].dtype),a=o.values;for(let l=0;l<s.length;l++){const i=r[l];for(let u=0;u<a.length;u++)a[u]+=i[u]}return t.makeTensorInfo(o.shape,o.dtype,o.values)}const l4={kernelName:Cc,backendName:"cpu",kernelFunc:i4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function u4(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o,keepDims:a}=s;Ge(r,"all");const l=ct(o,r.shape);let i=l;const u=jt(i,r.shape.length);let c=r;u!=null&&(c=Xn({inputs:{x:r},backend:t,attrs:{perm:u}}),i=Qt(i.length,r.shape.length)),Nn("all",i,c.shape.length);const[h,d]=bn(c.shape,i),p=me(d),f=Dn(me(h),c.dtype),g=t.data.get(c.dataId).values;for(let x=0;x<f.length;++x){const w=x*p;let v=g[w];for(let k=0;k<p;++k){const C=g[w+k];v=v&&C}f[x]=v}u!=null&&t.disposeIntermediateTensorInfo(c);const y=t.makeTensorInfo(h,c.dtype,f);if(a){const x=Jt(h,l),w=Rt({inputs:{x:y},backend:t,attrs:{shape:x}});return t.disposeIntermediateTensorInfo(y),w}return y}const c4={kernelName:sf,backendName:"cpu",kernelFunc:u4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function h4(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o,keepDims:a}=s;Ge(r,"any");const l=ct(o,r.shape);let i=l;const u=jt(i,r.shape.length);let c=r;u!=null&&(c=Xn({inputs:{x:r},backend:t,attrs:{perm:u}}),i=Qt(i.length,r.shape.length)),Nn("any",i,c.shape.length);const[h,d]=bn(c.shape,i),p=me(d),f=Dn(me(h),c.dtype),g=t.data.get(c.dataId).values;for(let x=0;x<f.length;++x){const w=x*p;let v=g[w];for(let k=0;k<p;++k){const C=g[w+k];v=v||C}f[x]=v}u!=null&&t.disposeIntermediateTensorInfo(c);const y=t.makeTensorInfo(h,c.dtype,f);if(a){const x=Jt(h,l),w=Rt({inputs:{x:y},backend:t,attrs:{shape:x}});return t.disposeIntermediateTensorInfo(y),w}return y}const d4={kernelName:rf,backendName:"cpu",kernelFunc:h4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function p4(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o}=s;Ge(r,"argMax");let a=ct(o,r.shape);const l=jt(a,r.shape.length);let i=r;const u=[];l!=null&&(i=Xn({inputs:{x:r},backend:t,attrs:{perm:l}}),u.push(i),a=Qt(a.length,i.shape.length)),a=[a[0]],Nn("argMax",a,i.shape.length);const[c,h]=bn(i.shape,a),d=me(c),p=Dn(d,"int32"),f=me(h),g=t.data.get(i.dataId).values;for(let y=0;y<p.length;++y){const x=y*f;let w=g[x],v=0;for(let k=0;k<f;++k){const C=g[x+k];C>w&&(w=C,v=k)}p[y]=v}return u.forEach(y=>t.disposeIntermediateTensorInfo(y)),t.makeTensorInfo(c,"int32",p)}const f4={kernelName:Ic,backendName:"cpu",kernelFunc:p4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function m4(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o}=s;Ge(r,"argMin");let a=ct(o,r.shape);const l=jt(a,r.shape.length);let i=r;const u=[];l!=null&&(i=Xn({inputs:{x:r},backend:t,attrs:{perm:l}}),u.push(i),a=Qt(a.length,i.shape.length)),a=[a[0]],Nn("argMin",a,i.shape.length);const[c,h]=bn(i.shape,a),d=me(c),p=Dn(d,"int32"),f=me(h),g=t.data.get(i.dataId).values;for(let y=0;y<p.length;++y){const x=y*f;let w=g[x],v=0;for(let k=0;k<f;++k){const C=g[x+k];C<w&&(w=C,v=k)}p[y]=v}return u.forEach(y=>t.disposeIntermediateTensorInfo(y)),t.makeTensorInfo(c,"int32",p)}const g4={kernelName:Nc,backendName:"cpu",kernelFunc:m4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const y4=$t(Gi,n=>Math.asin(n)),b4={kernelName:Gi,backendName:"cpu",kernelFunc:y4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const x4=$t(Hi,n=>Math.asinh(n)),w4={kernelName:Hi,backendName:"cpu",kernelFunc:x4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const v4=$t(ji,n=>Math.atan(n)),k4={kernelName:ji,backendName:"cpu",kernelFunc:v4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const S4=tn((n,e)=>Math.atan2(n,e)),C4=dn(Ki,S4),I4={kernelName:Ki,backendName:"cpu",kernelFunc:C4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const N4=$t(qi,n=>Math.atanh(n)),$4={kernelName:qi,backendName:"cpu",kernelFunc:N4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ay(n,e,t,s,r,o){const a=r.strideHeight,l=r.strideWidth,i=r.dilationHeight,u=r.dilationWidth,c=r.effectiveFilterHeight,h=r.effectiveFilterWidth,d=r.padInfo.top,p=r.padInfo.left,f=o==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,g=lt(r.outShape,t),y=g.values,x=r.outShape[1]*r.outShape[2]*r.outShape[3],w=r.outShape[2]*r.outShape[3],v=r.outShape[3];for(let k=0;k<r.batchSize;++k){const C=k*x,I=k*s[0];for(let N=0;N<r.inChannels;++N)for(let E=0;E<r.outHeight;++E){const R=E*a-d,O=Math.max(0,R),B=Math.min(r.inHeight,c+R),j=C+E*w;for(let U=0;U<r.outWidth;++U){const K=U*l-p,H=Math.max(0,K),Z=Math.min(r.inWidth,h+K);let ue=f,M=0,X=0;for(let ee=O;ee<B;ee+=i){const be=I+ee*s[1];for(let ie=H;ie<Z;ie+=u){const xe=be+ie*s[2],le=n[xe+N];o==="max"&&le>ue?ue=le:o==="avg"&&(M+=le,X++)}if(isNaN(ue))break}const A=j+U*v+N;y[A]=o==="avg"?M/X:ue}}}return g}function J2(n,e,t,s,r=!1,o=!1){const a=lt(s.outShape,"int32"),l=s.strideHeight,i=s.strideWidth,u=s.dilationHeight,c=s.dilationWidth,h=s.effectiveFilterHeight,d=s.effectiveFilterWidth,p=s.padInfo.top,f=s.padInfo.left,g=lt(e,t,n);for(let y=0;y<s.batchSize;++y)for(let x=0;x<s.inChannels;++x)for(let w=0;w<s.outHeight;++w){const v=w*l-p;let k=v;for(;k<0;)k+=u;const C=Math.min(s.inHeight,h+v);for(let I=0;I<s.outWidth;++I){const N=I*i-f;let E=N;for(;E<0;)E+=c;const R=Math.min(s.inWidth,d+N);let O=Number.NEGATIVE_INFINITY,B=-1;for(let j=k;j<C;j+=u){const U=j-v;for(let K=E;K<R;K+=c){const H=K-N,Z=g.get(y,j,K,x);Z>O&&(O=Z,r?B=o?((y*s.inHeight+j)*s.inWidth+K)*s.inChannels+x:(j*s.inWidth+K)*s.inChannels+x:B=U*d+H)}}a.set(B,y,w,I,x)}}return a}function Q2(n,e,t,s,r,o){const a=r.strideDepth,l=r.strideHeight,i=r.strideWidth,u=r.dilationDepth,c=r.dilationHeight,h=r.dilationWidth,d=r.effectiveFilterDepth,p=r.effectiveFilterHeight,f=r.effectiveFilterWidth,g=r.padInfo.front,y=r.padInfo.top,x=r.padInfo.left,w=o==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,v=lt(r.outShape,t),k=v.values,C=r.outShape[1]*r.outShape[2]*r.outShape[3]*r.outShape[4],I=r.outShape[2]*r.outShape[3]*r.outShape[4],N=r.outShape[3]*r.outShape[4],E=r.outShape[4];for(let R=0;R<r.batchSize;++R){const O=R*C,B=R*s[0];for(let j=0;j<r.inChannels;++j)for(let U=0;U<r.outDepth;++U){const K=U*a-g;let H=K;for(;H<0;)H+=u;const Z=Math.min(r.inDepth,d+K),ue=O+U*I;for(let M=0;M<r.outHeight;++M){const X=M*l-y;let A=X;for(;A<0;)A+=c;const ee=Math.min(r.inHeight,p+X),be=ue+M*N;for(let ie=0;ie<r.outWidth;++ie){const xe=ie*i-x;let le=xe;for(;le<0;)le+=h;const ke=Math.min(r.inWidth,f+xe),oe=be+ie*E;let se=w,$e=0,Ce=0;for(let Qe=H;Qe<Z;Qe+=u){const tt=B+Qe*s[1];for(let Xe=A;Xe<ee;Xe+=c){const je=tt+Xe*s[2];for(let We=le;We<ke;We+=h){const qe=je+We*s[3],nt=n[qe+j];if(o==="max"&&nt>se?se=nt:o==="avg"&&($e+=nt,Ce++),isNaN(se))break}if(isNaN(se))break}if(isNaN(se))break}const we=oe+j;k[we]=o==="avg"?$e/Math.max(Ce,1):se}}}}return v}function T4(n,e){const t=lt(e.outShape,"int32"),s=e.strideDepth,r=e.strideHeight,o=e.strideWidth,a=e.dilationDepth,l=e.dilationHeight,i=e.dilationWidth,u=e.effectiveFilterDepth,c=e.effectiveFilterHeight,h=e.effectiveFilterWidth,d=e.padInfo.front,p=e.padInfo.top,f=e.padInfo.left;for(let g=0;g<e.batchSize;++g)for(let y=0;y<e.inChannels;++y)for(let x=0;x<e.outDepth;++x){const w=x*s-d;let v=w;for(;v<0;)v+=a;const k=Math.min(e.inDepth,u+w);for(let C=0;C<e.outHeight;++C){const I=C*r-p;let N=I;for(;N<0;)N+=l;const E=Math.min(e.inHeight,c+I);for(let R=0;R<e.outWidth;++R){const O=R*o-f;let B=O;for(;B<0;)B+=i;const j=Math.min(e.inWidth,h+O);let U=Number.NEGATIVE_INFINITY,K=-1;for(let H=v;H<k;H+=a){const Z=H-w;for(let ue=N;ue<E;ue+=l){const M=ue-I;for(let X=B;X<j;X+=i){const A=X-O,ee=n.get(g,H,ue,X,y);ee>=U&&(U=ee,K=Z*c*h+M*c+A)}}}t.set(K,g,x,C,R,y)}}}return t}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _4(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e;Ge(r,"avgPool");const{filterSize:o,strides:a,pad:l,dimRoundingMode:i}=s,u=1;P(In(a,u),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${u}'`);const c=zs(r.shape,o,a,u,l,i);let h;if(c.filterWidth===1&&c.filterHeight===1&&ft(c.inShape,c.outShape))h=gr({inputs:{x:r},backend:t});else{const d=t.data.get(r.dataId).values,p=Ze(r.shape),f=ay(d,r.shape,r.dtype,p,c,"avg");h=t.makeTensorInfo(c.outShape,r.dtype,f.values)}return h}const E4={kernelName:$c,backendName:"cpu",kernelFunc:_4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function A4(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{filterSize:o,strides:a,pad:l,dimRoundingMode:i,dataFormat:u}=s;Ge(r,"avgPool3d");const c=Ar(r.shape,o,a,1,l,i,u),h=t.data.get(r.dataId).values,d=Q2(h,r.shape,r.dtype,Ze(r.shape),c,"avg");return t.makeTensorInfo(d.shape,"float32",d.values)}const D4={kernelName:Tc,backendName:"cpu",kernelFunc:A4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function R4(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,input:o}=e,{filterSize:a,strides:l,pad:i,dimRoundingMode:u}=s;Ge([r,o],"avgPool3DGrad");const c=Ar(o.shape,a,l,1,i,u),h=c.strideDepth,d=c.strideHeight,p=c.strideWidth,f=c.filterDepth,g=c.filterHeight,y=c.filterWidth,x=c.dilationDepth,w=c.dilationHeight,v=c.dilationWidth,k=c.effectiveFilterDepth,C=c.effectiveFilterHeight,I=c.effectiveFilterWidth,N=k-1-c.padInfo.front,E=I-1-c.padInfo.left,R=C-1-c.padInfo.top,O=lt(o.shape,"float32"),B=1/(f*g*y),j=t.bufferSync(r);for(let U=0;U<c.batchSize;++U)for(let K=0;K<c.inChannels;++K)for(let H=0;H<c.inDepth;++H)for(let Z=0;Z<c.inHeight;++Z)for(let ue=0;ue<c.inWidth;++ue){const M=H-N,X=Z-R,A=ue-E;let ee=0;for(let be=0;be<k;be+=x){const ie=(M+be)/h;if(!(ie<0||ie>=c.outDepth||Math.floor(ie)!==ie))for(let xe=0;xe<C;xe+=w){const le=(X+xe)/d;if(!(le<0||le>=c.outHeight||Math.floor(le)!==le))for(let ke=0;ke<I;ke+=v){const oe=(A+ke)/p;if(oe<0||oe>=c.outWidth||Math.floor(oe)!==oe)continue;const se=j.get(U,ie,le,oe,K);ee+=se}}}O.set(ee*B,U,H,Z,ue,K)}return t.makeTensorInfo(O.shape,O.dtype,O.values)}const F4={kernelName:af,backendName:"cpu",kernelFunc:R4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function O4(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,input:o}=e,a=o;Ge([r,o],"avgPoolGrad");const{filterSize:l,strides:i,pad:u}=s,c=zs(a.shape,l,i,1,u),h=c.strideHeight,d=c.strideWidth,p=c.filterHeight,f=c.filterWidth,g=c.dilationHeight,y=c.dilationWidth,x=c.effectiveFilterHeight,w=c.effectiveFilterWidth,v=w-1-c.padInfo.left,k=x-1-c.padInfo.top,C=lt(a.shape,"float32"),I=1/(p*f),N=t.data.get(r.dataId).values,E=lt(r.shape,"float32",N);for(let R=0;R<c.batchSize;++R)for(let O=0;O<c.inChannels;++O)for(let B=0;B<c.inHeight;++B)for(let j=0;j<c.inWidth;++j){const U=B-k,K=j-v;let H=0;for(let Z=0;Z<x;Z+=g){const ue=(U+Z)/h;if(!(ue<0||ue>=c.outHeight||Math.floor(ue)!==ue))for(let M=0;M<w;M+=y){const X=(K+M)/d;if(X<0||X>=c.outWidth||Math.floor(X)!==X)continue;const A=E.get(R,ue,X,O);H+=A}}C.set(H*I,R,B,j,O)}return t.makeTensorInfo(C.shape,C.dtype,C.values)}const L4={kernelName:of,backendName:"cpu",kernelFunc:O4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function P4(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,scale:o,offset:a,mean:l,variance:i}=e;P(l.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),P(a==null||l.shape.length===a.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),P(o==null||l.shape.length===o.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks."),Ge([r,l,i,o,a],"batchNorm");let{varianceEpsilon:u}=s;u==null&&(u=.001);const c=t.data.get(r.dataId).values,h=t.data.get(l.dataId).values,d=t.data.get(i.dataId).values,p=o?t.data.get(o.dataId).values:new Float32Array([1]),f=a?t.data.get(a.dataId).values:new Float32Array([0]),g=new Float32Array(c.length),y=f.length,x=p.length,w=d.length,v=h.length;let k=0,C=0,I=0,N=0;for(let E=0;E<c.length;++E)g[E]=f[k++]+(c[E]-h[C++])*p[I++]/Math.sqrt(d[N++]+u),k>=y&&(k=0),C>=v&&(C=0),I>=x&&(I=0),N>=w&&(N=0);return t.makeTensorInfo(r.shape,r.dtype,g)}const z4={kernelName:Wc,backendName:"cpu",kernelFunc:P4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function B4(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{blockShape:o,crops:a}=s;Ge([r],"batchToSpaceND");const l=o.reduce((x,w)=>x*w),i=Hl(r.shape,o,l),u=jl(i.length,o.length),c=ql(r.shape,o,l),h=fg(a,o.length),d=mg(c,a,o.length),p=Rt({inputs:{x:r},backend:t,attrs:{shape:i}}),f=Xn({inputs:{x:p},backend:t,attrs:{perm:u}}),g=Rt({inputs:{x:f},backend:t,attrs:{shape:c}}),y=jo({inputs:{x:g},backend:t,attrs:{begin:h,size:d}});return t.disposeIntermediateTensorInfo(p),t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(g),y}const M4={kernelName:Ec,backendName:"cpu",kernelFunc:B4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function V4(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,weights:o}=e,{size:a}=s,l=t.data.get(r.dataId).values,i=t.data.get(o.dataId).values,u=ty(l,i,o.dtype,o.shape,a);return t.makeTensorInfo([a],o.dtype,u)}const W4={kernelName:lf,backendName:"cpu",kernelFunc:V4};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function U4(n){const{inputs:e,backend:t}=n,{s0:s,s1:r}=e,o=t.data.get(s.dataId).values,a=t.data.get(r.dataId).values,l=st(Array.from(o),Array.from(a));return t.makeTensorInfo([l.length],"int32",Int32Array.from(l))}const G4={kernelName:uf,backendName:"cpu",kernelFunc:U4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const H4=$t(Zi,(n,e)=>{const t=e;return n>t.clipValueMax?t.clipValueMax:n<t.clipValueMin?t.clipValueMin:n}),j4={kernelName:Zi,backendName:"cpu",kernelFunc:H4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const q4=n=>{const{x:e}=n.inputs,t=n.backend,s=new Float32Array(me(e.shape)),r=t.data.get(e.dataId),o=r.complexTensorInfos.real,a=r.complexTensorInfos.imag,l=t.data.get(o.dataId).values,i=t.data.get(a.dataId).values;for(let u=0;u<l.length;u++){const c=l[u],h=i[u];s[u]=Math.hypot(c,h)}return t.makeOutput(s,e.shape,"float32")},K4={kernelName:Dc,backendName:"cpu",kernelFunc:q4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function za(n){const{inputs:e,backend:t}=n,{input:s}=e,r=t.data.get(s.dataId).complexTensorInfos.imag,o=t.data.get(r.dataId).values;return t.makeTensorInfo(r.shape,r.dtype,o)}const X4={kernelName:Tf,backendName:"cpu",kernelFunc:za};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ba(n){const{inputs:e,backend:t,attrs:s}=n,{axis:r}=s,o=ct(r,e[0].shape)[0],a=e.map(g=>g.shape);hg(a,o);let l=hr(e.map(g=>g.shape),o);if(me(l)===0)return t.makeTensorInfo(l,e[0].dtype,[]);const i=e.filter(g=>me(g.shape)>0);if(i.length===1)return gr({inputs:{x:i[0]},backend:t});if(i[0].dtype==="complex64"){const g=i.map(k=>Ho({inputs:{input:k},backend:t})),y=i.map(k=>za({inputs:{input:k},backend:t})),x=Ba({inputs:g,backend:t,attrs:{axis:o}}),w=Ba({inputs:y,backend:t,attrs:{axis:o}}),v=es({inputs:{real:x,imag:w},backend:t});return g.forEach(k=>t.disposeIntermediateTensorInfo(k)),y.forEach(k=>t.disposeIntermediateTensorInfo(k)),t.disposeIntermediateTensorInfo(x),t.disposeIntermediateTensorInfo(w),v}const u=i.map(g=>{const x=[-1,me(g.shape.slice(o))];return Rt({inputs:{x:g},backend:t,attrs:{shape:x}})}),c=u.map(g=>({vals:t.data.get(g.dataId).values,shape:g.shape}));l=hr(u.map(g=>g.shape),1);const h=u[0].shape[0]===1,d=r2(c,l,e[0].dtype,h),p=hr(i.map(g=>g.shape),o),f=t.makeTensorInfo(p,e[0].dtype,d);return u.forEach(g=>t.disposeIntermediateTensorInfo(g)),f}const Y4={kernelName:Rc,backendName:"cpu",kernelFunc:Ba};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eS(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:o}=e,{strides:a,pad:l,dataFormat:i,dilations:u,dimRoundingMode:c}=s;Ge([r,o],"conv2d");const h=Dr(i),d=yn(r.shape,o.shape,a,u,l,c,!1,h),p=d.filterHeight,f=d.filterWidth,g=d.dilationHeight,y=d.dilationWidth,x=d.padInfo.left,w=d.padInfo.top,v=d.dataFormat==="channelsLast",k=new ln(d.outShape,r.dtype),C=Ze(r.shape),I=Ze(o.shape),N=C[0],E=v?C[1]:C[2],R=v?C[2]:1,O=v?1:C[1],B=k.strides[0],j=v?k.strides[1]:k.strides[2],U=v?k.strides[2]:1,K=v?1:k.strides[1],H=t.data.get(r.dataId).values,Z=t.data.get(o.dataId).values,ue=k.values;for(let M=0;M<d.batchSize;++M){const X=M*N,A=M*B;for(let ee=0;ee<d.outHeight;++ee){const be=A+ee*j,ie=ee*d.strideHeight-w;for(let xe=0;xe<p;++xe){const le=ie+xe*g;if(le<0||le>=d.inHeight)continue;const ke=xe*I[0],oe=X+le*E;for(let se=0;se<d.outWidth;++se){const $e=be+se*U,Ce=se*d.strideWidth-x;for(let we=0;we<f;++we){const Qe=Ce+we*y;if(Qe<0||Qe>=d.inWidth)continue;const tt=ke+we*I[1],Xe=oe+Qe*R;let je=tt;for(let We=0;We<d.inChannels;++We){const qe=H[Xe+We*O];for(let nt=0;nt<d.outChannels;++nt)ue[$e+nt*K]+=qe*Z[je+nt];je+=d.outChannels}}}}}}return t.makeTensorInfo(k.shape,k.dtype,ue)}const Z4={kernelName:Fc,backendName:"cpu",kernelFunc:eS};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function J4(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,dy:o}=e,{strides:a,pad:l,dataFormat:i,dimRoundingMode:u,filterShape:c}=s;Ge([r,o],"conv2dBackpropFilter");const h=Dr(i),d=yn(r.shape,c,a,1,l,u,!1,h),{strideHeight:p,strideWidth:f,filterHeight:g,filterWidth:y}=d,x=d.dataFormat==="channelsLast",w=new ln(d.filterShape,"float32"),v=d.padInfo.left,k=d.padInfo.top,C=t.data.get(r.dataId).values,I=t.data.get(o.dataId).values,N=new ln(r.shape,r.dtype,C),E=new ln(o.shape,o.dtype,I);for(let R=0;R<g;++R){const O=Math.max(0,Math.ceil((k-R)/p)),B=Math.min(d.outHeight,(d.inHeight+k-R)/p);for(let j=0;j<y;++j){const U=Math.max(0,Math.ceil((v-j)/f)),K=Math.min(d.outWidth,(d.inWidth+v-j)/f);for(let H=0;H<d.inChannels;++H)for(let Z=0;Z<d.outChannels;++Z){let ue=0;for(let M=0;M<d.batchSize;++M)for(let X=O;X<B;++X){const A=R+X*p-k;for(let ee=U;ee<K;++ee){const be=j+ee*f-v;x?ue+=N.get(M,A,be,H)*E.get(M,X,ee,Z):ue+=N.get(M,H,A,be)*E.get(M,Z,X,ee)}}w.set(ue,R,j,H,Z)}}}return t.makeTensorInfo(w.shape,w.dtype,w.values)}const Q4={kernelName:hf,backendName:"cpu",kernelFunc:J4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eV(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,filter:o}=e,{inputShape:a,strides:l,pad:i,dataFormat:u,dimRoundingMode:c}=s;Ge([r,o],"conv2dBackpropInput");const h=Ze(o.shape),d=Ze(r.shape);let p=Dr(u);const f=yn(a,o.shape,l,1,i,c,!1,p),g=new ln(f.inShape,"float32"),y=g.values,x=t.data.get(r.dataId).values,w=t.data.get(o.dataId).values,[v,k,C]=h,{batchSize:I,filterHeight:N,filterWidth:E,inChannels:R,inHeight:O,inWidth:B,outChannels:j,outHeight:U,outWidth:K,strideHeight:H,strideWidth:Z}=f;p=f.dataFormat;const ue=N-1-f.padInfo.top,M=E-1-f.padInfo.left,X=p==="channelsLast",A=g.strides[0],ee=X?g.strides[1]:g.strides[2],be=X?g.strides[2]:1,ie=X?1:g.strides[1],xe=d[0],le=X?d[1]:d[2],ke=X?d[2]:1,oe=X?1:d[1];for(let se=0;se<I;++se)for(let $e=0;$e<R;++$e)for(let Ce=0;Ce<O;++Ce){const we=Ce-ue,Qe=Math.max(0,Math.ceil(we/H)),tt=Math.min(U,(N+we)/H);for(let Xe=0;Xe<B;++Xe){const je=Xe-M,We=Math.max(0,Math.ceil(je/Z)),qe=Math.min(K,(E+je)/Z);let nt=0;for(let T=Qe;T<tt;++T){const pe=T*H-we;for(let fe=We;fe<qe;++fe){const q=fe*Z-je,G=xe*se+le*T+ke*fe,ae=v*(N-1-pe)+k*(E-1-q)+C*$e;for(let Se=0;Se<j;++Se){const Ie=x[G+oe*Se],he=w[ae+Se];nt+=Ie*he}}}const Ft=A*se+ee*Ce+be*Xe+ie*$e;y[Ft]=nt}}return t.makeTensorInfo(g.shape,g.dtype,g.values)}const tV={kernelName:Oc,backendName:"cpu",kernelFunc:eV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nV(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:o}=e,{strides:a,pad:l,dilations:i}=s;Ge([r,o],"conv3d");const u=io(r.shape,o.shape,a,i,l),{filterDepth:c,filterHeight:h,filterWidth:d,dilationDepth:p,dilationHeight:f,dilationWidth:g,padInfo:y}=u,x=y.front,w=y.left,v=y.top,k=new ln(u.outShape,r.dtype),C=t.data.get(r.dataId).values,I=t.data.get(o.dataId).values,N=k.values,E=Ze(r.shape),R=Ze(o.shape);for(let O=0;O<u.batchSize;++O){const B=O*E[0],j=O*k.strides[0];for(let U=0;U<u.outDepth;++U){const K=j+U*k.strides[1],H=U*u.strideDepth-x;for(let Z=0;Z<c;++Z){const ue=H+Z*p;if(ue<0||ue>=u.inDepth)continue;const M=Z*R[0],X=B+ue*E[1];for(let A=0;A<u.outHeight;++A){const ee=K+A*k.strides[2],be=A*u.strideHeight-v;for(let ie=0;ie<h;++ie){const xe=be+ie*f;if(xe<0||xe>=u.inHeight)continue;const le=M+ie*R[1],ke=X+xe*E[2];for(let oe=0;oe<u.outWidth;++oe){const se=ee+oe*u.outChannels,$e=oe*u.strideWidth-w;for(let Ce=0;Ce<d;++Ce){const we=$e+Ce*g;if(we<0||we>=u.inWidth)continue;const Qe=le+Ce*R[2],tt=ke+we*u.inChannels;let Xe=Qe;for(let je=0;je<u.inChannels;++je){const We=C[tt+je];for(let qe=0;qe<u.outChannels;++qe)N[se+qe]+=We*I[Xe+qe];Xe+=u.outChannels}}}}}}}}return t.makeTensorInfo(k.shape,k.dtype,k.values)}const sV={kernelName:Lc,backendName:"cpu",kernelFunc:nV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rV(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,dy:o}=e,{strides:a,pad:l,filterShape:i}=s;Ge([r,o],"conv3dBackpropFilterV2");const u=Ze(r.shape),c=Ze(o.shape),h=io(r.shape,i,a,1,l),d=h.strideDepth,p=h.strideHeight,f=h.strideWidth,g=h.filterDepth,y=h.filterHeight,x=h.filterWidth,w=new ln(h.filterShape,"float32"),v=w.values,[k,C,I,N]=w.strides,E=t.data.get(o.dataId).values,[R,O,B,j]=c,U=t.data.get(r.dataId).values,[K,H,Z,ue]=u,M=h.padInfo.front,X=h.padInfo.left,A=h.padInfo.top;for(let ee=0;ee<g;++ee){const be=Math.max(0,Math.ceil((M-ee)/d)),ie=Math.min(h.outDepth,(h.inDepth+M-ee)/d),xe=ee*k;for(let le=0;le<y;++le){const ke=Math.max(0,Math.ceil((A-le)/p)),oe=Math.min(h.outHeight,(h.inHeight+A-le)/p),se=le*C+xe;for(let $e=0;$e<x;++$e){const Ce=Math.max(0,Math.ceil((X-$e)/f)),we=Math.min(h.outWidth,(h.inWidth+X-$e)/f),Qe=$e*I+se;for(let tt=0;tt<h.inChannels;++tt){const Xe=tt*N+Qe;for(let je=0;je<h.outChannels;++je){let We=0;for(let qe=0;qe<h.batchSize;++qe){const nt=qe*K,Ft=qe*R;for(let T=be;T<ie;++T){const fe=(ee+T*d-M)*H+nt,q=T*O+Ft;for(let G=ke;G<oe;++G){const Se=(le+G*p-A)*Z+fe,Ie=G*B+q;for(let he=Ce;he<we;++he){const Me=($e+he*f-X)*ue+Se,De=he*j+Ie;We+=U[Me+tt]*E[De+je]}}}}v[Xe+je]=We}}}}}return t.makeTensorInfo(w.shape,w.dtype,w.values)}const oV={kernelName:df,backendName:"cpu",kernelFunc:rV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aV(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,filter:o}=e,{pad:a,strides:l,inputShape:i}=s;Ge([r],"conv3dBackpropInputV2");const u=Ze(r.shape),c=Ze(o.shape),h=io(i,o.shape,l,1,a),d=new ln(h.inShape,"float32"),p=d.values,[f,g,y,x]=d.strides,w=t.data.get(r.dataId).values,[v,k,C,I]=u,N=t.data.get(o.dataId).values,[E,R,O,B]=c,{batchSize:j,filterDepth:U,filterHeight:K,filterWidth:H,inChannels:Z,inDepth:ue,inHeight:M,inWidth:X,outChannels:A,outDepth:ee,outHeight:be,outWidth:ie,strideDepth:xe,strideHeight:le,strideWidth:ke}=h,oe=U-1-h.padInfo.front,se=K-1-h.padInfo.top,$e=H-1-h.padInfo.left;for(let Ce=0;Ce<j;++Ce)for(let we=0;we<Z;++we)for(let Qe=0;Qe<ue;++Qe){const tt=Qe-oe,Xe=Math.max(0,Math.ceil(tt/xe)),je=Math.min(ee,(U+tt)/xe);for(let We=0;We<M;++We){const qe=We-se,nt=Math.max(0,Math.ceil(qe/le)),Ft=Math.min(be,(K+qe)/le);for(let T=0;T<X;++T){const pe=T-$e,fe=Math.max(0,Math.ceil(pe/ke)),q=Math.min(ie,(H+pe)/ke);let G=0;for(let ae=Xe;ae<je;++ae){const Se=ae*xe-tt;for(let Ie=nt;Ie<Ft;++Ie){const he=Ie*le-qe;for(let Ae=fe;Ae<q;++Ae){const Me=Ae*ke-pe,De=v*Ce+k*ae+C*Ie+I*Ae,Je=E*(U-1-Se)+R*(K-1-he)+O*(H-1-Me)+B*we;for(let pt=0;pt<A;++pt){const ot=w[De+pt],xn=N[Je+pt];G+=ot*xn}}}}p[f*Ce+g*Qe+y*We+x*T+we]=G}}}return t.makeTensorInfo(d.shape,d.dtype,d.values)}const iV={kernelName:pf,backendName:"cpu",kernelFunc:aV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lV=$t(Ji,n=>Math.cos(n)),uV={kernelName:Ji,backendName:"cpu",kernelFunc:lV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cV=$t(Qi,n=>Math.cosh(n)),hV={kernelName:Qi,backendName:"cpu",kernelFunc:cV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dV(n){const{inputs:e,backend:t,attrs:s}=n,{image:r,boxes:o,boxInd:a}=e,{cropSize:l,method:i,extrapolationValue:u}=s,[c,h,d,p]=r.shape,f=o.shape[0],[g,y]=l,x=lt([f,g,y,p],"float32"),w=t.data.get(o.dataId).values,v=t.data.get(a.dataId).values,k=t.data.get(r.dataId).values,C=Ze(r.shape),I=Ze(x.shape);for(let N=0;N<f;N++){const E=N*4,R=w[E],O=w[E+1],B=w[E+2],j=w[E+3],U=v[N];if(U>=c)continue;const K=g>1?(B-R)*(h-1)/(g-1):0,H=y>1?(j-O)*(d-1)/(y-1):0;for(let Z=0;Z<g;Z++){const ue=g>1?R*(h-1)+Z*K:.5*(R+B)*(h-1);if(ue<0||ue>h-1){for(let M=0;M<y;M++)for(let X=0;X<p;X++){const A=X+M*I[2]+Z*I[1]+N*I[0];x.values[A]=u}continue}if(i==="bilinear"){const M=Math.floor(ue),X=Math.ceil(ue),A=ue-M;for(let ee=0;ee<y;ee++){const be=y>1?O*(d-1)+ee*H:.5*(O+j)*(d-1);if(be<0||be>d-1){for(let ke=0;ke<p;ke++){const oe=ke+ee*I[2]+Z*I[1]+N*I[0];x.values[oe]=u}continue}const ie=Math.floor(be),xe=Math.ceil(be),le=be-ie;for(let ke=0;ke<p;ke++){let oe=ke+ie*C[2]+M*C[1]+U*C[0];const se=k[oe];oe=ke+xe*C[2]+M*C[1]+U*C[0];const $e=k[oe];oe=ke+ie*C[2]+X*C[1]+U*C[0];const Ce=k[oe];oe=ke+xe*C[2]+X*C[1]+U*C[0];const we=k[oe],Qe=se+($e-se)*le,tt=Ce+(we-Ce)*le;oe=ke+ee*I[2]+Z*I[1]+N*I[0],x.values[oe]=Qe+(tt-Qe)*A}}}else for(let M=0;M<y;++M){const X=y>1?O*(d-1)+M*H:.5*(O+j)*(d-1);if(X<0||X>d-1){for(let be=0;be<p;be++){const ie=be+M*I[2]+Z*I[1]+N*I[0];x.values[ie]=u}continue}const A=Math.round(X),ee=Math.round(ue);for(let be=0;be<p;be++){const ie=be+A*C[2]+ee*C[1]+U*C[0],xe=be+M*I[2]+Z*I[1]+N*I[0];x.values[xe]=k[ie]}}}}return t.makeTensorInfo(x.shape,x.dtype,x.values)}const pV={kernelName:mf,backendName:"cpu",kernelFunc:dV};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fV(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o,exclusive:a,reverse:l}=s;Ge(r,"cumprod");const i=jt([o],r.shape.length);let u=r;i!=null&&(u=Xn({inputs:{x:r},backend:t,attrs:{perm:i}}));const c=Qt(1,r.shape.length)[0];if(c!==u.shape.length-1)throw new Error(`backend.cumprod in CPU expects an inner-most axis=${u.shape.length-1} but got axis=${c}`);const h=rs(u.dtype,"int32"),d=tf(me(u.shape),h),p=t.data.get(u.dataId).values,f=u.shape[u.shape.length-1],g=l?(x,w)=>x+f-w-1:(x,w)=>x+w;for(let x=0;x<p.length;x+=f)for(let w=0;w<f;w++){const v=g(x,w);if(w===0)d[v]=a?1:p[v];else{const k=g(x,w-1);d[v]=a?p[k]*d[k]:p[v]*d[k]}}const y=t.makeTensorInfo(u.shape,h,d);if(i!=null){const x=lo(i),w=Xn({inputs:{x:y},backend:t,attrs:{perm:x}});return t.disposeIntermediateTensorInfo(y),t.disposeIntermediateTensorInfo(u),w}return y}const mV={kernelName:ff,backendName:"cpu",kernelFunc:fV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gV(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o,exclusive:a,reverse:l}=s;Ge(r,"cumsum");const i=jt([o],r.shape.length);let u=r;i!=null&&(u=Xn({inputs:{x:r},backend:t,attrs:{perm:i}}));const c=Qt(1,r.shape.length)[0];if(c!==u.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${u.shape.length-1} but got axis=${c}`);const h=rs(u.dtype,"int32"),d=Dn(me(u.shape),h),p=t.data.get(u.dataId).values,f=u.shape[u.shape.length-1],g=l?(x,w)=>x+f-w-1:(x,w)=>x+w;for(let x=0;x<p.length;x+=f)for(let w=0;w<f;w++){const v=g(x,w);if(w===0)d[v]=a?0:p[v];else{const k=g(x,w-1);d[v]=a?p[k]+d[k]:p[v]+d[k]}}const y=t.makeTensorInfo(u.shape,h,d);if(i!=null){const x=lo(i),w=Xn({inputs:{x:y},backend:t,attrs:{perm:x}});return t.disposeIntermediateTensorInfo(y),t.disposeIntermediateTensorInfo(u),w}return y}const yV={kernelName:Pc,backendName:"cpu",kernelFunc:gV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bV(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,weights:o}=e,{size:a,binaryOutput:l}=s;if(r.shape.length===1){const i=t.data.get(r.dataId).values,u=t.data.get(o.dataId).values,c=ty(i,u,o.dtype,o.shape,a);return t.makeTensorInfo([a],o.dtype,c)}else if(r.shape.length===2){const i=t.bufferSync(r),u=t.bufferSync(o),c=t2(i,u,a,l);return t.makeTensorInfo(c.shape,o.dtype,c.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${r.shape.length}.`)}const xV={kernelName:gf,backendName:"cpu",kernelFunc:bV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wV(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{blockSize:o,dataFormat:a}=s;P(a==="NHWC",()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${a}`);const l=r.shape[0],i=r.shape[1],u=r.shape[2],c=r.shape[3],h=i*o,d=u*o,p=c/(o*o),f=t.data.get(r.dataId).values,g=new Float32Array(l*h*d*p);let y=0;for(let x=0;x<l;++x)for(let w=0;w<h;++w){const v=Math.floor(w/o),k=w%o;for(let C=0;C<d;++C){const I=Math.floor(C/o),N=C%o,E=(k*o+N)*p;for(let R=0;R<p;++R){const B=R+E+c*(I+u*(v+i*x));g[y++]=f[B]}}}return t.makeTensorInfo([l,h,d,p],r.dtype,g)}const vV={kernelName:yf,backendName:"cpu",kernelFunc:wV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tS(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:o}=e,{strides:a,pad:l,dilations:i,dimRoundingMode:u}=s;Ge([r,o],"depthwiseConv2DNative");const c=Ze(r.shape),h=Ze(o.shape);let d=i;d==null&&(d=[1,1]),P(In(a,d),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${a} and dilations '${d}'`);const p=yn(r.shape,o.shape,a,d,l,u,!0),{filterHeight:f,filterWidth:g,dilationHeight:y,dilationWidth:x,padInfo:w}=p,v=w.left,k=w.top,C=p.outChannels/p.inChannels,I=new ln(p.outShape,r.dtype),N=t.data.get(r.dataId).values,E=t.data.get(o.dataId).values,R=I.values;for(let O=0;O<p.batchSize;++O){const B=O*c[0],j=O*I.strides[0];for(let U=0;U<p.outHeight;++U){const K=j+U*I.strides[1],H=U*p.strideHeight-k;for(let Z=0;Z<f;++Z){const ue=H+Z*y;if(ue<0||ue>=p.inHeight)continue;const M=Z*h[0],X=B+ue*c[1];for(let A=0;A<p.outWidth;++A){const ee=K+A*I.strides[2],be=A*p.strideWidth-v;for(let ie=0;ie<g;++ie){const xe=be+ie*x;if(xe<0||xe>=p.inWidth)continue;const le=M+ie*h[1],ke=X+xe*p.inChannels;let oe=ee,se=le;for(let $e=0;$e<p.inChannels;++$e){const Ce=N[ke+$e];for(let we=0;we<C;++we)R[oe+we]+=Ce*E[se+we];oe+=C,se+=C}}}}}}return t.makeTensorInfo(I.shape,I.dtype,I.values)}const kV={kernelName:zc,backendName:"cpu",kernelFunc:tS};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SV(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,dy:o}=e,{strides:a,dilations:l,pad:i,dimRoundingMode:u,filterShape:c}=s;Ge([r,o],"depthwiseConv2dNativeBackpropFilter");const h=yn(r.shape,c,a,l,i,u,!0),{strideHeight:d,strideWidth:p,filterHeight:f,filterWidth:g}=h,y=new ln(h.filterShape,"float32"),x=h.padInfo.left,w=h.padInfo.top,v=h.outChannels/h.inChannels,k=t.data.get(r.dataId).values,C=new ln(r.shape,r.dtype,k),I=t.data.get(o.dataId).values,N=new ln(o.shape,o.dtype,I);for(let E=0;E<f;++E){const R=Math.max(0,Math.ceil((w-E)/d)),O=Math.min(h.outHeight,(h.inHeight+w-E)/d);for(let B=0;B<g;++B){const j=Math.max(0,Math.ceil((x-B)/p)),U=Math.min(h.outWidth,(h.inWidth+x-B)/p);for(let K=0;K<h.outChannels;++K){const H=Math.trunc(K/v),Z=K%v;let ue=0;for(let M=0;M<h.batchSize;++M)for(let X=R;X<O;++X){const A=E+X*d-w;for(let ee=j;ee<U;++ee){const be=B+ee*p-x;ue+=C.get(M,A,be,H)*N.get(M,X,ee,K)}}y.set(ue,E,B,H,Z)}}}return t.makeTensorInfo(y.shape,y.dtype,y.values)}const CV={kernelName:bf,backendName:"cpu",kernelFunc:SV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IV(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,filter:o}=e,{strides:a,dilations:l,pad:i,dimRoundingMode:u,inputShape:c}=s;Ge([r,o],"depthwiseConv2DNativeBackpropInput");const h=Ze(r.shape),d=Ze(o.shape),p=yn(c,o.shape,a,l,i,u,!0),f=new ln(p.inShape,"float32"),g=f.values,[y,x,w]=f.strides,v=t.data.get(r.dataId).values,[k,C,I]=h,N=t.data.get(o.dataId).values,[E,R,O]=d,{batchSize:B,filterHeight:j,filterWidth:U,inChannels:K,inHeight:H,inWidth:Z,outChannels:ue,outHeight:M,outWidth:X,strideHeight:A,strideWidth:ee}=p,be=j-1-p.padInfo.top,ie=U-1-p.padInfo.left,xe=ue/K;for(let le=0;le<B;++le)for(let ke=0;ke<K;++ke)for(let oe=0;oe<H;++oe){const se=oe-be,$e=Math.max(0,Math.ceil(se/A)),Ce=Math.min(M,(j+se)/A);for(let we=0;we<Z;++we){const Qe=we-ie,tt=Math.max(0,Math.ceil(Qe/ee)),Xe=Math.min(X,(U+Qe)/ee);let je=0;for(let We=$e;We<Ce;++We){const qe=We*A-se;for(let nt=tt;nt<Xe;++nt){const Ft=nt*ee-Qe,T=k*le+C*We+I*nt,pe=E*(j-1-qe)+R*(U-1-Ft)+O*ke;for(let fe=0;fe<xe;++fe){const q=ke*xe+fe,G=v[T+q],ae=N[pe+fe];je+=G*ae}}}g[y*le+x*oe+w*we+ke]=je}}return t.makeTensorInfo(f.shape,f.dtype,f.values)}const NV={kernelName:xf,backendName:"cpu",kernelFunc:IV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $V(n){const{inputs:e,backend:t}=n,{x:s}=e,r=me(s.shape),o=t.data.get(s.dataId).values,a=lt([r,r],s.dtype),l=a.values;for(let u=0;u<o.length;u++)l[u*r+u]=o[u];const i=[...s.shape,...s.shape];return t.makeTensorInfo(i,a.dtype,a.values)}const TV={kernelName:wf,backendName:"cpu",kernelFunc:$V};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _V={kernelName:Bc,backendName:"cpu",kernelFunc:({inputs:n,backend:e,attrs:t})=>{const{x:s,filter:r}=n,{strides:o,pad:a,dilations:l}=t,i=e,u=i.data.get(s.dataId).values,c=s.shape.length,h=i.data.get(r.dataId).values,d=r.shape.length,{batchSize:p,inHeight:f,inWidth:g,inChannels:y,outHeight:x,outWidth:w,padInfo:v,strideHeight:k,strideWidth:C,filterHeight:I,filterWidth:N,dilationHeight:E,dilationWidth:R,outShape:O}=zl(s.shape,r.shape,o,a,"NHWC",l),B=me(O),j=O.length,U=Zt(s.dtype,B);for(let H=0;H<p;++H)for(let Z=0;Z<x;++Z){const ue=Z*k-v.top;for(let M=0;M<w;++M){const X=M*C-v.left;for(let A=0;A<y;++A){let ee=Number.MIN_SAFE_INTEGER;for(let ie=0;ie<I;++ie){const xe=ue+ie*E;if(xe>=0&&xe<f)for(let le=0;le<N;++le){const ke=X+le*R;if(ke>=0&&ke<g){const oe=ur([H,xe,ke,A],c,Ze(s.shape)),se=ur([ie,le,A],d,Ze(r.shape)),$e=u[oe]+h[se];$e>ee&&(ee=$e)}}}const be=ur([H,Z,M,A],j,Ze(O));U[be]=ee}}}return{dataId:i.write(Yo(U,s.dtype),O,s.dtype),shape:O,dtype:s.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const EV={kernelName:ip,backendName:"cpu",kernelFunc:({inputs:n,backend:e,attrs:t})=>{const{x:s,filter:r,dy:o}=n,{strides:a,pad:l,dilations:i}=t,u=e,c=Rs(s.shape,u.data.get(s.dataId).values),h=Rs(r.shape,u.data.get(r.dataId).values),{batchSize:d,inHeight:p,inWidth:f,inChannels:g,outHeight:y,outWidth:x,padInfo:w,strideHeight:v,strideWidth:k,filterHeight:C,filterWidth:I,dilationHeight:N,dilationWidth:E,outShape:R}=zl(s.shape,r.shape,a,l,"NHWC",i);P(o.rank===R.length,()=>`Error in ${ip}, dy must have the same rank as output ${R.length}, but got ${o.rank}`);const O=Rs(R,u.data.get(o.dataId).values),B=H0(r.shape,r.dtype);for(let U=0;U<d;++U)for(let K=0;K<y;++K){const H=K*v-w.top;for(let Z=0;Z<x;++Z){const ue=Z*k-w.left;for(let M=0;M<g;++M){let X=Number.MIN_SAFE_INTEGER,A=0,ee=0;for(let be=0;be<C;++be){const ie=H+be*N;if(ie>=0&&ie<p)for(let xe=0;xe<I;++xe){const le=ue+xe*E;if(le>=0&&le<f){const ke=c[U][ie][le][M]+h[be][xe][M];ke>X&&(X=ke,A=be,ee=xe)}}}B[A][ee][M]+=O[U][K][Z][M]}}}return{dataId:u.write(Yo(B,s.dtype),r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const AV={kernelName:ap,backendName:"cpu",kernelFunc:({inputs:n,backend:e,attrs:t})=>{const{x:s,filter:r,dy:o}=n,{strides:a,pad:l,dilations:i}=t,u=e,c=Rs(s.shape,u.data.get(s.dataId).values),h=Rs(r.shape,u.data.get(r.dataId).values),{batchSize:d,inHeight:p,inWidth:f,inChannels:g,outHeight:y,outWidth:x,padInfo:w,strideHeight:v,strideWidth:k,filterHeight:C,filterWidth:I,dilationHeight:N,dilationWidth:E,outShape:R}=zl(s.shape,r.shape,a,l,"NHWC",i);P(o.rank===R.length,()=>`Error in ${ap}, dy must have the same rank as output ${R.length}, but got ${o.rank}`);const O=Rs(R,u.data.get(o.dataId).values),B=H0(s.shape,s.dtype);for(let U=0;U<d;++U)for(let K=0;K<y;++K){const H=K*v-w.top;for(let Z=0;Z<x;++Z){const ue=Z*k-w.left;for(let M=0;M<g;++M){let X=Number.MIN_SAFE_INTEGER,A=H<0?0:H,ee=ue<0?0:ue;for(let be=0;be<C;++be){const ie=H+be*N;if(ie>=0&&ie<p)for(let xe=0;xe<I;++xe){const le=ue+xe*E;if(le>=0&&le<f){const ke=c[U][ie][le][M]+h[be][xe][M];ke>X&&(X=ke,A=ie,ee=le)}}}B[U][A][ee][M]+=O[U][K][Z][M]}}}return{dataId:u.write(Yo(B,s.dtype),s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DV(n){const{inputs:e,backend:t,attrs:s}=n,{image:r}=e,{canvas:o,options:a}=s,{contextOptions:l,imageOptions:i}=a||{},u=(i==null?void 0:i.alpha)||1,c=(l==null?void 0:l.contextType)||"2d";if(c!=="2d")throw new Error(`Context type ${l.contextType} is not supported by the CPU backend.`);const h=o.getContext(c,(l==null?void 0:l.contextAttributes)||{});if(h==null)throw new Error(`Could not get the context with ${c} type.`);const[d,p]=r.shape.slice(0,2),f=r.shape.length===2?1:r.shape[2],g=t.data.get(r.dataId).values,y=r.dtype==="float32"?255:1,x=new Uint8ClampedArray(p*d*4);for(let v=0;v<d*p;++v){const k=[0,0,0,255*u];for(let I=0;I<f;I++){const N=g[v*f+I];if(r.dtype==="float32"){if(N<0||N>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${N}.`)}else if(r.dtype==="int32"&&(N<0||N>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${N}.`);f===1?(k[0]=N*y,k[1]=N*y,k[2]=N*y):k[I]=N*y}const C=v*4;x[C+0]=Math.round(k[0]),x[C+1]=Math.round(k[1]),x[C+2]=Math.round(k[2]),x[C+3]=Math.round(k[3])}o.width=p,o.height=d;const w=new ImageData(x,p,d);return h.putImageData(w,0,0),r}const RV={kernelName:UN,backendName:"cpu",kernelFunc:DV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nu(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o,keepDims:a}=s;Ge(r,"sum");let l;r.dtype==="bool"?l=no({inputs:{x:r},backend:t,attrs:{dtype:"int32"}}):l=gr({inputs:{x:r},backend:t});const i=l.shape.length,u=ct(o,l.shape),c=jt(u,i);let h=u,d=l;c!=null&&(d=Xn({inputs:{x:l},backend:t,attrs:{perm:c}}),h=Qt(h.length,i)),Nn("sum",h,d.shape.length);const[p,f]=bn(d.shape,h),g=rs(d.dtype,"int32");let y=fc(t,p,g);const x=me(f),w=t.data.get(y.dataId).values,v=t.data.get(d.dataId).values;for(let k=0;k<w.length;++k){const C=k*x;let I=0;for(let N=0;N<x;++N)I+=v[C+N];w[k]=I}if(a){const k=Jt(y.shape,u),C=y;y=Rt({inputs:{x:y},backend:t,attrs:{shape:k}}),t.disposeIntermediateTensorInfo(C)}return t.disposeIntermediateTensorInfo(l),c!=null&&t.disposeIntermediateTensorInfo(d),y}const FV={kernelName:bh,backendName:"cpu",kernelFunc:nu};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OV(n){const{inputs:e,backend:t,attrs:s}=n,{equation:r}=s,o=e,{allDims:a,summedDims:l,idDims:i}=Sg(r,o.length);Ig(a.length,i,o);const{path:u,steps:c}=Ng(l,i),h=c.length;let d=null,p=a.length;const f=[];for(let g=0;g<h;++g){for(const y of c[g]){const{permutationIndices:x,expandDims:w}=Cg(p,i[y]);let v;$g(x)?v=o[y]:(v=Xn({inputs:{x:o[y]},backend:t,attrs:{perm:x}}),f.push(v));const k=v.shape.slice();for(let C=0;C<w.length;++C)k.splice(w[C],0,1);ft(v.shape,k)||(v=Rt({inputs:{x:v},backend:t,attrs:{shape:k}}),f.push(v)),d===null?d=v:(d=cd({inputs:{a:v,b:d},backend:t}),f.push(d))}g<h-1&&(u[g]>=0&&(d=nu({inputs:{x:d},backend:t,attrs:{axis:u[g]-(a.length-p),keepDims:!1}}),f.push(d)),p--)}for(const g of f)g!==d&&t.disposeIntermediateTensorInfo(g);return d}const LV={kernelName:vf,backendName:"cpu",kernelFunc:OV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PV(n){const{inputs:e,backend:t}=n,{dy:s,y:r}=e;Ge([s,r],"eluGrad");const o=new Float32Array(me(r.shape)),a=t.data.get(r.dataId).values,l=t.data.get(s.dataId).values;for(let i=0;i<a.length;++i){const u=a[i];u>=0?o[i]=l[i]:o[i]=l[i]*(u+1)}return t.makeTensorInfo(r.shape,"float32",o)}const zV={kernelName:kf,backendName:"cpu",kernelFunc:PV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const BV=gg,MV=yg,VV=bg,WV=xg,UV=wg,GV=vg,HV=$t(nl,n=>{const e=Math.sign(n),t=Math.abs(n),s=1/(1+BV*t);return e*(1-((((GV*s+UV)*s+WV)*s+VV)*s+MV)*s*Math.exp(-t*t))}),jV={kernelName:nl,backendName:"cpu",kernelFunc:HV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yc(n){const{inputs:e,backend:t,attrs:s}=n,{input:r}=e,{dim:o}=s,a=r.shape.length,l=r.shape.slice();let i=o;return o<0&&(P(-(a+1)<=o,()=>`Axis must be in the interval [${-(a+1)}, ${a}]`),i=a+o+1),l.splice(i,0,1),Rt({inputs:{x:r},backend:t,attrs:{shape:l}})}const qV={kernelName:Vc,backendName:"cpu",kernelFunc:yc};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const KV=tn((n,e)=>n/e),iy=dn(el,KV),qp={kernelName:el,backendName:"cpu",kernelFunc:iy};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nS(n,e,t){const s=n.shape,r=s[0],o=s[1],a=t.data.get(n.dataId),l=a.complexTensorInfos.real,i=a.complexTensorInfos.imag,u=[r,o],c=me(u),h=Sn("float32",c),d=Sn("float32",c);for(let y=0;y<r;y++){const x=jo({inputs:{x:l},backend:t,attrs:{begin:[y,0],size:[1,o]}}),w=jo({inputs:{x:i},backend:t,attrs:{begin:[y,0],size:[1,o]}}),v=es({inputs:{real:x,imag:w},backend:t}),{real:k,imag:C}=XV(v,e,t),I=_r(k,C);for(let N=0;N<o;N++){const E=kg(I,N);h[y*o+N]=E.real,d[y*o+N]=E.imag}t.disposeIntermediateTensorInfo(x),t.disposeIntermediateTensorInfo(w),t.disposeIntermediateTensorInfo(v)}const p=t.makeTensorInfo(u,"float32",h),f=t.makeTensorInfo(u,"float32",d),g=es({inputs:{real:p,imag:f},backend:t});return t.disposeIntermediateTensorInfo(p),t.disposeIntermediateTensorInfo(f),g}function XV(n,e,t){const s=me(n.shape),r=t.data.get(n.dataId),o=t.data.get(r.complexTensorInfos.real.dataId).values,a=t.data.get(r.complexTensorInfos.imag.dataId).values;if(YV(s)){const l=Kp(o,a,s,e,t),i=[n.shape[0],n.shape[1]];if(e){const u=t.makeTensorInfo(i,"float32",l.real),c=t.makeTensorInfo(i,"float32",l.imag),h=t.makeTensorInfo([],"float32",ro(s,"float32")),d=gr({inputs:{x:h},backend:t}),p=qp.kernelFunc({inputs:{a:u,b:h},backend:t}),f=qp.kernelFunc({inputs:{a:c,b:d},backend:t}),g=t.data.get(p.dataId).values,y=t.data.get(f.dataId).values;return t.disposeIntermediateTensorInfo(u),t.disposeIntermediateTensorInfo(c),t.disposeIntermediateTensorInfo(h),t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(p),t.disposeIntermediateTensorInfo(f),{real:g,imag:y}}return l}else{const l=_r(o,a),i=ZV(l,s,e);return lw(i)}}function YV(n){return(n&n-1)===0}function Kp(n,e,t,s,r){if(t===1)return{real:n,imag:e};const o=_r(n,e),a=t/2,l=uw(o),i=l.real,u=l.imag,c=[i.length],h=r.makeTensorInfo(c,"float32",i),d=r.makeTensorInfo(c,"float32",u),p=es({inputs:{real:h,imag:d},backend:r}),f=cw(o),g=f.real,y=f.imag,x=[g.length],w=r.makeTensorInfo(x,"float32",g),v=r.makeTensorInfo(x,"float32",y),k=es({inputs:{real:w,imag:v},backend:r}),C=Kp(i,u,a,s,r),I=C.real,N=C.imag,E=[I.length],R=r.makeTensorInfo(E,"float32",I),O=r.makeTensorInfo(E,"float32",N),B=es({inputs:{real:R,imag:O},backend:r}),j=Kp(g,y,a,s,r),U=j.real,K=j.imag,H=[U.length],Z=r.makeTensorInfo(H,"float32",U),ue=r.makeTensorInfo(H,"float32",K),M=es({inputs:{real:Z,imag:ue},backend:r}),X=dw(t,s),A=[X.real.length],ee=r.makeTensorInfo(A,"float32",X.real),be=r.makeTensorInfo(A,"float32",X.imag),ie=es({inputs:{real:ee,imag:be},backend:r}),xe=cd({inputs:{a:ie,b:M},backend:r}),le=Pa({inputs:{a:B,b:xe},backend:r}),ke=oy({inputs:{a:B,b:xe},backend:r}),oe=Ho({inputs:{input:le},backend:r}),se=Ho({inputs:{input:ke},backend:r}),$e=za({inputs:{input:le},backend:r}),Ce=za({inputs:{input:ke},backend:r}),we=Ba({inputs:[oe,se],backend:r,attrs:{axis:0}}),Qe=Ba({inputs:[$e,Ce],backend:r,attrs:{axis:0}}),tt=r.data.get(we.dataId).values,Xe=r.data.get(Qe.dataId).values;return r.disposeIntermediateTensorInfo(h),r.disposeIntermediateTensorInfo(d),r.disposeIntermediateTensorInfo(p),r.disposeIntermediateTensorInfo(w),r.disposeIntermediateTensorInfo(v),r.disposeIntermediateTensorInfo(k),r.disposeIntermediateTensorInfo(R),r.disposeIntermediateTensorInfo(O),r.disposeIntermediateTensorInfo(B),r.disposeIntermediateTensorInfo(Z),r.disposeIntermediateTensorInfo(ue),r.disposeIntermediateTensorInfo(M),r.disposeIntermediateTensorInfo(ee),r.disposeIntermediateTensorInfo(be),r.disposeIntermediateTensorInfo(ie),r.disposeIntermediateTensorInfo(xe),r.disposeIntermediateTensorInfo(le),r.disposeIntermediateTensorInfo(ke),r.disposeIntermediateTensorInfo(oe),r.disposeIntermediateTensorInfo($e),r.disposeIntermediateTensorInfo(se),r.disposeIntermediateTensorInfo(Ce),r.disposeIntermediateTensorInfo(we),r.disposeIntermediateTensorInfo(Qe),{real:tt,imag:Xe}}function ZV(n,e,t){const s=new Float32Array(e*2);for(let r=0;r<e;r++){let o=0,a=0;for(let l=0;l<e;l++){const i=pw(r*l,e,t),u=kg(n,l);o+=u.real*i.real-u.imag*i.imag,a+=u.real*i.imag+u.imag*i.real}t&&(o/=e,a/=e),hw(s,o,a,r)}return s}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JV(n){const{inputs:e,backend:t}=n,{input:s}=e,r=me(s.shape),o=s.shape[s.shape.length-1],a=r/o,l=Rt({inputs:{x:s},backend:t,attrs:{shape:[a,o]}}),i=nS(l,!1,t),u=Rt({inputs:{x:i},backend:t,attrs:{shape:s.shape}});return t.disposeIntermediateTensorInfo(l),t.disposeIntermediateTensorInfo(i),u}const QV={kernelName:Sf,backendName:"cpu",kernelFunc:JV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ly(n){const{backend:e,attrs:t}=n,{shape:s,value:r,dtype:o}=t,a=o||Ua(r),l=Zt(a,me(s));return tW(l,r,a),e.makeTensorInfo(s,a,l)}const eW={kernelName:Cf,backendName:"cpu",kernelFunc:ly};function tW(n,e,t){n.fill(e)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nW={kernelName:If,backendName:"cpu",kernelFunc:({inputs:n,attrs:e,backend:t})=>{const{image:s}=n,r=t,o=Sn(s.dtype,me(s.shape)),[a,l,i,u]=s.shape,c=r.data.get(s.dataId).values;for(let d=0;d<a;d++){const p=d*i*l*u;for(let f=0;f<l;f++){const g=f*(i*u);for(let y=0;y<i;y++){const x=y*u;for(let w=0;w<u;w++){const v=Math.round(i-y-1),k=p+g+x+w;let C=c[k];if(v>=0&&v<i){const I=v*u,N=p+g+I+w;C=c[N]}o[k]=C}}}}return{dataId:r.write(o,s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sW(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:o,bias:a,preluActivationWeights:l}=e,{strides:i,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=s;let g=eS({inputs:{x:r,filter:o},backend:t,attrs:{strides:i,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d}});if(a){const y=g;if(c==="NCHW"&&a.shape.length===1&&a.shape[0]!==1){const x=Rt({inputs:{x:a},backend:t,attrs:{shape:[a.shape[0],1,1]}});g=Pa({inputs:{a:g,b:x},backend:t}),t.disposeIntermediateTensorInfo(x)}else g=Pa({inputs:{a:g,b:a},backend:t});t.disposeIntermediateTensorInfo(y)}if(p){const y=g;if(c==="NCHW"&&p==="prelu"&&l.shape.length===1&&l.shape[0]!==1){const x=Rt({inputs:{x:l},backend:t,attrs:{shape:[l.shape[0],1,1]}});g=gc(t,g,p,x,f),t.disposeIntermediateTensorInfo(x)}else g=gc(t,g,p,l,f);t.disposeIntermediateTensorInfo(y)}return g}const rW={kernelName:Xu,backendName:"cpu",kernelFunc:sW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oW(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:o,bias:a,preluActivationWeights:l}=e,{strides:i,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=s;let g=tS({inputs:{x:r,filter:o},backend:t,attrs:{strides:i,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d}});if(a){const y=g;g=Pa({inputs:{a:g,b:a},backend:t}),t.disposeIntermediateTensorInfo(y)}if(p){const y=g;g=gc(t,g,p,l,f),t.disposeIntermediateTensorInfo(y)}return g}const aW={kernelName:Yu,backendName:"cpu",kernelFunc:oW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iW(n){const{inputs:e,backend:t}=n,{params:s,indices:r}=e,o=me(s.shape),a=r.shape,l=a[a.length-1],[i,u,c,h]=og(s,r);if(u===0)return t.makeTensorInfo(i,s.dtype,[]);const d=t.data.get(r.dataId).values,p=t.bufferSync(s),f=d2(d,p,s.dtype,u,l,c,h,s.shape,o);return t.makeTensorInfo(i,s.dtype,f.values)}const lW={kernelName:Nf,backendName:"cpu",kernelFunc:iW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uW(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,indices:o}=e,{axis:a,batchDims:l}=s;Ge([r,o],"gatherV2");const i=ct(a,r.shape)[0],u=t.data.get(o.dataId).values,c=r.shape[i];for(let k=0;k<u.length;++k){const C=u[k];P(C<=c-1&&C>=0,()=>`GatherV2: the index value ${C} is not in [0, ${c-1}]`)}let h=l;l==null&&(h=0);const d=me(o.shape),p=_g(r,o,i,h),f=Rt({inputs:{x:r},backend:t,attrs:{shape:[p.batchSize,p.outerSize,p.dimSize,p.sliceSize]}}),g=Rt({inputs:{x:o},backend:t,attrs:{shape:[p.batchSize,d/p.batchSize]}}),y=[p.batchSize,p.outerSize,d/p.batchSize,p.sliceSize],x=t.bufferSync(g),w=t.bufferSync(f),v=p2(w,x,y);return t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(g),t.makeTensorInfo(p.outputShape,v.dtype,v.values)}const cW={kernelName:Uc,backendName:"cpu",kernelFunc:uW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hW(n){const{inputs:e,backend:t}=n,{input:s}=e,r=me(s.shape),o=s.shape[s.shape.length-1],a=r/o,l=Rt({inputs:{x:s},backend:t,attrs:{shape:[a,o]}}),i=nS(l,!0,t),u=Rt({inputs:{x:i},backend:t,attrs:{shape:s.shape}});return t.disposeIntermediateTensorInfo(l),t.disposeIntermediateTensorInfo(i),u}const dW={kernelName:$f,backendName:"cpu",kernelFunc:hW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pW=$t(ul,n=>Number.isFinite(n)?1:0,"bool"),fW={kernelName:ul,backendName:"cpu",kernelFunc:pW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mW=$t(cl,n=>Math.abs(n)===1/0?1:0,"bool"),gW={kernelName:cl,backendName:"cpu",kernelFunc:mW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yW=$t(hl,n=>Number.isNaN(n)?1:0,"bool"),bW={kernelName:hl,backendName:"cpu",kernelFunc:yW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xW(n){const{backend:e,attrs:t}=n,{start:s,stop:r,num:o}=t,a=b2(s,r,o);return e.makeTensorInfo([a.length],"float32",a)}const wW={kernelName:_f,backendName:"cpu",kernelFunc:xW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vW=$t(pl,n=>Math.log1p(n)),kW={kernelName:pl,backendName:"cpu",kernelFunc:vW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const SW=tn((n,e)=>n&&e),CW=dn(Kc,SW,null,"bool"),IW={kernelName:Kc,backendName:"cpu",kernelFunc:CW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const NW=$t(Xc,n=>n?0:1,"bool"),$W={kernelName:Xc,backendName:"cpu",kernelFunc:NW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const TW=tn((n,e)=>n||e),_W=dn(Yc,TW,null,"bool"),EW={kernelName:Yc,backendName:"cpu",kernelFunc:_W};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AW(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{depthRadius:o,bias:a,alpha:l,beta:i}=s;Ge(r,"LRN");const u=r.shape[3],c=u-1,h=t.data.get(r.dataId).values,d=me(r.shape),p=new Float32Array(d);function f(g){const y=g%u;let x=g-y+Math.max(0,y-o);const w=g-y+Math.min(y+o,c);let v=0;for(;x<=w;x++){const k=h[x];v+=k*k}return v}for(let g=0;g<d;g++){const y=f(g),x=h[g]*Math.pow(a+l*y,-i);p[g]=x}return t.makeTensorInfo(r.shape,r.dtype,p)}const DW={kernelName:Zc,backendName:"cpu",kernelFunc:AW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RW(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,y:o,dy:a}=e,{depthRadius:l,bias:i,alpha:u,beta:c}=s;Ge(a,"LRNGrad");const h=me(a.shape),d=a.shape[3],p=t.data.get(a.dataId).values,f=t.data.get(r.dataId).values,g=t.data.get(o.dataId).values,y=new Float32Array(h),x=h;for(let w=0;w<x;w++){const v=w%d,k=w-v+Math.max(0,v-l),C=w-v+Math.min(d,v+l+1);let I=0;for(let N=k;N<C;N++)I+=Math.pow(f[N],2);I=u*I+i;for(let N=k;N<C;N++){let E=-2*u*c*f[N]*g[w]/I;w===N&&(E+=Math.pow(I,-c)),E*=p[w],y[N]+=E}}return t.makeTensorInfo(a.shape,r.dtype,y)}const FW={kernelName:Ef,backendName:"cpu",kernelFunc:RW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sS(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{reductionIndices:o,keepDims:a}=s,l=t;let i=r.shape;const u=i.length,c=ct(o,i);let h=c;const d=jt(h,u);let p=l.data.get(r.dataId).values;if(d!=null){const k=new Array(u);for(let C=0;C<k.length;C++)k[C]=i[d[C]];p=sy(p,i,r.dtype,d,k),h=Qt(h.length,u),i=k}Ge(r,"max"),Nn("max",h,u);const[f,g]=bn(i,h),y=me(g),x=w2(p,y,f,r.dtype),w=l.write(x,f,r.dtype);let v=f;return a&&(v=Jt(f,c)),{dataId:w,shape:v,dtype:r.dtype}}const OW={kernelName:Jc,backendName:"cpu",kernelFunc:sS};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LW(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e;Ge(r,"maxPool");const{filterSize:o,strides:a,pad:l,dimRoundingMode:i}=s,u=1;P(In(a,u),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${u}'`);const c=zs(r.shape,o,a,u,l,i);let h;if(c.filterWidth===1&&c.filterHeight===1&&ft(c.inShape,c.outShape))h=gr({inputs:{x:r},backend:t});else{const d=t.data.get(r.dataId).values,p=Ze(r.shape),f=ay(d,r.shape,r.dtype,p,c,"max");h=t.makeTensorInfo(c.outShape,r.dtype,f.values)}return h}const PW={kernelName:Qc,backendName:"cpu",kernelFunc:LW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zW(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{filterSize:o,strides:a,pad:l,dimRoundingMode:i,dataFormat:u}=s;Ge(r,"maxPool3d");const c=Ar(r.shape,o,a,1,l,i,u),h=t.data.get(r.dataId).values,d=Q2(h,r.shape,r.dtype,Ze(r.shape),c,"max");return t.makeTensorInfo(d.shape,"float32",d.values)}const BW={kernelName:eh,backendName:"cpu",kernelFunc:zW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MW(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,input:o}=e,{filterSize:a,strides:l,pad:i,dimRoundingMode:u}=s;Ge([r,o],"maxPool3DGrad");const c=Ar(o.shape,a,l,1,i,u),h=t.bufferSync(o),d=T4(h,c),p=c.strideDepth,f=c.strideHeight,g=c.strideWidth,y=c.dilationDepth,x=c.dilationHeight,w=c.dilationWidth,v=c.effectiveFilterDepth,k=c.effectiveFilterHeight,C=c.effectiveFilterWidth,I=v-1-c.padInfo.front,N=C-1-c.padInfo.left,E=k-1-c.padInfo.top,R=lt(o.shape,"float32"),O=t.bufferSync(r);for(let B=0;B<c.batchSize;++B)for(let j=0;j<c.inChannels;++j)for(let U=0;U<c.inDepth;++U)for(let K=0;K<c.inHeight;++K)for(let H=0;H<c.inWidth;++H){const Z=U-I,ue=K-E,M=H-N;let X=0;for(let A=0;A<v;A+=y){const ee=(Z+A)/p;if(!(ee<0||ee>=c.outDepth||Math.floor(ee)!==ee))for(let be=0;be<k;be+=x){const ie=(ue+be)/f;if(!(ie<0||ie>=c.outHeight||Math.floor(ie)!==ie))for(let xe=0;xe<C;xe+=w){const le=(M+xe)/g;if(le<0||le>=c.outWidth||Math.floor(le)!==le)continue;const ke=v*k*C-1-d.get(B,ee,ie,le,j),oe=A*k*C+be*C+xe,se=ke===oe?1:0;if(se===0)continue;const $e=O.get(B,ee,ie,le,j);X+=$e*se}}}R.set(X,B,U,K,H,j)}return t.makeTensorInfo(R.shape,R.dtype,R.values)}const VW={kernelName:Df,backendName:"cpu",kernelFunc:MW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WW(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,input:o,output:a}=e,l=o;Ge([o,a],"maxPoolGrad");const{filterSize:i,strides:u,pad:c,dimRoundingMode:h}=s,d=zs(l.shape,i,u,1,c,h),p=t.data.get(l.dataId).values,f=lt(d.outShape,l.dtype,J2(p,l.shape,l.dtype,d).values),g=d.strideHeight,y=d.strideWidth,x=d.dilationHeight,w=d.dilationWidth,v=d.effectiveFilterHeight,k=d.effectiveFilterWidth,C=k-1-d.padInfo.left,I=v-1-d.padInfo.top,N=lt(l.shape,"float32"),E=t.data.get(r.dataId).values,R=lt(r.shape,"float32",E);for(let O=0;O<d.batchSize;++O)for(let B=0;B<d.inChannels;++B)for(let j=0;j<d.inHeight;++j)for(let U=0;U<d.inWidth;++U){const K=j-I,H=U-C;let Z=0;for(let ue=0;ue<v;ue+=x){const M=(K+ue)/g;if(!(M<0||M>=d.outHeight||Math.floor(M)!==M))for(let X=0;X<k;X+=w){const A=(H+X)/y;if(A<0||A>=d.outWidth||Math.floor(A)!==A)continue;const ee=v*k-1-f.get(O,M,A,B),be=ue*k+X,ie=ee===be?1:0;if(ie===0)continue;const xe=R.get(O,M,A,B);Z+=xe*ie}}N.set(Z,O,j,U,B)}return t.makeTensorInfo(N.shape,N.dtype,N.values)}const UW={kernelName:Af,backendName:"cpu",kernelFunc:WW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GW(n,e,t,s,r){const o=Ze(e),a=ay(n,e,t,o,r,"max"),l=J2(n,e,t,r,!0,s);return[a.values,l.values]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const HW={kernelName:Rf,backendName:"cpu",kernelFunc:({inputs:n,attrs:e,backend:t})=>{const{x:s}=n,{filterSize:r,strides:o,pad:a,includeBatchInIndex:l}=e,i=t;Ge(s,"MaxPoolWithArgmax");const u=i.data.get(s.dataId).values,c=zs(s.shape,r,o,[1,1],a),[h,d]=GW(u,s.shape,s.dtype,l,c),p=i.write(h,c.outShape,s.dtype),f=i.write(d,c.outShape,s.dtype);return[{dataId:p,shape:c.outShape,dtype:s.dtype},{dataId:f,shape:c.outShape,dtype:"int32"}]}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jW(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o,keepDims:a}=s,l=ct(o,r.shape),u=bn(r.shape,l)[1],c=me(u),h=[],d=t.makeTensorInfo([],"float32",new Float32Array([c]));h.push(d);const p=no({inputs:{x:r},backend:t,attrs:{dtype:"float32"}});h.push(p);const f=iy({inputs:{a:p,b:d},backend:t});h.push(f);const g=nu({inputs:{x:f},backend:t,attrs:{axis:o,keepDims:a}});return h.forEach(y=>t.disposeIntermediateTensorInfo(y)),g}const qW={kernelName:th,backendName:"cpu",kernelFunc:jW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KW(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o,keepDims:a}=s;Ge(r,"min");const l=ct(o,r.shape);let i=l;const u=jt(i,r.shape.length);let c=r;u!=null&&(c=Xn({inputs:{x:r},backend:t,attrs:{perm:u}}),i=Qt(i.length,r.shape.length)),Nn("min",i,c.shape.length);const[h,d]=bn(c.shape,i),p=me(d),f=Dn(me(h),c.dtype),g=t.data.get(c.dataId).values;for(let x=0;x<f.length;++x){const w=x*p;let v=g[w];for(let k=0;k<p;++k){const C=g[w+k];(Number.isNaN(C)||C<v)&&(v=C)}f[x]=v}u!=null&&t.disposeIntermediateTensorInfo(c);const y=t.makeTensorInfo(h,c.dtype,f);if(a){const x=Jt(h,l),w=Rt({inputs:{x:y},backend:t,attrs:{shape:x}});return t.disposeIntermediateTensorInfo(y),w}return y}const XW={kernelName:nh,backendName:"cpu",kernelFunc:KW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YW(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{paddings:o,mode:a}=s;Ge(r,"mirrorPad");const l=o.map((v,k)=>v[0]+r.shape[k]+v[1]),i=o.map(v=>v[0]),u=o.map((v,k)=>v[0]+r.shape[k]),c=a==="reflect"?0:1,h=t.data.get(r.dataId).values,d=r.shape.length,p=Ze(r.shape),f=me(l),g=l.length,y=Ze(l),x=Sn(r.dtype,f);for(let v=0;v<f;v++){let k=Ga(v,g,y);for(let I=0;I<g;I++)k[I]<i[I]?k[I]=i[I]*2-k[I]-c:k[I]>=u[I]&&(k[I]=(u[I]-1)*2-k[I]+c);k=k.map((I,N)=>I-i[N]);const C=ur(k,d,p);x[v]=h[C]}return{dataId:t.write(x,l,r.dtype),shape:l,dtype:r.dtype}}const ZW={kernelName:sh,backendName:"cpu",kernelFunc:YW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const JW=tn((n,e)=>{const t=n%e;return n<0&&e<0||n>=0&&e>=0?t:(t+e)%e}),QW=dn(gl,JW),eU={kernelName:gl,backendName:"cpu",kernelFunc:QW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rS(n){const{inputs:e,backend:t,attrs:s}=n,{logits:r}=e,{dim:o}=s,a=r.shape.length;let l=o;if(l===-1&&(l=a-1),l!==a-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${a} and dim was ${l}`);const i=ct([l],r.shape),u=sS({inputs:{x:r},backend:t,attrs:{reductionIndices:i,keepDims:!1}}),c=Jt(u.shape,i),h=Rt({inputs:{x:u},backend:t,attrs:{shape:c}}),d=oy({inputs:{a:r,b:h},backend:t}),p=l2({inputs:{x:d},backend:t}),f=nu({inputs:{x:p},backend:t,attrs:{axis:i,keepDims:!1}}),g=Rt({inputs:{x:f},backend:t,attrs:{shape:c}}),y=iy({inputs:{a:p,b:g},backend:t});return t.disposeIntermediateTensorInfo(u),t.disposeIntermediateTensorInfo(h),t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(p),t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(g),y}const tU={kernelName:vh,backendName:"cpu",kernelFunc:rS};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nU(n){const{inputs:e,backend:t,attrs:s}=n,{logits:r}=e,{numSamples:o,seed:a,normalized:l}=s;Ge(r,"multinomial");const i=l?r:rS({inputs:{logits:r},backend:t,attrs:{dim:-1}}),u=i.shape[0],c=i.shape[1],h=t.data.get(i.dataId).values,d=[u,o],p=Dn(me(d),"int32");for(let f=0;f<u;++f){const g=f*c,y=new Float32Array(c-1);y[0]=h[g];for(let v=1;v<y.length;++v)y[v]=y[v-1]+h[g+v];const x=Bh.alea(a.toString()),w=f*o;for(let v=0;v<o;++v){const k=x();p[w+v]=y.length;for(let C=0;C<y.length;C++)if(k<y[C]){p[w+v]=C;break}}}return l||t.disposeIntermediateTensorInfo(i),t.makeTensorInfo(d,"int32",p)}const sU={kernelName:Ff,backendName:"cpu",kernelFunc:nU};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rU=Zm;function oU(n){const{inputs:e,backend:t,attrs:s}=n,{boxes:r,scores:o}=e,{maxOutputSize:a,iouThreshold:l,scoreThreshold:i}=s;Ge(r,"NonMaxSuppression");const u=t.data.get(r.dataId).values,c=t.data.get(o.dataId).values,{selectedIndices:h}=rU(u,c,a,l,i);return t.makeTensorInfo([h.length],"int32",new Int32Array(h))}const aU={kernelName:Of,backendName:"cpu",kernelFunc:oU};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iU=Jm;function lU(n){const{inputs:e,backend:t,attrs:s}=n,{boxes:r,scores:o}=e,{maxOutputSize:a,iouThreshold:l,scoreThreshold:i,padToMaxOutputSize:u}=s;Ge(r,"NonMaxSuppressionPadded");const c=t.data.get(r.dataId).values,h=t.data.get(o.dataId).values,{selectedIndices:d,validOutputs:p}=iU(c,h,a,l,i,u);return[t.makeTensorInfo([d.length],"int32",new Int32Array(d)),t.makeTensorInfo([],"int32",new Int32Array([p]))]}const uU={kernelName:Lf,backendName:"cpu",kernelFunc:lU};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cU=Qm;function hU(n){const{inputs:e,backend:t,attrs:s}=n,{boxes:r,scores:o}=e,{maxOutputSize:a,iouThreshold:l,scoreThreshold:i,softNmsSigma:u}=s;Ge(r,"NonMaxSuppressionWithScore");const c=t.data.get(r.dataId).values,h=t.data.get(o.dataId).values,d=a,p=l,f=i,g=u,{selectedIndices:y,selectedScores:x}=cU(c,h,d,p,f,g);return[t.makeTensorInfo([y.length],"int32",new Int32Array(y)),t.makeTensorInfo([x.length],"float32",new Float32Array(x))]}const dU={kernelName:Pf,backendName:"cpu",kernelFunc:hU};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pU(n){const{inputs:e,backend:t,attrs:s}=n,{indices:r}=e,{dtype:o,depth:a,onValue:l,offValue:i}=s;Ge(r,"oneHot");const u=me(r.shape),c=new Float32Array(u*a);c.fill(i);const h=t.data.get(r.dataId).values;for(let d=0;d<u;++d)h[d]>=0&&h[d]<a&&(c[d*a+h[d]]=l);return t.makeTensorInfo([...r.shape,a],o,c)}const fU={kernelName:ih,backendName:"cpu",kernelFunc:pU};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bc(n){const{inputs:e,backend:t}=n,{x:s}=e;if(s.dtype==="string")throw new Error("zerosLike is not supported for string tensors");if(s.dtype==="complex64"){const r=Ho({inputs:{input:s},backend:t}),o=bc({inputs:{x:r},backend:t}),a=za({inputs:{input:s},backend:t}),l=bc({inputs:{x:a},backend:t}),i=es({inputs:{real:o,imag:l},backend:t});return t.disposeIntermediateTensorInfo(r),t.disposeIntermediateTensorInfo(o),t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(l),i}else return ly({backend:t,attrs:{shape:s.shape,value:0,dtype:s.dtype}})}const mU={kernelName:Ih,backendName:"cpu",kernelFunc:bc};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oS(n){const{inputs:e,backend:t}=n,{x:s}=e;if(s.dtype==="string")throw new Error("onesLike is not supported for string tensors");if(s.dtype==="complex64"){const r=Ho({inputs:{input:s},backend:t}),o=oS({inputs:{x:r},backend:t}),a=za({inputs:{input:s},backend:t}),l=bc({inputs:{x:a},backend:t}),i=es({inputs:{real:o,imag:l},backend:t});return t.disposeIntermediateTensorInfo(r),t.disposeIntermediateTensorInfo(o),t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(l),i}else return ly({backend:t,attrs:{shape:s.shape,value:1,dtype:s.dtype}})}const gU={kernelName:ah,backendName:"cpu",kernelFunc:oS};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aS(n){const{inputs:e,backend:t,attrs:s}=n,{axis:r}=s;if(e.length===1)return yc({inputs:{input:e[0]},backend:t,attrs:{dim:r}});const o=e[0].shape,a=e[0].dtype;e.forEach(c=>{cs(o,c.shape,"All tensors passed to stack must have matching shapes"),P(a===c.dtype,()=>"All tensors passed to stack must have matching dtypes")});const l=[],i=e.map(c=>{const h=yc({inputs:{input:c},backend:t,attrs:{dim:r}});return l.push(h),h}),u=Ba({inputs:i,backend:t,attrs:{axis:r}});return l.forEach(c=>t.disposeIntermediateTensorInfo(c)),u}const yU={kernelName:lh,backendName:"cpu",kernelFunc:aS};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bU(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{paddings:o,constantValue:a}=s;Ge(r,"pad");const l=o.map((w,v)=>w[0]+r.shape[v]+w[1]),i=o.map(w=>w[0]),u=t.data.get(r.dataId).values,c=me(r.shape),h=r.shape.length,d=Ze(r.shape),p=me(l),f=l.length,g=Ze(l),y=Sn(r.dtype,p);a!==0&&y.fill(a);for(let w=0;w<c;w++){const k=Ga(w,h,d).map((I,N)=>I+i[N]),C=ur(k,f,g);y[C]=u[w]}return{dataId:t.write(y,l,r.dtype),shape:l,dtype:r.dtype}}const iS={kernelName:uh,backendName:"cpu",kernelFunc:bU};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xU=tn((n,e)=>Math.pow(n,e)),wU=dn(bl,xU),vU={kernelName:bl,backendName:"cpu",kernelFunc:wU};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kU(n){const{inputs:e,backend:t,attrs:s}=n,{paramsNestedSplits:r,paramsDenseValues:o,indices:a}=e,l=r.map(y=>t.data.get(y.dataId).values),i=r.map(y=>y.shape),u=t.data.get(o.dataId).values,c=t.data.get(a.dataId).values,[h,d,p]=N2(l,i,u,o.shape,o.dtype,c,a.shape),f=h.map(y=>t.makeTensorInfo([y.length],"int32",y)),g=t.makeTensorInfo(p,o.dtype,d);return f.concat([g])}const SU={kernelName:zf,backendName:"cpu",kernelFunc:kU};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CU(n){const{inputs:e,backend:t}=n,{starts:s,limits:r,deltas:o}=e,a=t.data.get(s.dataId).values,l=t.data.get(r.dataId).values,i=t.data.get(o.dataId).values,[u,c]=$2(a,s.shape,s.dtype,l,r.shape,i,o.shape),h=t.makeTensorInfo([u.length],"int32",u),d=t.makeTensorInfo([c.length],s.dtype,c);return[h,d]}const IU={kernelName:Bf,backendName:"cpu",kernelFunc:CU};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NU(n){const{inputs:e,backend:t,attrs:s}=n,{shape:r,values:o,defaultValue:a,rowPartitionTensors:l}=e,{rowPartitionTypes:i}=s,u=t.data.get(r.dataId).values,c=t.data.get(o.dataId).values,h=t.data.get(a.dataId).values,d=l.map(y=>t.data.get(y.dataId).values),p=l.map(y=>y.shape),[f,g]=T2(u,r.shape,c,o.shape,o.dtype,h,a.shape,d,p,i);return t.makeTensorInfo(f,o.dtype,g)}const $U={kernelName:Mf,backendName:"cpu",kernelFunc:NU};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TU(n){const{backend:e,attrs:t}=n,{start:s,stop:r,dtype:o,step:a}=t,l=_2(s,r,a,o);return e.makeTensorInfo([l.length],o,l)}const _U={kernelName:Vf,backendName:"cpu",kernelFunc:TU};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const EU=$t(xl,n=>1/n),AU={kernelName:xl,backendName:"cpu",kernelFunc:EU};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DU(n){const{inputs:e,backend:t,attrs:s}=n,{images:r}=e,{alignCorners:o,halfPixelCenters:a,size:l}=s;Ge(r,"resizeBilinear");const i=Ze(r.shape),[u,c]=l,[h,d,p,f]=r.shape,g=t.data.get(r.dataId).values,y=new Float32Array(me([h,u,c,f])),x=[o&&u>1?d-1:d,o&&c>1?p-1:p],w=[o&&u>1?u-1:u,o&&c>1?c-1:c];let v=0;const k=x[0]/w[0],C=x[1]/w[1];for(let I=0;I<h;I++)for(let N=0;N<u;N++){let E;a?E=k*(N+.5)-.5:E=k*N;const R=Math.max(0,Math.floor(E)),O=E-R,B=Math.min(d-1,Math.ceil(E)),j=I*i[0]+R*i[1],U=I*i[0]+B*i[1];for(let K=0;K<c;K++){let H;a?H=C*(K+.5)-.5:H=C*K;const Z=Math.max(0,Math.floor(H)),ue=H-Z,M=Math.min(p-1,Math.ceil(H)),X=j+Z*i[2],A=U+Z*i[2],ee=j+M*i[2],be=U+M*i[2];for(let ie=0;ie<f;ie++){const xe=g[X+ie],le=g[A+ie],ke=g[ee+ie],oe=g[be+ie],se=xe+(ke-xe)*ue,$e=le+(oe-le)*ue,Ce=se+($e-se)*O;y[v++]=Ce}}}return t.makeTensorInfo([h,u,c,f],"float32",y)}const RU={kernelName:fh,backendName:"cpu",kernelFunc:DU};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FU(n){const{inputs:e,backend:t,attrs:s}=n,{images:r,dy:o}=e,{alignCorners:a}=s;Ge([o,r],"resizeBilinearGrad");const l=Ze(r.shape),[i,u,c,h]=r.shape,[,d,p]=o.shape,f=new Float32Array(i*u*c*h),g=[a&&d>1?u-1:u,a&&p>1?c-1:c],y=[a&&d>1?d-1:d,a&&p>1?p-1:p],x=g[0]/y[0],w=g[1]/y[1],v=t.data.get(o.dataId).values;let k=0;for(let C=0;C<i;C++){const I=C*l[0];for(let N=0;N<d;N++){const E=N*x,R=Math.floor(E),O=Math.min(Math.ceil(E),u-1),B=I+R*l[1],j=I+O*l[1],U=E-R,K=1-U;for(let H=0;H<p;H++){const Z=H*w,ue=Math.floor(Z),M=Math.min(Math.ceil(Z),c-1),X=Z-ue,A=1-X,ee=B+ue*l[2],be=B+M*l[2],ie=j+ue*l[2],xe=j+M*l[2],le=K*A,ke=K*X,oe=U*A,se=U*X;for(let $e=0;$e<h;$e++){const Ce=v[k++];f[ee+$e]+=Ce*le,f[be+$e]+=Ce*ke,f[ie+$e]+=Ce*oe,f[xe+$e]+=Ce*se}}}}return t.makeTensorInfo([i,c,u,h],"float32",f)}const OU={kernelName:Gf,backendName:"cpu",kernelFunc:FU};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LU(n){const{inputs:e,backend:t,attrs:s}=n,{images:r}=e,{alignCorners:o,halfPixelCenters:a,size:l}=s;Ge(r,"resizeNearestNeighbor");const i=Ze(r.shape),[u,c]=l,[h,d,p,f]=r.shape,g=t.data.get(r.dataId).values,y=new Float32Array(h*u*c*f),x=[o&&u>1?d-1:d,o&&c>1?p-1:p],w=[o&&u>1?u-1:u,o&&c>1?c-1:c],v=x[0]/w[0],k=x[1]/w[1];let C=0;for(let I=0;I<h;I++){const N=I*i[0];for(let E=0;E<u;E++){const R=a?v*(E+.5):v*E;let O=Math.min(d-1,o?Math.round(R):Math.floor(R));a&&(O=Math.max(0,O));const B=N+O*i[1];for(let j=0;j<c;j++){const U=a?k*(j+.5):k*j;let K=Math.min(p-1,o?Math.round(U):Math.floor(U));a&&(K=Math.max(0,K));const H=B+K*i[2];for(let Z=0;Z<f;Z++){const ue=g[H+Z];y[C++]=ue}}}}return t.makeTensorInfo([h,u,c,f],r.dtype,y)}const PU={kernelName:ph,backendName:"cpu",kernelFunc:LU};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zU(n){const{inputs:e,backend:t,attrs:s}=n,{images:r,dy:o}=e,{alignCorners:a}=s;Ge([o,r],"resizeNearestNeighborGrad");const l=Ze(r.shape),i=Ze(o.shape),[u,c,h,d]=r.shape,[,p,f]=o.shape,g=new Float32Array(u*c*h*d),y=t.data.get(o.dataId).values,x=[a&&p>1?c-1:c,a&&f>1?h-1:h],w=[a&&p>1?p-1:p,a&&f>1?f-1:f],v=x[0]/w[0],k=x[1]/w[1],C=1/v,I=1/k,N=Math.ceil(C)*2+2,E=Math.ceil(I)*2+2;for(let R=0;R<u;R++){const O=R*l[0];for(let B=0;B<c;B++){const j=O+B*l[1],U=Math.floor(B*C),K=Math.floor(U-N/2);for(let H=0;H<h;H++){const Z=j+H*l[2],ue=Math.floor(H*I),M=Math.floor(ue-E/2);for(let X=0;X<d;X++){let A=0;for(let ee=0;ee<N;ee++){const be=ee+K;if(be<0||be>=p)continue;const ie=O+be*i[1],xe=be*v,le=Math.min(c-1,a?Math.round(xe):Math.floor(xe));if(B===le)for(let ke=0;ke<E;ke++){const oe=ke+M;if(oe<0||oe>=f)continue;const se=ie+oe*i[2],$e=oe*k,Ce=Math.min(h-1,a?Math.round($e):Math.floor($e));H===Ce&&(A+=y[se+X])}}g[Z+X]=A}}}}return t.makeTensorInfo(r.shape,r.dtype,g)}const BU={kernelName:Uf,backendName:"cpu",kernelFunc:zU};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MU(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{dims:o}=s;Ge(r,"reverse");const a=r.shape.length,l=ct(o,r.shape);if(a===0)return gr({inputs:{x:r},backend:t});const i=new ln(r.shape,r.dtype),u=t.bufferSync(r);for(let c=0;c<i.size;c++){const h=i.indexToLoc(c),d=h.slice();l.forEach(p=>d[p]=r.shape[p]-1-d[p]),i.set(u.get(...d),...h)}return t.makeTensorInfo(i.shape,i.dtype,i.values)}const VU={kernelName:mh,backendName:"cpu",kernelFunc:MU};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const WU={kernelName:im,backendName:"cpu",kernelFunc:({inputs:n,attrs:e,backend:t})=>{const{image:s}=n,{radians:r,fillValue:o,center:a}=e,l=t,i=Sn(s.dtype,me(s.shape)),[u,c,h,d]=s.shape,[p,f]=pg(a,c,h),g=255,y=Math.sin(r),x=Math.cos(r),w=l.data.get(s.dataId).values;for(let k=0;k<u;k++){const C=k*h*c*d;for(let I=0;I<c;I++){const N=I*(h*d);for(let E=0;E<h;E++){const R=E*d;for(let O=0;O<d;O++){const B=[u,I,E,O],j=B[2],U=B[1];let K=(j-p)*x-(U-f)*y,H=(j-p)*y+(U-f)*x;K=Math.round(K+p),H=Math.round(H+f);let Z=o;if(typeof o!="number"&&(O===3?Z=g:Z=o[O]),K>=0&&K<h&&H>=0&&H<c){const M=H*(h*d),X=K*d,A=C+M+X+O;Z=w[A]}const ue=C+N+R+O;i[ue]=Z}}}}return{dataId:l.write(i,s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const UU=$t(kl,n=>{const e=Math.floor(n);return n-e<.5?Math.floor(n):n-e>.5?Math.ceil(n):e%2===0?e:e+1}),GU={kernelName:kl,backendName:"cpu",kernelFunc:UU};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HU(n){const{inputs:e,backend:t,attrs:s}=n,{indices:r,updates:o}=e,{shape:a}=s,{sliceRank:l,numUpdates:i,sliceSize:u,strides:c,outputSize:h}=ta(o,r,a),d=!0,p=t.bufferSync(r),f=t.bufferSync(o),g=Eo(p,f,a,h,u,i,l,c,0,d);return t.makeTensorInfo(a,g.dtype,g.values)}const jU={kernelName:Hf,backendName:"cpu",kernelFunc:HU};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qU(n,e){let t=0,s=n.length,r=0;for(;t<s;)r=Math.floor((t+s)/2),n[r]<e?t=r+1:s=r;return s}function KU(n,e){let t=0,s=n.length,r=0;for(;t<s;)r=Math.floor((t+s)/2),n[r]<=e?t=r+1:s=r;return s}function XU(n,e,t,s,r,o){const a=Zt("int32",t*r);for(let l=0;l<t;++l){const i=n.slice(l*s,(l+1)*s),u=l*r;for(let c=0;c<r;++c)a[u+c]=o==="left"?qU(i,e[c+u]):KU(i,e[c+u])}return a}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YU(n){const{inputs:e,backend:t,attrs:s}=n,{sortedSequence:r,values:o}=e,{side:a}=s,l=t.data.get(r.dataId).values,i=t.data.get(o.dataId).values,u=XU(l,i,r.shape[0],r.shape[1],o.shape[1],a);return t.makeTensorInfo(o.shape,"int32",u)}const ZU={kernelName:qf,backendName:"cpu",kernelFunc:YU};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JU(n){const{inputs:e,backend:t}=n,{condition:s,t:r,e:o}=e;Ge([s,r,o],"select");const a=s.shape.length,l=t.data.get(s.dataId).values,i=t.data.get(r.dataId).values,u=t.data.get(o.dataId).values,c=rs(r.dtype,o.dtype),h=Dn(me(r.shape),c);let d=0;const p=a===0||a>1||r.shape.length===1?1:me(r.shape.slice(1));for(let f=0;f<l.length;f++)for(let g=0;g<p;g++)l[f]===1?h[d++]=i[f]:h[d++]=u[f];return t.makeTensorInfo(r.shape,c,h)}const QU={kernelName:gh,backendName:"cpu",kernelFunc:JU};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eG=Zh,tG=Jh,nG=$t(Cl,n=>n>=0?tG*n:eG*(Math.exp(n)-1)),sG={kernelName:Cl,backendName:"cpu",kernelFunc:nG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rG=$t($l,n=>n<0?-1:n>0?1:0),oG={kernelName:$l,backendName:"cpu",kernelFunc:rG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const aG=$t(Il,n=>Math.sin(n)),iG={kernelName:Il,backendName:"cpu",kernelFunc:aG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lG=$t(Nl,n=>Math.sinh(n)),uG={kernelName:Nl,backendName:"cpu",kernelFunc:lG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cG=11920928955078125e-23,d0=Math.log(cG)+2,hG=$t(_l,n=>{const e=n>-d0,t=n<d0,s=Math.exp(n);let r;return t?r=s:e?r=n:r=Math.log(1+s),r}),dG={kernelName:_l,backendName:"cpu",kernelFunc:hG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pG(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{blockShape:o,paddings:a}=s;Ge([r],"spaceToBatchND");const l=me(o),i=[[0,0]];i.push(...a);for(let I=1+o.length;I<r.shape.length;++I)i.push([0,0]);const u=iS.kernelFunc({inputs:{x:r},backend:t,attrs:{paddings:i,constantValue:0}}),c=Hl(u.shape,o,l,!1),h=jl(c.length,o.length,!1),d=ql(u.shape,o,l,!1),g=Rt({inputs:{x:u},backend:t,attrs:{shape:c}}),w=Xn({inputs:{x:g},backend:t,attrs:{perm:h}}),C=Rt({inputs:{x:w},backend:t,attrs:{shape:d}});return t.disposeIntermediateTensorInfo(u),t.disposeIntermediateTensorInfo(g),t.disposeIntermediateTensorInfo(w),C}const fG={kernelName:xh,backendName:"cpu",kernelFunc:pG};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mG(n){const{inputs:e,backend:t}=n,{indices:s,values:r,denseShape:o,defaultValue:a}=e;if(o.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
        ${o.shape}`);if(s.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
        ${s.shape}`);if(r.shape.length!==1)throw new Error(`Values must be a vector, saw:
        ${r.shape}`);if(a.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${a.shape}`);const l=t.data.get(s.dataId).values,i=t.data.get(r.dataId).values,u=t.data.get(o.dataId).values,c=t.data.get(a.dataId).values[0],[h,d,p,f,g]=R2(l,s.shape,s.dtype,i,r.dtype,u,c);return[t.makeTensorInfo(d,s.dtype,h),t.makeTensorInfo([d[0]],r.dtype,p),t.makeTensorInfo([f.length],"bool",new Uint8Array(f.map(y=>Number(y)))),t.makeTensorInfo([g.length],s.dtype,new Int32Array(g))]}const gG={kernelName:Kf,backendName:"cpu",kernelFunc:mG};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yG(n){const{inputs:e,backend:t}=n,{inputIndices:s,inputShape:r,newShape:o}=e;if(s.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape
        ${s.shape}`);if(r.shape.length!==1)throw new Error(`Input shape should be a vector but received shape
        ${r.shape}`);if(o.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${o.shape}`);const a=Array.from(t.data.get(r.dataId).values),l=t.data.get(s.dataId).values,i=Array.from(t.data.get(o.dataId).values),[u,c,h]=F2(l,s.shape,s.dtype,a,i);return[t.makeTensorInfo(c,s.dtype,u),t.makeTensorInfo([h.length],o.dtype,new Int32Array(h))]}const bG={kernelName:Xf,backendName:"cpu",kernelFunc:yG};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xG(n){const{inputs:e,backend:t}=n,{data:s,indices:r,segmentIds:o}=e;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.shape.length!==1)throw new Error(`Indices should be a vector but received shape
          ${r.shape}`);if(o.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
          ${o.shape}`);if(r.shape[0]!==o.shape[0])throw new Error("segmentIds and indices should have same size.");const a=t.data.get(s.dataId).values,l=t.data.get(r.dataId).values,i=t.data.get(o.dataId).values,[u,c]=ry(a,s.shape,s.dtype,l,i,!0);return t.makeTensorInfo(c,s.dtype,u)}const wG={kernelName:Yf,backendName:"cpu",kernelFunc:xG};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vG(n){const{inputs:e,backend:t}=n,{data:s,indices:r,segmentIds:o}=e;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.shape.length!==1)throw new Error(`Indices should be a vector but received shape
         ${r.shape}`);if(o.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
         ${o.shape}`);if(r.shape[0]!==o.shape[0])throw new Error("segmentIds and indices should have same size.");const a=t.data.get(s.dataId).values,l=t.data.get(r.dataId).values,i=t.data.get(o.dataId).values,[u,c]=ry(a,s.shape,s.dtype,l,i);return t.makeTensorInfo(c,s.dtype,u)}const kG={kernelName:Zf,backendName:"cpu",kernelFunc:vG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SG(n){const{inputs:e,backend:t,attrs:s}=n,{sparseIndices:r,sparseValues:o,defaultValue:a}=e,{outputShape:l}=s,{sliceRank:i,numUpdates:u,sliceSize:c,strides:h,outputSize:d}=ta(o,r,l),p=!1,f=t.bufferSync(r);let g;switch(o.dtype){case"bool":{const y=t.bufferSync(o),x=!!t.data.get(a.dataId).values[0];g=Eo(f,y,l,d,c,u,i,h,x,p);break}case"float32":{const y=t.bufferSync(o),x=t.data.get(a.dataId).values[0];g=Eo(f,y,l,d,c,u,i,h,x,p);break}case"int32":{const y=t.bufferSync(o),x=t.data.get(a.dataId).values[0];g=Eo(f,y,l,d,c,u,i,h,x,p);break}case"string":{const y=t.bufferSync(o),x=qr(t.data.get(a.dataId).values[0]);g=Eo(f,y,l,d,c,u,i,h,x,p);break}default:throw new Error(`Unsupported type ${o.dtype}`)}return t.makeTensorInfo(l,g.dtype,g.values)}const CG={kernelName:Jf,backendName:"cpu",kernelFunc:SG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IG(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{numOrSizeSplits:o,axis:a}=s,l=ct(a,r.shape)[0],i=Tg(r,o,l),u=new Array(r.shape.length).fill(0),c=r.shape.slice();return i.map(h=>{const d=[...c];d[l]=h;const p=jo({inputs:{x:r},backend:t,attrs:{begin:u,size:d}});return u[l]+=h,p})}const NG={kernelName:wh,backendName:"cpu",kernelFunc:IG};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $G={kernelName:Qf,backendName:"cpu",kernelFunc:({inputs:n,backend:e})=>{const{x:t}=n,s=e;Ge(t,"square");const r=s.data.get(t.dataId).values,o=new Float32Array(r.length);for(let l=0;l<r.length;++l){const i=r[l];o[l]=i*i}return{dataId:s.write(o,t.shape,t.dtype),shape:t.shape,dtype:t.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const TG=$t(Ll,(n,e)=>{const t=e;return isNaN(n)?NaN:n>0?1:t.alpha}),_G={kernelName:Ll,backendName:"cpu",kernelFunc:TG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EG(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{begin:o,end:a,strides:l,beginMask:i,endMask:u,ellipsisMask:c,newAxisMask:h,shrinkAxisMask:d}=s;Ge(r,"stridedSlice");const{finalShapeSparse:p,finalShape:f,isIdentity:g,sliceDim0:y,isSimpleSlice:x,begin:w,end:v,strides:k}=cg(r.shape,o,a,l,i,u,c,h,d);let C;if(g)C=Rt({inputs:{x:r},backend:t,attrs:{shape:f}});else if(y||x){P(r.shape.length>=1,()=>`Input must have rank at least 1, got: ${r.shape.length}`);const I=ig(w,v,k),N=jo({inputs:{x:r},backend:t,attrs:{begin:w,size:I}});C=Rt({inputs:{x:N},backend:t,attrs:{shape:f}}),t.disposeIntermediateTensorInfo(N)}else{const I=t.bufferSync(r),N=P2(p,I,k,w);C=t.makeTensorInfo(f,N.dtype,N.values)}return C}const AG={kernelName:em,backendName:"cpu",kernelFunc:EG};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DG(n){const{inputs:e,backend:t,attrs:s}=n,{separator:r,nGramWidths:o,leftPad:a,rightPad:l,padWidth:i,preserveShortSequences:u}=s,{data:c,dataSplits:h}=e,d=t.data.get(c.dataId).values,p=t.data.get(h.dataId).values,[f,g]=z2(d,p,r,o,a,l,i,u);return[t.makeTensorInfo([f.length],"string",f),t.makeTensorInfo(h.shape,"int32",g)]}const RG={kernelName:tm,backendName:"cpu",kernelFunc:DG};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FG(n){const{inputs:e,backend:t,attrs:s}=n,{skipEmpty:r}=s,{input:o,delimiter:a}=e;if(o.dtype!=="string")throw new Error("Input must be of datatype string");if(o.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${o.shape}`);if(a.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${a.shape}`);const l=t.data.get(o.dataId).values,i=t.data.get(a.dataId).values[0],[u,c,h]=B2(l,i,r),d=c.length;return[t.makeTensorInfo([d,2],"int32",u),t.makeTensorInfo([d],"string",c),t.makeTensorInfo([2],"int32",new Int32Array(h))]}const OG={kernelName:nm,backendName:"cpu",kernelFunc:FG};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LG(n){const{inputs:e,backend:t,attrs:s}=n,{numBuckets:r}=s,{input:o}=e;if(o.dtype!=="string")throw new Error("Input must be of datatype string");if(r<=0)throw new Error("Number of buckets must be at least 1");const a=t.data.get(o.dataId).values,l=M2(a,r);return t.makeTensorInfo(o.shape,"int32",l)}const PG={kernelName:sm,backendName:"cpu",kernelFunc:LG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zG=$t(Rl,n=>Math.tan(n)),BG={kernelName:Rl,backendName:"cpu",kernelFunc:zG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const MG=$t(Fl,n=>Math.tanh(n)),VG={kernelName:Fl,backendName:"cpu",kernelFunc:MG};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WG(n){const{inputs:e,backend:t}=n,{tensor:s,indices:r,updates:o}=e,{sliceRank:a,numUpdates:l,sliceSize:i,strides:u,outputSize:c}=ta(o,r,s.shape),h=!1,d=t.bufferSync(r),p=t.bufferSync(o),f=t.bufferSync(s),g=Eo(d,p,s.shape,c,i,l,a,u,f,h);return t.makeTensorInfo(s.shape,g.dtype,g.values)}const UG={kernelName:jf,backendName:"cpu",kernelFunc:WG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GG(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{reps:o}=s;Ge(r,"tile");const a=W2(t.bufferSync(r),o);return t.makeTensorInfo(a.shape,a.dtype,a.values)}const HG={kernelName:Ol,backendName:"cpu",kernelFunc:GG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jG(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{k:o,sorted:a}=s;Ge(r,"topk");const l=t.data.get(r.dataId).values,[i,u]=G2(l,r.shape,r.dtype,o,a);return[t.makeTensorInfo(i.shape,i.dtype,i.values),t.makeTensorInfo(u.shape,u.dtype,u.values)]}const qG={kernelName:rm,backendName:"cpu",kernelFunc:jG};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KG(n){const{inputs:e,attrs:t,backend:s}=n,{image:r,transforms:o}=e,{interpolation:a,fillMode:l,fillValue:i,outputShape:u}=t,[c,h,d,p]=r.shape,[f,g]=u??[h,d],y=[c,f,g,p],x=Ze(r.shape),w=x[0],v=x[1],k=x[2],C=Ze(y),I=C[0],N=C[1],E=C[2],R=Sn(r.dtype,me(y));R.fill(i);const O=s.data.get(r.dataId).values,B=s.data.get(o.dataId).values;for(let U=0;U<c;++U){const K=o.shape[0]===1?B:B.subarray(U*8,U*8+8);for(let H=0;H<f;++H)for(let Z=0;Z<g;++Z)for(let ue=0;ue<p;++ue){let M;const X=K[6]*Z+K[7]*H+1;if(X===0)continue;const A=(K[0]*Z+K[1]*H+K[2])/X,ee=(K[3]*Z+K[4]*H+K[5])/X,be=p0(A,d,l),ie=p0(ee,h,l);switch(a){case"nearest":M=e6(O,h,d,w,v,k,U,ie,be,ue,i);break;case"bilinear":M=t6(O,h,d,w,v,k,U,ie,be,ue,i);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${a}`)}const xe=U*I+H*N+Z*E+ue;R[xe]=M}return s.makeTensorInfo(y,r.dtype,R)}return{dataId:s.write(R,y,r.dtype),shape:r.shape,dtype:r.dtype}}const XG={kernelName:om,backendName:"cpu",kernelFunc:KG};function p0(n,e,t){switch(t){case"reflect":return YG(n,e);case"wrap":return ZG(n,e);case"nearest":return QG(n,e);case"constant":default:return JG(n)}}function YG(n,e){let t=n;if(t<0)if(e<=1)t=0;else{const s=2*e;t<s&&(t=s*Math.trunc(-t/s)+t),t=t<-e?t+s:-t-1}else if(t>e-1)if(e<=1)t=0;else{const s=2*e;t-=s*Math.trunc(t/s),t>=e&&(t=s-t-1)}return Ro(0,t,e-1)}function ZG(n,e){let t=n;if(t<0)if(e<=1)t=0;else{const s=e-1;t+=e*(Math.trunc(-t/s)+1)}else if(t>e-1)if(e<=1)t=0;else{const s=e-1;t-=e*Math.trunc(t/s)}return Ro(0,t,e-1)}function JG(n,e){return n}function QG(n,e){return Ro(0,n,e-1)}function Si(n,e,t,s,r,o,a,l,i,u,c){const h=a*s+l*r+i*o+u;return 0<=l&&l<e&&0<=i&&i<t?n[h]:c}function e6(n,e,t,s,r,o,a,l,i,u,c){const h=Math.round(l),d=Math.round(i);return Si(n,e,t,s,r,o,a,h,d,u,c)}function t6(n,e,t,s,r,o,a,l,i,u,c){const h=Math.floor(l),d=Math.floor(i),p=h+1,f=d+1,g=(f-i)*Si(n,e,t,s,r,o,a,h,d,u,c)+(i-d)*Si(n,e,t,s,r,o,a,h,f,u,c),y=(f-i)*Si(n,e,t,s,r,o,a,p,d,u,c)+(i-d)*Si(n,e,t,s,r,o,a,p,f,u,c);return(p-l)*g+(l-h)*y}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function n6(n){const{inputs:e,attrs:t,backend:s}=n,{axis:r}=t,{x:o}=e;Ge(o,"unique");const a=s.data.get(o.dataId).values,{outputValues:l,outputShape:i,indices:u}=H2(a,r,o.shape,o.dtype);return[s.makeTensorInfo(i,o.dtype,l),s.makeTensorInfo([u.length],"int32",u)]}const s6={kernelName:am,backendName:"cpu",kernelFunc:n6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function r6(n){const{inputs:e,backend:t,attrs:s}=n,{value:r}=e;let{axis:o}=s;o<0&&(o+=r.shape.length);const a=r.shape.length,l=r.shape[o],i=new Array(a-1);let u=0;for(let p=0;p<a;p++)p!==o&&(i[u++]=r.shape[p]);const c=new Array(a).fill(0),h=r.shape.slice();h[o]=1;const d=new Array(l);for(let p=0;p<d.length;p++){c[o]=p;const f=jo({inputs:{x:r},backend:t,attrs:{begin:c,size:h}});d[p]=Rt({inputs:{x:f},backend:t,attrs:{shape:i}}),t.disposeIntermediateTensorInfo(f)}return d}const o6={kernelName:Sh,backendName:"cpu",kernelFunc:r6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a6(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,segmentIds:o}=e,{numSegments:a}=s;Ge(r,"unsortedSegmentSum");const l=r.shape.length,i=o.shape.length,u=[],c=[],h=l-i;let d=o;for(let f=0;f<h;++f){const g=yc({inputs:{input:d},backend:t,attrs:{dim:f+1}});d=g,c.push(g)}for(let f=0;f<a;++f){const g=ro(f,"int32"),y=t.makeTensorInfo([],"int32",g),x=a2({inputs:{a:y,b:d},backend:t}),w=no({inputs:{x},backend:t,attrs:{dtype:"float32"}}),v=cd({inputs:{a:w,b:r},backend:t}),k=nu({inputs:{x:v},backend:t,attrs:{axis:0,keepDims:!1}});u.push(k),c.push(y),c.push(x),c.push(w),c.push(v),c.push(k)}const p=aS({inputs:u,backend:t,attrs:{axis:0}});return c.forEach(f=>t.disposeIntermediateTensorInfo(f)),p}const i6={kernelName:Ch,backendName:"cpu",kernelFunc:a6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const l6=[n4,LB,r4,a4,WB,l4,c4,d4,f4,g4,b4,w4,k4,I4,$4,E4,D4,F4,L4,e4,z4,M4,W4,GB,G4,MB,jB,j4,PB,K4,Y4,Z4,Q4,tV,sV,oV,iV,uV,hV,pV,mV,yV,xV,vV,kV,CV,NV,TV,_V,EV,AV,RV,LV,qM,zV,qB,jV,KB,qV,YB,QV,eW,nW,JB,eM,rW,aW,lW,cW,nM,rM,zB,dW,X4,fW,gW,bW,KM,aM,lM,wW,cM,kW,IW,$W,EW,DW,FW,OW,dM,PW,BW,VW,UW,HW,qW,XW,fM,ZW,eU,sU,gM,bM,aU,uU,dU,wM,fU,gU,yU,iS,vU,YM,SM,SU,IU,$U,_U,BB,qp,AU,ZM,JM,QM,RU,OU,PU,BU,VU,WU,GU,AM,jU,ZU,QU,sG,RM,oG,iG,uG,FM,tU,dG,fG,gG,bG,wG,kG,CG,NG,PM,$G,BM,VM,_G,AG,RG,OG,PG,HM,FV,BG,VG,UG,HG,qG,XG,vM,s6,o6,i6,mU];for(const n of l6)K0(n);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $o={},Fu={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function u6(n,e){$o[n]=e}function Ys(n,e){if(!(n in $o)||e!=null){const s=h6(n,e);if(s!==null)$o[n]=s;else return console.log("Could not get context for WebGL version",n),null}const t=$o[n];return t==null||t.isContextLost()?(delete $o[n],Ys(n)):(t.disable(t.DEPTH_TEST),t.disable(t.STENCIL_TEST),t.disable(t.BLEND),t.disable(t.DITHER),t.disable(t.POLYGON_OFFSET_FILL),t.disable(t.SAMPLE_COVERAGE),t.enable(t.SCISSOR_TEST),t.enable(t.CULL_FACE),t.cullFace(t.BACK),$o[n])}function c6(n){if(!de().getBool("IS_SAFARI")&&typeof OffscreenCanvas<"u"&&n===2)return new OffscreenCanvas(300,150);if(typeof document<"u")return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}function h6(n,e){if(n!==1&&n!==2)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const t=e??c6(n);return t.addEventListener("webglcontextlost",s=>{s.preventDefault(),delete $o[n]},!1),de().getBool("SOFTWARE_WEBGL_ENABLED")&&(Fu.failIfMajorPerformanceCaveat=!1),n===1?t.getContext("webgl",Fu)||t.getContext("experimental-webgl",Fu):t.getContext("webgl2",Fu)}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Pi;(function(n){n[n.DENSE=0]="DENSE",n[n.SHARED_BATCH=1]="SHARED_BATCH"})(Pi||(Pi={}));var gs;(function(n){n[n.RENDER=0]="RENDER",n[n.UPLOAD=1]="UPLOAD",n[n.PIXELS=2]="PIXELS",n[n.DOWNLOAD=3]="DOWNLOAD"})(gs||(gs={}));var kn;(function(n){n[n.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",n[n.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",n[n.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",n[n.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",n[n.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"})(kn||(kn={}));function su(n,e){return[e,n]}function d6(n,e){return n*e}function Ou(n){const e=me(n),t=Math.ceil(e/4);return np(t)}function Ja(n,e){return[Math.max(1,Math.ceil(e/2)),Math.max(1,Math.ceil(n/2))]}function p6(n,e){const[t,s]=Ja(n,e);return t*s*4}function uy(n,e){const t=n;let s,r,o,a,l,i,u,c,h,d;return de().getNumber("WEBGL_VERSION")===2?(s=t.R32F,r=t.R16F,o=t.RGBA16F,a=t.RGBA32F,l=t.RED,u=4,c=1,h=t.HALF_FLOAT,d=t.FLOAT,i=t.RGBA8):(s=n.RGBA,r=n.RGBA,o=n.RGBA,a=t.RGBA,l=n.RGBA,u=4,c=4,h=e!=null?e.HALF_FLOAT_OES:null,d=n.FLOAT,i=n.RGBA),{internalFormatFloat:s,internalFormatHalfFloat:r,internalFormatPackedHalfFloat:o,internalFormatPackedFloat:a,textureFormatFloat:l,downloadTextureFormat:i,downloadUnpackNumChannels:u,defaultNumChannels:c,textureTypeHalfFloat:h,textureTypeFloat:d}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Be(n,e){const t=e();return de().getBool("DEBUG")&&f6(n),t}function f6(n){const e=n.getError();if(e!==n.NO_ERROR)throw new Error("WebGL Error: "+b6(n,e))}const m6=596e-10,g6=65504;function y6(n){return!!(de().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||n===0||m6<Math.abs(n)&&Math.abs(n)<g6)}function b6(n,e){switch(e){case n.NO_ERROR:return"NO_ERROR";case n.INVALID_ENUM:return"INVALID_ENUM";case n.INVALID_VALUE:return"INVALID_VALUE";case n.INVALID_OPERATION:return"INVALID_OPERATION";case n.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case n.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case n.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${e}`}}function Lu(n,e){return Or(n,()=>n.getExtension(e),'Extension "'+e+'" not supported on this browser.')}function x6(n,e){const t=Or(n,()=>n.createShader(n.VERTEX_SHADER),"Unable to create vertex WebGLShader.");if(Be(n,()=>n.shaderSource(t,e)),Be(n,()=>n.compileShader(t)),n.getShaderParameter(t,n.COMPILE_STATUS)===!1)throw console.log(n.getShaderInfoLog(t)),new Error("Failed to compile vertex shader.");return t}function w6(n,e){const t=Or(n,()=>n.createShader(n.FRAGMENT_SHADER),"Unable to create fragment WebGLShader.");if(Be(n,()=>n.shaderSource(t,e)),Be(n,()=>n.compileShader(t)),de().get("ENGINE_COMPILE_ONLY"))return t;if(n.getShaderParameter(t,n.COMPILE_STATUS)===!1)throw lS(e,n.getShaderInfoLog(t)),new Error("Failed to compile fragment shader.");return t}const v6=/ERROR: [0-9]+:([0-9]+):/g;function lS(n,e){const t=v6.exec(e);if(t==null){console.log(`Couldn't parse line number in error: ${e}`),console.log(n);return}const s=+t[1],r=n.split(`
`),o=r.length.toString().length+2,a=r.map((h,d)=>va((d+1).toString(),o)+h);let l=0;for(let h=0;h<a.length;h++)l=Math.max(a[h].length,l);const i=a.slice(0,s-1),u=a.slice(s-1,s),c=a.slice(s);console.log(i.join(`
`)),console.log(e.split(`
`)[0]),console.log(`%c ${va(u[0],l)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(c.join(`
`))}function k6(n){return Or(n,()=>n.createProgram(),"Unable to create WebGLProgram.")}function S6(n,e){if(Be(n,()=>n.linkProgram(e)),!de().get("ENGINE_COMPILE_ONLY")&&n.getProgramParameter(e,n.LINK_STATUS)===!1)throw console.log(n.getProgramInfoLog(e)),new Error("Failed to link vertex and fragment shaders.")}function Xd(n,e){if(Be(n,()=>n.validateProgram(e)),n.getProgramParameter(e,n.VALIDATE_STATUS)===!1)throw console.log(n.getProgramInfoLog(e)),new Error("Shader program validation failed.")}function C6(n,e){const t=Or(n,()=>n.createBuffer(),"Unable to create WebGLBuffer");return Be(n,()=>n.bindBuffer(n.ARRAY_BUFFER,t)),Be(n,()=>n.bufferData(n.ARRAY_BUFFER,e,n.STATIC_DRAW)),t}function I6(n,e){const t=Or(n,()=>n.createBuffer(),"Unable to create WebGLBuffer");return Be(n,()=>n.bindBuffer(n.ELEMENT_ARRAY_BUFFER,t)),Be(n,()=>n.bufferData(n.ELEMENT_ARRAY_BUFFER,e,n.STATIC_DRAW)),t}function N6(n){return Or(n,()=>n.createTexture(),"Unable to create WebGLTexture.")}function $6(n,e){const t=de().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(n<=0||e<=0){const s=`[${n}x${e}]`;throw new Error("Requested texture size "+s+" is invalid.")}if(n>t||e>t){const s=`[${n}x${e}]`,r=`[${t}x${t}]`;throw new Error("Requested texture size "+s+" greater than WebGL maximum on this browser / GPU "+r+".")}}function T6(n){return Or(n,()=>n.createFramebuffer(),"Unable to create WebGLFramebuffer.")}function f0(n,e,t,s,r,o,a){const l=n.getAttribLocation(e,t);return l===-1?!1:(Be(n,()=>n.bindBuffer(n.ARRAY_BUFFER,s)),Be(n,()=>n.vertexAttribPointer(l,r,n.FLOAT,!1,o,a)),Be(n,()=>n.enableVertexAttribArray(l)),!0)}function _6(n,e,t){F6(n,t),Be(n,()=>n.activeTexture(n.TEXTURE0+t)),Be(n,()=>n.bindTexture(n.TEXTURE_2D,e))}function E6(n,e,t){return Or(n,()=>n.getUniformLocation(e,t),'uniform "'+t+'" not present in program.')}function A6(n,e,t){return n.getUniformLocation(e,t)}function D6(n,e,t,s){Be(n,()=>_6(n,e,s)),Be(n,()=>n.uniform1i(t,s))}function Yd(n,e,t){Be(n,()=>n.bindFramebuffer(n.FRAMEBUFFER,t)),Be(n,()=>n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,e,0))}function m0(n,e){Be(n,()=>n.bindFramebuffer(n.FRAMEBUFFER,e)),Be(n,()=>n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,null,0))}function Pu(n){const e=n.checkFramebufferStatus(n.FRAMEBUFFER);if(e!==n.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+R6(n,e))}function R6(n,e){switch(e){case n.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case n.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case n.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case n.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${e}`}}function Or(n,e,t){const s=Be(n,()=>e());if(s==null)throw new Error(t);return s}function F6(n,e){const t=n.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,s=e+n.TEXTURE0;if(s<n.TEXTURE0||s>t){const r=`[gl.TEXTURE0, gl.TEXTURE${t}]`;throw new Error(`textureUnit must be in ${r}.`)}}function Ma(n,e=2){return me(n.slice(0,n.length-e))}function Va(n){if(n.length===0)throw Error("Cannot get rows and columns of an empty shape array.");return[n.length>1?n[n.length-2]:1,n[n.length-1]]}function zu(n){let e=[1,1,1];return n.length===0||n.length===1&&n[0]===1||(e=[Ma(n),...Va(n)]),e}function O6(n,e=!1){let t=de().getNumber("WEBGL_MAX_TEXTURE_SIZE"),s=de().getNumber("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE");s===1/0&&de().getBool("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE")&&(s=t/2),e&&(t=t*2,s=s*2,n=n.map((l,i)=>i>=n.length-2?ef(n[i]):n[i]),n.length===1&&(n=[2,n[0]])),n.length!==2&&(n=so(n).newShape);let r=me(n),o=null;n.length<=1&&r<=t?o=[1,r]:n.length===2&&n[0]<=t&&n[1]<=t?o=n:n.length===3&&n[0]*n[1]<=t&&n[2]<=t?o=[n[0]*n[1],n[2]]:n.length===3&&n[0]<=t&&n[1]*n[2]<=t?o=[n[0],n[1]*n[2]]:n.length===4&&n[0]*n[1]*n[2]<=t&&n[3]<=t?o=[n[0]*n[1]*n[2],n[3]]:n.length===4&&n[0]<=t&&n[1]*n[2]*n[3]<=t&&(o=[n[0],n[1]*n[2]*n[3]]);const a=o!=null&&Math.max(...o)>s&&Math.min(...o)<=(e?2:1)&&Math.min(...o)>0;if(o==null||a)if(e){const l=Ma(n);let i=2,u=2;n.length&&([i,u]=Va(n)),r=l*(i/2)*(u/2),o=np(r).map(c=>c*2)}else o=np(r);return o}function Bu(n){return n%2===0}function xc(n,e){if(n=n.slice(-2),e=e.slice(-2),ft(n,e)||!n.length||!e.length||n[0]===0||n[1]===0||e[0]===0||e[1]===0)return!0;if(n.length!==e.length){const t=n[n.length-1],s=e[e.length-1];if(t===s||Bu(t)&&Bu(s)&&(n[0]===1||e[0]===1))return!0}return n[1]===e[1]&&Bu(n[0])&&Bu(e[0])}let Zd,Jd;function L6(n){if(Zd==null){const e=Ys(n);Zd=e.getParameter(e.MAX_TEXTURE_SIZE)}return Zd}function P6(n){if(Jd==null){const e=Ys(n);Jd=e.getParameter(e.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,Jd)}function z6(n){if(n===0)return 0;let e;const t=Ys(n);return Ds(t,"EXT_disjoint_timer_query_webgl2")&&n===2?e=2:Ds(t,"EXT_disjoint_timer_query")?e=1:e=0,e}function Ds(n,e){return n.getExtension(e)!=null}function g0(n){try{if(Ys(n)!=null)return!0}catch(e){return console.log("Error when getting WebGL context: ",e),!1}return!1}function B6(n){if(n===0)return!1;const e=Ys(n);if(n===1){if(!Ds(e,"OES_texture_float"))return!1}else if(!Ds(e,"EXT_color_buffer_float"))return!1;return Xp(e)}function M6(n){if(n===0)return!1;const e=Ys(n);if(n===1){if(!Ds(e,"OES_texture_float")||!Ds(e,"WEBGL_color_buffer_float"))return!1}else{if(Ds(e,"EXT_color_buffer_float"))return Xp(e);const s="EXT_color_buffer_half_float";if(Ds(e,s)){const r=e.getExtension(s);return V6(e,r)}return!1}return Xp(e)}function Xp(n){const e=uy(n),t=n.createTexture();n.bindTexture(n.TEXTURE_2D,t),n.texImage2D(n.TEXTURE_2D,0,e.internalFormatFloat,1,1,0,e.textureFormatFloat,e.textureTypeFloat,null);const o=n.createFramebuffer();n.bindFramebuffer(n.FRAMEBUFFER,o),n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,t,0);const a=n.checkFramebufferStatus(n.FRAMEBUFFER)===n.FRAMEBUFFER_COMPLETE;return n.bindTexture(n.TEXTURE_2D,null),n.bindFramebuffer(n.FRAMEBUFFER,null),n.deleteTexture(t),n.deleteFramebuffer(o),a}function V6(n,e){const t=uy(n,e),s=n.createTexture();n.bindTexture(n.TEXTURE_2D,s),n.texImage2D(n.TEXTURE_2D,0,t.internalFormatHalfFloat,1,1,0,t.textureFormatFloat,t.textureTypeHalfFloat,null);const a=n.createFramebuffer();n.bindFramebuffer(n.FRAMEBUFFER,a),n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,s,0);const l=n.checkFramebufferStatus(n.FRAMEBUFFER)===n.FRAMEBUFFER_COMPLETE;return n.bindTexture(n.TEXTURE_2D,null),n.bindFramebuffer(n.FRAMEBUFFER,null),n.deleteTexture(s),n.deleteFramebuffer(a),l}function W6(n){return n!==2?!1:Ys(n).fenceSync!=null}function ru(n,e){Array.isArray(n)||(n=[n]),n.forEach(t=>{t!=null&&P(t.dtype!=="complex64",()=>`${e} does not support complex64 tensors in the WebGL backend.`)})}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const He=de();He.registerFlag("HAS_WEBGL",()=>He.getNumber("WEBGL_VERSION")>0);He.registerFlag("WEBGL_VERSION",()=>g0(2)?2:g0(1)?1:0);He.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",()=>!1);He.registerFlag("WEBGL_BUFFER_SUPPORTED",()=>He.get("WEBGL_VERSION")===2);He.registerFlag("WEBGL_CPU_FORWARD",()=>!0);He.registerFlag("WEBGL_FORCE_F16_TEXTURES",()=>!1);He.registerFlag("WEBGL_PACK",()=>He.getBool("HAS_WEBGL"));He.registerFlag("WEBGL_PACK_NORMALIZATION",()=>He.getBool("WEBGL_PACK"));He.registerFlag("WEBGL_PACK_CLIP",()=>He.getBool("WEBGL_PACK"));He.registerFlag("WEBGL_PACK_DEPTHWISECONV",()=>He.getBool("WEBGL_PACK"));He.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",()=>He.getBool("WEBGL_PACK"));He.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",()=>He.getBool("WEBGL_PACK"));He.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",()=>He.getBool("WEBGL_PACK"));He.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",()=>He.getBool("WEBGL_PACK"));He.registerFlag("WEBGL_PACK_REDUCE",()=>He.getBool("WEBGL_PACK"));He.registerFlag("WEBGL_LAZILY_UNPACK",()=>He.getBool("WEBGL_PACK"));He.registerFlag("WEBGL_CONV_IM2COL",()=>He.getBool("WEBGL_PACK"));He.registerFlag("WEBGL_PACK_CONV2DTRANSPOSE",()=>He.getBool("WEBGL_PACK"));He.registerFlag("WEBGL_MAX_TEXTURE_SIZE",()=>L6(He.getNumber("WEBGL_VERSION")));He.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",()=>P6(He.getNumber("WEBGL_VERSION")));He.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",()=>{const n=He.getNumber("WEBGL_VERSION");return n===0?0:z6(n)});He.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",()=>He.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!hx());He.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",()=>B6(He.getNumber("WEBGL_VERSION")));He.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",()=>He.getBool("WEBGL_FORCE_F16_TEXTURES")?!1:He.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"));He.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",()=>M6(He.getNumber("WEBGL_VERSION")));He.registerFlag("WEBGL_FENCE_API_ENABLED",()=>W6(He.getNumber("WEBGL_VERSION")));He.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",()=>He.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0);He.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",()=>-1,n=>{if(typeof n!="number")throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be a number but got ${n}.`);if(n<0&&n!==-1)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${n}.`)});He.registerFlag("WEBGL_FLUSH_THRESHOLD",()=>hx()?1:-1,n=>{if(typeof n!="number")throw new Error(`WEBGL_FLUSH_THRESHOLD must be a number but got ${n}.`);if(n<0&&n!==-1)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${n}.`)});He.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",()=>128);He.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",()=>!1);He.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",()=>1e5);He.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",()=>128);He.registerFlag("WEBGL_EXP_CONV",()=>!1);He.registerFlag("SOFTWARE_WEBGL_ENABLED",()=>He.getBool("IS_TEST"));He.registerFlag("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE",()=>1/0);He.registerFlag("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE",()=>!1);He.registerFlag("WEBGL2_ISNAN_CUSTOM",()=>!1);He.registerFlag("ENGINE_COMPILE_ONLY",()=>!1);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Wn(){let n,e,t,s,r,o,a,l,i,u;return de().getNumber("WEBGL_VERSION")===2?(n="#version 300 es",e="in",t="out",s="in",r="texture",o="outputColor",a="out vec4 outputColor;",l=de().getBool("WEBGL2_ISNAN_CUSTOM")?`
      bool isnan_custom(float val) {
        uint floatToUint = floatBitsToUint(val);
        return (floatToUint & 0x7fffffffu) > 0x7f800000u;
      }

      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan_custom(val.x),
          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));
      }

      #define isnan(value) isnan_custom(value)
    `:"",i="",u=`
      #define round(value) newRound(value)
      int newRound(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 newRound(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `):(n="",e="attribute",t="varying",s="varying",r="texture2D",o="gl_FragColor",a="",l=`
      #define isnan(value) isnan_custom(value)
      bool isnan_custom(float val) {
        return (val > 0. || val < 1. || val == 0.) ? false : true;
      }
      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));
      }
    `,i=`
      uniform float INFINITY;

      bool isinf(float val) {
        return abs(val) == INFINITY;
      }
      bvec4 isinf(vec4 val) {
        return equal(abs(val), vec4(INFINITY));
      }
    `,u=`
      int round(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 round(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `),{version:n,attribute:e,varyingVs:t,varyingFs:s,texture2D:r,output:o,defineOutput:a,defineSpecialNaN:l,defineSpecialInf:i,defineRound:u}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ra(n,e,t="index"){const s=Ze(e);return s.map((r,o)=>{const a=`int ${n[o]} = ${t} / ${r}`,l=o===s.length-1?`int ${n[o+1]} = ${t} - ${n[o]} * ${r}`:`index -= ${n[o]} * ${r}`;return`${a}; ${l};`}).join("")}function hd(n,e,t="index"){const s=Ze(e);return s.map((r,o)=>{const a=`int ${n[o]} = ${t} / outShapeStrides[${o}]`,l=o===s.length-1?`int ${n[o+1]} = ${t} - ${n[o]} * outShapeStrides[${o}]`:`index -= ${n[o]} * outShapeStrides[${o}]`;return`${a}; ${l};`}).join("")}function U6(n,e){const t=n.length,s=n.map(o=>`${e}[${o}]`),r=new Array(t-1);r[t-2]=s[t-1];for(let o=t-3;o>=0;--o)r[o]=`(${r[o+1]} * ${s[o+1]})`;return r}function G6(n,e,t="index"){const s=n.map((o,a)=>a),r=U6(s,e);return r.map((o,a)=>{const l=`int ${n[a]} = ${t} / ${r[a]}`,i=a===r.length-1?`int ${n[a+1]} = ${t} - ${n[a]} * ${r[a]}`:`index -= ${n[a]} * ${r[a]}`;return`${l}; ${i};`}).join("")}function cy(n){const e=Ze(n).map(t=>t.toString());return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * ${e[0]} + coords.y * ${e[1]} + coords.z;
  }
`}function hy(){return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;
  }
`}const uS=`
  const float FLOAT_MAX = 1.70141184e38;
  const float FLOAT_MIN = 1.17549435e-38;

  lowp vec4 encode_float(highp float v) {
    if (isnan(v)) {
      return vec4(255, 255, 255, 255);
    }

    highp float av = abs(v);

    if(av < FLOAT_MIN) {
      return vec4(0.0, 0.0, 0.0, 0.0);
    } else if(v > FLOAT_MAX) {
      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;
    } else if(v < -FLOAT_MAX) {
      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;
    }

    highp vec4 c = vec4(0,0,0,0);

    highp float e = floor(log2(av));
    highp float m = exp2(fract(log2(av))) - 1.0;

    c[2] = floor(128.0 * m);
    m -= c[2] / 128.0;
    c[1] = floor(32768.0 * m);
    m -= c[1] / 32768.0;
    c[0] = floor(8388608.0 * m);

    highp float ebias = e + 127.0;
    c[3] = floor(ebias / 2.0);
    ebias -= c[3] * 2.0;
    c[2] += floor(ebias) * 128.0;

    c[3] += 128.0 * step(0.0, -v);

    return c / 255.0;
  }
`;/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const{getBroadcastDims:cS}=tO;function H6(n,e,t){const s=[];if(n.forEach(p=>{const f=me(p.shapeInfo.logicalShape);if(p.shapeInfo.isUniform?s.push(`uniform float ${p.name}${f>1?`[${f}]`:""};`):(s.push(`uniform sampler2D ${p.name};`),s.push(`uniform int offset${p.name};`)),t.enableShapeUniforms){const{uniformShape:g}=dy(t.packedInputs,p.shapeInfo.logicalShape,p.shapeInfo.texShape);switch(g.length){case 1:s.push(`uniform int ${p.name}Shape;`);break;case 2:s.push(`uniform ivec2 ${p.name}Shape;`);break;case 3:s.push(`uniform ivec3 ${p.name}Shape;`);break;case 4:s.push(`uniform ivec4 ${p.name}Shape;`);break}s.push(`uniform ivec2 ${p.name}TexShape;`)}}),t.enableShapeUniforms){switch(e.logicalShape.length){case 1:s.push("uniform int outShape;");break;case 2:s.push("uniform ivec2 outShape;"),s.push("uniform int outShapeStrides;");break;case 3:s.push("uniform ivec3 outShape;"),s.push("uniform ivec2 outShapeStrides;");break;case 4:s.push("uniform ivec4 outShape;"),s.push("uniform ivec3 outShapeStrides;");break}s.push("uniform ivec2 outTexShape;")}t.customUniforms&&t.customUniforms.forEach(p=>{s.push(`uniform ${p.type} ${p.name}${p.arrayIndex?`[${p.arrayIndex}]`:""};`)});const r=s.join(`
`),o=n.map(p=>j6(p,e,t.packedInputs,t.enableShapeUniforms)).join(`
`),a=e.texShape,l=Wn(),i=X6(l);let u,c,h=J6(l);return e.isPacked?(u=q6(e.logicalShape,a,t.enableShapeUniforms),c=Z6(l)):(u=K6(e.logicalShape,a,t.enableShapeUniforms),c=Y6(l)),t.packedInputs&&(h+=n5),[h,i,c,r,u,o,t.userCode].join(`
`)}function Qa(n,e=!1){const t=n.shapeInfo.logicalShape;switch(t.length){case 0:return f5(n,e);case 1:return g5(n,e);case 2:return b5(n,e);case 3:return w5(n,e);case 4:return k5(n,e);case 5:return S5(n);case 6:return C5(n);default:throw new Error(`${t.length}-D input sampling is not yet supported`)}}function hS(n,e){switch(n.shapeInfo.logicalShape.length){case 0:return p5(n);case 1:return m5(n,e);case 2:return y5(n,e);case 3:return x5(n,e);default:return v5(n,e)}}function j6(n,e,t=!1,s){let r="";t?r+=hS(n,s):r+=Qa(n,s);const o=n.shapeInfo.logicalShape,a=e.logicalShape;return o.length<=a.length&&(t?r+=I5(n,e):r+=N5(n,e)),r}function q6(n,e,t){switch(n.length){case 0:return dS();case 1:return s5(n,e,t);case 2:return h5(n,e,t);case 3:return o5(n,e,t);default:return i5(n,e,t)}}function K6(n,e,t){switch(n.length){case 0:return dS();case 1:return r5(n,e,t);case 2:return d5(n,e,t);case 3:return a5(n,e,t);case 4:return l5(n,e,t);case 5:return u5(n,e);case 6:return c5(n,e);default:throw new Error(`${n.length}-D output sampling is not yet supported`)}}function X6(n){return`
    float sampleTexture(sampler2D textureSampler, vec2 uv) {
      return ${n.texture2D}(textureSampler, uv).r;
    }
  `}function Y6(n){return`
    void setOutput(float val) {
      ${n.output} = vec4(val, 0, 0, 0);
    }
  `}function Z6(n){return`
    void setOutput(vec4 val) {
      ${n.output} = val;
    }
  `}function J6(n){return`${n.version}
    precision highp float;
    precision highp int;
    precision highp sampler2D;
    ${n.varyingFs} vec2 resultUV;
    ${n.defineOutput}
    const vec2 halfCR = vec2(0.5, 0.5);

    struct ivec5
    {
      int x;
      int y;
      int z;
      int w;
      int u;
    };

    struct ivec6
    {
      int x;
      int y;
      int z;
      int w;
      int u;
      int v;
    };

    uniform float NAN;
    ${n.defineSpecialNaN}
    ${n.defineSpecialInf}
    ${n.defineRound}

    int imod(int x, int y) {
      return x - y * (x / y);
    }

    int idiv(int a, int b, float sign) {
      int res = a / b;
      int mod = imod(a, b);
      if (sign < 0. && mod != 0) {
        res -= 1;
      }
      return res;
    }

    //Based on the work of Dave Hoskins
    //https://www.shadertoy.com/view/4djSRW
    #define HASHSCALE1 443.8975
    float random(float seed){
      vec2 p = resultUV * seed;
      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);
      p3 += dot(p3, p3.yzx + 19.19);
      return fract((p3.x + p3.y) * p3.z);
    }

    ${Q6}
    ${e5}
    ${t5}
  `}const Q6=`
vec2 uvFromFlat(int texNumR, int texNumC, int index) {
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
vec2 packedUVfrom1D(int texNumR, int texNumC, int index) {
  int texelIndex = index / 2;
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,e5=`
vec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,
  int texNumC, int row, int col) {
  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,t5=`
vec2 packedUVfrom3D(int texNumR, int texNumC,
    int texelsInBatch, int texelsInLogicalRow, int b,
    int row, int col) {
  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,n5=`
  float getChannel(vec4 frag, vec2 innerDims) {
    vec2 modCoord = mod(innerDims, 2.);
    return modCoord.x == 0. ?
      (modCoord.y == 0. ? frag.r : frag.g) :
      (modCoord.y == 0. ? frag.b : frag.a);
  }
  float getChannel(vec4 frag, int dim) {
    float modCoord = mod(float(dim), 2.);
    return modCoord == 0. ? frag.r : frag.g;
  }
`;function dS(){return`
    int getOutputCoords() {
      return 0;
    }
  `}function s5(n,e,t){const s=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];return s[0]===1?t?`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ${s[1]}.0);
      }
    `:s[1]===1?t?`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ${s[0]}.0);
      }
    `:t?`
    int getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));
      return 2 * (resTexRC.x * ${s[1]} + resTexRC.y);
    }
  `}function r5(n,e,t){return e[0]===1?t?`
      int getOutputCoords() {
        return int(resultUV.x * float(outTexShape[1]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.x * ${e[1]}.0);
      }
    `:e[1]===1?t?`
      int getOutputCoords() {
        return int(resultUV.y * float(outTexShape[0]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.y * ${e[0]}.0);
      }
    `:t?`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      return resTexRC.x * outTexShape[1] + resTexRC.y;
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${e[0]}, ${e[1]}));
      return resTexRC.x * ${e[1]} + resTexRC.y;
    }
  `}function o5(n,e,t){if(t)return`
    ivec3 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec3(b, r, c);
    }
  `;const s=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],r=Math.ceil(n[2]/2),o=r*Math.ceil(n[1]/2);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));
      int index = resTexRC.x * ${s[1]} + resTexRC.y;

      int b = index / ${o};
      index -= b * ${o};

      int r = 2 * (index / ${r});
      int c = imod(index, ${r}) * 2;

      return ivec3(b, r, c);
    }
  `}function a5(n,e,t){if(t)return`
  ivec3 getOutputCoords() {
    ivec2 resTexRC = ivec2(resultUV.yx *
                           vec2(outTexShape[0], outTexShape[1]));
    int index = resTexRC.x * outTexShape[1] + resTexRC.y;
    ${hd(["r","c","d"],n)}
    return ivec3(r, c, d);
  }
`;const s=ra(["r","c","d"],n);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;
      ${s}
      return ivec3(r, c, d);
    }
  `}function i5(n,e,t){if(t)return`
    ivec4 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatchN = texelsInBatch * outShape[1];

      int b2 = index / texelsInBatchN;
      index -= b2 * texelsInBatchN;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec4(b2, b, r, c);
    }
  `;const s=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],r=Math.ceil(n[n.length-1]/2),o=r*Math.ceil(n[n.length-2]/2);let a=o,l="",i="b, r, c";for(let u=2;u<n.length-1;u++)a*=n[n.length-u-1],l=`
      int b${u} = index / ${a};
      index -= b${u} * ${a};
    `+l,i=`b${u}, `+i;return`
    ivec${n.length} getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));
      int index = resTexRC.x * ${s[1]} + resTexRC.y;

      ${l}

      int b = index / ${o};
      index -= b * ${o};

      int r = 2 * (index / ${r});
      int c = imod(index, ${r}) * 2;

      return ivec${n.length}(${i});
    }
  `}function l5(n,e,t){if(t)return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      ${hd(["r","c","d","d2"],n)}
      return ivec4(r, c, d, d2);
    }
  `;const s=ra(["r","c","d","d2"],n);return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;
      ${s}
      return ivec4(r, c, d, d2);
    }
  `}function u5(n,e){const t=ra(["r","c","d","d2","d3"],n);return`
    ivec5 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${e[0]},
                             ${e[1]}));

      int index = resTexRC.x * ${e[1]} + resTexRC.y;

      ${t}

      ivec5 outShape = ivec5(r, c, d, d2, d3);
      return outShape;
    }
  `}function c5(n,e){const t=ra(["r","c","d","d2","d3","d4"],n);return`
    ivec6 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;

      ${t}

      ivec6 result = ivec6(r, c, d, d2, d3, d4);
      return result;
    }
  `}function h5(n,e,t){const s=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];if(ft(n,e))return t?`
      ivec2 getOutputCoords() {
        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return 2 * ivec2(resultUV.yx * vec2(${s[0]}, ${s[1]}));
      }
    `;const r=Math.ceil(n[1]/2);return t?`
    ivec2 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));

      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;
      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));

      int index = resTexRC.x * ${s[1]} + resTexRC.y;
      int r = 2 * (index / ${r});
      int c = imod(index, ${r}) * 2;

      return ivec2(r, c);
    }
  `}function d5(n,e,t){return ft(n,e)?t?`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(${e[0]}, ${e[1]}));
      }
    `:n[1]===1?t?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(index, 0);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${e[0]}, ${e[1]}));
        int index = resTexRC.x * ${e[1]} + resTexRC.y;
        return ivec2(index, 0);
      }
    `:n[0]===1?t?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(0, index);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${e[0]}, ${e[1]}));
        int index = resTexRC.x * ${e[1]} + resTexRC.y;
        return ivec2(0, index);
      }
    `:t?`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      int r = index / outShape[1];
      int c = index - r * outShape[1];
      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;
      int r = index / ${n[1]};
      int c = index - r * ${n[1]};
      return ivec2(r, c);
    }
  `}function oa(n){return`offset${n}`}function p5(n){const e=n.name,t="get"+e.charAt(0).toUpperCase()+e.slice(1),s=Wn();return`
    vec4 ${t}() {
      return ${s.texture2D}(${e}, halfCR);
    }
  `}function f5(n,e){const t=n.name,s="get"+t.charAt(0).toUpperCase()+t.slice(1);if(n.shapeInfo.isUniform)return`float ${s}() {return ${t};}`;const[r,o]=n.shapeInfo.texShape;if(r===1&&o===1)return`
      float ${s}() {
        return sampleTexture(${t}, halfCR);
      }
    `;const a=oa(t);if(e)return`
    float ${s}() {
      vec2 uv = uvFromFlat(${t}TexShape[0], ${t}TexShape[1], ${a});
      return sampleTexture(${t}, uv);
    }
  `;const[l,i]=n.shapeInfo.texShape;return`
    float ${s}() {
      vec2 uv = uvFromFlat(${l}, ${i}, ${a});
      return sampleTexture(${t}, uv);
    }
  `}function m5(n,e){const t=n.name,s="get"+t.charAt(0).toUpperCase()+t.slice(1),r=n.shapeInfo.texShape,o=Wn();if(e)return`
    vec4 ${s}(int index) {
      ivec2 packedTexShape = ivec2(ceil(float(${t}TexShape[0]) / 2.0), ceil(float(${t}TexShape[1]) / 2.0));
      vec2 uv = packedUVfrom1D(
        packedTexShape[0], packedTexShape[1], index);
      return ${o.texture2D}(${t}, uv);
    }
  `;const a=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)];return`
    vec4 ${s}(int index) {
      vec2 uv = packedUVfrom1D(
        ${a[0]}, ${a[1]}, index);
      return ${o.texture2D}(${t}, uv);
    }
  `}function g5(n,e){const t=n.name,s="get"+t.charAt(0).toUpperCase()+t.slice(1);if(n.shapeInfo.isUniform)return`
      float ${s}(int index) {
        ${ei(n)}
      }
    `;const r=n.shapeInfo.texShape,o=r[0],a=r[1];if(a===1&&o===1)return`
      float ${s}(int index) {
        return sampleTexture(${t}, halfCR);
      }
    `;const l=oa(t);return a===1?e?`
      float ${s}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${l}) + 0.5) / float(${t}TexShape[0]));
        return sampleTexture(${t}, uv);
      }
    `:`
      float ${s}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${l}) + 0.5) / ${o}.0);
        return sampleTexture(${t}, uv);
      }
    `:o===1?e?`
      float ${s}(int index) {
        vec2 uv = vec2((float(index + ${l}) + 0.5) / float(${t}TexShape[1]), 0.5);
        return sampleTexture(${t}, uv);
      }
    `:`
      float ${s}(int index) {
        vec2 uv = vec2((float(index + ${l}) + 0.5) / ${a}.0, 0.5);
        return sampleTexture(${t}, uv);
      }
    `:e?`
    float ${s}(int index) {
      vec2 uv = uvFromFlat(${t}TexShape[0], ${t}TexShape[1], index + ${l});
      return sampleTexture(${t}, uv);
    }
  `:`
    float ${s}(int index) {
      vec2 uv = uvFromFlat(${o}, ${a}, index + ${l});
      return sampleTexture(${t}, uv);
    }
  `}function y5(n,e){const t=n.shapeInfo.logicalShape,s=n.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),o=n.shapeInfo.texShape,a=o[0],l=o[1],i=Wn();if(o!=null&&ft(t,o))return e?`
      vec4 ${r}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);

        return ${i.texture2D}(${s}, uv);
      }
    `:`
      vec4 ${r}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${l}.0, ${a}.0);

        return ${i.texture2D}(${s}, uv);
      }
    `;if(e)return`
    vec4 ${r}(int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${s}TexShape[0]) / 2.0), ceil(float(${s}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${s}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);
      return ${i.texture2D}(${s}, uv);
    }
  `;const u=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)],c=Math.ceil(t[1]/2);return`
    vec4 ${r}(int row, int col) {
      vec2 uv = packedUVfrom2D(${c}, ${u[0]}, ${u[1]}, row, col);
      return ${i.texture2D}(${s}, uv);
    }
  `}function b5(n,e){const t=n.shapeInfo.logicalShape,s=n.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),o=n.shapeInfo.texShape;if(o!=null&&ft(t,o)){if(e)return`
      float ${r}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `;const d=o[0],p=o[1];return`
    float ${r}(int row, int col) {
      vec2 uv = (vec2(col, row) + halfCR) / vec2(${p}.0, ${d}.0);
      return sampleTexture(${s}, uv);
    }
  `}const{newShape:a,keptDims:l}=so(t),i=a;if(i.length<t.length){const d=ti(n,i),p=["row","col"];return`
      ${Qa(d,e)}
      float ${r}(int row, int col) {
        return ${r}(${ni(p,l)});
      }
    `}if(n.shapeInfo.isUniform)return`
      float ${r}(int row, int col) {
        int index = round(dot(vec2(row, col), vec2(${t[1]}, 1)));
        ${ei(n)}
      }
    `;const u=o[0],c=o[1],h=oa(s);return c===1?e?`
      float ${r}(int row, int col) {
        float index = dot(vec3(row, col, ${h}), vec3(${s}Shape[1], 1, 1));
        vec2 uv = vec2(0.5, (index + 0.5) / float(${s}TexShape[0]));
        return sampleTexture(${s}, uv);
      }
    `:`
    float ${r}(int row, int col) {
      float index = dot(vec3(row, col, ${h}), vec3(${t[1]}, 1, 1));
      vec2 uv = vec2(0.5, (index + 0.5) / ${u}.0);
      return sampleTexture(${s}, uv);
    }
  `:u===1?e?`
      float ${r}(int row, int col) {
        float index = dot(vec3(row, col, ${h}), vec3(${s}Shape[1], 1, 1));
        vec2 uv = vec2((index + 0.5) / float(${s}TexShape[1]), 0.5);
        return sampleTexture(${s}, uv);
      }
    `:`
    float ${r}(int row, int col) {
      float index = dot(vec3(row, col, ${h}), vec3(${t[1]}, 1, 1));
      vec2 uv = vec2((index + 0.5) / ${c}.0, 0.5);
      return sampleTexture(${s}, uv);
    }
  `:e?`
      float ${r}(int row, int col) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${s}Shape[1] + col + ${h};
        vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index);
        return sampleTexture(${s}, uv);
      }
    `:`
  float ${r}(int row, int col) {
    // Explicitly use integer operations as dot() only works on floats.
    int index = row * ${t[1]} + col + ${h};
    vec2 uv = uvFromFlat(${u}, ${c}, index);
    return sampleTexture(${s}, uv);
  }
`}function x5(n,e){const t=n.shapeInfo.logicalShape,s=n.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),o=n.shapeInfo.texShape,a=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)];if(t[0]===1){const d=t.slice(1),p=[1,2],f=ti(n,d),g=["b","row","col"];return`
        ${hS(f,e)}
        vec4 ${r}(int b, int row, int col) {
          return ${r}(${ni(g,p)});
        }
      `}const l=Wn();if(e)return`
    vec4 ${r}(int b, int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${s}TexShape[0]) / 2.0), ceil(float(${s}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${s}Shape[2]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${s}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom3D(
        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);
      return ${l.texture2D}(${s}, uv);
    }
  `;const i=a[0],u=a[1],c=Math.ceil(t[2]/2),h=c*Math.ceil(t[1]/2);return`
    vec4 ${r}(int b, int row, int col) {
      vec2 uv = packedUVfrom3D(
        ${i}, ${u}, ${h}, ${c}, b, row, col);
      return ${l.texture2D}(${s}, uv);
    }
  `}function w5(n,e){const t=n.shapeInfo.logicalShape,s=n.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),o=t[1]*t[2],a=t[2],{newShape:l,keptDims:i}=so(t),u=l;if(u.length<t.length){const g=ti(n,u),y=["row","col","depth"];return`
        ${Qa(g,e)}
        float ${r}(int row, int col, int depth) {
          return ${r}(${ni(y,i)});
        }
      `}if(n.shapeInfo.isUniform)return`
      float ${r}(int row, int col, int depth) {
        int index = round(dot(vec3(row, col, depth),
                          vec3(${o}, ${a}, 1)));
        ${ei(n)}
      }
    `;const c=n.shapeInfo.texShape,h=c[0],d=c[1],p=n.shapeInfo.flatOffset;if(d===o&&p==null)return e?`
      float ${r}(int row, int col, int depth) {
        int stride1 = ${s}Shape[2];
        float texR = float(row);
        float texC = dot(vec2(col, depth), vec2(stride1, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `:`
        float ${r}(int row, int col, int depth) {
          float texR = float(row);
          float texC = dot(vec2(col, depth), vec2(${a}, 1));
          vec2 uv = (vec2(texC, texR) + halfCR) /
                     vec2(${d}.0, ${h}.0);
          return sampleTexture(${s}, uv);
        }
      `;if(d===a&&p==null)return e?`
      float ${r}(int row, int col, int depth) {
        float texR = dot(vec2(row, col), vec2(${s}Shape[1], 1));
        float texC = float(depth);
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `:`
    float ${r}(int row, int col, int depth) {
      float texR = dot(vec2(row, col), vec2(${t[1]}, 1));
      float texC = float(depth);
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${d}.0, ${h}.0);
      return sampleTexture(${s}, uv);
    }
  `;const f=oa(s);return e?`
    float ${r}(int row, int col, int depth) {
      // Explicitly use integer operations as dot() only works on floats.
      int stride0 = ${s}Shape[1] * ${s}Shape[2];
      int stride1 = ${s}Shape[2];
      int index = row * stride0 + col * stride1 + depth + ${f};
      vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index);
      return sampleTexture(${s}, uv);
    }
    `:`
      float ${r}(int row, int col, int depth) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${o} + col * ${a} + depth + ${f};
        vec2 uv = uvFromFlat(${h}, ${d}, index);
        return sampleTexture(${s}, uv);
      }
  `}function v5(n,e){const t=n.name,s="get"+t.charAt(0).toUpperCase()+t.slice(1),r=Wn();if(e)return`
    vec4 ${s}(int b2, int b, int row, int col) {
      int valuesPerRow = int(ceil(float(${t}Shape[3]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${t}Shape[2]) / 2.0));
      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);
      texelsInBatch *= ${t}Shape[1];
      index = b2 * texelsInBatch + index;
      ivec2 packedTexShape = ivec2(ceil(float(${t}TexShape[0]) / 2.0), ceil(float(${t}TexShape[1]) / 2.0));
      int texR = index / packedTexShape[1];
      int texC = index - texR * packedTexShape[1];
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${r.texture2D}(${t}, uv);
    }
  `;const o=n.shapeInfo.logicalShape,a=o.length,l=n.shapeInfo.texShape,i=[Math.ceil(l[0]/2),Math.ceil(l[1]/2)],u=i[0],c=i[1],h=Math.ceil(o[a-1]/2);let d=h*Math.ceil(o[a-2]/2),p="int b, int row, int col",f=`b * ${d} + (row / 2) * ${h} + (col / 2)`;for(let g=2;g<a-1;g++)p=`int b${g}, `+p,d*=o[a-g-1],f=`b${g} * ${d} + `+f;return`
    vec4 ${s}(${p}) {
      int index = ${f};
      int texR = index / ${c};
      int texC = index - texR * ${c};
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${c}, ${u});
      return ${r.texture2D}(${t}, uv);
    }
  `}function k5(n,e){const t=n.shapeInfo.logicalShape,s=n.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),o=t[3],a=t[2]*o,l=t[1]*a,{newShape:i,keptDims:u}=so(t);if(i.length<t.length){const w=ti(n,i),v=["row","col","depth","depth2"];return`
      ${Qa(w,e)}
      float ${r}(int row, int col, int depth, int depth2) {
        return ${r}(${ni(v,u)});
      }
    `}if(n.shapeInfo.isUniform)return`
      float ${r}(int row, int col, int depth, int depth2) {
        int index = round(dot(vec4(row, col, depth, depth2),
                          vec4(${l}, ${a}, ${o}, 1)));
        ${ei(n)}
      }
    `;const c=n.shapeInfo.flatOffset,h=n.shapeInfo.texShape,d=h[0],p=h[1],f=`int stride2 = ${s}Shape[3];`,g=`int stride1 = ${s}Shape[2] * stride2;`,y=`int stride0 = ${s}Shape[1] * stride1;`;if(p===l&&c==null)return e?`
      float ${r}(int row, int col, int depth, int depth2) {
        ${f}
        ${g}
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(stride1, stride2, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `:`
      float ${r}(int row, int col, int depth, int depth2) {
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(${a}, ${o}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${p}.0, ${d}.0);
        return sampleTexture(${s}, uv);
      }
    `;if(p===o&&c==null)return e?`
      float ${r}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${s}Shape[1] * ${s}Shape[2], ${s}Shape[2], 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `:`
      float ${r}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${t[1]*t[2]}, ${t[2]}, 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${p}.0, ${d}.0);
        return sampleTexture(${s}, uv);
      }
    `;const x=oa(s);return e?`
    float ${r}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      ${f}
      ${g}
      ${y}
      int index = row * stride0 + col * stride1 +
          depth * stride2 + depth2;
      vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index + ${x});
      return sampleTexture(${s}, uv);
    }
  `:`
    float ${r}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${l} + col * ${a} +
          depth * ${o} + depth2;
      vec2 uv = uvFromFlat(${d}, ${p}, index + ${x});
      return sampleTexture(${s}, uv);
    }
  `}function S5(n){const e=n.shapeInfo.logicalShape,t=n.name,s="get"+t.charAt(0).toUpperCase()+t.slice(1),r=e[4],o=e[3]*r,a=e[2]*o,l=e[1]*a,{newShape:i,keptDims:u}=so(e);if(i.length<e.length){const g=ti(n,i),y=["row","col","depth","depth2","depth3"];return`
      ${Qa(g)}
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        return ${s}(${ni(y,u)});
      }
    `}if(n.shapeInfo.isUniform)return`
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        float index = dot(
          vec4(row, col, depth, depth2),
          vec4(${l}, ${a}, ${o}, ${r})) +
          depth3;
        ${ei(n)}
      }
    `;const c=n.shapeInfo.flatOffset,h=n.shapeInfo.texShape,d=h[0],p=h[1];if(p===l&&c==null)return`
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
                         vec4(${a}, ${o}, ${r}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${p}.0, ${d}.0);
        return sampleTexture(${t}, uv);
      }
    `;if(p===r&&c==null)return`
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        float texR = dot(
          vec4(row, col, depth, depth2),
          vec4(${e[1]*e[2]*e[3]},
               ${e[2]*e[3]}, ${e[3]}, 1));
        int texC = depth3;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${p}.0, ${d}.0);
        return sampleTexture(${t}, uv);
      }
    `;const f=oa(t);return`
    float ${s}(int row, int col, int depth, int depth2, int depth3) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${l} + col * ${a} + depth * ${o} +
          depth2 * ${r} + depth3 + ${f};
      vec2 uv = uvFromFlat(${d}, ${p}, index);
      return sampleTexture(${t}, uv);
    }
  `}function C5(n){const e=n.shapeInfo.logicalShape,t=n.name,s="get"+t.charAt(0).toUpperCase()+t.slice(1),{newShape:r,keptDims:o}=so(e);if(r.length<e.length){const y=ti(n,r),x=["row","col","depth","depth2","depth3","depth4"];return`
      ${Qa(y)}
      float ${s}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        return ${s}(${ni(x,o)});
      }
    `}const a=e[5],l=e[4]*a,i=e[3]*l,u=e[2]*i,c=e[1]*u;if(n.shapeInfo.isUniform)return`
      float ${s}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
        int index = round(dot(
          vec4(row, col, depth, depth2),
          vec4(${c}, ${u}, ${i}, ${l})) +
          dot(
            vec2(depth3, depth4),
            vec2(${a}, 1)));
        ${ei(n)}
      }
    `;const h=n.shapeInfo.flatOffset,d=n.shapeInfo.texShape,p=d[0],f=d[1];if(f===c&&h==null)return`
      float ${s}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
          vec4(${u}, ${i}, ${l}, ${a})) +
               float(depth4);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${f}.0, ${p}.0);
        return sampleTexture(${t}, uv);
      }
    `;if(f===a&&h==null)return`
      float ${s}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        float texR = dot(vec4(row, col, depth, depth2),
          vec4(${e[1]*e[2]*e[3]*e[4]},
               ${e[2]*e[3]*e[4]},
               ${e[3]*e[4]},
               ${e[4]})) + float(depth3);
        int texC = depth4;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${f}.0, ${p}.0);
        return sampleTexture(${t}, uv);
      }
    `;const g=oa(t);return`
    float ${s}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${c} + col * ${u} + depth * ${i} +
          depth2 * ${l} + depth3 * ${a} + depth4 + ${g};
      vec2 uv = uvFromFlat(${p}, ${f}, index);
      return sampleTexture(${t}, uv);
    }
  `}function ei(n){const e=n.name,t=me(n.shapeInfo.logicalShape);return t<2?`return ${e};`:`
    for (int i = 0; i < ${t}; i++) {
      if (i == index) {
        return ${e}[i];
      }
    }
  `}function I5(n,e){const t=n.name,s=t.charAt(0).toUpperCase()+t.slice(1),r="get"+s+"AtOutCoords",o=n.shapeInfo.logicalShape.length,a=e.logicalShape.length,l=cS(n.shapeInfo.logicalShape,e.logicalShape),i=Tt(a),u=a-o;let c;const h=["x","y","z","w","u","v"];o===0?c="":a<2&&l.length>=1?c="coords = 0;":c=l.map(w=>`coords.${h[w+u]} = 0;`).join(`
`);let d="";a<2&&o>0?d="coords":d=n.shapeInfo.logicalShape.map((w,v)=>`coords.${h[v+u]}`).join(", ");let p="return outputValue;";const g=me(n.shapeInfo.logicalShape)===1,x=me(e.logicalShape)===1;if(o===1&&!g&&!x)p=`
      return vec4(outputValue.xy, outputValue.xy);
    `;else if(g&&!x)a===1?p=`
        return vec4(outputValue.x, outputValue.x, 0., 0.);
      `:p=`
        return vec4(outputValue.x);
      `;else if(l.length){const w=o-2,v=o-1;l.indexOf(w)>-1&&l.indexOf(v)>-1?p="return vec4(outputValue.x);":l.indexOf(w)>-1?p="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":l.indexOf(v)>-1&&(p="return vec4(outputValue.xx, outputValue.zz);")}return`
    vec4 ${r}() {
      ${i} coords = getOutputCoords();
      ${c}
      vec4 outputValue = get${s}(${d});
      ${p}
    }
  `}function N5(n,e){const t=n.name,s=t.charAt(0).toUpperCase()+t.slice(1),r="get"+s+"AtOutCoords",o=e.texShape,a=n.shapeInfo.texShape,l=n.shapeInfo.logicalShape.length,i=e.logicalShape.length;if(!n.shapeInfo.isUniform&&l===i&&n.shapeInfo.flatOffset==null&&ft(a,o))return`
      float ${r}() {
        return sampleTexture(${t}, resultUV);
      }
    `;const u=Tt(i),c=cS(n.shapeInfo.logicalShape,e.logicalShape),h=i-l;let d;const p=["x","y","z","w","u","v"];l===0?d="":i<2&&c.length>=1?d="coords = 0;":d=c.map(g=>`coords.${p[g+h]} = 0;`).join(`
`);let f="";return i<2&&l>0?f="coords":f=n.shapeInfo.logicalShape.map((g,y)=>`coords.${p[y+h]}`).join(", "),`
    float ${r}() {
      ${u} coords = getOutputCoords();
      ${d}
      return get${s}(${f});
    }
  `}function Tt(n){if(n<=1)return"int";if(n===2)return"ivec2";if(n===3)return"ivec3";if(n===4)return"ivec4";if(n===5)return"ivec5";if(n===6)return"ivec6";throw Error(`GPU for rank ${n} is not yet supported`)}function dy(n,e,t){const{newShape:s,keptDims:r}=so(e),o=e.length,a=n&&o===3&&e[0]===1,l=a?e.slice(1):s,i=!n&&o>1&&!ft(e,t)&&s.length<o||a;return{useSqueezeShape:i,uniformShape:i?l:e,keptDims:r}}function ti(n,e){const t=JSON.parse(JSON.stringify(n));return t.shapeInfo.logicalShape=e,t}function ni(n,e){return e.map(t=>n[t]).join(", ")}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $5(n,e,t,s){const r=t.map((c,h)=>{const d={logicalShape:c.shape,texShape:c.isUniform?null:c.texData.texShape,isUniform:c.isUniform,isPacked:c.isUniform?!1:c.texData.isPacked,flatOffset:null};return c.texData!=null&&c.texData.slice!=null&&c.texData.slice.flatOffset>0&&(d.flatOffset=c.texData.slice.flatOffset),{name:e.variableNames[h],shapeInfo:d}}),o=r.map(c=>c.shapeInfo),a={logicalShape:s.shape,texShape:s.texData.texShape,isUniform:!1,isPacked:s.texData.isPacked,flatOffset:null},l=H6(r,a,e),i=w6(n.gl,l),u=n.createProgram(i);return de().get("ENGINE_COMPILE_ONLY")?{program:e,fragmentShader:i,source:l,webGLProgram:u,inShapeInfos:o,outShapeInfo:a,variablesLocations:null,customUniformLocations:null,infLoc:null,nanLoc:null,outShapeLocation:null,outShapeStridesLocation:null,outTexShapeLocation:null}:(n.buildVao(u),Object.assign({program:e,fragmentShader:i,source:l,webGLProgram:u,inShapeInfos:o,outShapeInfo:a},pS(n,e,u)))}function pS(n,e,t){const s=[],r=[];let o,a,l,i=null,u=null;u=n.getUniformLocation(t,"NAN",!1),de().getNumber("WEBGL_VERSION")===1&&(i=n.getUniformLocation(t,"INFINITY",!1));const c=!1;for(const h of e.variableNames){const d={name:h,uniform:n.getUniformLocation(t,h,c),offset:n.getUniformLocation(t,`offset${h}`,c)};e.enableShapeUniforms&&(d.shape=n.getUniformLocation(t,`${h}Shape`,c),d.texShape=n.getUniformLocation(t,`${h}TexShape`,c)),s.push(d)}if(e.enableShapeUniforms&&(o=n.getUniformLocation(t,"outShape",c),l=n.getUniformLocation(t,"outShapeStrides",c),a=n.getUniformLocation(t,"outTexShape",c)),e.customUniforms)for(const h of e.customUniforms)r.push(n.getUniformLocation(t,h.name,c));return{variablesLocations:s,customUniformLocations:r,infLoc:i,nanLoc:u,outShapeLocation:o,outShapeStridesLocation:l,outTexShapeLocation:a}}function y0(n,e){if(n.length!==e.length)throw Error(`Binary was compiled with ${n.length} inputs, but was executed with ${e.length} inputs`);n.forEach((t,s)=>{const r=t.logicalShape,o=e[s],a=o.shape;if(!ft(r,a))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${r} and ${a} must match`);if(t.isUniform&&o.isUniform)return;const l=t.texShape,i=o.isUniform?null:o.texData.texShape;if(!ft(l,i))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${l} and ${i} must match`)})}function T5(n,e,t,s,r){e.program.enableShapeUniforms||(y0(e.inShapeInfos,t),y0([e.outShapeInfo],[s]));const o=s.texData.texture,a=s.texData.texShape;s.texData.isPacked?n.setOutputPackedMatrixTexture(o.texture,a[0],a[1]):n.setOutputMatrixTexture(o.texture,a[0],a[1]),n.setProgram(e.webGLProgram),n.bindVertexArray(e.webGLProgram.vao),de().getNumber("WEBGL_VERSION")===1&&e.infLoc!==null&&n.gl.uniform1f(e.infLoc,1/0),e.nanLoc!==null&&n.gl.uniform1f(e.nanLoc,NaN);for(let i=0;i<t.length;++i){const u=t[i],{uniform:c,offset:h,shape:d,texShape:p}=e.variablesLocations[i];if(d){const{uniformShape:f}=dy(e.program.packedInputs,u.shape,u.texData.texShape);switch(f.length){case 1:n.gl.uniform1iv(d,new Int32Array(f));break;case 2:n.gl.uniform2iv(d,new Int32Array(f));break;case 3:n.gl.uniform3iv(d,new Int32Array(f));break;case 4:n.gl.uniform4iv(d,new Int32Array(f));break}}if(p&&n.gl.uniform2i(p,u.texData.texShape[0],u.texData.texShape[1]),c!=null){if(u.isUniform){if(me(u.shape)<2)n.gl.uniform1f(c,u.uniformValues[0]);else{let f=u.uniformValues;f instanceof Float32Array||(f=new Float32Array(f)),n.gl.uniform1fv(c,f)}continue}u.texData.slice!=null&&h!=null&&n.gl.uniform1i(h,u.texData.slice.flatOffset),n.setInputMatrixTexture(u.texData.texture.texture,c,i)}}const l=e.outShapeLocation;if(l)switch(s.shape.length){case 1:n.gl.uniform1iv(l,new Int32Array(s.shape));break;case 2:n.gl.uniform2iv(l,new Int32Array(s.shape));break;case 3:n.gl.uniform3iv(l,new Int32Array(s.shape));break;case 4:n.gl.uniform4iv(l,new Int32Array(s.shape));break}if(e.outShapeStridesLocation){const i=Ze(s.shape);switch(s.shape.length){case 2:n.gl.uniform1iv(e.outShapeStridesLocation,new Int32Array(i));break;case 3:n.gl.uniform2iv(e.outShapeStridesLocation,new Int32Array(i));break;case 4:n.gl.uniform3iv(e.outShapeStridesLocation,new Int32Array(i));break}}if(e.outTexShapeLocation&&n.gl.uniform2i(e.outTexShapeLocation,s.texData.texShape[0],s.texData.texShape[1]),e.program.customUniforms&&r)for(let i=0;i<e.program.customUniforms.length;++i){const u=e.program.customUniforms[i],c=e.customUniformLocations[i],h=r[i];if(u.type==="float")n.gl.uniform1fv(c,h);else if(u.type==="vec2")n.gl.uniform2fv(c,h);else if(u.type==="vec3")n.gl.uniform3fv(c,h);else if(u.type==="vec4")n.gl.uniform4fv(c,h);else if(u.type==="int")n.gl.uniform1iv(c,h);else if(u.type==="ivec2")n.gl.uniform2iv(c,h);else if(u.type==="ivec3")n.gl.uniform3iv(c,h);else if(u.type==="ivec4")n.gl.uniform4iv(c,h);else throw Error(`uniform type ${u.type} is not supported yet.`)}n.executeProgram()}function _5(n,e,t){let s="";e.concat(t).forEach(a=>{const l=a.texData!=null&&a.texData.slice!=null&&a.texData.slice.flatOffset>0;if(n.enableShapeUniforms&&!a.isUniform){const i=a.texData.texShape,{useSqueezeShape:u,uniformShape:c,keptDims:h}=dy(n.packedInputs,a.shape,i);let d="",p="",f="";if(c.length===1&&n.packedInputs){const C=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)];d=`${C[0]>1}_${C[1]>1}`}else if(c.length===2&&!n.packedInputs)p=`${c[0]>1}_${c[1]>1}`;else if(c.length>2&&!n.packedInputs){const C=Ze(c);f=`${C[0]===i[1]}_${C[C.length-1]===i[1]}`}const g=a.shape.length,y=c.length===2&&ft(a.shape,i),x=me(a.shape)===1,w=Ra(a.shape,t.shape),v=!n.packedInputs&&g===t.shape.length&&ft(i,t.texData.texShape),k=n.packedInputs||c.length>2?"":`${i[0]>1}_${i[1]>1}`;s+=`${g}_${v}_${u?h:""}_${c.length}_${x}_${w}_${y}_${d}_${p}_${f}_${k}_${l}`}else{const i=a.isUniform?"uniform":a.texData.texShape;s+=`${a.shape}_${i}_${l}`}});const r=n.userCode;let o=n.constructor.name;return o+="_"+s+"_"+r+`${de().getNumber("WEBGL_VERSION")}`,o}function Fn(n){return de().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&n<=4}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class E5{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=Pi.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=Wn();this.outputShape=e,this.enableShapeUniforms=Fn(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?hd(["r","c","d"],e):ra(["r","c","d"],e)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getA(rc.x, rc.y, rc.z);
        }

        ${t.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class A5{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=Pi.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=Wn();this.outputShape=e,this.enableShapeUniforms=Fn(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?hd(["r","c","d"],e):ra(["r","c","d"],e)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));
        }

        ${t.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class D5{constructor(e){this.variableNames=["A"],this.outTexUsage=gs.DOWNLOAD;const t=Wn();this.outputShape=e,this.userCode=`
      ${uS}

      void main() {
        float x = getAAtOutCoords();
        ${t.output} = encode_float(x);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class R5{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=gs.DOWNLOAD;const t=Wn();this.outputShape=e,this.userCode=`
      ${uS}

      void main() {
        ivec3 coords = getOutputCoords();
        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));
        ${t.output} = encode_float(x);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const F5={R:0,G:1,B:2,A:3};class b0{constructor(e,t=!1,s="RGBA"){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];const r=Wn();this.outputShape=e,this.enableShapeUniforms=Fn(this.outputShape.length);let o="result";t&&(o="floor(result * 255. + 0.5)");let a="";for(let l=0;l<s.length;l++){const i=s[l];a+=`
          if(offset == ${l}) {
            result = values[${F5[i]}];
          }`}this.userCode=`
      ${this.enableShapeUniforms?hy():cy(e)}

      void main() {
        ivec3 coords = getOutputCoords();
        int flatIndex = getFlatIndex(coords);
        float result = 0.;
        int offset = imod(flatIndex, ${s.length});

        flatIndex = idiv(flatIndex, ${s.length}, 1.);

        int r = flatIndex / texShape[1];
        if (r < texShape[0]) {
          int c = imod(flatIndex, texShape[1]);
          vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
          vec4 values = ${r.texture2D}(A, uv);
          ${a}
        }
        ${r.output} = vec4(${o}, 0., 0., 0.);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class O5{constructor(e,t=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];const s=Wn();this.outputShape=e,this.enableShapeUniforms=Fn(this.outputShape.length);let r="",o="result";t&&(o="floor(result * 255. + 0.5)");for(let a=0;a<=1;a++)for(let l=0;l<=1;l++){const i=a*2+l;r+=`
          localCoords = coords;
          if(localCoords[2] + ${l} < ${this.enableShapeUniforms?"outShape[2]":`${e[2]}`}) {
          localCoords[2] += ${l};
          if (localCoords[1] + ${a} < ${this.enableShapeUniforms?"outShape[1]":`${e[1]}`}) {
            localCoords[1] += ${a};

            flatIndex = getFlatIndex(localCoords);
            offset = imod(flatIndex, 4);

            flatIndex = idiv(flatIndex, 4, 1.);

            int r = flatIndex / texShape[1];
            int c = imod(flatIndex, texShape[1]);
            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
            values = ${s.texture2D}(A, uv);

            if (offset == 0) {
              result[${i}] = values[0];
            } else if (offset == 1) {
              result[${i}] = values[1];
            } else if (offset == 2) {
              result[${i}] = values[2];
            } else {
              result[${i}] = values[3];
            }
          }
        }
        `}this.userCode=`
        ${this.enableShapeUniforms?hy():cy(e)}

        void main() {
          ivec3 coords = getOutputCoords();

          vec4 result = vec4(0.);
          int flatIndex, r, c, offset;
          ivec3 localCoords;
          vec2 uv;
          vec4 values;

          ${r}

          ${s.output} = ${o};
        }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function L5(n){const e=Wn(),t=`${e.version}
    precision highp float;
    ${e.attribute} vec3 clipSpacePos;
    ${e.attribute} vec2 uv;
    ${e.varyingVs} vec2 resultUV;

    void main() {
      gl_Position = vec4(clipSpacePos, 1);
      resultUV = uv;
    }`;return x6(n,t)}function P5(n){const e=new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]);return C6(n,e)}function z5(n){const e=new Uint16Array([0,1,2,2,1,3]);return I6(n,e)}function ou(n,e,t,s,r,o){$6(e,t);const a=N6(n),l=n.TEXTURE_2D;return Be(n,()=>n.bindTexture(l,a)),Be(n,()=>n.texParameteri(l,n.TEXTURE_WRAP_S,n.CLAMP_TO_EDGE)),Be(n,()=>n.texParameteri(l,n.TEXTURE_WRAP_T,n.CLAMP_TO_EDGE)),Be(n,()=>n.texParameteri(l,n.TEXTURE_MIN_FILTER,n.NEAREST)),Be(n,()=>n.texParameteri(l,n.TEXTURE_MAG_FILTER,n.NEAREST)),de().getNumber("WEBGL_VERSION")===1?Be(n,()=>n.texImage2D(l,0,s,e,t,0,r,o,null)):Be(n,()=>n.texStorage2D(l,1,s,e,t)),Be(n,()=>n.bindTexture(n.TEXTURE_2D,null)),{texture:a,texShape:[t,e]}}function fS(n){return n.internalFormatFloat}function B5(n,e,t,s){const[r,o]=su(e,t);return ou(n,r,o,fS(s),s.textureFormatFloat,n.FLOAT)}function mS(n){return n.internalFormatHalfFloat}function M5(n,e,t,s){const[r,o]=su(e,t);return ou(n,r,o,mS(s),s.textureFormatFloat,s.textureTypeHalfFloat)}function gS(n){return n.downloadTextureFormat}function V5(n,e,t,s){const[r,o]=su(e,t);return ou(n,r,o,gS(s),n.RGBA,n.UNSIGNED_BYTE)}function yS(n){return n.internalFormatPackedFloat}function W5(n,e,t,s){const[r,o]=Ja(e,t);return ou(n,r,o,yS(s),n.RGBA,n.FLOAT)}function bS(n){return n.internalFormatPackedHalfFloat}function U5(n,e,t,s){const[r,o]=Ja(e,t);return ou(n,r,o,bS(s),n.RGBA,s.textureTypeHalfFloat)}function G5(n,e,t){return Be(n,()=>n.bindBuffer(n.ARRAY_BUFFER,t)),f0(n,e,"clipSpacePos",t,3,20,0)&&f0(n,e,"uv",t,2,20,12)}function H5(n,e,t,s,r,o){Be(n,()=>n.bindTexture(n.TEXTURE_2D,e));let a,l,i;r instanceof Uint8Array?(a=new Uint8Array(t*s*4),l=n.UNSIGNED_BYTE,i=n.RGBA):(a=new Float32Array(t*s*4),l=n.FLOAT,i=o.internalFormatPackedFloat),a.set(r),de().getNumber("WEBGL_VERSION")===2?Be(n,()=>n.texSubImage2D(n.TEXTURE_2D,0,0,0,t,s,n.RGBA,l,a)):Be(n,()=>n.texImage2D(n.TEXTURE_2D,0,i,t,s,0,n.RGBA,l,a)),Be(n,()=>n.bindTexture(n.TEXTURE_2D,null))}function j5(n,e,t){Be(n,()=>n.bindTexture(n.TEXTURE_2D,e)),t.data instanceof Uint8Array?de().getNumber("WEBGL_VERSION")===2?Be(n,()=>n.texSubImage2D(n.TEXTURE_2D,0,0,0,t.width,t.height,n.RGBA,n.UNSIGNED_BYTE,t.data)):Be(n,()=>n.texImage2D(n.TEXTURE_2D,0,n.RGBA,t.width,t.height,0,n.RGBA,n.UNSIGNED_BYTE,t.data)):de().getNumber("WEBGL_VERSION")===2?Be(n,()=>n.texSubImage2D(n.TEXTURE_2D,0,0,0,n.RGBA,n.UNSIGNED_BYTE,t)):Be(n,()=>n.texImage2D(n.TEXTURE_2D,0,n.RGBA,n.RGBA,n.UNSIGNED_BYTE,t)),Be(n,()=>n.bindTexture(n.TEXTURE_2D,null))}function q5(n,e,t,s){const r=n.createBuffer();Be(n,()=>n.bindBuffer(n.PIXEL_PACK_BUFFER,r));const l=4*4*e*t;return Be(n,()=>n.bufferData(n.PIXEL_PACK_BUFFER,l,n.STREAM_READ)),Be(n,()=>n.readPixels(0,0,t,e,n.RGBA,n.FLOAT,0)),Be(n,()=>n.bindBuffer(n.PIXEL_PACK_BUFFER,null)),r}function K5(n,e,t){const s=n,r=new Float32Array(t);return s.bindBuffer(s.PIXEL_PACK_BUFFER,e),s.getBufferSubData(s.PIXEL_PACK_BUFFER,0,r),s.bindBuffer(s.PIXEL_PACK_BUFFER,null),r}function X5(n,e,t,s){const[r,o]=su(e,t),a=4,l=new Uint8Array(d6(e*t,a));return Be(n,()=>n.readPixels(0,0,r,o,s.downloadTextureFormat,n.UNSIGNED_BYTE,l)),new Float32Array(l.buffer)}function Y5(n,e,t,s,r,o,a,l){const i=n,u=new Float32Array(p6(o,a));return i.bindBuffer(i.PIXEL_PACK_BUFFER,e),i.getBufferSubData(i.PIXEL_PACK_BUFFER,0,u),i.bindBuffer(i.PIXEL_PACK_BUFFER,null),u}function Z5(n,e,t){const s=new Float32Array(e*t*4);return Be(n,()=>n.readPixels(0,0,t,e,n.RGBA,n.FLOAT,s)),s}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Qd{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.itemsToPoll=[];const t=de().getNumber("WEBGL_VERSION");if(e!=null?(this.gl=e,u6(t,e)):this.gl=Ys(t),e=this.gl,de().getNumber("WEBGL_VERSION")===2){const o=e;this.createVertexArray=()=>Be(o,()=>o.createVertexArray()),this.bindVertexArray=a=>Be(o,()=>o.bindVertexArray(a)),this.deleteVertexArray=a=>Be(o,()=>o.deleteVertexArray(a)),this.getVertexArray=()=>Be(o,()=>o.getParameter(o.VERTEX_ARRAY_BINDING))}else if(e!=null){const o=e.getExtension("OES_vertex_array_object");if(o==null)throw new Error("All WebGL1 implementations are expected to offer OES_vertex_array_object.");this.createVertexArray=()=>Be(e,()=>o.createVertexArrayOES()),this.bindVertexArray=a=>Be(e,()=>o.bindVertexArrayOES(a)),this.deleteVertexArray=a=>Be(e,()=>o.deleteVertexArrayOES(a)),this.getVertexArray=()=>Be(e,()=>e.getParameter(o.VERTEX_ARRAY_BINDING_OES))}let s="WEBGL_color_buffer_float";const r="EXT_color_buffer_half_float";if(this.parallelCompilationExtension=this.gl.getExtension("KHR_parallel_shader_compile"),de().getNumber("WEBGL_VERSION")===1){const o="OES_texture_float",a="OES_texture_half_float";if(this.textureFloatExtension=Lu(this.gl,o),Ds(this.gl,a))this.textureHalfFloatExtension=Lu(this.gl,a);else if(de().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(s),Ds(this.gl,r))this.colorBufferHalfFloatExtension=Lu(this.gl,r);else if(de().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(s="EXT_color_buffer_float",Ds(this.gl,s))this.colorBufferFloatExtension=this.gl.getExtension(s);else if(Ds(this.gl,r))this.colorBufferHalfFloatExtension=this.gl.getExtension(r);else throw new Error("GL context does not support color renderable floats");this.vertexBuffer=P5(this.gl),this.indexBuffer=z5(this.gl),this.framebuffer=T6(this.gl),this.textureConfig=uy(this.gl,this.textureHalfFloatExtension)}get debug(){return de().getBool("DEBUG")}dispose(){if(this.disposed)return;this.program!=null&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),this.outputTexture!=null&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const e=this.gl;Be(e,()=>e.finish()),Be(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,null)),Be(e,()=>e.deleteFramebuffer(this.framebuffer)),Be(e,()=>e.bindBuffer(e.ARRAY_BUFFER,null)),Be(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null)),Be(e,()=>e.deleteBuffer(this.indexBuffer)),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),B5(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),M5(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),V5(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),j5(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,s,r){this.throwIfDisposed(),H5(this.gl,e,t,s,r,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),U5(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),W5(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(m0(this.gl,this.framebuffer),this.outputTexture=null),Be(this.gl,()=>this.gl.deleteTexture(e))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,s){return this.downloadMatrixDriver(e,()=>X5(this.gl,t,s,this.textureConfig))}downloadPackedMatrixFromBuffer(e,t,s,r,o,a){return Y5(this.gl,e,t,s,r,o,a,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return K5(this.gl,e,t)}createBufferFromTexture(e,t,s){this.bindTextureToFrameBuffer(e);const r=q5(this.gl,t,s,this.textureConfig);return this.unbindTextureToFrameBuffer(),r}createAndWaitForFence(){const e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,s;if(de().getBool("WEBGL_FENCE_API_ENABLED")){const r=e,o=r.fenceSync(r.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),s=()=>{const a=r.clientWaitSync(o,0,0);return a===r.ALREADY_SIGNALED||a===r.CONDITION_SATISFIED},t=o}else de().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),s=()=>this.isQueryAvailable(t,de().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):s=()=>!0;return{query:t,isFencePassed:s}}downloadMatrixFromPackedTexture(e,t,s){return this.downloadMatrixDriver(e,()=>Z5(this.gl,t,s))}createProgram(e){this.throwIfDisposed();const t=this.gl;this.vertexShader==null&&(this.vertexShader=L5(t));const s=k6(t);Be(t,()=>t.attachShader(s,this.vertexShader)),Be(t,()=>t.attachShader(s,e)),S6(t,s);const r=Object.assign(s,{vao:this.createVertexArray()});return this.debug&&Xd(t,r),r}buildVao(e){this.setProgram(e),this.bindVertexArray(e.vao);const t=this.gl;Be(t,()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,this.indexBuffer)),G5(t,e,this.vertexBuffer)}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),e!=null&&(Be(this.gl,()=>this.gl.deleteProgram(e)),this.deleteVertexArray(e.vao))}setProgram(e){this.throwIfDisposed(),this.program=e,this.program!=null&&this.debug&&Xd(this.gl,this.program),Be(this.gl,()=>this.gl.useProgram(e))}getUniformLocation(e,t,s=!0){return this.throwIfDisposed(),s?E6(this.gl,e,t):A6(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),Be(this.gl,()=>this.gl.getAttribLocation(e,t))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,s){this.throwIfDisposed(),this.throwIfNoProgram(),D6(this.gl,e,t,s)}setOutputMatrixTexture(e,t,s){this.setOutputMatrixTextureDriver(e,s,t)}setOutputPackedMatrixTexture(e,t,s){this.throwIfDisposed();const[r,o]=Ja(t,s);this.setOutputMatrixTextureDriver(e,r,o)}setOutputMatrixWriteRegion(e,t,s,r){this.setOutputMatrixWriteRegionDriver(s,e,r,t)}setOutputPackedMatrixWriteRegion(e,t,s,r){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){this.program!=null&&Xd(this.gl,this.program),Pu(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const e=this.gl;if(this.debug){const t=this.getVertexArray();console.assert(t===this.program.vao,"VAO changed between setProgram and executeProgram!"),this.debugValidate()}Be(e,()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),Be(this.gl,()=>this.gl.finish())}getQueryTimerExtension(){return this.disjointQueryTimerExtension==null&&(this.disjointQueryTimerExtension=Lu(this.gl,de().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(de().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){const s=this.gl,r=this.getQueryTimerExtensionWebGL2(),o=s.createQuery();return s.beginQuery(r.TIME_ELAPSED_EXT,o),o}const e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(de().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){const t=this.gl,s=this.getQueryTimerExtensionWebGL2();t.endQuery(s.TIME_ELAPSED_EXT);return}const e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await Jy(()=>this.disposed||this.isQueryAvailable(e,de().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))),this.getQueryTime(e,de().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(t===0)return null;if(t===2){const s=this.gl;return s.getQueryParameter(e,s.QUERY_RESULT)/1e6}else{const s=this.getQueryTimerExtensionWebGL1();return s.getQueryObjectEXT(e,s.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(t===0)return!0;if(t===2){const s=this.gl,r=this.getQueryTimerExtensionWebGL2(),o=s.getQueryParameter(e,s.QUERY_RESULT_AVAILABLE);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(r.GPU_DISJOINT_EXT)),o&&!this.disjoint}else{const s=this.getQueryTimerExtensionWebGL1(),r=s.getQueryObjectEXT(e,s.QUERY_RESULT_AVAILABLE_EXT);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(s.GPU_DISJOINT_EXT)),r&&!this.disjoint}}pollFence(e){return new Promise(t=>{this.addItemToPoll(()=>e.isFencePassed(),()=>t())})}pollItems(){const e=J5(this.itemsToPoll.map(t=>t.isDoneFn));for(let t=0;t<=e;++t){const{resolveFn:s}=this.itemsToPoll[t];s()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){if(this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),this.itemsToPoll.length>1)return;let s;"setTimeoutCustom"in de().platform&&(s=de().platform.setTimeoutCustom.bind(de().platform)),Jy(()=>(this.pollItems(),this.itemsToPoll.length===0),()=>0,null,s)}bindTextureToFrameBuffer(e){this.throwIfDisposed(),Yd(this.gl,e,this.framebuffer),this.debug&&Pu(this.gl)}unbindTextureToFrameBuffer(){this.outputTexture!=null?(Yd(this.gl,this.outputTexture,this.framebuffer),this.debug&&Pu(this.gl)):m0(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);const s=t();return this.unbindTextureToFrameBuffer(),s}setOutputMatrixTextureDriver(e,t,s){this.throwIfDisposed();const r=this.gl;Yd(r,e,this.framebuffer),this.debug&&Pu(r),this.outputTexture=e,Be(r,()=>r.viewport(0,0,t,s)),Be(r,()=>r.scissor(0,0,t,s))}setOutputMatrixWriteRegionDriver(e,t,s,r){this.throwIfDisposed(),Be(this.gl,()=>this.gl.scissor(e,t,s,r))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(this.program==null)throw new Error("No GPU program is currently set.")}}function J5(n){let e=0;for(;e<n.length&&n[e]();++e);return e-1}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const{addImpl:Q5,bincountImpl:xS,bincountReduceImpl:eH,bitwiseAndImpl:tH,castImpl:nH,ceilImpl:sH,concatImpl:rH,equalImpl:oH,expImpl:aH,expm1Impl:iH,floorImpl:lH,gatherNdImpl:uH,gatherV2Impl:cH,greaterImpl:hH,greaterEqualImpl:dH,lessImpl:pH,lessEqualImpl:fH,linSpaceImpl:mH,logImpl:gH,maxImpl:yH,maximumImpl:bH,minimumImpl:xH,multiplyImpl:wH,negImpl:vH,notEqualImpl:kH,prodImpl:SH,raggedGatherImpl:CH,raggedRangeImpl:IH,raggedTensorToTensorImpl:NH,rangeImpl:$H,rsqrtImpl:TH,scatterImpl:_H,sigmoidImpl:EH,simpleAbsImpl:wS,sliceImpl:AH,sparseFillEmptyRowsImpl:DH,sparseReshapeImpl:RH,sparseSegmentReductionImpl:vS,sqrtImpl:FH,staticRegexReplaceImpl:OH,stridedSliceImpl:LH,stringNGramsImpl:PH,stringSplitImpl:zH,stringToHashBucketFastImpl:BH,subImpl:MH,tileImpl:VH,topKImpl:WH,transposeImpl:py,uniqueImpl:UH}=jM;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kS(n,e){return["x","y","z","w","u","v"].slice(0,e).map(t=>`${n}.${t}`)}function Bn(n,e){return e===1?[n]:kS(n,e)}function GH(n,e){if(n===1)return"rc";let t="";for(let s=0;s<n;s++)t+=e[s],s<n-1&&(t+=",");return t}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class HH{constructor(e){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.enableShapeUniforms=Fn(this.outputShape.length),this.rank===0)this.userCode=`
        void main() {
          setOutput(vec4(getA(), 0., 0., 0.));
        }
      `;else{const t=Bn("rc",this.rank),s=Tt(this.rank),r=this.getOutOfBoundsCondition(t),o=this.getSetup(t),a=this.getOutput(t);this.userCode=`
        void main() {
          ${s} rc = getOutputCoords();

          if(${r}) {
            setOutput(vec4(0));
          } else {
            ${o}

            setOutput(vec4(${a}));
          }
        }
      `}}getSourceCoordsArr(e){const t=[];for(let s=0;s<=1;s++)for(let r=0;r<=1;r++){let o=`${s===0?"r":"rp1"}, ${r===0?"c":"cp1"}`;for(let a=2;a<this.rank;a++)o=`${e[e.length-1-a]},`+o;t.push(o)}return t}getOutOfBoundsCondition(e){if(this.rank===1)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let t="";for(let s=this.rank-2;s<this.rank;s++)t+=`${e[s]} >= ${this.enableShapeUniforms?`outShape[${s}]`:this.outputShape[s]}`,s<this.rank-1&&(t+="||");return t}getSetup(e){if(this.rank===1)return"";const t=e.slice(-2),s=this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1],r=this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2];return`
      int r = ${t[0]};
      int c = ${t[1]};
      int rp1 = r + 1;
      int cp1 = c + 1;

      bool cEdge = cp1 >= ${s};
      bool rEdge = rp1 >= ${r};
    `}getOutput(e){const t=this.getSourceCoordsArr(e);return this.rank===1?`getA(rc), (rc + 1 >= ${this.enableShapeUniforms?"outShape":this.outputShape[0]} ? 0. : getA(rc + 1)), 0, 0`:`getA(${t[0]}),
            cEdge ? 0. : getA(${t[1]}),
            rEdge ? 0. : getA(${t[2]}),
            rEdge || cEdge ? 0. : getA(${t[3]})`}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class SS{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=e,this.enableShapeUniforms=Fn(this.outputShape.length);let s="";for(let r=0;r<4;r++){let o="thisRC = rc;";r%2===1&&(o+="thisRC.z += 1;"),r>1&&(o+="thisRC.y += 1;"),s+=`
        ${o}
        ${r>0?"if(thisRC.y < rows && thisRC.z < cols){":""}
          int flatIndex = getFlatIndex(thisRC);

          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);
          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));

          result[${r}] =
            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);
        ${r>0?"}":""}
      `}this.userCode=`
      ${jH(t,this.enableShapeUniforms)}
      ${this.enableShapeUniforms?hy():cy(e)}

      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0.);

        ivec3 thisRC;
        int rows = ${this.enableShapeUniforms?"outShape[1]":e[1]};
        int cols = ${this.enableShapeUniforms?"outShape[2]":e[2]};

        ${s}

        setOutput(result);
      }
    `}}function jH(n,e){return`
    ivec3 inputCoordsFromReshapedOutCoords(int index) {
      ${e?G6(["r","c","d"],"inputShape"):ra(["r","c","d"],n)}
      return ivec3(r, c, d);
    }
  `}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class qH{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.usedTextures={},this.logEnabled=!1}acquireTexture(e,t,s){const r=w0(t,s),o=v0(e,r,s);o in this.freeTextures||(this.freeTextures[o]=[]),o in this.usedTextures||(this.usedTextures[o]=[]);const a=x0(e,r,this.gpgpu.gl,this.gpgpu.textureConfig,s);if(this.freeTextures[o].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=a,this.log();const i=this.freeTextures[o].pop();return this.usedTextures[o].push(i),i}let l;return r===kn.PACKED_2X2_FLOAT32?l=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):r===kn.PACKED_2X2_FLOAT16?l=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):r===kn.UNPACKED_FLOAT32?l=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):r===kn.UNPACKED_FLOAT16?l=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):r===kn.PACKED_4X1_UNSIGNED_BYTE&&(l=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[o].push(l),this.numUsedTextures++,this._numBytesAllocated+=a,this.log(),l}releaseTexture(e,t,s,r){if(this.freeTextures==null)return;const o=w0(s,r),a=v0(t,o,r);a in this.freeTextures||(this.freeTextures[a]=[]);const l=x0(t,o,this.gpgpu.gl,this.gpgpu.textureConfig,r),i=de().getNumber("WEBGL_DELETE_TEXTURE_THRESHOLD");i!==-1&&this._numBytesAllocated>i?(this.gpgpu.deleteMatrixTexture(e.texture),this._numBytesAllocated-=l):(this.freeTextures[a].push(e),this.numFreeTextures++,this._numBytesFree+=l),this.numUsedTextures--;const u=this.usedTextures[a],c=u&&u.indexOf(e);if(c==null||c<0)throw new Error("Cannot release a texture that was never provided by this texture manager");u[c]=u[u.length-1],u.pop(),this.log()}log(){if(!this.logEnabled)return;const e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);const t=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*t)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(this.freeTextures!=null){for(const e in this.freeTextures)this.freeTextures[e].forEach(t=>{this.gpgpu.deleteMatrixTexture(t.texture)});for(const e in this.usedTextures)this.usedTextures[e].forEach(t=>{this.gpgpu.deleteMatrixTexture(t.texture)});this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function KH(n,e){const t=n;if(e===t.R32F)return 4;if(e===t.R16F)return 2;if(e===t.RGBA32F)return 16;if(e===n.RGBA)return 16;if(e===t.RGBA16F)return 8;if(e===t.RGBA8)return 4;throw new Error(`Unknown internal format ${e}`)}function x0(n,e,t,s,r){const o=XH(e,s);let a;if(r){const[i,u]=Ja(n[0],n[1]);a=i*u}else{const[i,u]=su(n[0],n[1]);a=i*u}const l=KH(t,o);return a*l}function XH(n,e){switch(n){case kn.PACKED_2X2_FLOAT32:return yS(e);case kn.PACKED_2X2_FLOAT16:return bS(e);case kn.UNPACKED_FLOAT32:return fS(e);case kn.UNPACKED_FLOAT16:return mS(e);case kn.PACKED_4X1_UNSIGNED_BYTE:return gS(e);default:throw new Error(`Unknown physical texture type ${n}`)}}function YH(n){return de().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?n?kn.PACKED_2X2_FLOAT32:kn.UNPACKED_FLOAT32:n?kn.PACKED_2X2_FLOAT16:kn.UNPACKED_FLOAT16}function w0(n,e){if(n===gs.UPLOAD)return kn.PACKED_2X2_FLOAT32;if(n===gs.RENDER||n==null)return YH(e);if(n===gs.DOWNLOAD||n===gs.PIXELS)return kn.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${n}`)}function v0(n,e,t){return`${n[0]}_${n[1]}_${e}_${t}`}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class lr{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.enableShapeUniforms=Fn(this.outputShape.length),this.userCode=`
      float unaryOperation(float x) {
        ${t}
      }

      void main() {
        float x = getAAtOutCoords();
        float y = unaryOperation(x);

        setOutput(y);
      }
    `}}const Ms="if (isnan(x)) return x;",ZH="return x;",k0="return abs(x);",JH="return (x >= 0.0) ? x : (exp(x) - 1.0);",QH=Ms+`
  return (x < 0.0) ? 0.0 : x;
`,ej=Ms+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,Br="return x;",tj="return 1.0 / (1.0 + exp(-1.0 * x));";/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nj="return x;",sj=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,rj=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,oj=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,aj="return 1.0 / (1.0 + exp(-1.0 * x));";class Wr{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.enableShapeUniforms=Fn(this.outputShape.length),this.userCode=`
      vec4 unaryOperation(vec4 x) {
        ${t}
      }

      void main() {
        vec4 x = getAAtOutCoords();
        vec4 y = unaryOperation(x);

        setOutput(y);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ij{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e,this.enableShapeUniforms=Fn(this.outputShape.length);const t=e.length,s=Bn("rc",t),r=Tt(t),o=GH(t,s),a=s.slice(-2),l=t<=1?"rc":`vec2(${a.join(",")})`;this.userCode=`
      void main() {
        ${r} rc = getOutputCoords();
        vec4 packedInput = getA(${o});

        setOutput(getChannel(packedInput, ${l}));
      }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lj=Km,uj=1e-7,cj=1e-4,Mu={};function hj(n){return n in Mu||(Mu[n]={}),Mu[n]}const dj=de().getNumber("CPU_HANDOFF_SIZE_THRESHOLD"),pj=600;function fj(){return de().global.screen==null?1024:de().global.screen.height*de().global.screen.width*window.devicePixelRatio*pj/1024/1024}class dd extends Qp{nextDataId(){return dd.nextDataId++}constructor(e){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!de().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let t;if(e!=null){if(e instanceof Qd)t=e;else{const s=Ys(de().getNumber("WEBGL_VERSION"),e);t=new Qd(s)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{const s=Ys(de().getNumber("WEBGL_VERSION"));t=new Qd(s),this.binaryCache=hj(de().getNumber("WEBGL_VERSION")),this.gpgpuCreatedLocally=!0}this.gpgpu=t,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new qH(this.gpgpu),this.numMBBeforeWarning=fj(),this.texData=new V0(this,sr())}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}writeTexture(e,t,s,r,o,a){const l=this.makeTensorInfo(t,s),i=this.texData.get(l.dataId);i.isPacked=!1,i.texture={texture:e,texShape:[r,o]},i.texShape=[r,o];const u=zu(t),c=new b0(u,!1,a),h=this.runWebGLProgram(c,[l],s,[[r,o]]);return h.shape=t,i.texture=null,this.disposeIntermediateTensorInfo(l),h.dataId}write(e,t,s){if((de().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||de().getBool("DEBUG"))&&this.checkNumericalProblems(e),s==="complex64"&&e!=null)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const r={id:this.nextDataId()};return this.texData.set(r,{shape:t,dtype:s,values:e,usage:gs.UPLOAD,refCount:1}),r}refCount(e){return this.texData.has(e)?this.texData.get(e).refCount:0}incRef(e){const t=this.texData.get(e);t.refCount++}decRef(e){if(this.texData.has(e)){const t=this.texData.get(e);t.refCount--}}move(e,t,s,r,o){if(de().getBool("DEBUG")&&this.checkNumericalProblems(t),r==="complex64")throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:s,dtype:r,values:t,usage:gs.UPLOAD,refCount:o})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){const t=this.texData.get(e),{values:s,dtype:r,complexTensorInfos:o,slice:a,shape:l,isPacked:i}=t;if(a!=null){let d;i?d=new Wr(l,Br):d=new lr(l,Br);const p=this.runWebGLProgram(d,[{dataId:e,shape:l,dtype:r}],r),f=this.readSync(p.dataId);return this.disposeIntermediateTensorInfo(p),f}if(s!=null)return this.convertAndCacheOnCPU(e);if(r==="string")return s;const u=this.activeTimers!=null;let c;u&&(c=Hn());let h;if(r==="complex64"){const d=this.readSync(o.real.dataId),p=this.readSync(o.imag.dataId);h=_r(d,p)}else h=this.getValuesFromTexture(e);return u&&(this.downloadWaitMs+=Hn()-c),this.convertAndCacheOnCPU(e,h)}async read(e){if(this.pendingRead.has(e)){const f=this.pendingRead.get(e);return new Promise(g=>f.push(g))}const t=this.texData.get(e),{values:s,shape:r,slice:o,dtype:a,complexTensorInfos:l,isPacked:i}=t;if(o!=null){let f;i?f=new Wr(r,Br):f=new lr(r,Br);const g=this.runWebGLProgram(f,[{dataId:e,shape:r,dtype:a}],a),y=this.read(g.dataId);return this.disposeIntermediateTensorInfo(g),y}if(s!=null)return this.convertAndCacheOnCPU(e);if(de().getBool("DEBUG")&&!de().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&de().getNumber("WEBGL_VERSION")===2)throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let u=null,c;if(a!=="complex64"&&de().get("WEBGL_BUFFER_SUPPORTED")){c=this.decode(e);const f=this.texData.get(c.dataId);u=this.gpgpu.createBufferFromTexture(f.texture.texture,...Ou(r))}this.pendingRead.set(e,[]),a!=="complex64"&&await this.gpgpu.createAndWaitForFence();let h;if(a==="complex64"){const f=await Promise.all([this.read(l.real.dataId),this.read(l.imag.dataId)]),g=f[0],y=f[1];h=_r(g,y)}else if(u==null)h=this.getValuesFromTexture(e);else{const f=me(r);h=this.gpgpu.downloadFloat32MatrixFromBuffer(u,f)}if(c!=null&&this.disposeIntermediateTensorInfo(c),u!=null){const f=this.gpgpu.gl;Be(f,()=>f.deleteBuffer(u))}const d=this.convertAndCacheOnCPU(e,h),p=this.pendingRead.get(e);return this.pendingRead.delete(e),p.forEach(f=>f(d)),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&sr().removeDataId(e,this),this.pendingDeletes--),d}readToGPU(e,t={}){const s=this.texData.get(e),{values:r,shape:o,slice:a,dtype:l,isPacked:i,texture:u}=s;if(l==="complex64")throw new Error("Does not support reading texture for complex64 dtype.");if(a!=null){let p;i?p=new Wr(o,Br):p=new lr(o,Br);const f=this.runWebGLProgram(p,[{dataId:e,shape:o,dtype:l}],l),g=this.readToGPU(f,t);return this.disposeIntermediateTensorInfo(f),g}if(u==null)throw r!=null?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");const c=this.decode(e,t.customTexShape),h=sr().makeTensorFromTensorInfo(c),d=this.texData.get(c.dataId);return Object.assign({tensorRef:h},d.texture)}bufferSync(e){const t=this.readSync(e.dataId);if(e.dtype==="string")try{const s=t.map(r=>qr(r));return lt(e.shape,e.dtype,s)}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return lt(e.shape,e.dtype,t)}checkNumericalProblems(e){if(e!=null)for(let t=0;t<e.length;t++){const s=e[t];if(!y6(s))throw de().getBool("WEBGL_RENDER_FLOAT32_CAPABLE")?Error(`The value ${s} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`):Error(`The value ${s} cannot be represented on this device.`)}}getValuesFromTexture(e){const{shape:t,dtype:s,isPacked:r}=this.texData.get(e),o=me(t);if(de().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const d=this.decode(e),p=this.texData.get(d.dataId),f=this.gpgpu.downloadMatrixFromPackedTexture(p.texture.texture,...Ou(t)).subarray(0,o);return this.disposeIntermediateTensorInfo(d),f}const a=de().getBool("WEBGL_PACK")&&r===!0,l=a?zu(t):t,i=a?new R5(l):new D5(l),u=this.runWebGLProgram(i,[{shape:l,dtype:s,dataId:e}],"float32"),c=this.texData.get(u.dataId),h=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(c.texture.texture,c.texShape[0],c.texShape[1]).subarray(0,o);return this.disposeIntermediateTensorInfo(u),h}timerAvailable(){return de().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(e){const t=this.activeTimers,s=[];let r=!1;this.programTimersStack==null?(this.programTimersStack=s,r=!0):this.activeTimers.push(s),this.activeTimers=s,e();const o=Oo(this.activeTimers.map(i=>i.query)).filter(i=>i!=null),a=Oo(this.activeTimers.map(i=>i.name)).filter(i=>i!=null);this.activeTimers=t,r&&(this.programTimersStack=null);const l={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(async()=>{if(de().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const i=await Promise.all(o);l.kernelMs=_N(i),l.getExtraProfileInfo=()=>i.map((u,c)=>({name:a[c],ms:u})).map(u=>`${u.name}: ${u.ms}`).join(", ")}else l.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,l})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return de().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:Hn(),endMs:null}}endTimer(e){return de().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=Hn(),e)}async getQueryTime(e){if(de().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);const t=e;return t.endMs-t.startMs}disposeData(e,t=!1){if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(t?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!t&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);const{complexTensorInfos:s}=this.texData.get(e);return s!=null&&(this.disposeData(s.real.dataId,t),this.disposeData(s.imag.dataId,t)),this.texData.delete(e),!0}releaseGPUData(e){const{texture:t,dtype:s,texShape:r,usage:o,isPacked:a,slice:l}=this.texData.get(e),i=l&&l.origDataId||e,u=this.dataRefCount.get(i);u>1?this.dataRefCount.set(i,u-1):(this.dataRefCount.delete(i),t!=null&&(this.numBytesInGPU-=this.computeBytes(r,s),this.textureManager.releaseTexture(t,r,o,a)));const c=this.texData.get(e);c.texture=null,c.texShape=null,c.isPacked=!1,c.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture.texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e,t=dj){return de().getBool("WEBGL_CPU_FORWARD")&&e.every(s=>this.texData.get(s.dataId).texture==null&&me(s.shape)<t)}getGPGPUContext(){return this.gpgpu}where(e){ms("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const t=e.dataSync();return lj(e.shape,t)}packedUnaryOp(e,t,s){const r=new Wr(e.shape,t),o=this.compileAndRun(r,[e],s);return sr().makeTensorFromTensorInfo(o)}abs(e){if(this.shouldExecuteOnCPU([e])&&e.dtype!=="complex64"){const r=wS(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,r)}if(de().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,k0,e.dtype);const t=new lr(e.shape,k0),s=this.compileAndRun(t,[e]);return sr().makeTensorFromTensorInfo(s)}makeTensorInfo(e,t,s){let r;if(t==="string"&&s!=null&&s.length>0&&Vi(s[0])){const o=s.map(a=>Gr(a));r=this.write(o,e,t)}else r=this.write(s,e,t);return this.texData.get(r).usage=null,{dataId:r,shape:e,dtype:t}}makeOutput(e,t,s){return sr().makeTensorFromTensorInfo(this.makeTensorInfo(e,t,s),this)}unpackTensor(e){const t=new ij(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){const t=new HH(e.shape);return this.runWebGLProgram(t,[e],e.dtype,null,!0)}packedReshape(e,t){const s=[Ma(e.shape),...Va(e.shape)],r={dtype:e.dtype,shape:s,dataId:e.dataId},o=[Ma(t),...Va(t)],a=new SS(o,s),l=!0,i=[s],u=this.runWebGLProgram(a,[r],e.dtype,i,l);return{dataId:u.dataId,shape:t,dtype:u.dtype}}decode(e,t){const s=this.texData.get(e),{isPacked:r,shape:o,dtype:a}=s;if(t!=null){const d=me(o),p=t[0]*t[1]*4;P(d<=p,()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data.")}const l=zu(o);let i;r?i=new A5(l):i=new E5(l);const u=!0,c=[t??Ou(l)],h=this.runWebGLProgram(i,[{shape:l,dtype:a,dataId:e}],a,c,u,t);return{dtype:a,shape:o,dataId:h.dataId}}runWebGLProgram(e,t,s,r,o=!1,a){const l=this.makeTensorInfo(e.outputShape,s),i=this.texData.get(l.dataId);if(e.packedOutput&&(i.isPacked=!0),e.outPackingScheme===Pi.DENSE){const x=a??Ou(e.outputShape);i.texShape=x.map(w=>w*2)}if(e.outTexUsage!=null&&(i.usage=e.outTexUsage),me(l.shape)===0)return i.values=Sn(l.dtype,0),l;const u=[],c=t.map(x=>{if(x.dtype==="complex64")throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let w=this.texData.get(x.dataId);if(w.texture==null){if(!e.packedInputs&&me(x.shape)<=de().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:x.shape,texData:null,isUniform:!0,uniformValues:w.values};e.packedInputs&&(w.isPacked=!0,w.shape=x.shape)}if(this.uploadToGPU(x.dataId),!!w.isPacked!=!!e.packedInputs)x=w.isPacked?this.unpackTensor(x):this.packTensor(x),u.push(x),w=this.texData.get(x.dataId);else if(w.isPacked&&!xc(w.shape,x.shape)){const v=x,k=x.shape;x.shape=w.shape,x=this.packedReshape(x,k),u.push(x),w=this.texData.get(x.dataId),v.shape=k}return{shape:x.shape,texData:w,isUniform:!1}});this.uploadToGPU(l.dataId);const h={shape:l.shape,texData:i,isUniform:!1},d=_5(e,c,h),p=this.getAndSaveBinary(d,()=>$5(this.gpgpu,e,c,h)),f=this.activeTimers!=null;let g;f&&(g=this.startTimer()),de().get("ENGINE_COMPILE_ONLY")||T5(this.gpgpu,p,c,h,r),u.forEach(x=>this.disposeIntermediateTensorInfo(x)),f&&(g=this.endTimer(g),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(g)}));const y=de().getNumber("WEBGL_FLUSH_THRESHOLD");if(y>0){const x=Hn();x-this.lastGlFlushTime>y&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=x)}if(!de().getBool("WEBGL_LAZILY_UNPACK")&&i.isPacked&&o===!1){const x=this.unpackTensor(l);return this.disposeIntermediateTensorInfo(l),x}return l}compileAndRun(e,t,s,r,o=!1){return s=s||t[0].dtype,this.runWebGLProgram(e,t,s,r,o)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(de().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach(t=>{this.gpgpu.deleteProgram(this.binaryCache[t].webGLProgram),delete this.binaryCache[t]}),this.textureManager.dispose(),this.canvas!=null&&typeof HTMLCanvasElement<"u"&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return this.floatPrecisionValue==null&&(this.floatPrecisionValue=ce(()=>{if(!de().get("WEBGL_RENDER_FLOAT32_ENABLED")){const e=de().getBool("DEBUG");de().set("DEBUG",!1);const t=this.abs(Ye(1e-8)).dataSync()[0];if(de().set("DEBUG",e),t>0)return 32}return 16})),this.floatPrecisionValue}epsilon(){return this.floatPrecision()===32?uj:cj}uploadToGPU(e){const t=this.texData.get(e),{shape:s,dtype:r,values:o,texture:a,usage:l,isPacked:i}=t;if(a!=null)return;const u=this.activeTimers!=null;let c;u&&(c=Hn());let h=t.texShape;if(h==null&&(h=O6(s,i),t.texShape=h),o!=null){const d=zu(s);let p,f=h[1],g=h[0];const y=o instanceof Uint8Array||o instanceof Uint8ClampedArray;(i||!y)&&([f,g]=Ja(h[0],h[1])),i?p=new O5(d,y):p=new b0(d,y);const x=y?[g,f]:h,w=this.makeTensorInfo(x,r),v=this.texData.get(w.dataId);y?v.usage=gs.PIXELS:v.usage=gs.UPLOAD,v.texShape=x,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(w.dataId),f,g,o);const k=[[g,f]],I=this.runWebGLProgram(p,[w],r,k,!0),N=this.texData.get(I.dataId);t.texShape=N.texShape,t.isPacked=N.isPacked,t.usage=N.usage,de().get("ENGINE_COMPILE_ONLY")?this.disposeData(I.dataId):(t.texture=N.texture,t.values=null,this.texData.delete(I.dataId)),this.disposeIntermediateTensorInfo(w),u&&(this.uploadWaitMs+=Hn()-c)}else{const d=this.acquireTexture(h,l,r,i);t.texture=d}}convertAndCacheOnCPU(e,t){const s=this.texData.get(e),{dtype:r}=s;return t!=null&&(s.values=mj(t,r)),s.values}acquireTexture(e,t,s,r){if(this.numBytesInGPU+=this.computeBytes(e,s),!this.warnedAboutMemory&&this.numBytesInGPU>this.numMBBeforeWarning*1024*1024){const o=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${o} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,t,r)}computeBytes(e,t){return e[0]*e[1]*qu(t)}checkCompileCompletion(){for(const[,e]of Object.entries(this.binaryCache))this.checkCompletion_(e)}async checkCompileCompletionAsync(){const e=[];if(this.gpgpu.parallelCompilationExtension){for(const[,t]of Object.entries(this.binaryCache))e.push(this.checkCompletionAsync_(t));return Promise.all(e)}else{for(const[,t]of Object.entries(this.binaryCache)){const s=new Promise(r=>{try{this.checkCompletion_(t),r(!0)}catch(o){throw o}});e.push(s)}return Promise.all(e)}}async checkCompletionAsync_(e){return this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.parallelCompilationExtension.COMPLETION_STATUS_KHR)?this.checkCompletion_(e):(await sw(),this.checkCompletionAsync_(e))}checkCompletion_(e){if(this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.gl.LINK_STATUS)===!1)throw console.log(this.gpgpu.gl.getProgramInfoLog(e.webGLProgram)),this.gpgpu.gl.getShaderParameter(e.fragmentShader,this.gpgpu.gl.COMPILE_STATUS)===!1?(lS(e.source,this.gpgpu.gl.getShaderInfoLog(e.fragmentShader)),new Error("Failed to compile fragment shader.")):new Error("Failed to link vertex and fragment shaders.");return!0}getUniformLocations(){for(const e of Object.values(this.binaryCache)){this.gpgpu.buildVao(e.webGLProgram);const{variablesLocations:t,customUniformLocations:s,infLoc:r,nanLoc:o,outShapeLocation:a,outShapeStridesLocation:l,outTexShapeLocation:i}=pS(this.gpgpu,e.program,e.webGLProgram);e.variablesLocations=t,e.customUniformLocations=s,e.infLoc=r,e.nanLoc=o,e.outShapeLocation=a,e.outShapeStridesLocation=l,e.outTexShapeLocation=i}}createTensorFromGPUData(e,t,s){e.channels=e.channels||"RGBA";const{texture:r,height:o,width:a,channels:l}=e,i=sr().backend;if(!i.gpgpu.gl.isTexture(r))throw new Error("The texture is invalid. Also, please make sure the texture and the TFJS WebGL backend are using the same canvas. If you want to use your own custom canvas, you have to create and use the custom TFJS WebGL backend created from the canvas through 'new tf.MathBackendWebGL(customCanvas)'.");const u=i.writeTexture(r,t,s,o,a,l);return sr().makeTensorFromDataId(u,t,s,i)}}dd.nextDataId=0;function mj(n,e){if(e==="float32"||e==="complex64")return n;if(e==="int32"||e==="bool"){const t=e==="int32"?new Int32Array(n.length):new Uint8Array(n.length);for(let s=0;s<t.length;++s)t[s]=Math.round(n[s]);return t}else throw new Error(`Unknown dtype ${e}`)}/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dx()&&mx("webgl",()=>new dd,2);/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fy=`
  if (isnan(a)) return a;
  if (isnan(b)) return b;
`;class qo{constructor(e,t,s){this.variableNames=["A","B"],this.outputShape=st(t,s),this.enableShapeUniforms=Fn(this.outputShape.length),this.userCode=`
      float binaryOperation(float a, float b) {
        ${e}
      }

      void main() {
        float a = getAAtOutCoords();
        float b = getBAtOutCoords();
        setOutput(binaryOperation(a, b));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const aa=`
  result.r = isNaN.r ? NAN : result.r;
  result.g = isNaN.g ? NAN : result.g;
  result.b = isNaN.b ? NAN : result.b;
  result.a = isNaN.a ? NAN : result.a;
`;class si{constructor(e,t,s,r=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=st(t,s);const o=this.outputShape.length;this.enableShapeUniforms=Fn(o);let a="";if(r)if(o===0||me(this.outputShape)===1)a=`
          result.y = 0.;
          result.z = 0.;
          result.w = 0.;
        `;else if(a=`
          ${Tt(o)} coords = getOutputCoords();
        `,o===1)this.enableShapeUniforms?a+=`
            result.y = (coords + 1) >= outShape ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `:a+=`
            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `;else{const i=Bn("coords",o);this.enableShapeUniforms?a+=`
            bool nextRowOutOfBounds =
              (${i[o-2]} + 1) >= outShape[${o} - 2];
            bool nextColOutOfBounds =
              (${i[o-1]} + 1) >= outShape[${o} - 1];
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `:a+=`
            bool nextRowOutOfBounds =
              (${i[o-2]} + 1) >= ${this.outputShape[o-2]};
            bool nextColOutOfBounds =
              (${i[o-1]} + 1) >= ${this.outputShape[o-1]};
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `}this.userCode=`
      vec4 binaryOperation(vec4 a, vec4 b) {
        ${e}
      }

      void main() {
        vec4 a = getAAtOutCoords();
        vec4 b = getBAtOutCoords();

        vec4 result = binaryOperation(a, b);
        ${a}

        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function us(n){const{inputs:e,backend:t}=n,{x:s}=e;return t.incRef(s.dataId),{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}const gj={kernelName:ll,backendName:"webgl",kernelFunc:us};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mo(n){const{inputs:e,backend:t}=n,{real:s,imag:r}=e,o=t.makeTensorInfo(s.shape,"complex64"),a=t.texData.get(o.dataId),l=us({inputs:{x:s},backend:t}),i=us({inputs:{x:r},backend:t});return a.complexTensorInfos={real:l,imag:i},o}const yj={kernelName:cf,backendName:"webgl",kernelFunc:mo};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const CS="return (a < 0.) ? b * a : a;",IS=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function bj(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{alpha:o}=s,a=t.makeTensorInfo([],"float32",ro(o,"float32")),l=de().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new si(IS,r.shape,a.shape):new qo(CS,r.shape,a.shape),i=t.runWebGLProgram(l,[r,a],"float32");return t.disposeIntermediateTensorInfo(a),i}const xj={kernelName:Hc,backendName:"webgl",kernelFunc:bj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const NS="return (a < 0.) ? b * a : a;",$S=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function wj(n){const{inputs:e,backend:t}=n,{x:s,alpha:r}=e,o=de().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new si($S,s.shape,r.shape):new qo(NS,s.shape,r.shape);return t.runWebGLProgram(o,[s,r],"float32")}const vj={kernelName:ch,backendName:"webgl",kernelFunc:wj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ri="if (isnan(x)) return x;";function bt({opSnippet:n,packedOpSnippet:e,cpuKernelImpl:t,dtype:s}){return({inputs:r,backend:o})=>{const{x:a}=r,l=o,i=s||a.dtype;if(l.shouldExecuteOnCPU([a])&&t!=null){const h=l.texData.get(a.dataId),d=t(h.values,i);return l.makeTensorInfo(a.shape,i,d)}const u=de().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&e!=null;let c;return u?c=new Wr(a.shape,e):c=new lr(a.shape,n),l.runWebGLProgram(c,[a],i)}}function Tn({opSnippet:n,packedOpSnippet:e,checkOutOfBounds:t=!1,supportsComplex:s=!1,cpuKernelImpl:r,dtype:o}){return({inputs:a,backend:l})=>{const{a:i,b:u}=a,c=l;if(s&&i.dtype==="complex64"){const f=c.texData.get(i.dataId),g=c.texData.get(u.dataId),[y,x]=[[f.complexTensorInfos.real,g.complexTensorInfos.real],[f.complexTensorInfos.imag,g.complexTensorInfos.imag]].map(v=>{const[k,C]=v,I={dataId:k.dataId,dtype:k.dtype,shape:i.shape},N={dataId:C.dataId,dtype:C.dtype,shape:u.shape},E=new qo(n,i.shape,u.shape);return c.runWebGLProgram(E,[I,N],rs(k.dtype,C.dtype))}),w=mo({inputs:{real:y,imag:x},backend:c});return c.disposeIntermediateTensorInfo(y),c.disposeIntermediateTensorInfo(x),w}const h=o||rs(i.dtype,u.dtype);if((i.dtype==="string"||u.dtype==="string"||c.shouldExecuteOnCPU([i,u]))&&r!=null){const f=c.texData.get(i.dataId).values,g=c.texData.get(u.dataId).values,y=i.dtype==="string"?Er(f):f,x=i.dtype==="string"?Er(g):g,[w,v]=r(i.shape,u.shape,y,x,h),k=c.makeTensorInfo(v,h),C=c.texData.get(k.dataId);return C.values=w,k}const d=de().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&e!=null;let p;return d?p=new si(e,i.shape,u.shape,t):p=new qo(n,i.shape,u.shape),c.runWebGLProgram(p,[i,u],h)}}function zi(n,e=!1){if(n==="linear")return e?nj:ZH;if(n==="relu")return e?rj:QH;if(n==="elu")return e?sj:JH;if(n==="relu6")return e?oj:ej;if(n==="prelu")return e?$S:NS;if(n==="leakyrelu")return e?IS:CS;if(n==="sigmoid")return e?aj:tj;throw new Error(`Activation ${n} has not been implemented for the WebGL backend.`)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class TS{constructor(e,t,s,r=!1,o=!1,a=!1,l=null,i=!1,u=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=s,this.enableShapeUniforms=Fn(this.outputShape.length);const c=r?e[1]:e[2],h=Math.ceil(c/2),d=r?"i * 2, rc.y":"rc.y, i * 2",p=o?"rc.z, i * 2":"i * 2, rc.z",f=r?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],g=o?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let y="",x="";l&&(i?y=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${l}
        }`:u?y=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${l}
        }`:y=`vec4 activation(vec4 x) {
          ${l}
        }`,x="result = activation(result);");const w=a?"result += getBiasAtOutCoords();":"";a&&this.variableNames.push("bias"),i&&this.variableNames.push("preluActivationWeights"),u&&this.variableNames.push("leakyreluAlpha");let v="rc.x",k="rc.x";e[0]<t[0]?v=`imod(rc.x, ${e[0]})`:t[0]<e[0]&&(k=`imod(rc.x, ${t[0]})`),this.userCode=`
      ${y}
      // Don't use uniform for sharedDimensionPacked for performance.
      const float sharedDimension = ${h}.0;

      vec4 dot2x2ARowBCol(ivec3 rc) {
        vec4 result = vec4(0);
        int batchA = ${v};
        int batchB = ${k};
        for (int i = 0; i < ${h}; i++) {
          vec4 a = getMatrixA(batchA, ${d});
          vec4 b = getMatrixB(batchB, ${p});

          // These swizzled products need to be separately added.
          // See: https://github.com/tensorflow/tfjs/issues/1735
          result += (${f[0]} * ${g[0]});
          result += (${f[1]} * ${g[1]});
        }
        return result;
      }

      void main() {
        ivec3 rc = getOutputCoords();
        vec4 result = dot2x2ARowBCol(rc);

        ${w}

        ${x}

        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const S0={REAL:"return areal * breal - aimag * bimag;",IMAG:"return areal * bimag + aimag * breal;"};class C0{constructor(e,t,s){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=st(t,s),this.userCode=`
      float binaryOpComplex(
          float areal, float aimag, float breal, float bimag) {
        ${e}
      }

      void main() {
        float areal = getARealAtOutCoords();
        float aimag = getAImagAtOutCoords();
        float breal = getBRealAtOutCoords();
        float bimag = getBImagAtOutCoords();
        setOutput(binaryOpComplex(areal, aimag, breal, bimag));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const I0="return a * b;";function my(n){const{inputs:e,backend:t}=n,{a:s,b:r}=e,o=rs(s.dtype,r.dtype);if(s.dtype==="complex64"){const l=t.texData.get(s.dataId),i=t.texData.get(r.dataId),u=new C0(S0.REAL,s.shape,r.shape),c=new C0(S0.IMAG,s.shape,r.shape),h=[{dataId:l.complexTensorInfos.real.dataId,dtype:l.complexTensorInfos.real.dtype,shape:s.shape},{dataId:l.complexTensorInfos.imag.dataId,dtype:l.complexTensorInfos.imag.dtype,shape:s.shape},{dataId:i.complexTensorInfos.real.dataId,dtype:i.complexTensorInfos.real.dtype,shape:r.shape},{dataId:i.complexTensorInfos.imag.dataId,dtype:i.complexTensorInfos.imag.dtype,shape:r.shape}],d=t.runWebGLProgram(u,h,"float32"),p=t.runWebGLProgram(c,h,"float32"),f=mo({inputs:{real:d,imag:p},backend:t});return t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(p),f}if(t.shouldExecuteOnCPU([s,r])){const l=t.texData.get(s.dataId),i=t.texData.get(r.dataId),[u,c]=wH(s.shape,r.shape,l.values,i.values,o),h=t.makeTensorInfo(c,o),d=t.texData.get(h.dataId);return d.values=u,h}let a;return de().getBool("WEBGL_PACK_BINARY_OPERATIONS")?a=new si(I0,s.shape,r.shape):a=new qo(I0,s.shape,r.shape),t.runWebGLProgram(a,[s,r],o)}const kj={kernelName:yl,backendName:"webgl",kernelFunc:my};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Sj(n,e,t){const s=[Ma(n.shape),...Va(n.shape)],r={dtype:n.dtype,shape:s,dataId:n.dataId},o=[Ma(e),...Va(e)],a=new SS(o,s),l=!0,i=[s],u=t.runWebGLProgram(a,[r],n.dtype,i,l);return{dataId:u.dataId,shape:e,dtype:u.dtype}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Fe(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{shape:o}=s,a=t,l=me(r.shape),i=W0(o,l),u=me(i);P(l===u,()=>`The new shape (${i}) has ${u} elements and the old shape (${r.shape}) has ${l} elements. The new shape and old shape must have the same number of elements.`);const c=a.texData.get(r.dataId);return c.isPacked&&!xc(r.shape,i)&&!(c.texture!==null&&xc(c.shape,i))?Sj(r,i,a):(a.incRef(r.dataId),{dataId:r.dataId,shape:i,dtype:r.dtype})}const Cj={kernelName:dh,backendName:"webgl",kernelFunc:Fe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class N0{constructor(e,t){this.variableNames=["x"];const{windowSize:s,batchSize:r,inSize:o,outSize:a}=e;this.outputShape=[r,a];const l=Math.floor(s/4)*4,i=s%4;let u="sumValue += dot(values, ones);";if(t!=null){const h=1/t;u=`sumValue += dot(values * ${_a(h)?h.toPrecision(2):h}, ones);`}let c="";o%s>0&&(c=`
        if (inIdx < 0 || inIdx >= ${o}) {
          return 0.0;
        }
      `),this.userCode=`
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${c}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${s};

        float sumValue = 0.0;

        for (int i = 0; i < ${l}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${u}
        }

        int inIdx = inOffset + ${l};
        if (${i===1}) {
          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);

          ${u}
        } else if (${i===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1), 0.0, 0.0);

          ${u}
        } else if (${i===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2), 0.0);

          ${u}
        }
        setOutput(sumValue);
      }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ij{constructor(e,t){this.variableNames=["x"];const{windowSize:s,batchSize:r,inSize:o,outSize:a}=e;this.outputShape=[r,a];let l="0.0",i="";t==="prod"?l="1.0":t==="min"?(l="1.0 / 1e-20",i="min"):t==="max"&&(l="-1.0 / 1e-20",i="max");let u=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="sum"?u="sumValue":t==="prod"?u="prodValue":t==="all"?u="allValue":t==="any"&&(u="anyValue");const c=Math.floor(s/4)*4,h=s%4;let d=`
      if (${t==="sum"}) {
        sumValue += dot(values, ones);
      } else if (${t==="prod"}) {
        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);
        prodValue *= tmp[0] * tmp[1];
      } else {
        minMaxValue = ${i}(values, minMaxValue);
        if (${t==="min"} || ${t==="max"}) {
          minMaxValue = ${i}(values, minMaxValue);
          bvec4 isNaN = isnan(values);
          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {
            minMaxValue = vec4(NAN);
          }
        }
      }
    `,p="vec4";t==="all"?(l="1.0",d=`
        bool reducedAllValue = all(values);
        float floatedReducedAllValue = float(reducedAllValue);
        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);
      `,p="bvec4"):t==="any"&&(l="0.0",d=`
        bool reducedAnyValue = any(values);
        float floatedReducedAnyValue = float(reducedAnyValue);
        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);
      `,p="bvec4");let f="";o%s>0&&(f=`
        if (inIdx < 0 || inIdx >= ${o}) {
          return initializationValue;
        }
      `),this.userCode=`
      const float initializationValue = ${l};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${f}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${s};

        vec4 minMaxValue = vec4(${l});
        float prodValue = 1.0;
        float sumValue = 0.0;
        float allValue = 1.0;
        float anyValue = 0.0;

        for (int i = 0; i < ${c}; i += 4) {
          int inIdx = inOffset + i;
          ${p} values = ${p}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${d}
        }

        int inIdx = inOffset + ${c};
        if (${h===1}) {
          ${p} values = ${p}(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          ${d}
        } else if (${h===2}) {
          ${p} values = ${p}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          ${d}
        } else if (${h===3}) {
          ${p} values = ${p}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          ${d}
        }
        setOutput(${u});
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Nj(n){const e=[];for(;e.length===0||e[e.length-1].outSize!==1;){const t=e.length?e[e.length-1].outSize:n[1],s=Yh(t);e.push({inSize:t,windowSize:s,outSize:Math.ceil(t/s)})}return e}function ia(n,e,t,s){const r=Nj(n.shape);let o=n;for(let a=0;a<r.length;a++){const{inSize:l,windowSize:i,outSize:u}=r[a];let c,h;t==="mean"?c=a===0?new N0({windowSize:i,inSize:l,batchSize:n.shape[0],outSize:u},l):new N0({windowSize:i,inSize:l,batchSize:n.shape[0],outSize:u}):c=new Ij({windowSize:i,inSize:l,batchSize:n.shape[0],outSize:u},t),h=o,o=s.runWebGLProgram(c,[o],e),h.dataId!==n.dataId&&s.disposeIntermediateTensorInfo(h)}return o}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class $j{constructor(e,t){this.variableNames=["A"];const s=new Array(e.length);for(let a=0;a<s.length;a++)s[a]=e[t[a]];this.outputShape=s,this.rank=s.length;const r=Tt(this.rank),o=Tj(t);this.userCode=`
    void main() {
      ${r} resRC = getOutputCoords();
      setOutput(getA(${o}));
    }
    `}}function Tj(n){const e=n.length;if(e>6)throw Error(`Transpose for rank ${e} is not yet supported`);const t=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],s=new Array(e);for(let r=0;r<n.length;r++)s[n[r]]=t[r];return s.join()}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class _j{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const s=new Array(e.length);for(let c=0;c<s.length;c++)s[c]=e[t[c]];if(this.outputShape=s,this.rank=s.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const r=Tt(this.rank),o=kS("rc",this.rank),a=new Array(this.rank);for(let c=0;c<t.length;c++)a[t[c]]=o[c];const l=`vec2(${a.slice(-2).join()})`,i=`++${o[this.rank-1]} < ${s[this.rank-1]}`,u=`getChannel(getA(${a.join()}), ${l})`;this.userCode=`
    void main() {
      ${r} rc = getOutputCoords();
      vec4 result = vec4(0.);
      result[0] = ${u};
      if(${i}) {
        result[1] = ${u};
      }
      --${o[this.rank-1]};
      if(++${o[this.rank-2]} < ${s[this.rank-2]}) {
        result[2] = ${u};
        if(${i}) {
          result[3] = ${u};
        }
      }
      setOutput(result);
    }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pd(n,e,t){const s=de().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new _j(n.shape,e):new $j(n.shape,e);return t.runWebGLProgram(s,[n],n.dtype)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ej(n,e,t,s){const r=e,o=n.shape.length,a=ct(r,n.shape);let l=a;const i=jt(l,o),u=i!=null;let c=n;u&&(c=pd(n,i,s),l=Qt(l.length,o)),Nn("sum",l,o);const[h,d]=bn(c.shape,l);let p=h;t&&(p=Jt(h,a));const f=me(d),y=me(n.shape)/f,x=Fe({inputs:{x:c},attrs:{shape:[y,f]},backend:s}),w=um(n.dtype),v=ia(x,w,"sum",s),k=Fe({inputs:{x:v},attrs:{shape:p},backend:s});return s.disposeIntermediateTensorInfo(x),s.disposeIntermediateTensorInfo(v),u&&s.disposeIntermediateTensorInfo(c),k}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fd(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o,keepDims:a}=s;return Ej(r,o,a,t)}const Aj={kernelName:bh,backendName:"webgl",kernelFunc:fd};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Mn(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{perm:o}=s,a=t,l=r.shape.length,i=new Array(l);for(let c=0;c<i.length;c++)i[c]=r.shape[o[c]];let u;if(a.shouldExecuteOnCPU([r])){const h=a.texData.get(r.dataId).values,d=py(h,r.shape,r.dtype,o,i);u=a.makeTensorInfo(i,r.dtype);const p=a.texData.get(u.dataId);p.values=d}else u=pd(r,o,a);return u}const Dj={kernelName:ka,backendName:"webgl",kernelFunc:Mn};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _S=1e3;function wc({a:n,b:e,transposeA:t,transposeB:s,backend:r,bias:o=null,preluActivationWeights:a=null,leakyreluAlpha:l=0,activation:i=null}){const u=n.shape.length,c=e.shape.length,h=t?n.shape[u-2]:n.shape[u-1],d=s?e.shape[c-1]:e.shape[c-2],p=t?n.shape[u-1]:n.shape[u-2],f=s?e.shape[c-2]:e.shape[c-1],g=n.shape.slice(0,-2),y=e.shape.slice(0,-2),x=me(g),w=me(y),k=st(n.shape.slice(0,-2),e.shape.slice(0,-2)).concat([p,f]);P(h===d,()=>`Error in matMul: inner shapes (${h}) and (${d}) of Tensors with shapes ${n.shape} and ${e.shape} and transposeA=${t} and transposeB=${s} must match.`);const C=t?[x,h,p]:[x,p,h],I=s?[w,f,d]:[w,d,f],N=Fe({inputs:{x:n},backend:r,attrs:{shape:C}}),E=Fe({inputs:{x:e},backend:r,attrs:{shape:I}}),R=[N,E],O=Math.max(x,w),B=t?N.shape[1]:N.shape[2],j=o!=null,U=a!=null,K=i==="leakyrelu",H=i!=null?zi(i,!0):null,Z=j||U||K||H!=null;let ue;if((p===1||f===1)&&B>_S&&Z===!1){let X=N,A=E;t&&(X=Mn({inputs:{x:N},backend:r,attrs:{perm:[0,2,1]}}),R.push(X)),s&&(A=Mn({inputs:{x:E},backend:r,attrs:{perm:[0,2,1]}}),R.push(A));const ee=f!==1,be=f===1;let ie=X;ee&&(ie=Fe({inputs:{x:X},backend:r,attrs:{shape:[O,B,1]}}),R.push(ie));const xe=f===1?2:1;let le=A;be&&(le=Fe({inputs:{x:A},backend:r,attrs:{shape:[O,1,B]}}),R.push(le));const ke=my({inputs:{a:ie,b:le},backend:r});ue=fd({inputs:{x:ke},backend:r,attrs:{axis:xe,keepDims:!0}}),R.push(ke)}else{const X=rs(n.dtype,e.dtype),A=new TS(C,I,[O,p,f],t,s,j,H,U,K),ee=[N,E];if(o!=null&&ee.push(o),U&&ee.push(a),K){const be=r.makeTensorInfo([],"float32",ro(l,"float32"));ee.push(be),R.push(be)}ue=r.runWebGLProgram(A,ee,X)}const M=Fe({inputs:{x:ue},backend:r,attrs:{shape:k}});R.push(ue);for(const X of R)r.disposeIntermediateTensorInfo(X);return M}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Rj(n){const{inputs:e,backend:t,attrs:s}=n,{a:r,b:o,bias:a,preluActivationWeights:l}=e,{transposeA:i,transposeB:u,activation:c,leakyreluAlpha:h}=s;return wc({a:r,b:o,transposeA:i,transposeB:u,backend:t,bias:a,preluActivationWeights:l,leakyreluAlpha:h,activation:c})}const Fj={kernelName:Ku,backendName:"webgl",kernelFunc:Rj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $0="return abs(x);";function Oj(n){const{inputs:e,backend:t}=n,{x:s}=e;if(t.shouldExecuteOnCPU([s])&&s.dtype!=="complex64"){const o=t.texData.get(s.dataId),a=wS(o.values);return t.makeTensorInfo(s.shape,s.dtype,a)}let r;return de().getBool("WEBGL_PACK_UNARY_OPERATIONS")?r=new Wr(s.shape,$0):r=new lr(s.shape,$0),t.runWebGLProgram(r,[s],s.dtype)}const Lj={kernelName:Sc,backendName:"webgl",kernelFunc:Oj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Pj=Ms+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return acos(x);
`,zj=bt({opSnippet:Pj}),Bj={kernelName:Wi,backendName:"webgl",kernelFunc:zj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Mj=Ms+`
  if (x < 1.0) return NAN;
return log(x + sqrt(x * x - 1.0));`,Vj=bt({opSnippet:Mj}),Wj={kernelName:Ui,backendName:"webgl",kernelFunc:Vj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const T0="return a + b;",Uj=Tn({opSnippet:T0,packedOpSnippet:T0,supportsComplex:!0,cpuKernelImpl:Q5}),Gj={kernelName:Ha,backendName:"webgl",kernelFunc:Uj};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Hj{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map((o,a)=>`T${a}`);const s=[];this.variableNames.forEach(o=>{s.push(`float v${o} = get${o}AtOutCoords();`)});const r=this.variableNames.map(o=>`v${o}`).join(" + ");this.userCode=`
      void main() {
        ${s.join(`
        `)}

        float result = ${r};
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class jj{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map((o,a)=>`T${a}`);const s=[];this.variableNames.forEach(o=>{s.push(`vec4 v${o} = get${o}AtOutCoords();`)});const r=this.variableNames.map(o=>`v${o}`).join(" + ");this.userCode=`
      void main() {
        ${s.join(`
        `)}

        vec4 result = ${r};
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ju(n){const{inputs:e,backend:t}=n,s=e;if(s.length===1)return us({inputs:{x:s[0]},backend:t});if(s.length>de().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){const i=Math.floor(s.length/2),u=ju({inputs:s.slice(0,i),backend:t}),c=ju({inputs:s.slice(i),backend:t});return ju({inputs:[u,c],backend:t})}const r=s.map(i=>i.dtype).reduce((i,u)=>rs(i,u)),o=s.map(i=>i.shape),l=de().getBool("WEBGL_PACK")?new jj(s[0].shape,o):new Hj(s[0].shape,o);return t.runWebGLProgram(l,s,r)}const qj={kernelName:Cc,backendName:"webgl",kernelFunc:ju};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Kj(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o,keepDims:a}=s,l=r.shape.length,i=ct(o,r.shape);let u=i;const c=jt(u,l);let h=r;c!=null&&(h=Mn({inputs:{x:r},backend:t,attrs:{perm:c}}),u=Qt(u.length,l)),Nn("all",u,l);const[d,p]=bn(h.shape,u),f=me(p),g=Fe({inputs:{x:h},backend:t,attrs:{shape:[-1,f]}}),y=ia(g,g.dtype,"all",t);let x;if(a){const w=Jt(d,i);x=Fe({inputs:{x:y},backend:t,attrs:{shape:w}})}else x=Fe({inputs:{x:y},backend:t,attrs:{shape:d}});return t.disposeIntermediateTensorInfo(g),t.disposeIntermediateTensorInfo(y),c!=null&&t.disposeIntermediateTensorInfo(h),x}const Xj={kernelName:sf,backendName:"webgl",kernelFunc:Kj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Yj(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o,keepDims:a}=s,l=r.shape.length,i=ct(o,r.shape);let u=i;const c=jt(u,l);let h=r;c!=null&&(h=Mn({inputs:{x:r},backend:t,attrs:{perm:c}}),u=Qt(u.length,l)),Nn("any",u,l);const[d,p]=bn(h.shape,u),f=me(p),g=Fe({inputs:{x:h},backend:t,attrs:{shape:[-1,f]}}),y=ia(g,g.dtype,"any",t);let x;if(a){const w=Jt(d,i);x=Fe({inputs:{x:y},backend:t,attrs:{shape:w}})}else x=Fe({inputs:{x:y},backend:t,attrs:{shape:d}});return t.disposeIntermediateTensorInfo(g),t.disposeIntermediateTensorInfo(y),c!=null&&t.disposeIntermediateTensorInfo(h),x}const Zj={kernelName:rf,backendName:"webgl",kernelFunc:Yj};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Jj{constructor(e,t,s){this.variableNames=["A"];const{windowSize:r,batchSize:o,outSize:a}=e;s||this.variableNames.push("bestIndicesA"),this.outputShape=[o,a];const l=t==="max"?">":"<",i=s?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${r};

        int bestIndex = inOffset;
        float bestValue = getA(batch, bestIndex);

        for (int i = 0; i < ${r}; i++) {
          int inIdx = ${i};
          float candidate = getA(batch, inIdx);
          if (candidate ${l} bestValue) {
            bestValue = candidate;
            bestIndex = inIdx;
          }
        }
        setOutput(float(bestIndex));
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Qj{constructor(e,t,s,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,P(e.length>2,()=>`Packed arg${s.charAt(0).toUpperCase()+s.slice(1)} supports only inputs with rank above 2.`);const o=e[e.length-1],a=Math.ceil(o/t);this.outputShape=e.slice(0,-1),a>1&&this.outputShape.push(a),r||this.variableNames.push("bestIndicesA");const l=this.outputShape,i=l.length,u=Tt(i),c=Bn("coords",i);let h,d;if(a===1){d=i+1;const E=Tt(d);h=`
        ${E} sourceLocR = ${E}(${c.join()}, 0);
        ++${c[i-1]};
        ${E} sourceLocG = ${E}(${c.join()}, 0);
        ++${c[i-2]};
        ${E} sourceLocA = ${E}(${c.join()}, 0);
        --${c[i-1]};
        ${E} sourceLocB = ${E}(${c.join()}, 0);
        --${c[i-2]};`}else d=i,h=`
        ${u} sourceLocR = coords;
        ++${c[i-1]};
        ${u} sourceLocG = coords;
        ++${c[i-2]};
        ${u} sourceLocA = coords;
        --${c[i-1]};
        ${u} sourceLocB = coords;
        --${c[i-2]};`;const p=["x","y","z","w","u","v"].slice(0,d),f="."+p[d-1],g=p.map(E=>"int "+E),y=Bn("sourceLocR",d-1).concat("inIdx.r"),x=Bn("sourceLocG",d-1).concat("inIdx.g"),w=Bn("sourceLocB",d-1).concat("inIdx.b"),v=Bn("sourceLocA",d-1).concat("inIdx.a"),k=s==="max"?"greaterThan":"lessThan",C=r?"":`
          inIdx = round(vec4(getBestIndicesAChannel(${y.join()}),
                             getBestIndicesAChannel(${x.join()}),
                             getBestIndicesAChannel(${w.join()}),
                             getBestIndicesAChannel(${v.join()})));`,I=`vec4(
            getAChannel(${y.join()}),
            hasNextCol ? getAChannel(${x.join()}) : 0.,
            hasNextRow ? getAChannel(${w.join()}) : 0.,
            hasNextRow && hasNextCol ? getAChannel(${v.join()}) : 0.)`,N=r?"":`
      float getBestIndicesAChannel(${g.join()}) {
        return getChannel(getBestIndicesA(${p.join()}),
                                          vec2(${p.slice(-2).join()}));
      }`;this.userCode=`
      float getAChannel(${g.join()}) {
        return getChannel(getA(${p.join()}),
                               vec2(${p.slice(-2).join()}));
      }
      ${N}
      void main() {
        ${u} coords = getOutputCoords();
        bool hasNextCol = ${c[i-1]} < ${l[i-1]-1};
        bool hasNextRow = ${c[i-2]} < ${l[i-2]-1};
        ${h}
        ivec4 srcIdx = ivec4(sourceLocR${f}, sourceLocG${f},
          sourceLocB${f}, sourceLocA${f}) * ${t};
        ivec4 inIdx = srcIdx;
        vec4 bestIndex = vec4(inIdx);
        vec4 bestValue = ${I};

        for (int i = 0; i < ${t}; i++) {
          inIdx = srcIdx;
          ${C}
          vec4 candidate = ${I};
          bvec4 nan = isnan(candidate);
          bvec4 replace = bvec4(
            vec4(${k}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));

          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,
                           replace.y  ? candidate.y : bestValue.y,
                           replace.z  ? candidate.z : bestValue.z,
                           replace.w  ? candidate.w : bestValue.w);
          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));
          srcIdx++;
        }
        setOutput(bestIndex);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ES(n,e,t,s=null){let r=e.shape[0],o=e.shape[1];s!=null&&(r=s.shape[0],o=s.shape[1]);const a=Yh(o),l={windowSize:a,inSize:o,batchSize:r,outSize:Math.ceil(o/a)},i=new Jj(l,t,s==null),u=[e];s!=null&&u.push(s);const c=n.runWebGLProgram(i,u,"int32");if(c.shape[1]===1)return c;const h=ES(n,e,t,c);return n.disposeIntermediateTensorInfo(c),h}function AS(n,e,t,s=null){const r=s!=null?s.shape:e.shape,o=r[r.length-1],a=Yh(o),l=new Qj(r,a,t,s==null),i=s==null?[e]:[e,s],u=n.runWebGLProgram(l,i,"int32");if(u.shape.length===e.shape.length){const c=AS(n,e,t,u);return n.disposeIntermediateTensorInfo(u),c}return u}function DS(n,e,t,s){const r=[t];if(Nn("arg"+s.charAt(0).toUpperCase()+s.slice(1),r,e.shape.length),!de().getBool("WEBGL_PACK_REDUCE")||e.shape.length<=2){const o=[],a=n.texData.get(e.dataId),l=a!==null&&a.isPacked;let i=e;l&&(i=n.unpackTensor(e),o.push(i));const[u,c]=bn(i.shape,r),h=me(c),d=Fe({inputs:{x:i},backend:n,attrs:{shape:[-1,h]}});o.push(d);const p=ES(n,d,s);o.push(p);const f=Fe({inputs:{x:p},backend:n,attrs:{shape:u}});return o.forEach(g=>n.disposeIntermediateTensorInfo(g)),f}return AS(n,e,s)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function e8(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o}=s;let a=ct(o,r.shape);const l=jt(a,r.shape.length);let i=r;const u=[];l!=null&&(i=Mn({inputs:{x:r},backend:t,attrs:{perm:l}}),u.push(i),a=Qt(a.length,i.shape.length)),Nn("argMax",[a[0]],i.shape.length);const c=DS(t,i,a[0],"max");return u.forEach(h=>t.disposeIntermediateTensorInfo(h)),c}const t8={kernelName:Ic,backendName:"webgl",kernelFunc:e8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function n8(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o}=s;let a=ct(o,r.shape);const l=jt(a,r.shape.length);let i=r;const u=[];l!=null&&(i=Mn({inputs:{x:r},backend:t,attrs:{perm:l}}),u.push(i),a=Qt(a.length,i.shape.length)),Nn("argMin",[a[0]],i.shape.length);const c=DS(t,i,a[0],"min");return u.forEach(h=>t.disposeIntermediateTensorInfo(h)),c}const s8={kernelName:Nc,backendName:"webgl",kernelFunc:n8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const r8=Ms+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return asin(x);
`,o8=bt({opSnippet:r8}),a8={kernelName:Gi,backendName:"webgl",kernelFunc:o8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const i8=Ms+"return log(x + sqrt(x * x + 1.0));",l8=bt({opSnippet:i8}),u8={kernelName:Hi,backendName:"webgl",kernelFunc:l8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const c8=Ms+`
  return atan(x);
`,h8=bt({opSnippet:c8}),d8={kernelName:ji,backendName:"webgl",kernelFunc:h8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const p8=fy+`
  return atan(a, b);
`,f8=`
  vec4 result = atan(a, b);
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+aa+`
  return result;
`,m8=Tn({opSnippet:p8,packedOpSnippet:f8}),g8={kernelName:Ki,backendName:"webgl",kernelFunc:m8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const y8=Ms+`
  if ((x < -1.0) || (x > 1.0)) return NAN;
return (log(1.0 + x) - log(1.0 - x)) / 2.0;`,b8=bt({opSnippet:y8}),x8={kernelName:qi,backendName:"webgl",kernelFunc:b8};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Bi{constructor(e,t,s,r=!1,o=!1){if(this.variableNames=["x"],t==="avg"&&s)throw new Error("Cannot compute positions for average pool.");const a=e.filterWidth,l=e.strideHeight,i=e.strideWidth,u=e.dilationHeight,c=e.dilationWidth,h=e.effectiveFilterHeight,d=e.effectiveFilterWidth,p=e.padInfo.top,f=e.padInfo.left;this.outputShape=e.outShape;const g=t==="avg",y=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,x=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`;let w="0.0";if(g||(w="-1.0 / 1e-20"),s){const E=">=";this.userCode=`
        const ivec2 strides = ivec2(${l}, ${i});
        const ivec2 pads = ivec2(${p}, ${f});

        void main() {
          ivec4 coords = getOutputCoords();
          int batch = coords[0];
          int d = coords[3];

          ivec2 xRCCorner = coords.yz * strides - pads;
          int xRCorner = xRCCorner.x;
          int xCCorner = xRCCorner.y;

          // max/min x(?, ?, d) to get y(yR, yC, d).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;
          float avgValue = 0.0;

          for (int wR = 0; wR < ${h};
              wR += ${u}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${d};
                wC += ${c}) {
              int xC = xCCorner + wC;

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              float value = getX(batch, xR, xC, d);

              // If a min / max value has already been found, use it. If not,
              // use the current value.
              float currMinMaxValue = mix(
                  value, minMaxValue, minMaxValueFound);
              if (value ${E} currMinMaxValue) {
                minMaxValue = value;
                minMaxValueFound = 1.0;
                minMaxPosition = ${r?o?y:x:`wR * ${d} + wC`};
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}const v="max";let k=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="avg"&&(k="avgValue / max(count, 1.0)");const C=Math.floor(a/4)*4,I=a%4,N=`
      if (${g}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${v}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec2 strides = ivec2(${l}, ${i});
      const ivec2 pads = ivec2(${p}, ${f});
      const float initializationValue = ${w};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xR, int xC, int d) {
        if (xC < 0 || xC >= ${e.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xR, xC, d);
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d = coords[3];

        ivec2 xRCCorner = coords.yz * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // max/min x(?, ?, d) to get y(yR, yC, d).
        // ? = to be determined
        vec4 minMaxValue = vec4(${w});
        float avgValue = 0.0;
        count = 0.0;

        for (int wR = 0; wR < ${h};
            wR += ${u}) {
          int xR = xRCorner + wR;

          if (xR < 0 || xR >= ${e.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${C}; wC += 4) {
            int xC = xCCorner + wC * ${c};

            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${c}, d),
              getValue(batch, xR, xC + 2 * ${c}, d),
              getValue(batch, xR, xC + 3 * ${c}, d)
            );

            ${N}
          }

          int xC = xCCorner + ${C};
          if (${I===1}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              initializationValue,
              initializationValue,
              initializationValue
            );

            ${N}
          } else if (${I===2}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${c}, d),
              initializationValue,
              initializationValue
            );

            ${N}
          } else if (${I===3}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${c}, d),
              getValue(batch, xR, xC + 2 * ${c}, d),
              initializationValue
            );

            ${N}
          }
        }
        setOutput(${k});
      }
    `}}class gy{constructor(e,t,s,r=!1,o=!1){if(this.variableNames=["x"],t==="avg"&&s)throw new Error("Cannot compute positions for average pool.");const a=e.filterWidth,l=e.strideDepth,i=e.strideHeight,u=e.strideWidth,c=e.dilationDepth,h=e.dilationHeight,d=e.dilationWidth,p=e.effectiveFilterDepth,f=e.effectiveFilterHeight,g=e.effectiveFilterWidth,y=e.padInfo.front,x=e.padInfo.top,w=e.padInfo.left;this.outputShape=e.outShape;const v=t==="avg";let k="0.0";if(v||(k="-1.0 / 1e-20"),s){const O=">=";this.userCode=`
        const ivec3 strides =
            ivec3(${l}, ${i}, ${u});
        const ivec3 pads = ivec3(${y}, ${x}, ${w});

        void main() {
          ivec5 coords = getOutputCoords();
          int batch = coords.x;
          int ch = coords.u;

          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
          int xDCorner = xCorner.x;
          int xRCorner = xCorner.y;
          int xCCorner = xCorner.z;

          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;

          for (int wD = 0; wD < ${p};
              wD += ${c}) {
            int xD = xDCorner + wD;

            if (xD < 0 || xD >= ${e.inDepth}) {
              continue;
            }

            for (int wR = 0; wR < ${f};
                wR += ${h}) {
              int xR = xRCorner + wR;

              if (xR < 0 || xR >= ${e.inHeight}) {
                continue;
              }

              for (int wC = 0; wC < ${g};
                  wC += ${d}) {
                int xC = xCCorner + wC;

                if (xC < 0 || xC >= ${e.inWidth}) {
                  continue;
                }

                float value = getX(batch, xD, xR, xC, ch);

                // If a min / max value has already been found, use it. If not,
                // use the current value.
                float currMinMaxValue = mix(
                    value, minMaxValue, minMaxValueFound);
                if (value ${O} currMinMaxValue) {
                  minMaxValue = value;
                  minMaxValueFound = 1.0;
                  minMaxPosition = ${r?o?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${f} * ${g} +
                      wR * ${g} + wC`};
                }
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}const C="max";let I=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="avg"&&(I="avgValue / max(count, 1.0)");const N=Math.floor(a/4)*4,E=a%4,R=`
      if (${v}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${C}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec3 strides =
        ivec3(${l}, ${i}, ${u});
      const ivec3 pads = ivec3(${y}, ${x}, ${w});
      const float initializationValue = ${k};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xD, int xR, int xC, int ch) {
        if (xC < 0 || xC >= ${e.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xD, xR, xC, ch);
      }

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xDCorner = xCorner.x;
        int xRCorner = xCorner.y;
        int xCCorner = xCorner.z;

        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).
        // ? = to be determined
        vec4 minMaxValue = vec4(${k});
        float avgValue = 0.0;
        count = 0.0;

        for (int wD = 0; wD < ${p};
            wD += ${c}) {
          int xD = xDCorner + wD;

          if (xD < 0 || xD >= ${e.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${f};
            wR += ${h}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${N}; wC += 4) {
              int xC = xCCorner + wC * ${d};

              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${d}, ch),
                getValue(batch, xD, xR, xC + 2 * ${d}, ch),
                getValue(batch, xD, xR, xC + 3 * ${d}, ch)
              );

              ${R}
            }

            int xC = xCCorner + ${N};
            if (${E===1}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                initializationValue,
                initializationValue,
                initializationValue
              );

              ${R}
            } else if (${E===2}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${d}, ch),
                initializationValue,
                initializationValue
              );

              ${R}
            } else if (${E===3}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${d}, ch),
                getValue(batch, xD, xR, xC + 2 * ${d}, ch),
                initializationValue
              );

              ${R}
            }
          }
        }
        setOutput(${I});
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function w8(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e;ru(r,"avgPool");const{filterSize:o,strides:a,pad:l,dimRoundingMode:i}=s,u=1;P(In(a,u),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${u}'`);const c=zs(r.shape,o,a,u,l,i);if(c.filterWidth===1&&c.filterHeight===1&&ft(c.inShape,c.outShape))return us({inputs:{x:r},backend:t});const h=new Bi(c,"avg",!1);return t.runWebGLProgram(h,[r],"float32")}const v8={kernelName:$c,backendName:"webgl",kernelFunc:w8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function k8(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{filterSize:o,strides:a,pad:l,dimRoundingMode:i,dataFormat:u}=s,c=[1,1,1],h=Ar(r.shape,o,a,c,l,i,u),d=new gy(h,"avg",!1);return t.runWebGLProgram(d,[r],"float32")}const S8={kernelName:Tc,backendName:"webgl",kernelFunc:k8};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class C8{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterHeight,s=e.filterWidth,r=e.strideHeight,o=e.strideWidth,a=e.dilationHeight,l=e.dilationWidth,i=e.effectiveFilterHeight,u=e.effectiveFilterWidth,c=i-1-e.padInfo.top,h=u-1-e.padInfo.left,d=1/(t*s);this.userCode=`
      const ivec2 pads = ivec2(${c}, ${h});
      const float avgMultiplier = float(${d});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${i};
            wR += ${a}) {
          float dyR = float(dyRCorner + wR) / ${r}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${u};
            wC+= ${l}) {
            float dyC = float(dyCCorner + wC) / ${o}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);

            dotProd += dyValue * avgMultiplier;
          }
        }
        setOutput(dotProd);
      }
    `}}class I8{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterDepth,s=e.filterHeight,r=e.filterWidth,o=e.strideDepth,a=e.strideHeight,l=e.strideWidth,i=e.dilationDepth,u=e.dilationHeight,c=e.dilationWidth,h=e.effectiveFilterDepth,d=e.effectiveFilterHeight,p=e.effectiveFilterWidth,f=h-1-e.padInfo.front,g=d-1-e.padInfo.top,y=p-1-e.padInfo.left,x=1/(t*s*r);this.userCode=`
      const ivec3 pads = ivec3(${f}, ${g}, ${y});
      const float avgMultiplier = float(${x});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${h};
            wD += ${i}) {
          float dyD = float(dyDCorner + wD) / ${o}.0;

          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${d};
              wR += ${u}) {
            float dyR = float(dyRCorner + wR) / ${a}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${p};
                wC += ${c}) {
              float dyC = float(dyCCorner + wC) / ${l}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);

              dotProd += dyValue * avgMultiplier;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function N8(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,input:o}=e,a=o,{filterSize:l,strides:i,pad:u,dimRoundingMode:c}=s,h=[1,1,1],d=Ar(a.shape,l,i,h,u,c),p=new I8(d);return t.runWebGLProgram(p,[r],a.dtype)}const $8={kernelName:af,backendName:"webgl",kernelFunc:N8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function T8(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,input:o}=e,a=o;ru([r,o],"avgPoolGrad");const{filterSize:l,strides:i,pad:u}=s,c=zs(a.shape,l,i,1,u),h=new C8(c);return t.runWebGLProgram(h,[r],a.dtype)}const _8={kernelName:of,backendName:"webgl",kernelFunc:T8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function E8(n){const{inputs:e,backend:t,attrs:s}=n,{a:r,b:o}=e,{transposeA:a,transposeB:l}=s;return wc({a:r,b:o,transposeA:a,transposeB:l,backend:t})}const A8={kernelName:_c,backendName:"webgl",kernelFunc:E8};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class D8{constructor(e,t,s,r,o,a){this.outputShape=[],this.variableNames=["x","mean","variance"],st(e,t),st(e,s);let l="0.0";r!=null&&(st(e,r),this.variableNames.push("offset"),l="getOffsetAtOutCoords()");let i="1.0";o!=null&&(st(e,o),this.variableNames.push("scale"),i="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`
      void main() {
        float x = getXAtOutCoords();
        float mean = getMeanAtOutCoords();
        float variance = getVarianceAtOutCoords();
        float offset = ${l};
        float scale = ${i};
        float inv = scale * inversesqrt(variance + float(${a}));
        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class R8{constructor(e,t,s,r,o,a){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],st(e,t),st(e,s);let l="vec4(0.0)";r!=null&&(st(e,r),this.variableNames.push("offset"),l="getOffsetAtOutCoords()");let i="vec4(1.0)";o!=null&&(st(e,o),this.variableNames.push("scale"),i="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`
      void main() {
        vec4 offset = ${l};
        vec4 scale = ${i};

        vec4 x = getXAtOutCoords();
        vec4 mean = getMeanAtOutCoords();
        vec4 variance = getVarianceAtOutCoords();

        vec4 inv = scale * inversesqrt(variance + vec4(${a}));

        setOutput((x - mean) * inv + offset);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const F8=({inputs:n,backend:e,attrs:t})=>{const{x:s,mean:r,variance:o,offset:a,scale:l}=n;P(r.shape.length===o.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),P(a==null||r.shape.length===a.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),P(l==null||r.shape.length===l.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let{varianceEpsilon:i}=t;i==null&&(i=.001);const u=[s,r,o];let c=null;a!=null&&(c=a.shape,u.push(a));let h=null;l!=null&&(h=l.shape,u.push(l));const d=de().getBool("WEBGL_PACK_NORMALIZATION")?new R8(s.shape,r.shape,o.shape,c,h,i):new D8(s.shape,r.shape,o.shape,c,h,i);return e.runWebGLProgram(d,u,u[0].dtype)},O8={kernelName:Wc,backendName:"webgl",kernelFunc:F8};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class L8{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;const t=Tt(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const s=P8(this.rank);let r;const o=e.map((a,l)=>`sourceLoc.${Yp[l]} = start[${l}] + coords.${Yp[l]};`);r=`
        ${t} sourceLoc;
        ${t} coords = getOutputCoords();
        ${o.join(`
`)}
      `,this.userCode=`
      void main() {
        ${r}
        setOutput(getSource(${s}));
      }
    `}}const Yp=["x","y","z","w","u","v"];function P8(n){if(n===1)return"sourceLoc";if(n<=6)return Yp.slice(0,n).map(e=>"sourceLoc."+e).join(",");throw Error(`Slicing for rank ${n} is not yet supported`)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class z8{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const t=Tt(this.rank),s=Bn("coords",this.rank),r=Bn("sourceLoc",this.rank),o=this.rank===1?"sourceLoc":`vec2(${r.slice(-2).join()})`,a=`getChannel(getSource(${r.join()}), ${o})`,l=`
      result.x = ${a};
      if (++${s[this.rank-1]} < ${e[this.rank-1]}) {
        ++${r[this.rank-1]};
        result.y = ${a};
        --${r[this.rank-1]};
      }
    `,i=this.rank===1?"":`
      --${s[this.rank-1]};
      if (++${s[this.rank-2]} < ${e[this.rank-2]}) {
        ++${r[this.rank-2]};
        result.z = ${a};
        if (++${s[this.rank-1]} < ${e[this.rank-1]}) {
          ++${r[this.rank-1]};
          result.w = ${a};
        }
      }
    `,u=this.rank<=4?`sourceLoc = coords +
            ${t}(${e.map((c,h)=>`start[${h}]`).join()});`:e.map((c,h)=>`${r[h]} = ${s[h]} + start[${h}];`).join(`
`);this.userCode=`
      void main() {
        ${t} coords = getOutputCoords();
        ${t} sourceLoc;
        ${u}
        vec4 result = vec4(0.);
        ${l}
        ${i}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function B8(n,e,t,s){const r=s.texData.get(n.dataId),o=s.makeTensorInfo(t,n.dtype),a=s.texData.get(o.dataId);Object.assign(a,r),a.refCount=1,a.shape=t,a.dtype=n.dtype;let l=ug(e,Ze(n.shape));r.slice&&(l+=r.slice.flatOffset),a.slice={flatOffset:l,origDataId:r.slice&&r.slice.origDataId||n.dataId};const i=s.dataRefCount.get(a.slice.origDataId)||1;return s.dataRefCount.set(a.slice.origDataId,i+1),o}function oi(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{begin:o,size:a}=s,[l,i]=Xh(r,o,a);if(ag(r,l,i),me(i)===0)return t.makeTensorInfo(i,r.dtype,[]);if(t.shouldExecuteOnCPU([r])||r.dtype==="string"){const h=t.texData.get(r.dataId),d=AH(h.values,l,i,r.shape,r.dtype);return t.makeTensorInfo(i,r.dtype,d)}const{isPacked:u}=t.texData.get(r.dataId),c=lg(r.shape,l,i);if(u||!c){const h=de().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new z8(i):new L8(i),d=[l];return t.runWebGLProgram(h,[r],r.dtype,d)}return t.uploadToGPU(r.dataId),B8(r,l,i,t)}const M8={kernelName:yh,backendName:"webgl",kernelFunc:oi};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const V8=n=>{const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{blockShape:o,crops:a}=s;P(r.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet");const l=o.reduce((w,v)=>w*v),i=Hl(r.shape,o,l),u=jl(i.length,o.length),c=ql(r.shape,o,l),h=fg(a,o.length),d=mg(c,a,o.length),p=[],f=Fe({inputs:{x:r},backend:t,attrs:{shape:i}}),g=Mn({inputs:{x:f},backend:t,attrs:{perm:u}}),y=Fe({inputs:{x:g},backend:t,attrs:{shape:c}}),x=oi({inputs:{x:y},backend:t,attrs:{begin:h,size:d}});return p.push(f),p.push(g),p.push(y),p.forEach(w=>t.disposeIntermediateTensorInfo(w)),x},W8={kernelName:Ec,backendName:"webgl",kernelFunc:V8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function U8(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,weights:o}=e,{size:a}=s,l=t.readSync(r.dataId),i=t.readSync(o.dataId),u=xS(l,i,o.dtype,o.shape,a);return t.makeTensorInfo([a],o.dtype,u)}const G8={kernelName:lf,backendName:"webgl",kernelFunc:U8};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const H8=`
  int r = int(a.r) & int(b.r);
  int g = int(a.g) & int(b.g);
  int rb = int(a.b) & int(b.b);
  int ra = int(a.a) & int(b.a);
  return vec4(r, g, rb, ra);
`,j8=`
  return float(int(a.r) & int(b.r));
`;function q8(n){const{inputs:e,backend:t}=n,{a:s,b:r}=e,o=de().getBool("WEBGL_PACK_BINARY_OPERATIONS"),a=de().getNumber("WEBGL_VERSION");if(t.shouldExecuteOnCPU([s,r])||a===1){const i=t.texData.get(s.dataId).values,u=t.texData.get(r.dataId).values,[c,h]=tH(s.shape,r.shape,i,u,s.dtype),d=t.makeTensorInfo(h,s.dtype),p=t.texData.get(d.dataId);return p.values=c,d}let l;return o?l=new si(H8,s.shape,r.shape,!1):l=new qo(j8,s.shape,r.shape),t.runWebGLProgram(l,[s,r],s.dtype)}const K8={kernelName:Ac,backendName:"webgl",kernelFunc:q8};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function X8(n){const{inputs:e,backend:t}=n,{s0:s,s1:r}=e,o=t.readSync(s.dataId),a=t.readSync(r.dataId),l=st(Array.from(o),Array.from(a));return t.makeTensorInfo([l.length],"int32",Int32Array.from(l))}const Y8={kernelName:uf,backendName:"webgl",kernelFunc:X8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Z8="return float(a != b);",RS=Tn({opSnippet:Z8,cpuKernelImpl:kH,dtype:"bool"}),J8={kernelName:oh,backendName:"webgl",kernelFunc:RS};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function au(n){const{inputs:e,backend:t}=n,{input:s}=e,r=t.texData.get(s.dataId);return us({inputs:{x:r.complexTensorInfos.real},backend:t})}const Q8={kernelName:Wf,backendName:"webgl",kernelFunc:au};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eq="return float(int(x));";function tq(n,e){const t=new lr(n.shape,eq),s=e.runWebGLProgram(t,[n],"int32");return{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Zp(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{dtype:o}=s;if(o==="complex64"){if(r.dtype==="complex64")return us({inputs:{x:r},backend:t});const a=rn(r.shape),l=Zp({inputs:{x:r},backend:t,attrs:{dtype:"float32"}}),i=mo({inputs:{real:l,imag:a},backend:t});return a.dispose(),t.disposeIntermediateTensorInfo(l),i}if(r.dtype==="complex64"){const a=au({inputs:{input:r},backend:t}),l=Zp({inputs:{x:a},backend:t,attrs:{dtype:o}});return t.disposeIntermediateTensorInfo(a),l}if(!U0(r.dtype,o)){const a=us({inputs:{x:r},backend:t});return{dataId:a.dataId,shape:a.shape,dtype:o}}if(t.shouldExecuteOnCPU([r])){const a=t.texData.get(r.dataId).values,[l,i,u]=nH(a,r.shape,r.dtype,o);return t.makeTensorInfo(l,i,u)}if(o==="int32")return tq(r,t);if(o==="bool"){const a=t.makeTensorInfo([],"bool",Sn("bool",1)),i=RS({inputs:{a:r,b:a},backend:t});return t.disposeIntermediateTensorInfo(a),i}throw new Error(`Error in Cast: failed to cast ${r.dtype} to ${o}`)}const nq={kernelName:Xi,backendName:"webgl",kernelFunc:Zp};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _0="return ceil(x);",sq=bt({opSnippet:_0,packedOpSnippet:_0,cpuKernelImpl:sH}),rq={kernelName:Yi,backendName:"webgl",kernelFunc:sq};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class oq{constructor(e){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode=`

      void main() {
        float value = getAAtOutCoords();
        if (isnan(value)) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, minVal, maxVal));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class aq{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode=`
      void main() {
        vec4 value = getAAtOutCoords();

        if (any(isnan(value))) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iq(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{clipValueMin:o,clipValueMax:a}=s;let l;de().getBool("WEBGL_PACK_CLIP")?l=new aq(r.shape):l=new oq(r.shape);const i=[[o],[a]];return t.runWebGLProgram(l,[r],r.dtype,i)}const lq={kernelName:Zi,backendName:"webgl",kernelFunc:iq};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class uq{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode=`
      void main() {
        float re = abs(getRealAtOutCoords());
        float im = abs(getImagAtOutCoords());
        float mx = max(re, im);

        // sadly the length function in glsl is not underflow-safe
        // (at least not on Intel GPUs). So the safe solution is
        // to ensure underflow-safety in all cases.
        setOutput(
          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))
        );
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function E0(n,e){return{dataId:e.dataId,dtype:e.dtype,shape:n.shape}}function cq(n){const{inputs:e,backend:t}=n,{x:s}=e,r=t.texData.get(s.dataId),o=new uq(s.shape),a=[E0(s,r.complexTensorInfos.real),E0(s,r.complexTensorInfos.imag)];return t.runWebGLProgram(o,a,a[0].dtype)}const hq={kernelName:Dc,backendName:"webgl",kernelFunc:cq};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class dq{constructor(e){this.outputShape=[],this.outputShape=hr(e,1),this.variableNames=e.map((a,l)=>`T${l}`);const t=new Array(e.length-1);t[0]=e[0][1];for(let a=1;a<t.length;a++)t[a]=t[a-1]+e[a][1];const s=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let a=1;a<t.length;a++){const l=t[a-1];s.push(`else if (yC < ${t[a]}) setOutput(getT${a}(yR, yC-${l}));`)}const r=t.length,o=t[t.length-1];s.push(`else setOutput(getT${r}(yR, yC-${o}));`),this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int yR = coords.x;
        int yC = coords.y;

        ${s.join(`
        `)}
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class pq{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=hr(e,t);const s=this.outputShape,r=s.length,o=Tt(r),a=Bn("coords",r),l=["x","y","z","w","u","v"].slice(0,r);this.variableNames=e.map((g,y)=>`T${y}`);const i=new Array(e.length-1);i[0]=e[0][t];for(let g=1;g<i.length;g++)i[g]=i[g-1]+e[g][t];const u=l[t],c=l.slice(-2),h=l.join();let d=`if (${u} < ${i[0]}) {
        return getChannel(
            getT0(${h}), vec2(${c.join()}));
        }`;for(let g=1;g<i.length;g++){const y=i[g-1];d+=`
        if (${u} < ${i[g]}  && ${u} >= ${i[g-1]}) {
          return getChannel(
            getT${g}(${Vu(l,u,y)}),
            vec2(${Vu(c,u,y)}));
        }`}const p=i.length,f=i[i.length-1];d+=`
        return getChannel(
          getT${p}(${Vu(l,u,f)}),
          vec2(${Vu(c,u,f)}));`,this.userCode=`
      float getValue(${l.map(g=>"int "+g)}) {
        ${d}
      }

      void main() {
        ${o} coords = getOutputCoords();
        vec4 result = vec4(getValue(${a}), 0., 0., 0.);

        ${a[r-1]} = ${a[r-1]} + 1;
        if (${a[r-1]} < ${s[r-1]}) {
          result.g = getValue(${a});
        }

        ${a[r-2]} = ${a[r-2]} + 1;
        if (${a[r-2]} < ${s[r-2]}) {
          result.a = getValue(${a});
        }

        ${a[r-1]} = ${a[r-1]} - 1;
        if (${a[r-2]} < ${s[r-2]} &&
            ${a[r-1]} < ${s[r-1]}) {
          result.b = getValue(${a});
        }
        setOutput(result);
      }
    `}}function Vu(n,e,t){const s=n.indexOf(e);return n.map((o,a)=>a===s?`${o} - ${t}`:o).join()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function md(n){const{inputs:e,backend:t}=n,{input:s}=e,r=t.texData.get(s.dataId);return us({inputs:{x:r.complexTensorInfos.imag},backend:t})}const fq={kernelName:Tf,backendName:"webgl",kernelFunc:md};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ci(n,e,t){const s=n[0].dtype;if(s==="complex64"){const p=n.map(w=>au({inputs:{input:w},backend:t})),f=n.map(w=>md({inputs:{input:w},backend:t})),g=Ci(p,e,t),y=Ci(f,e,t),x=mo({inputs:{real:g,imag:y},backend:t});return p.forEach(w=>t.disposeIntermediateTensorInfo(w)),f.forEach(w=>t.disposeIntermediateTensorInfo(w)),t.disposeIntermediateTensorInfo(g),t.disposeIntermediateTensorInfo(y),x}let r=t.shouldExecuteOnCPU(n);if(s==="string"&&(r=!0),r){const p=n.map(k=>{const I=[-1,me(k.shape.slice(e))];return Fe({inputs:{x:k},backend:t,attrs:{shape:I}})}),f=p.map(k=>({vals:t.readSync(k.dataId),shape:k.shape})),g=hr(p.map(k=>k.shape),1),y=p[0].shape[0]===1,x=rH(f,g,s,y),w=hr(n.map(k=>k.shape),e),v=t.makeTensorInfo(w,s,x);return p.forEach(k=>t.disposeIntermediateTensorInfo(k)),v}const o=n.filter(p=>me(p.shape)>0),a=de().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&o[0].shape.length>1;if(o.length===1){const p=a?new lr(n[0].shape,Br):new Wr(n[0].shape,Br);return t.runWebGLProgram(p,n,s)}const l=de().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER");if(o.length>l){const p=[];for(let g=0;g<o.length;g+=l){const y=o.slice(g,g+l);p.push(Ci(y,e,t))}const f=Ci(p,e,t);for(const g of p)t.disposeIntermediateTensorInfo(g);return f}if(a){const p=new pq(o.map(f=>f.shape),e);return t.runWebGLProgram(p,o,s)}const{tensors2D:i,outShape:u}=mq(o,e,t),c=new dq(i.map(p=>p.shape)),h=t.runWebGLProgram(c,i,s);i.forEach(p=>t.disposeIntermediateTensorInfo(p));const d=Fe({inputs:{x:h},attrs:{shape:u},backend:t});return t.disposeIntermediateTensorInfo(h),d}function mq(n,e,t){const s=hr(n.map(o=>o.shape),e);return{tensors2D:n.map(o=>Fe({inputs:{x:o},attrs:{shape:[-1,me(o.shape.slice(e))]},backend:t})),outShape:s}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FS(n){const{inputs:e,backend:t,attrs:s}=n,{axis:r}=s,o=ct(r,e[0].shape)[0],a=e.map(u=>u.shape);hg(a,o);const l=hr(e.map(u=>u.shape),o);if(me(l)===0)return t.makeTensorInfo(l,e[0].dtype,[]);const i=e.filter(u=>me(u.shape)>0);return i.length===1?us({inputs:{x:i[0]},backend:t}):Ci(i,o,t)}const gq={kernelName:Rc,backendName:"webgl",kernelFunc:FS};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class OS{constructor(e,t=!1,s=null,r=!1,o=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;const a=e.padInfo.top,l=e.padInfo.left,i=e.strideHeight,u=e.strideWidth,c=e.dilationHeight,h=e.dilationWidth,d=e.filterHeight,p=e.filterWidth,f=Math.floor(e.inChannels/4)*4,g=e.inChannels%4,y=e.dataFormat==="channelsLast",x=y?1:2,w=y?2:3,v=y?3:1;let k="",C="";s&&(r?k=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${s}
        }`:o?k=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${s}
        }`:k=`
          float activation(float x) {
            ${s}
          }
        `,C="result = activation(result);");const I=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),o&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${k}

      const ivec2 strides = ivec2(${i}, ${u});
      const ivec2 pads = ivec2(${a}, ${l});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d2 = coords[${v}];

        ivec2 xRCCorner =
            ivec2(coords[${x}], coords[${w}]) * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${d}; wR++) {
          int xR = xRCorner + wR * ${c};

          if (xR < 0 || xR >= ${e.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${p}; wC++) {
            int xC = xCCorner + wC * ${h};

            if (xC < 0 || xC >= ${e.inWidth}) {
              continue;
            }

            for (int d1 = 0; d1 < ${f}; d1 += 4) {
              vec4 wValues = vec4(
                getW(wR, wC, d1, d2),
                getW(wR, wC, d1 + 1, d2),
                getW(wR, wC, d1 + 2, d2),
                getW(wR, wC, d1 + 3, d2)
              );

              if (${y}) {
                vec4 xValues = vec4(
                  getX(batch, xR, xC, d1),
                  getX(batch, xR, xC, d1 + 1),
                  getX(batch, xR, xC, d1 + 2),
                  getX(batch, xR, xC, d1 + 3)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec4 xValues = vec4(
                  getX(batch, d1, xR, xC),
                  getX(batch, d1 + 1, xR, xC),
                  getX(batch, d1 + 2, xR, xC),
                  getX(batch, d1 + 3, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }
            }

            if (${g===1}) {

              if (${y}) {
                dotProd +=
                    getX(batch, xR, xC, ${f}) *
                    getW(wR, wC, ${f}, d2);
              } else {
                dotProd +=
                    getX(batch, ${f}, xR, xC) *
                    getW(wR, wC, ${f}, d2);
              }

            } else if (${g===2}) {
              vec2 wValues = vec2(
                getW(wR, wC, ${f}, d2),
                getW(wR, wC, ${f} + 1, d2)
              );

              if (${y}) {
                vec2 xValues = vec2(
                  getX(batch, xR, xC, ${f}),
                  getX(batch, xR, xC, ${f} + 1)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec2 xValues = vec2(
                  getX(batch, ${f}, xR, xC),
                  getX(batch, ${f} + 1, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            } else if (${g===3}) {
              vec3 wValues = vec3(
                getW(wR, wC, ${f}, d2),
                getW(wR, wC, ${f} + 1, d2),
                getW(wR, wC, ${f} + 2, d2)
              );

              if (${y}) {
                vec3 xValues = vec3(
                  getX(batch, xR, xC, ${f}),
                  getX(batch, xR, xC, ${f} + 1),
                  getX(batch, xR, xC, ${f} + 2)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec3 xValues = vec3(
                  getX(batch, ${f}, xR, xC),
                  getX(batch, ${f} + 1, xR, xC),
                  getX(batch, ${f} + 2, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            }
          }
        }

        float result = dotProd;
        ${I}
        ${C}
        setOutput(result);
      }
    `}}class yq{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const t=e.padInfo.front,s=e.padInfo.top,r=e.padInfo.left,o=e.strideDepth,a=e.strideHeight,l=e.strideWidth,i=e.dilationDepth,u=e.dilationHeight,c=e.dilationWidth,h=e.filterDepth,d=e.filterHeight,p=e.filterWidth,f=Math.floor(e.inChannels/4)*4,g=e.inChannels%4;this.userCode=`
      const ivec3 strides = ivec3(${o}, ${a}, ${l});
      const ivec3 pads = ivec3(${t}, ${s}, ${r});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d2 = coords.u;

        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xFCorner = xFRCCorner.x;
        int xRCorner = xFRCCorner.y;
        int xCCorner = xFRCCorner.z;

        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get
        // y(yF, yR, yC, d2). ? = to be determined. : = across all
        // values in that axis.
        float dotProd = 0.0;
        for (int wF = 0; wF < ${h}; wF++) {
          int xF = xFCorner + wF * ${i};

          if (xF < 0 || xF >= ${e.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${d}; wR++) {
            int xR = xRCorner + wR * ${u};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${p}; wC++) {
              int xC = xCCorner + wC * ${c};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              for (int d1 = 0; d1 < ${f}; d1 += 4) {
                vec4 xValues = vec4(
                  getX(batch, xF, xR, xC, d1),
                  getX(batch, xF, xR, xC, d1 + 1),
                  getX(batch, xF, xR, xC, d1 + 2),
                  getX(batch, xF, xR, xC, d1 + 3)
                );
                vec4 wValues = vec4(
                  getW(wF, wR, wC, d1, d2),
                  getW(wF, wR, wC, d1 + 1, d2),
                  getW(wF, wR, wC, d1 + 2, d2),
                  getW(wF, wR, wC, d1 + 3, d2)
                );

                dotProd += dot(xValues, wValues);
              }

              if (${g===1}) {
                dotProd +=
                  getX(batch, xF, xR, xC, ${f}) *
                  getW(wF, wR, wC, ${f}, d2);
              } else if (${g===2}) {
                vec2 xValues = vec2(
                  getX(batch, xF, xR, xC, ${f}),
                  getX(batch, xF, xR, xC, ${f} + 1)
                );
                vec2 wValues = vec2(
                  getW(wF, wR, wC, ${f}, d2),
                  getW(wF, wR, wC, ${f} + 1, d2)
                );
                dotProd += dot(xValues, wValues);
              } else if (${g===3}) {
                vec3 xValues = vec3(
                  getX(batch, xF, xR, xC, ${f}),
                  getX(batch, xF, xR, xC, ${f} + 1),
                  getX(batch, xF, xR, xC, ${f} + 2)
                );
                vec3 wValues = vec3(
                  getW(wF, wR, wC, ${f}, d2),
                  getW(wF, wR, wC, ${f} + 1, d2),
                  getW(wF, wR, wC, ${f} + 2, d2)
                );
                dotProd += dot(xValues, wValues);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class LS{constructor(e,t=!1,s=null,r=!1,o=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=Fn(this.outputShape.length);const a=e.padInfo.left,l=e.strideWidth,i=e.dilationWidth,u=e.filterHeight,c=e.filterWidth,h=c;let d=`
       int xR; int xC; int xCOffset;
       vec4 wTexel; vec4 previous; vec4 final;`;for(let y=0;y<c;y++)d+=`
           vec4 xTexelC${y*2};
           int xTexelC${y*2}Ready;
           vec4 xTexelC${y*2+1};
           int xTexelC${y*2+1}Ready;
           vec4 xC${y};`;d+=`
     for (int r = 0; r < ${u}; r++) {
      for (int d1 = 0; d1 < ${e.inChannels}; d1 += 2) {
       `;for(let y=0;y<c;y++)d+=`
           xTexelC${y*2} = vec4(0.0);
           xTexelC${y*2}Ready = 0;
           xTexelC${y*2+1} = vec4(0.0);
           xTexelC${y*2+1}Ready = 0;
           xC${y} = vec4(0.0);`;d+=`
         xR = xRCorner + r * dilations[0];
         if (xR >=0 && xR < inDims[0]) {
       `;for(let y=0;y<(h+1)/2;y++){const x=y*2;if(d+=`
           xC = xCCorner + ${x*i};
           `,l===1){if(x<c&&(a%2===1?(d+=`
                 xCOffset = xC + 1;
                 if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x}Ready == 0) {
                   xTexelC${x} = getX(batch, xR, xCOffset, d1);

                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${x}.zw = vec2(0.0);
                   }
                   xTexelC${x}Ready = 1;
                 }
               `,i===1&&x>0?d+=`
                 xC${x} = vec4(xTexelC${x-2}.zw, xTexelC${x}.xy);
                 `:d+=`
                   xCOffset = xC + 1 - 2;

                   if (xCOffset >= 0 && xCOffset < inDims[1]) {
                     previous = getX(batch, xR, xCOffset, d1);

                     // Need to manually clear unused channels in case
                     // we're reading from recycled texture.
                     if (xCOffset + 1 >= inDims[1]) {
                       previous.zw = vec2(0.0);
                     }

                     xC${x} = vec4(previous.zw, xTexelC${x}.xy);
                   } else {
                     xC${x} = vec4(0.0, 0.0, xTexelC${x}.xy);
                   }
                   `):d+=`
                 if (xC >= 0 && xC < inDims[1] && xTexelC${x}Ready == 0) {
                   xTexelC${x} = getX(batch, xR, xC, d1);
                   if (xC + 1 >= inDims[1]) {
                     xTexelC${x}.zw = vec2(0.0);
                   }
                   xTexelC${x}Ready = 1;
                 }

                 xC${x} = xTexelC${x};
                 `,x+1<c)){const w=a%2===0?ef(i):i;i%2===0&&a%2===1||i%2!==0&&a%2!==1?(d+=`
                   xCOffset = xC + imod(pads[1], 2) + ${w};

                   if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x+1}Ready == 0) {
                     xTexelC${x+1} = getX(batch, xR, xCOffset, d1);

                     // Need to manually clear unused channels in case
                     // we're reading from recycled texture.
                     if (xCOffset + 1 >= inDims[1]) {
                       xTexelC${x+1}.zw = vec2(0.0);
                     }
                     xTexelC${x+1}Ready = 1;
                   }
                   `,i>1?d+=`
                     xCOffset -= 2;
                     if (xCOffset >= 0 && xCOffset < inDims[1]) {
                      previous = getX(batch, xR, xCOffset, d1);
                      xC${x+1} = vec4(previous.zw, xTexelC${x+1}.xy);
                     } else {
                      xC${x+1} = vec4(0.0, 0.0, xTexelC${x+1}.xy);
                     }
                     `:d+=`
                     xC${x+1} = vec4(xTexelC${x}.zw, xTexelC${x+1}.xy);
                     `):w===1?d+=`
                     xC${x+1} = xTexelC${x};
                     `:d+=`
                     xCOffset = xC + ${w};

                     if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x+1}Ready == 0) {
                       xTexelC${x+1} = getX(batch, xR, xCOffset, d1);
                       if (xCOffset + 1 >= inDims[1]) {
                         xTexelC${x+1}.zw = vec2(0.0);
                       }
                       xTexelC${x+1}Ready = 1;
                     }

                     xC${x+1} = xTexelC${x+1};
                     `}}else x<c&&(a%2===1?(d+=`
                 xCOffset = xC + 1 - strides[1];
                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x}Ready == 0) {
                   xTexelC${x} = getX(batch, xR, xCOffset, d1);
                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${x}.zw = vec2(0.0);
                   }
                   xTexelC${x}Ready = 1;
                 }

                 if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${x+1}Ready == 0) {
                   xTexelC${x+1} = getX(batch, xR, xC + 1, d1);
                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xC + 2 >= inDims[1]) {
                     xTexelC${x+1}.zw = vec2(0.0);
                   }
                   xTexelC${x+1}Ready = 1;
                 }

                 xC${x} = vec4(xTexelC${x}.zw, xTexelC${x+1}.zw);
               `,x+1<c&&(d+=`
                   final = vec4(0.0);
                   xCOffset = xC + 1 + strides[1];
                   if(xCOffset >= 0 && xCOffset < inDims[1]) {
                     final = getX(batch, xR, xCOffset, d1);
                   }
                   xC${x+1} = vec4(xTexelC${x+1}.xy, final.xy);
                 `)):(d+=`
                 if(xC >= 0 && xC < inDims[1] && xTexelC${x}Ready == 0) {
                   xTexelC${x} = getX(batch, xR, xC, d1);
                   if (xC + 1 >= inDims[1]) {
                     xTexelC${x}.zw = vec2(0.0);
                   }
                   xTexelC${x}Ready = 1;
                 }

                 xCOffset = xC + strides[1];
                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x+1}Ready == 0) {
                   xTexelC${x+1} = getX(batch, xR, xCOffset, d1);
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${x+1}.zw = vec2(0.);
                   }
                   xTexelC${x+1}Ready = 1;
                 }

                 xC${x} = vec4(
                   xTexelC${x}.xy, xTexelC${x+1}.xy);
               `,x+1<c&&(d+=`
                   xC${x+1} = vec4(xTexelC${x}.zw, xTexelC${x+1}.zw);
                 `)));x<c&&(d+=`
             wTexel = getW(r, ${x}, d1, d2);
             dotProd += xC${x}.xxzz * vec4(wTexel.xy, wTexel.xy);
             if(d1 + 1 < ${e.inChannels}) {
               dotProd += xC${x}.yyww * vec4(wTexel.zw, wTexel.zw);
             }
           `,x+1<c&&(d+=`
               wTexel = getW(r, ${x+1}, d1, d2);
               dotProd += xC${x+1}.xxzz * vec4(wTexel.xy, wTexel.xy);
               if(d1 + 1 < ${e.inChannels}) {
                 dotProd += xC${x+1}.yyww * vec4(wTexel.zw, wTexel.zw);
               }
             `))}d+=`
     }
   `,d+=`
     }
   `,d+=`
     }
   `;let p="",f="";s&&(r?p=`vec4 activation(vec4 a) {
           vec4 b = getPreluActivationWeightsAtOutCoords();
           ${s}
         }`:o?p=`vec4 activation(vec4 a) {
           vec4 b = getLeakyreluAlphaAtOutCoords();
           ${s}
         }`:p=`vec4 activation(vec4 x) {
           ${s}
         }`,f="result = activation(result);");const g=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),o&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
       ${p}

       void main() {
         ivec4 coords = getOutputCoords();
         int batch = coords.x;
         ivec2 xRCCorner = coords.yz * strides - pads;
         int d2 = coords.w;
         int xRCorner = xRCCorner.x;
         int xCCorner = xRCCorner.y;

         //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
         vec4 dotProd = vec4(0.000000000000001);

         ${d}

         vec4 result = dotProd - vec4(0.000000000000001);
         ${g}
         ${f}
         setOutput(result);
       }
     `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class bq{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec4"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=e,this.enableShapeUniforms=Fn(this.outputShape.length);const{dataFormat:s}=t,r=Wn(),o=s==="channelsLast",a=o?1:2,l=o?2:3,i=this.enableShapeUniforms?"if(blockIndex < outShape[2] && pos < outShape[1]) {":`if(blockIndex < ${e[2]} && pos < ${e[1]}) {`;let u="";for(let c=0;c<=1;c++)for(let h=0;h<=1;h++)u+=`
          blockIndex = rc.z + ${h};
          pos = rc.y + ${c};

          ${i}
            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];
            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);

            if(d0 < inputShape[${a}] && d0 >= 0) {
              // Use custom imod instead mod. On Intel GPU, mod may generate
              // unexpected value.
              // https://github.com/tensorflow/tfjs/issues/5447
              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];
              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /
                  inChannels);

              if(d1 < inputShape[${l}] && d1 >= 0) {

                ch = imod(pos, inChannels);

                if (${o}) {
                  innerDims = vec2(d1, ch);
                  result[${c*2+h}] = getChannel(
                    getA(rc.x, d0, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                } else {
                  innerDims = vec2(d0, d1);
                  result[${c*2+h}] = getChannel(
                    getA(rc.x, ch, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                }
              }
            }
          }
        `;this.userCode=`
      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0);

        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;
        vec2 innerDims;

        ${u}

        ${r.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vc(n,e){const t=n.length;return t>=3?e?[...n.slice(0,-3),n[t-3]*n[t-2],n[t-1]]:[...n.slice(0,-3),n[t-3],n[t-2]*n[t-1]]:!e&&t===1&&n[0]>1?[n[0],1]:null}function PS({x:n,filter:e,convInfo:t,backend:s,bias:r=null,preluActivationWeights:o=null,leakyreluAlpha:a=0,activation:l=null}){const i=n.shape,u=s.texData.get(n.dataId),c=t.inChannels,h=i[0]*i[1]*i[2],d=t.outChannels,p=t.dataFormat==="channelsLast",f=!1,g=!1;let y;const x=[];if(o!=null){const k=vc(o.shape,p);k!=null&&(o=Fe({inputs:{x:o},backend:s,attrs:{shape:k}}),x.push(o))}if(r!=null){const k=vc(r.shape,p);k!=null&&(r=Fe({inputs:{x:r},backend:s,attrs:{shape:k}}),x.push(r))}if(!((h===1||d===1)&&c>_S)&&u.isPacked&&p&&u.texture!=null&&i[2]%2!==0&&ft(u.shape.slice(-3),i.slice(-3))){const k=i[0]*i[1]*(i[2]+1),C={dataId:n.dataId,shape:[1,k,t.inChannels],dtype:n.dtype},I=u.shape;u.shape=u.shape.slice(),u.shape[u.shape.length-2]++,P(xc(u.shape,C.shape),()=>`packed reshape ${u.shape} to ${C.shape} isn't free`);const N=Fe({inputs:{x:e},backend:s,attrs:{shape:[1,t.inChannels,t.outChannels]}});x.push(N);const E=wc({a:C,b:N,backend:s,transposeA:f,transposeB:g,bias:r,activation:l,preluActivationWeights:o,leakyreluAlpha:a}),R=s.texData.get(E.dataId);P(R.isPacked,()=>"batchMatMul result is expected to be packed"),u.shape=I,R.shape=t.outShape,y=us({inputs:{x:E},backend:s}),y.shape=t.outShape,x.push(E)}else{const k=t.outHeight*t.outWidth,C=Fe({inputs:{x:n},backend:s,attrs:{shape:p?[t.batchSize,k,t.inChannels]:[t.batchSize,t.inChannels,k]}}),I=Fe({inputs:{x:e},backend:s,attrs:{shape:[1,t.inChannels,t.outChannels]}}),N=wc({a:p?C:I,b:p?I:C,transposeA:!p,transposeB:g,backend:s,bias:r,activation:l,preluActivationWeights:o,leakyreluAlpha:a});y=Fe({inputs:{x:N},backend:s,attrs:{shape:t.outShape}}),x.push(C),x.push(I),x.push(N)}for(const k of x)s.disposeIntermediateTensorInfo(k);return y}function zS({x:n,filter:e,convInfo:t,backend:s,bias:r=null,preluActivationWeights:o=null,leakyreluAlpha:a=0,activation:l=null}){const{filterWidth:i,filterHeight:u,inChannels:c,outWidth:h,outHeight:d,dataFormat:p}=t,f=p==="channelsLast",g=i*u*c,y=d*h,x=[t.batchSize,g,y],w=!0,v=!1,k=[];if(o!=null){const M=vc(o.shape,f);M!=null&&(o=Fe({inputs:{x:o},backend:s,attrs:{shape:M}}),k.push(o))}if(r!=null){const M=vc(r.shape,f);M!=null&&(r=Fe({inputs:{x:r},backend:s,attrs:{shape:M}}),k.push(r))}const C=Fe({inputs:{x:e},backend:s,attrs:{shape:[1,g,me(e.shape)/g]}});k.push(C);const I=new bq(x,t),N=[n.shape,[t.padInfo.top,t.padInfo.left],[t.strideHeight,t.strideWidth],[t.dilationHeight,t.dilationWidth],[t.inChannels],[t.filterWidth*t.inChannels],[t.outWidth]],E=s.runWebGLProgram(I,[n],"float32",N),R=Fe({inputs:{x:E},backend:s,attrs:{shape:x}});k.push(E),k.push(R);const O=r!=null,B=o!=null,j=l==="leakyrelu",U=l?zi(l,!0):null,K=new TS(f?R.shape:C.shape,f?C.shape:R.shape,f?[t.batchSize,y,t.outChannels]:[t.batchSize,t.outChannels,y],w,v,O,U,B,j),H=f?[R,C]:[C,R];if(r&&H.push(r),B&&H.push(o),j){const M=s.makeTensorInfo([],"float32",ro(a,"float32"));H.push(M),k.push(M)}const Z=s.runWebGLProgram(K,H,"float32"),ue=Fe({inputs:{x:Z},backend:s,attrs:{shape:t.outShape}});k.push(Z);for(const M of k)s.disposeIntermediateTensorInfo(M);return ue}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xq(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:o}=e,{strides:a,pad:l,dataFormat:i,dilations:u,dimRoundingMode:c}=s,h=Dr(i),d=yn(r.shape,o.shape,a,u,l,c,!1,h);let p;if(d.filterHeight===1&&d.filterWidth===1&&d.dilationHeight===1&&d.dilationWidth===1&&d.strideHeight===1&&d.strideWidth===1&&(d.padInfo.type==="SAME"||d.padInfo.type==="VALID"))p=PS({x:r,filter:o,convInfo:d,backend:t});else if(d.strideWidth<=2&&h==="channelsLast"&&de().getBool("WEBGL_EXP_CONV")){const g=new LS(d),y=[[d.padInfo.top,d.padInfo.left],[d.strideHeight,d.strideWidth],[d.dilationHeight,d.dilationWidth],[d.inHeight,d.inWidth]];p=t.runWebGLProgram(g,[r,o],"float32",y)}else if(de().getBool("WEBGL_CONV_IM2COL"))p=zS({x:r,filter:o,convInfo:d,backend:t});else{const g=new OS(d);p=t.runWebGLProgram(g,[r,o],"float32")}const f=Fe({inputs:{x:p},backend:t,attrs:{shape:d.outShape}});return t.disposeIntermediateTensorInfo(p),f}const wq={kernelName:Fc,backendName:"webgl",kernelFunc:xq};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class vq{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,s=e.strideWidth,r=e.padInfo.top,o=e.padInfo.left,a=e.dataFormat==="channelsLast";this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int d2 = coords.w;

        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yR = 0; yR < ${e.outHeight}; yR++) {
            int xR = wR + yR * ${t} - ${r};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${e.outWidth}; yC++) {
              int xC = wC + yC * ${s} - ${o};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              ${a?`float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);`:`float dyValue = getDy(b, d2, yR, yC);
              float xValue = getX(b, d1, xR, xC);
              dotProd += (xValue * dyValue);`}
            }
          }
        }
        setOutput(dotProd);
      }
    `}}class kq{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,s=e.filterWidth,r=e.strideHeight,o=e.strideWidth,a=e.dataFormat==="channelsLast",l=t-1-e.padInfo.top,i=s-1-e.padInfo.left,u=a?1:2,c=a?2:3,h=a?3:1;this.userCode=`
      const ivec2 pads = ivec2(${l}, ${i});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[${h}];

        ivec2 dyCorner = ivec2(coords[${u}], coords[${c}]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / ${r}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${s}; wC++) {
            float dyC = float(dyCCorner + wC) / ${o}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${s} - 1 - wC;

            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {

              if (${a}) {
                float xValue = getDy(batch, idyR, idyC, d2);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              } else {
                float xValue = getDy(batch, d2, idyR, idyC);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `}}class Sq{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideDepth,s=e.strideHeight,r=e.strideWidth,o=e.padInfo.front,a=e.padInfo.top,l=e.padInfo.left;this.userCode=`
      void main() {
        ivec5 coords = getOutputCoords();
        int wF = coords.x;
        int wR = coords.y;
        int wC = coords.z;
        int d1 = coords.w;
        int d2 = coords.u;

        float dotProd = 0.0;

        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yF = 0; yF < ${e.outDepth}; yF++) {
            int xF = wF + yF * ${t} - ${o};

            if (xF < 0 || xF >= ${e.inDepth}) {
              continue;
            }

            for (int yR = 0; yR < ${e.outHeight}; yR++) {
              int xR = wR + yR * ${s} - ${a};

              if (xR < 0 || xR >= ${e.inHeight}) {
                continue;
              }

              for (int yC = 0; yC < ${e.outWidth}; yC++) {
                int xC = wC + yC * ${r} - ${l};

                if (xC < 0 || xC >= ${e.inWidth}) {
                  continue;
                }

                float dyValue = getDy(b, yF, yR, yC, d2);
                float xValue = getX(b, xF, xR, xC, d1);
                dotProd += (xValue * dyValue);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}class Cq{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterDepth,s=e.filterHeight,r=e.filterWidth,o=e.strideDepth,a=e.strideHeight,l=e.strideWidth,i=t-1-e.padInfo.front,u=s-1-e.padInfo.top,c=r-1-e.padInfo.left;this.userCode=`
      const ivec3 pads = ivec3(${i}, ${u}, ${c});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.u;


        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyFCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        float dotProd = 0.0;
        for (int wF = 0; wF < ${t}; wF++) {
          float dyF = float(dyFCorner + wF) / ${o}.0;

          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {
            continue;
          }
          int idyF = int(dyF);

          int wFPerm = ${t} - 1 - wF;

          for (int wR = 0; wR < ${s}; wR++) {
            float dyR = float(dyRCorner + wR) / ${a}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
              fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            int wRPerm = ${s} - 1 - wR;

            for (int wC = 0; wC < ${r}; wC++) {
              float dyC = float(dyCCorner + wC) / ${l}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              int wCPerm = ${r} - 1 - wC;

              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {
                float xValue = getDy(batch, idyF, idyR, idyC, d2);
                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Iq(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,dy:o}=e,{strides:a,pad:l,dataFormat:i,dimRoundingMode:u,filterShape:c}=s,h=Dr(i),d=yn(r.shape,c,a,1,l,u,!1,h),p=new vq(d);return t.runWebGLProgram(p,[r,o],"float32")}const Nq={kernelName:hf,backendName:"webgl",kernelFunc:Iq};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class $q{constructor(e){this.variableNames=["dy","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"strides",type:"vec2"}],this.outputShape=e.inShape,this.enableShapeUniforms=Fn(this.outputShape.length);const t=e.filterHeight,s=e.filterWidth,r=t-1-e.padInfo.top,o=s-1-e.padInfo.left;this.userCode=`
      const ivec2 pads = ivec2(${r}, ${o});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];

        ivec2 dyCorner = ivec2(coords[1], coords[2]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        vec4 result = vec4(0.);
        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / strides[0];
          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);
          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${s}; wC++) {
            int wCPerm = ${s} - 1 - wC;

            float dyC = float(dyCCorner + wC) / strides[1];
            bool idyCVal = (dyC >= 0.0) && (dyC < ${e.outWidth}.0)
              && (fract(dyC) == 0.0);
            int idyC = int(dyC);

            float dyC2 = float(dyCCorner + wC + 1) / strides[1];
            bool idyCVal2 = (dyC2 >= 0.0) && (dyC2 < ${e.outWidth}.0)
              && (fract(dyC2) == 0.0);
            int idyC2 = int(dyC2);

            if (idyCVal && idyCVal2) {
              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {
                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);
                vec4 dySample = getDy(batch, idyR, idyC, d2);
                vec4 dySample2 = (idyC / 2 == idyC2 / 2) ?
                  dySample : getDy(batch, idyR, idyC2, d2);

                vec2 dyValue = mod(float(idyC), 2.) == 0. ?
                  dySample.xy : dySample.zw;
                result.xy += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));

                dyValue = mod(float(idyC2), 2.) == 0. ?
                  dySample2.xy : dySample2.zw;
                result.zw += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));
              }
            } else if (idyCVal) {
              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {
                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);
                vec4 dySample = getDy(batch, idyR, idyC, d2);
                vec2 dyValue = mod(float(idyC), 2.) == 0. ?
                  dySample.xy : dySample.zw;
                result.xy += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));
              }
            } else if (idyCVal2) {
              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {
                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);
                vec4 dySample = getDy(batch, idyR, idyC2, d2);
                vec2 dyValue = mod(float(idyC2), 2.) == 0. ?
                  dySample.xy : dySample.zw;
                result.zw += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));
              }
            }
          }
        }
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Tq(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,filter:o}=e,{inputShape:a,strides:l,pad:i,dataFormat:u,dimRoundingMode:c}=s,h=Dr(u),d=yn(a,o.shape,l,1,i,c,!1,h);if(de().getBool("WEBGL_PACK_CONV2DTRANSPOSE")&&h==="channelsLast"){const p=[[d.strideHeight,d.strideWidth]],f=new $q(d);return t.runWebGLProgram(f,[r,o],"float32",p)}else{const p=new kq(d);return t.runWebGLProgram(p,[r,o],"float32")}}const _q={kernelName:Oc,backendName:"webgl",kernelFunc:Tq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Eq(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:o}=e,{strides:a,pad:l,dilations:i}=s,u=io(r.shape,o.shape,a,i,l),c=new yq(u);return t.runWebGLProgram(c,[r,o],"float32")}const Aq={kernelName:Lc,backendName:"webgl",kernelFunc:Eq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Dq(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,dy:o}=e,{strides:a,pad:l,filterShape:i}=s,u=io(r.shape,i,a,1,l),c=new Sq(u);return t.runWebGLProgram(c,[r,o],"float32")}const Rq={kernelName:df,backendName:"webgl",kernelFunc:Dq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Fq(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,filter:o}=e,{pad:a,strides:l,inputShape:i}=s,u=io(i,o.shape,l,1,a),c=new Cq(u);return t.runWebGLProgram(c,[r,o],"float32")}const Oq={kernelName:pf,backendName:"webgl",kernelFunc:Fq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Lq=ri+`
  return cos(x);
`,Pq=`
  vec4 result = cos(x);
  bvec4 isNaN = isnan(x);
  ${aa}
  return result;
`,zq=bt({opSnippet:Lq,packedOpSnippet:Pq}),Bq={kernelName:Ji,backendName:"webgl",kernelFunc:zq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Mq=`
  float e2x = exp(-x);
  return (e2x + 1.0 / e2x) / 2.0;
`,Vq=bt({opSnippet:Mq}),Wq={kernelName:Qi,backendName:"webgl",kernelFunc:Vq};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Uq{constructor(e,t,s,r,o){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[a,l,i,u]=e,[c]=t,[h,d]=s;this.outputShape=[c,h,d,u];const p=r==="bilinear"?1:0,[f,g]=[`${l-1}.0`,`${i-1}.0`],[y,x,w]=h>1?[`${(l-1)/(h-1)}`,"(y2-y1) * height_ratio",`y1*${f} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${f}`],[v,k,C]=d>1?[`${(i-1)/(d-1)}`,"(x2-x1) * width_ratio",`x1*${g} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${g}`];this.userCode=`
      const float height_ratio = float(${y});
      const float width_ratio = float(${v});
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int y = coords[1];
        int x = coords[2];
        int d = coords[3];

        // get box vals
        float y1 = getBoxes(b,0);
        float x1 = getBoxes(b,1);
        float y2 = getBoxes(b,2);
        float x2 = getBoxes(b,3);

        // get image in batch index
        int bInd = round(getBoxInd(b));
        if(bInd < 0 || bInd >= ${a}) {
          return;
        }

        float height_scale = ${x};
        float width_scale = ${k};

        float in_y = ${w};
        if( in_y < 0.0 || in_y > ${f} ) {
          setOutput(float(${o}));
          return;
        }
        float in_x = ${C};
        if( in_x < 0.0 || in_x > ${g} ) {
          setOutput(float(${o}));
          return;
        }

        vec2 sourceFracIndexCR = vec2(in_x,in_y);
        if(${p} == 1) {
          // Compute the four integer indices.
          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);
          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));

          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);
          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);
          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);
          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);

          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);

          float top = topLeft + (topRight - topLeft) * fracCR.x;
          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;
          float newValue = top + (bottom - top) * fracCR.y;
          setOutput(newValue);
        } else {
          // Compute the coordinators of nearest neighbor point.
          ivec2 sourceNearestCR = ivec2(floor(
            sourceFracIndexCR + vec2(0.5,0.5)));
          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);
          setOutput(newValue);
        }
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Gq=n=>{const{inputs:e,backend:t,attrs:s}=n,{image:r,boxes:o,boxInd:a}=e,{cropSize:l,method:i,extrapolationValue:u}=s,c=new Uq(r.shape,o.shape,l,i,u);return t.runWebGLProgram(c,[r,o,a],"float32")},Hq={kernelName:mf,backendName:"webgl",kernelFunc:Gq};var Mi;(function(n){n.Prod="*",n.Sum="+"})(Mi||(Mi={}));class A0{constructor(e,t,s,r){this.op=e,this.outputShape=t,this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}];const o=this.outputShape.length,a=this.op===Mi.Prod?"1.0":"0.0",l=s?a:`getX(${D0(o,"coords",this.op)})`,i=this.outputShape[this.outputShape.length-1];let u="",c="";s?(u=r?`end != ${i-1}`:"end != 0",c=r?"end + 1":"end - 1"):(u=r?`end + pow2 < ${i}`:"end >= pow2",c=r?"end + pow2":"end - pow2"),this.userCode=`
      void main() {
        ${Tt(o)} coords = getOutputCoords();
        int end = ${R0(o,"coords",this.op)};
        float val = ${l};
        int pow2 = int(pow(2.0, index));
        if (${u}) {
          int idx = ${c};
          ${R0(o,"coords",this.op)} = idx;
          val ${this.op}= getX(${D0(o,"coords",this.op)});
        }
        setOutput(val);
      }
    `}}function D0(n,e,t){if(n===1)return`${e}`;if(n===2)return`${e}.x, ${e}.y`;if(n===3)return`${e}.x, ${e}.y, ${e}.z`;if(n===4)return`${e}.x, ${e}.y, ${e}.z, ${e}.w`;throw new Error(`Cumulative ${t} for rank ${n} is not yet supported`)}function R0(n,e,t){if(n===1)return`${e}`;if(n===2)return`${e}.y`;if(n===3)return`${e}.z`;if(n===4)return`${e}.w`;throw new Error(`Cumulative ${t} for rank ${n} is not yet supported`)}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BS(n,e,t,s,r,o){const a=e.shape.length,l=jt([s],a);let i=e;l!=null&&(i=Mn({inputs:{x:e},backend:t,attrs:{perm:l}}));const u=Qt(1,a)[0];if(u!==a-1)throw new Error(`WebGL cumprod shader expects an inner-most axis=${e.shape.length-1} but got axis=${s}`);const c=i.shape[u];let h=us({inputs:{x:i},backend:t});for(let d=0;d<=Math.ceil(Math.log2(c))-1;d++){const p=new A0(n,i.shape,!1,o),f=[[d]],g=h;h=t.runWebGLProgram(p,[h],h.dtype,f),t.disposeIntermediateTensorInfo(g)}if(r){const d=new A0(n,i.shape,r,o),p=h;h=t.runWebGLProgram(d,[h],h.dtype),t.disposeIntermediateTensorInfo(p)}if(l!=null){const d=lo(l),p=Mn({inputs:{x:h},backend:t,attrs:{perm:d}});return t.disposeIntermediateTensorInfo(h),t.disposeIntermediateTensorInfo(i),p}return h}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jq(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o,exclusive:a,reverse:l}=s;return BS(Mi.Prod,r,t,o,a,l)}const qq={kernelName:ff,backendName:"webgl",kernelFunc:jq};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Kq(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o,exclusive:a,reverse:l}=s;return BS(Mi.Sum,r,t,o,a,l)}const Xq={kernelName:Pc,backendName:"webgl",kernelFunc:Kq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Yq(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,weights:o}=e,{size:a,binaryOutput:l}=s;if(r.shape.length===1){const i=t.readSync(r.dataId),u=t.readSync(o.dataId),c=xS(i,u,o.dtype,o.shape,a);return t.makeTensorInfo([a],o.dtype,c)}else if(r.shape.length===2){const i=t.bufferSync(r),u=t.bufferSync(o),c=eH(i,u,a,l);return t.makeTensorInfo(c.shape,o.dtype,c.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${r.shape.length}.`)}const Zq={kernelName:gf,backendName:"webgl",kernelFunc:Yq};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Jq{constructor(e,t,s){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=s,this.userCode=`
    void main() {
      ivec4 coords = getOutputCoords();
      int b = coords[0];
      int h = ${this.getHeightCoordString()};
      int w = ${this.getWidthCoordString()};
      int d = ${this.getDepthCoordString()};

      int in_h = h / ${t};
      int offset_h = imod(h, ${t});
      int in_w = w / ${t};
      int offset_w = imod(w, ${t});
      int offset_d = (offset_h * ${t} + offset_w) *
        ${this.getOutputDepthSize()};
      int in_d = d + offset_d;

      float result = ${this.getInputSamplingString()};
      setOutput(result);
    }
  `}getHeightCoordString(){return this.dataFormat==="NHWC"?"coords[1]":"coords[2]"}getWidthCoordString(){return this.dataFormat==="NHWC"?"coords[2]":"coords[3]"}getDepthCoordString(){return this.dataFormat==="NHWC"?"coords[3]":"coords[1]"}getOutputDepthSize(){return this.dataFormat==="NHWC"?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return this.dataFormat==="NHWC"?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Qq(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{blockSize:o,dataFormat:a}=s,l=r.shape[0],i=a==="NHWC"?r.shape[1]:r.shape[2],u=a==="NHWC"?r.shape[2]:r.shape[3],c=a==="NHWC"?r.shape[3]:r.shape[1],h=i*o,d=u*o,p=c/(o*o),f=a==="NHWC"?[l,h,d,p]:[l,p,h,d],g=new Jq(f,o,a);return t.runWebGLProgram(g,[r],r.dtype)}const eK={kernelName:yf,backendName:"webgl",kernelFunc:Qq};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class MS{constructor(e,t=!1,s=null,r=!1,o=!1){this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=Fn(this.outputShape.length);const a=e.filterHeight,l=e.filterWidth,i=e.outChannels/e.inChannels;let u="",c="";s&&(r?u=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${s}
        }`:o?u=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${s}
        }`:u=`
          float activation(float x) {
            ${s}
          }
        `,c="result = activation(result);");const h=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),o&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${u}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${i};
        int q = d2 - d1 * ${i};

        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.
        for (int wR = 0; wR < ${a}; wR++) {
          int xR = xRCorner + wR * dilations[0];

          if (xR < 0 || xR >= inDims[0]) {
            continue;
          }

          for (int wC = 0; wC < ${l}; wC++) {
            int xC = xCCorner + wC * dilations[1];

            if (xC < 0 || xC >= inDims[1]) {
              continue;
            }

            float xVal = getX(batch, xR, xC, d1);
            float wVal = getW(wR, wC, d1, q);
            dotProd += xVal * wVal;
          }
        }

        float result = dotProd;
        ${h}
        ${c}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class VS{constructor(e,t=!1,s=null,r=!1,o=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=Fn(this.outputShape.length);const a=e.outChannels/e.inChannels,l=e.padInfo.left,i=e.strideWidth,u=e.dilationWidth,c=e.filterHeight,h=e.filterWidth,d=h;let p=`
      int xR; int xC; int xCOffset;
      vec4 wTexel; vec4 previous; vec4 final;`;for(let x=0;x<h;x++)p+=`
          vec4 xTexelC${x*2};
          int xTexelC${x*2}Ready;
          vec4 xTexelC${x*2+1};
          int xTexelC${x*2+1}Ready;
          vec4 xC${x};`;p+=`
    for (int r = 0; r < ${c}; r++) {
      `;for(let x=0;x<h;x++)p+=`
          xTexelC${x*2} = vec4(0.0);
          xTexelC${x*2}Ready = 0;
          xTexelC${x*2+1} = vec4(0.0);
          xTexelC${x*2+1}Ready = 0;
          xC${x} = vec4(0.0);`;p+=`
        xR = xRCorner + r * dilations[0];
        if (xR >=0 && xR < inDims[0]) {
      `;for(let x=0;x<(d+1)/2;x++){const w=x*2;if(p+=`
          xC = xCCorner + ${w*u};
          `,i===1){if(w<h&&(l%2===1?(p+=`
                xCOffset = xC + 1;
                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${w}Ready == 0) {
                  xTexelC${w} = getX(batch, xR, xCOffset, d1);

                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${w}.zw = vec2(0.0);
                  }
                  xTexelC${w}Ready = 1;
                }
              `,u===1&&w>0?p+=`
                xC${w} = vec4(xTexelC${w-2}.zw, xTexelC${w}.xy);
                `:p+=`
                  xCOffset = xC + 1 - 2;

                  if (xCOffset >= 0 && xCOffset < inDims[1]) {
                    previous = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      previous.zw = vec2(0.0);
                    }

                    xC${w} = vec4(previous.zw, xTexelC${w}.xy);
                  } else {
                    xC${w} = vec4(0.0, 0.0, xTexelC${w}.xy);
                  }
                  `):p+=`
                if (xC >= 0 && xC < inDims[1] && xTexelC${w}Ready == 0) {
                  xTexelC${w} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${w}.zw = vec2(0.0);
                  }
                  xTexelC${w}Ready = 1;
                }

                xC${w} = xTexelC${w};
                `,w+1<h)){const v=l%2===0?ef(u):u;u%2===0&&l%2===1||u%2!==0&&l%2!==1?(p+=`
                  xCOffset = xC + imod(pads[1], 2) + ${v};

                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${w+1}Ready == 0) {
                    xTexelC${w+1} = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      xTexelC${w+1}.zw = vec2(0.0);
                    }
                    xTexelC${w+1}Ready = 1;
                  }
                  `,u>1?p+=`
                    xCOffset -= 2;
                    if (xCOffset >= 0 && xCOffset < inDims[1]) {
                     previous = getX(batch, xR, xCOffset, d1);
                     xC${w+1} = vec4(previous.zw, xTexelC${w+1}.xy);
                    } else {
                     xC${w+1} = vec4(0.0, 0.0, xTexelC${w+1}.xy);
                    }
                    `:p+=`
                    xC${w+1} = vec4(xTexelC${w}.zw, xTexelC${w+1}.xy);
                    `):v===1?p+=`
                    xC${w+1} = xTexelC${w};
                    `:p+=`
                    xCOffset = xC + ${v};

                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${w+1}Ready == 0) {
                      xTexelC${w+1} = getX(batch, xR, xCOffset, d1);
                      if (xCOffset + 1 >= inDims[1]) {
                        xTexelC${w+1}.zw = vec2(0.0);
                      }
                      xTexelC${w+1}Ready = 1;
                    }

                    xC${w+1} = xTexelC${w+1};
                    `}}else w<h&&(l%2===1?(p+=`
                xCOffset = xC + 1 - strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${w}Ready == 0) {
                  xTexelC${w} = getX(batch, xR, xCOffset, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${w}.zw = vec2(0.0);
                  }
                  xTexelC${w}Ready = 1;
                }

                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${w+1}Ready == 0) {
                  xTexelC${w+1} = getX(batch, xR, xC + 1, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xC + 2 >= inDims[1]) {
                    xTexelC${w+1}.zw = vec2(0.0);
                  }
                  xTexelC${w+1}Ready = 1;
                }

                xC${w} = vec4(xTexelC${w}.zw, xTexelC${w+1}.zw);
              `,w+1<h&&(p+=`
                  final = vec4(0.0);
                  xCOffset = xC + 1 + strides[1];
                  if(xCOffset >= 0 && xCOffset < inDims[1]) {
                    final = getX(batch, xR, xCOffset, d1);
                  }
                  xC${w+1} = vec4(xTexelC${w+1}.xy, final.xy);
                `)):(p+=`
                if(xC >= 0 && xC < inDims[1] && xTexelC${w}Ready == 0) {
                  xTexelC${w} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${w}.zw = vec2(0.0);
                  }
                  xTexelC${w}Ready = 1;
                }

                xCOffset = xC + strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${w+1}Ready == 0) {
                  xTexelC${w+1} = getX(batch, xR, xCOffset, d1);
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${w+1}.zw = vec2(0.);
                  }
                  xTexelC${w+1}Ready = 1;
                }

                xC${w} = vec4(
                  xTexelC${w}.xy, xTexelC${w+1}.xy);
              `,w+1<h&&(p+=`
                  xC${w+1} = vec4(xTexelC${w}.zw, xTexelC${w+1}.zw);
                `)));w<h&&(p+=`
            wTexel = getW(r, ${w}, d1, q);
            dotProd += xC${w} * vec4(wTexel.xz, wTexel.xz);
          `,w+1<h&&(p+=`
              wTexel = getW(r, ${w+1}, d1, q);
              dotProd += xC${w+1} * vec4(wTexel.xz, wTexel.xz);
            `))}p+=`
    }
  `,p+=`
      }
    `;let f="",g="";s&&(r?f=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${s}
        }`:o?f=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${s}
        }`:f=`vec4 activation(vec4 x) {
          ${s}
        }`,g="result = activation(result);");const y=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),o&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${f}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${a};
        int q = d2 - d1 * ${a};
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
        vec4 dotProd = vec4(0.000000000000001);

        ${p}

        vec4 result = dotProd - vec4(0.000000000000001);
        ${y}
        ${g}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tK(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:o}=e,{strides:a,pad:l,dilations:i,dimRoundingMode:u}=s;let c=i;c==null&&(c=[1,1]),P(In(a,c),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${a} and dilations '${c}'`);const h=yn(r.shape,o.shape,a,c,l,u,!0);let d;de().getBool("WEBGL_PACK_DEPTHWISECONV")&&h.strideWidth<=2&&h.outChannels/h.inChannels===1?d=new VS(h):d=new MS(h);const p=[[h.padInfo.top,h.padInfo.left],[h.strideHeight,h.strideWidth],[h.dilationHeight,h.dilationWidth],[h.inHeight,h.inWidth]];return t.runWebGLProgram(d,[r,o],"float32",p)}const nK={kernelName:zc,backendName:"webgl",kernelFunc:tK};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class sK{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,s=e.strideWidth,r=e.padInfo.top,o=e.padInfo.left,a=e.outChannels/e.inChannels;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int dm = coords.w;
        int d2 = d1 * ${a} + dm;

        float dotProd = 0.0;

        // TO DO: Vec4 over the batch size
        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yR = 0; yR < ${e.outHeight}; yR++) {
            int xR = wR + yR * ${t} - ${r};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${e.outWidth}; yC++) {
              int xC = wC + yC * ${s} - ${o};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);
            }
          }
        }
        setOutput(dotProd);
      }
    `}}class rK{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,s=e.filterWidth,r=e.strideHeight,o=e.strideWidth,a=t-1-e.padInfo.top,l=s-1-e.padInfo.left,i=e.outChannels/e.inChannels;this.userCode=`
      const ivec2 pads = ivec2(${a}, ${l});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];
        ivec2 dyCorner = coords.yz - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        float dotProd = 0.0;

        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / ${r}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${s}; wC++) {
            float dyC = float(dyCCorner + wC) / ${o}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${s} - 1 - wC;

            // TO DO: Vec4 over the channelMul
            for (int dm = 0; dm < ${i}; dm++) {
              int d2 = d1 * ${i} + dm;
              float xValue = getDy(batch, idyR, idyC, d2);
              float wValue = getW(wRPerm, wCPerm, d1, dm);
              dotProd += xValue * wValue;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oK(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,dy:o}=e,{strides:a,dilations:l,pad:i,dimRoundingMode:u,filterShape:c}=s,h=yn(r.shape,c,a,l,i,u,!0),d=new sK(h);return t.runWebGLProgram(d,[r,o],"float32")}const aK={kernelName:bf,backendName:"webgl",kernelFunc:oK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iK(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,filter:o}=e,{strides:a,dilations:l,pad:i,dimRoundingMode:u,inputShape:c}=s,h=yn(c,o.shape,a,l,i,u,!0),d=new rK(h);return t.runWebGLProgram(d,[r,o],"float32")}const lK={kernelName:xf,backendName:"webgl",kernelFunc:iK};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class uK{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode=`
      void main() {
          ivec2 coords = getOutputCoords();
          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;
          setOutput(val);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cK(n){const{inputs:e,backend:t}=n,{x:s}=e,r=[...s.shape,...s.shape],o=me(s.shape),a=Fe({inputs:{x:s},backend:t,attrs:{shape:[o]}}),l=new uK(o),i=t.runWebGLProgram(l,[a],a.dtype),u=Fe({inputs:{x:i},backend:t,attrs:{shape:r}});return t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(i),u}const hK={kernelName:wf,backendName:"webgl",kernelFunc:cK};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class dK{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const{inHeight:t,inWidth:s,padInfo:r,strideHeight:o,strideWidth:a,filterHeight:l,filterWidth:i,dilationHeight:u,dilationWidth:c}=e,{top:h,left:d}=r;this.userCode=`
      const ivec2 strides = ivec2(${o}, ${a});
      const ivec2 pads = ivec2(${h}, ${d});
      const float neg_infinity = -3.4e38;

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.w;
        ivec2 outTopLeftCorner =
            coords.yz * strides - pads;
        int hBeg = outTopLeftCorner.x;
        int wBeg = outTopLeftCorner.y;

        float curVal = neg_infinity;
        for (int h = 0; h < ${l}; h++) {
          int hIn = hBeg + h * ${u};

          if (hIn >= 0 && hIn < ${t}) {
            for (int w = 0; w < ${i}; w++) {
              int wIn = wBeg + w * ${c};

              if (wIn >= 0 && wIn < ${s}) {
                float xVal = getX(batch, hIn, wIn, d1);
                float wVal = getW(h, w, d1);

                float val = xVal + wVal;
                if (val > curVal) {
                  curVal = val;
                }
              }
            }
          }
        }

        float result = curVal;
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pK(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:o}=e,{strides:a,pad:l,dilations:i}=s,u=zl(r.shape,o.shape,a,l,"NHWC",i);let c;const h=new dK(u);c=t.runWebGLProgram(h,[r,o],"float32");const d=Fe({inputs:{x:c},backend:t,attrs:{shape:u.outShape}});return t.disposeIntermediateTensorInfo(c),d}const fK={kernelName:Bc,backendName:"webgl",kernelFunc:pK};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mK(n){const{inputs:e,backend:t,attrs:s}=n,{equation:r}=s,o=e,{allDims:a,summedDims:l,idDims:i}=Sg(r,o.length);Ig(a.length,i,o);const{path:u,steps:c}=Ng(l,i),h=c.length;let d=null,p=a.length;const f=[];for(let g=0;g<h;++g){for(const y of c[g]){const{permutationIndices:x,expandDims:w}=Cg(p,i[y]);let v;$g(x)?v=o[y]:(v=Mn({inputs:{x:o[y]},backend:t,attrs:{perm:x}}),f.push(v));const k=v.shape.slice();for(let C=0;C<w.length;++C)k.splice(w[C],0,1);ft(v.shape,k)||(v=Fe({inputs:{x:v},backend:t,attrs:{shape:k}}),f.push(v)),d===null?d=v:(d=my({inputs:{a:v,b:d},backend:t}),f.push(d))}g<h-1&&(u[g]>=0&&(d=fd({inputs:{x:d},backend:t,attrs:{axis:u[g]-(a.length-p),keepDims:!1}}),f.push(d)),p--)}for(const g of f)g!==d&&t.disposeIntermediateTensorInfo(g);return d}const gK={kernelName:vf,backendName:"webgl",kernelFunc:mK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yK="return (x >= 0.0) ? x : (exp(x) - 1.0);",bK=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,xK=bt({opSnippet:yK,packedOpSnippet:bK}),wK={kernelName:tl,backendName:"webgl",kernelFunc:xK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vK="return (b >= 0.0) ? a : a * (b + 1.0);",kK=`
  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));
  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));
`,SK=n=>{const{inputs:e,backend:t}=n,{dy:s,y:r}=e,o=de().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new si(kK,s.shape,r.shape):new qo(vK,s.shape,r.shape);return t.runWebGLProgram(o,[s,r],s.dtype)},CK={kernelName:kf,backendName:"webgl",kernelFunc:SK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const IK=`
  return vec4(equal(a, b));
`,NK="return float(a == b);",$K=Tn({opSnippet:NK,packedOpSnippet:IK,dtype:"bool",cpuKernelImpl:oH}),TK={kernelName:Mc,backendName:"webgl",kernelFunc:$K};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _K=`
  // Error function is calculated approximately with elementary function.
  // See "Handbook of Mathematical Functions with Formulas,
  // Graphs, and Mathematical Tables", Abramowitz and Stegun.
  float p = ${gg};
  float a1 = ${yg};
  float a2 = ${bg};
  float a3 = ${xg};
  float a4 = ${wg};
  float a5 = ${vg};

  float sign = sign(x);
  x = abs(x);
  float t = 1.0 / (1.0 + p * x);
  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));
`,EK=bt({opSnippet:_K}),AK={kernelName:nl,backendName:"webgl",kernelFunc:EK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const DK=ri+`
  return exp(x);
`,RK=`
  vec4 result = exp(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,WS=bt({opSnippet:DK,packedOpSnippet:RK,cpuKernelImpl:aH,dtype:"float32"}),FK={kernelName:sl,backendName:"webgl",kernelFunc:WS};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Jp(n){const{inputs:e,attrs:t,backend:s}=n,{dim:r}=t,{input:o}=e,a=o.shape.length,l=o.shape.slice();let i=r;return r<0&&(P(-(a+1)<=r,()=>`Axis must be in the interval [${-(a+1)}, ${a}]`),i=a+r+1),l.splice(i,0,1),Fe({inputs:{x:o},backend:s,attrs:{shape:l}})}const OK={kernelName:Vc,backendName:"webgl",kernelFunc:Jp};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const F0="return exp(x) - 1.0;",LK=bt({opSnippet:F0,packedOpSnippet:F0,cpuKernelImpl:iH}),PK={kernelName:rl,backendName:"webgl",kernelFunc:LK};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class O0{constructor(e,t,s){this.variableNames=["real","imag"];const r=t[1];this.outputShape=t;const o=s?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,a=s?`${r}.0`:"1.0";let l;if(e==="real")l="return real * expR - imag * expI;";else if(e==="imag")l="return real * expI + imag * expR;";else throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);this.userCode=`
      const float exponentMultiplier = ${o};

      float unaryOpComplex(float real, float expR, float imag, float expI) {
        ${l}
      }

      float mulMatDFT(int batch, int index) {
        float indexRatio = float(index) / float(${r});
        float exponentMultiplierTimesIndexRatio =
            exponentMultiplier * indexRatio;

        float result = 0.0;

        for (int i = 0; i < ${r}; i++) {
          // x = (-2|2 * PI / N) * index * i;
          float x = exponentMultiplierTimesIndexRatio * float(i);
          float expR = cos(x);
          float expI = sin(x);
          float real = getReal(batch, i);
          float imag = getImag(batch, i);

          result +=
              unaryOpComplex(real, expR, imag, expI) / ${a};
        }

        return result;
      }

      void main() {
        ivec2 coords = getOutputCoords();
        setOutput(mulMatDFT(coords[0], coords[1]));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function US(n,e,t){const s=t.texData.get(n.dataId),r=me(n.shape),o=n.shape[n.shape.length-1],a=r/o,l=Fe({inputs:{x:n},backend:t,attrs:{shape:[a,o]}}),i=l.shape,u=new O0("real",i,e),c=new O0("imag",i,e),h=[{dataId:s.complexTensorInfos.real.dataId,dtype:s.complexTensorInfos.real.dtype,shape:i},{dataId:s.complexTensorInfos.imag.dataId,dtype:s.complexTensorInfos.imag.dtype,shape:i}],d=t.runWebGLProgram(u,h,"float32"),p=t.runWebGLProgram(c,h,"float32"),f=mo({inputs:{real:d,imag:p},backend:t});t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(p);const g=Fe({inputs:{x:f},backend:t,attrs:{shape:n.shape}});return t.disposeIntermediateTensorInfo(l),t.disposeIntermediateTensorInfo(f),g}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zK(n){const{inputs:e,backend:t}=n,{input:s}=e;return US(s,!1,t)}const BK={kernelName:Sf,backendName:"webgl",kernelFunc:zK};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class MK{constructor(e,t){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=e,this.userCode=`
      void main() {
        // Input can be obtained from uniform value.
        setOutput(value);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iu(n){const{backend:e,attrs:t}=n,{shape:s,value:r}=t;let{dtype:o}=t;if(o=o||Ua(r),o==="string"){const a=Zt(o,me(s));return a.fill(r),e.makeTensorInfo(s,o,a)}else{const a=new MK(s,r),l=[[r]];return e.runWebGLProgram(a,[],o,l)}}const VK={kernelName:Cf,backendName:"webgl",kernelFunc:iu};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class WK{constructor(e){this.variableNames=["Image"],this.outputShape=[];const t=e[2];this.outputShape=e,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];

          int coordX = ${t} - x - 1;
          float outputValue;
          if(coordX >= 0 && coordX < ${t}) {
            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);
          } else {
            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);
          }
          setOutput(outputValue);
        }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const UK={kernelName:If,backendName:"webgl",kernelFunc:({inputs:n,backend:e})=>{const{image:t}=n,s=e,r=new WK(t.shape);return s.runWebGLProgram(r,[t],t.dtype)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const L0="return floor(x);",GK=bt({opSnippet:L0,packedOpSnippet:L0,cpuKernelImpl:lH}),HK={kernelName:ol,backendName:"webgl",kernelFunc:GK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jK=`
  float s = sign(a) * sign(b);
  int ia = round(a);
  int ib = round(b);
  if (ib != 0) {
    // Windows (D3D) wants guaranteed non-zero int division at compile-time.
    return float(idiv(ia, ib, s));
  } else {
    return NAN;
  }
`,qK=`
  ivec4 ia = round(a);
  ivec4 ib = round(b);
  bvec4 cond = notEqual(ib, ivec4(0));
  ivec4 result = ivec4(0);
  vec4 s = sign(a) * sign(b);

  // Windows (D3D) wants guaranteed non-zero int division at compile-time.
  if (cond[0]) {
    result[0] = idiv(ia[0], ib[0], s[0]);
  }
  if (cond[1]) {
    result[1] = idiv(ia[1], ib[1], s[1]);
  }
  if (cond[2]) {
    result[2] = idiv(ia[2], ib[2], s[2]);
  }
  if (cond[3]) {
    result[3] = idiv(ia[3], ib[3], s[3]);
  }
  return vec4(result);
`,KK=Tn({opSnippet:jK,packedOpSnippet:qK,dtype:"int32"}),XK={kernelName:al,backendName:"webgl",kernelFunc:KK};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class YK{constructor(e){this.variableNames=["A"];const t=Wn(),[s,r]=e;this.outputShape=e,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}.0, ${s}.0);

        vec4 values = ${t.texture2D}(A, uv);
        float value;
        if (depth == 0) {
          value = values.r;
        } else if (depth == 1) {
          value = values.g;
        } else if (depth == 2) {
          value = values.b;
        } else if (depth == 3) {
          value = values.a;
        }

        setOutput(floor(value * 255.0 + 0.5));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ZK{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const t=Wn(),[s,r]=e;this.outputShape=e,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];

        vec4 result = vec4(0.);

        for(int row=0; row<=1; row++) {
          for(int col=0; col<=1; col++) {
            texC = coords[1] + row;
            depth = coords[2] + col;

            vec2 uv = (vec2(texC, texR) + halfCR) /
                       vec2(${r}.0, ${s}.0);
            vec4 values = ${t.texture2D}(A, uv);
            float value;
            if (depth == 0) {
              value = values.r;
            } else if (depth == 1) {
              value = values.g;
            } else if (depth == 2) {
              value = values.b;
            } else if (depth == 3) {
              value = values.a;
            }

            result[row * 2 + col] = floor(value * 255.0 + 0.5);
          }
        }

        ${t.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const JK={kernelName:HN,backendName:"webgl",kernelFunc:QK};let ma,ep=de().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");function QK(n){const{inputs:e,backend:t,attrs:s}=n;let{pixels:r}=e;const{numChannels:o}=s,a=typeof HTMLVideoElement<"u"&&r instanceof HTMLVideoElement,l=typeof HTMLImageElement<"u"&&r instanceof HTMLImageElement,[i,u]=a?[r.videoWidth,r.videoHeight]:[r.width,r.height],c=[u,i],h=[u,i,o];if(l||a){const g=de().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");(ma==null||g!==ep)&&(ep=g,ma=document.createElement("canvas").getContext("2d",{willReadFrequently:ep})),ma.canvas.width=i,ma.canvas.height=u,ma.drawImage(r,0,0,i,u),r=ma.canvas}const d=t.makeTensorInfo(c,"int32");t.texData.get(d.dataId).usage=gs.PIXELS,t.gpgpu.uploadPixelDataToTexture(t.getTexture(d.dataId),r);const p=de().getBool("WEBGL_PACK")?new ZK(h):new YK(h),f=t.runWebGLProgram(p,[d],"int32");return t.disposeData(d.dataId),f}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eX(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:o,bias:a,preluActivationWeights:l}=e,{strides:i,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=s,g=Dr(c),y=yn(r.shape,o.shape,i,h,u,d,!1,g);let x;const w=[],v=a!=null,k=l!=null,C=p==="leakyrelu",I=()=>{const E=[r,o],R=(O,B)=>{if(B==="NCHW"&&O.shape.length===1&&O.shape[0]!==1){const j=Fe({inputs:{x:O},backend:t,attrs:{shape:[O.shape[0],1,1]}});return w.push(j),j}return O};if(v&&E.push(R(a,c)),k&&E.push(R(l,c)),C){const O=t.makeTensorInfo([],"float32",ro(f,"float32"));E.push(O),w.push(O)}return E};if(y.filterHeight===1&&y.filterWidth===1&&y.dilationHeight===1&&y.dilationWidth===1&&y.strideHeight===1&&y.strideWidth===1&&(y.padInfo.type==="SAME"||y.padInfo.type==="VALID"))x=PS({x:r,filter:o,convInfo:y,backend:t,bias:a,activation:p,preluActivationWeights:l,leakyreluAlpha:f});else if(y.strideWidth<=2&&g==="channelsLast"&&de().getBool("WEBGL_EXP_CONV")){const E=p?zi(p,!0):null,R=new LS(y,v,E,k,C),O=[[y.padInfo.top,y.padInfo.left],[y.strideHeight,y.strideWidth],[y.dilationHeight,y.dilationWidth],[y.inHeight,y.inWidth]],B=I();x=t.runWebGLProgram(R,B,"float32",O)}else if(de().getBool("WEBGL_CONV_IM2COL"))x=zS({x:r,filter:o,convInfo:y,backend:t,bias:a,activation:p,preluActivationWeights:l,leakyreluAlpha:f});else{const E=p?zi(p,!1):null,R=new OS(y,v,E,k,C),O=I();x=t.runWebGLProgram(R,O,"float32")}const N=Fe({inputs:{x},backend:t,attrs:{shape:y.outShape}});return w.push(x),w.forEach(E=>t.disposeIntermediateTensorInfo(E)),N}const tX={kernelName:Xu,backendName:"webgl",kernelFunc:eX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nX(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:o,bias:a,preluActivationWeights:l}=e,{strides:i,pad:u,dilations:c,dimRoundingMode:h,activation:d,leakyreluAlpha:p}=s,f=[];let g=c;g==null&&(g=[1,1]),P(In(i,g),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${g}'`);const y=yn(r.shape,o.shape,i,g,u,h,!0),x=de().getBool("WEBGL_PACK_DEPTHWISECONV")&&y.strideWidth<=2&&y.outChannels/y.inChannels===1,w=d?zi(d,x):null,v=[r,o],k=a!=null,C=l!=null,I=d==="leakyrelu";if(k&&v.push(a),C&&v.push(l),I){const O=t.makeTensorInfo([],"float32",ro(p,"float32"));v.push(O),f.push(O)}let N;x?N=new VS(y,k,w,C,I):N=new MS(y,k,w,C,I);const E=[[y.padInfo.top,y.padInfo.left],[y.strideHeight,y.strideWidth],[y.dilationHeight,y.dilationWidth],[y.inHeight,y.inWidth]],R=t.runWebGLProgram(N,v,"float32",E);return f.forEach(O=>t.disposeIntermediateTensorInfo(O)),R}const sX={kernelName:Yu,backendName:"webgl",kernelFunc:nX};class rX{constructor(e,t,s,r){this.sliceDim=e,this.strides=t,this.paramsShape=r,this.variableNames=["x","indices"],this.outputShape=s;const o=Tt(s.length);let a=`
    int index;`;for(let l=0;l<this.sliceDim;l++)a+=`
          index = round(getIndices(coords[0], ${l}));
          out_of_bounds = out_of_bounds || index < 0;
          out_of_bounds = out_of_bounds || index >= ${this.paramsShape[l]};
          flattenIndex += index * ${this.strides[l]};`;this.userCode=`
         void main() {
          ${o} coords = getOutputCoords();
          int flattenIndex = 0;
          bool out_of_bounds = false;

          ${a}

          setOutput(out_of_bounds ? 0.0 : getX(flattenIndex, coords[1]));
        }
      `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oX(n){const{inputs:e,backend:t}=n,{params:s,indices:r}=e,o=r.shape,a=o[o.length-1],l=me(s.shape),[i,u,c,h]=og(s,r),d=Fe({inputs:{x:r},backend:t,attrs:{shape:[u,a]}}),p=Fe({inputs:{x:s},backend:t,attrs:{shape:[me(s.shape)/c,c]}});if(t.shouldExecuteOnCPU([s,r])||s.dtype==="string"){const x=t.readSync(r.dataId),w=t.bufferSync(s),v=uH(x,w,s.dtype,u,a,c,h,s.shape,l);return t.makeTensorInfo(i,s.dtype,v.values)}const f=new rX(a,h,[u,c],s.shape),g=t.runWebGLProgram(f,[p,d],p.dtype),y=Fe({inputs:{x:g},backend:t,attrs:{shape:i}});return t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(p),t.disposeIntermediateTensorInfo(g),y}const aX={kernelName:Nf,backendName:"webgl",kernelFunc:oX};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class iX{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;const s=Tt(this.rank),r=lX(e);this.userCode=`
      void main() {
        ${s} resRC = getOutputCoords();
        int index = int(getIndices(resRC.x, resRC.z));
        float inBounds = (index >= 0) && (index < ${e[2]}) ? 1.0 : 0.0;
        setOutput(inBounds * getA(${r}));
      }
    `}}function lX(n,e){const t=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[];for(let r=0;r<n.length;r++)r===2?s.push("index"):s.push(`${t[r]}`);return s.join()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GS(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,indices:o}=e,{axis:a,batchDims:l}=s,i=ct(a,r.shape)[0];if(de().get("DEBUG")){const w=t.readSync(o.dataId),v=r.shape[i];for(let k=0;k<w.length;++k){const C=w[k];P(C<=v-1&&C>=0,()=>`GatherV2: the index value ${C} is not in [0, ${v-1}]`)}}const u=_g(r,o,i,l),c=me(o.shape),h=[],d=Fe({inputs:{x:r},backend:t,attrs:{shape:[u.batchSize,u.outerSize,u.dimSize,u.sliceSize]}}),p=Fe({inputs:{x:o},backend:t,attrs:{shape:[u.batchSize,c/u.batchSize]}});h.push(d),h.push(p);const f=[u.batchSize,u.outerSize,c/u.batchSize,u.sliceSize];if(t.shouldExecuteOnCPU([r,o])||r.dtype==="string"){const w=t.bufferSync(p),v=t.bufferSync(d),k=cH(v,w,f);return h.forEach(C=>t.disposeIntermediateTensorInfo(C)),t.makeTensorInfo(u.outputShape,k.dtype,k.values)}const g=new iX(d.shape,f),y=t.runWebGLProgram(g,[d,p],d.dtype);h.push(y);const x=Fe({inputs:{x:y},backend:t,attrs:{shape:u.outputShape}});return h.forEach(w=>t.disposeIntermediateTensorInfo(w)),x}const uX={kernelName:Uc,backendName:"webgl",kernelFunc:GS};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cX="return float(a > b);",hX=`
  return vec4(greaterThan(a, b));
`,dX=Tn({opSnippet:cX,packedOpSnippet:hX,cpuKernelImpl:hH,dtype:"bool"}),pX={kernelName:Gc,backendName:"webgl",kernelFunc:dX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fX="return float(a >= b);",mX=`
  return vec4(greaterThanEqual(a, b));
`,gX=Tn({opSnippet:fX,packedOpSnippet:mX,dtype:"bool",cpuKernelImpl:dH}),yX={kernelName:il,backendName:"webgl",kernelFunc:gX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bX(n){const{inputs:e,backend:t}=n,{input:s}=e;return US(s,!0,t)}const xX={kernelName:$f,backendName:"webgl",kernelFunc:bX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wX="return float(!isnan(x) && !isinf(x));",vX=bt({opSnippet:wX,dtype:"bool"}),kX={kernelName:ul,backendName:"webgl",kernelFunc:vX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const SX="return float(isinf(x));",CX=bt({opSnippet:SX,dtype:"bool"}),IX={kernelName:cl,backendName:"webgl",kernelFunc:CX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const NX="return float(isnan(x));",$X=bt({opSnippet:NX,dtype:"bool"}),TX={kernelName:hl,backendName:"webgl",kernelFunc:$X};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _X="return float(a < b);",EX=`
  return vec4(lessThan(a, b));
`,AX=Tn({opSnippet:_X,packedOpSnippet:EX,cpuKernelImpl:pH,dtype:"bool"}),DX={kernelName:jc,backendName:"webgl",kernelFunc:AX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const RX="return float(a <= b);",FX=`
  return vec4(lessThanEqual(a, b));
`,OX=Tn({opSnippet:RX,packedOpSnippet:FX,cpuKernelImpl:fH,dtype:"bool"}),LX={kernelName:qc,backendName:"webgl",kernelFunc:OX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PX(n){const{backend:e,attrs:t}=n,{start:s,stop:r,num:o}=t,a=mH(s,r,o);return e.makeTensorInfo([a.length],"float32",a)}const zX={kernelName:_f,backendName:"webgl",kernelFunc:PX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const BX=ri+`
  return x < 0.0 ? 0./0. : log(x);
`,MX=`
  vec4 result = log(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);
  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);
  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);
  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);
  return result;
`,VX=bt({opSnippet:BX,packedOpSnippet:MX,cpuKernelImpl:gH}),WX={kernelName:dl,backendName:"webgl",kernelFunc:VX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const UX=ri+`
  return log(1.0 + x);
`,GX=bt({opSnippet:UX}),HX={kernelName:pl,backendName:"webgl",kernelFunc:GX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jX="return float(a >= 1.0 && b >= 1.0);",qX=`
  return vec4(
    vec4(greaterThanEqual(a, vec4(1.0))) *
    vec4(greaterThanEqual(b, vec4(1.0))));
`,KX=Tn({opSnippet:jX,packedOpSnippet:qX,dtype:"bool"}),XX={kernelName:Kc,backendName:"webgl",kernelFunc:KX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const YX="return float(!(x >= 1.0));",ZX=bt({opSnippet:YX}),JX={kernelName:Xc,backendName:"webgl",kernelFunc:ZX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const QX="return float(a >= 1.0 || b >= 1.0);",e9=`
  return min(
    vec4(greaterThanEqual(a, vec4(1.0))) +
    vec4(greaterThanEqual(b, vec4(1.0))),
    vec4(1.0));
`,t9=Tn({opSnippet:QX,packedOpSnippet:e9,dtype:"bool"}),n9={kernelName:Yc,backendName:"webgl",kernelFunc:t9};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class s9{constructor(e,t,s,r,o){this.variableNames=["x"],this.outputShape=[];const a=t,l=e[3]-1;this.outputShape=e;let i;const u=`float(${s}) + float(${r}) * sum`;o===.5?i=`inversesqrt(${u})`:o===1?i=`1.0/(${u})`:i=`exp(log(${u}) * float(-${o}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];
        int d = coords[3];
        float x = getX(b, r, c, d);
        float sum = 0.0;
        for (int j = -${a}; j <= ${a}; j++) {
          int idx = d + j;
          if (idx >= 0 && idx <=  ${l}) {
            float z = getX(b, r, c, idx);
            sum += z * z;
          }
        }
        float val = x * ${i};
        setOutput(val);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class r9{constructor(e,t,s,r,o){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const a=t,l=e[3]-1;this.outputShape=e;let i;const u=`float(${s}) + float(${r}) * sum`;o===.5?i=`inversesqrt(${u})`:o===1?i=`1.0/(${u})`:i=`exp(log(${u}) * float(-${o}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords.x;
        int r = coords.y;
        int c = coords.z;
        int d = coords.w;

        bool hasNextCol = d < ${this.outputShape[3]};
        bool hasNextRow = c < ${this.outputShape[2]};

        vec4 sum = vec4(0.);
        vec4 xFragAtOutputCoords = getX(b, r, c, d);

        vec4 xAtOutputCoords = vec4(
          getChannel(xFragAtOutputCoords, vec2(c, d)),
          hasNextCol ?
            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,
          hasNextRow ?
            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,
          (hasNextRow && hasNextCol) ?
            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0
        );

        int firstChannel = d - ${a};
        vec2 cache = vec2(0.);
        if(firstChannel >= 0){
          vec4 firstChannelFrag = getX(b, r, c, firstChannel);
          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));
            if(hasNextRow){
              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));
            }
        }

        ivec2 depth = ivec2(d, d + 1);
        for (int j = - ${a}; j <= ${a}; j++) {
          ivec2 idx = depth + j;
          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));
          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${l}));

          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;
          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;

          if(depthInRange || depthPlusOneInRange){
            vec4 z = vec4(0.);
            vec4 xFragAtCurrentDepth;
            z.xz = cache.xy;
            if(depthPlusOneInRange && hasNextCol){
              xFragAtCurrentDepth = idx.y != d ?
                getX(b, r, c, idx.y) : xFragAtOutputCoords;
              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));
              if(hasNextRow){
                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));
              }
            }
            cache.xy = z.yw;
            sum += z * z;
          }
        }
        vec4 result = xAtOutputCoords * ${i};
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const o9=n=>{const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{depthRadius:o,bias:a,alpha:l,beta:i}=s,u=de().getBool("WEBGL_PACK_NORMALIZATION")?new r9(r.shape,o,a,l,i):new s9(r.shape,o,a,l,i);return t.runWebGLProgram(u,[r],r.dtype)},a9={kernelName:Zc,backendName:"webgl",kernelFunc:o9};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class i9{constructor(e,t,s,r,o){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=s,this.alpha=r,this.beta=o,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];

        float result = 0.0;
        for (int d = 0; d < ${this.depth}; ++d) {
          int depthBegin = int(max(0.0, float(d - ${t})));
          int depthEnd = int(min(float(${this.depth}),
              float(d + ${t} + 1)));

          const int MIN_DEPTH_BEGIN = 0;
          const int MAX_DEPTH_END = ${this.depth};

          float norm = 0.0;
          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd) {
              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);
            }
            else {
              break;
            }
          }

          norm = float(${r}) * norm + float(${s});

          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd){
              float dyi = -2.0 * float(${r})
                * float(${o})
                * getInputImage(b, r, c, k) * getOutputImage(b, r, c, d)
                / norm;
              if (k == d) {
                dyi += pow(norm, -1.0 * ${o});
              }
              if (k == coords[3]) {
                dyi *= getDy(b, r, c, d);
                result += dyi;
              }
            }
            else {
              break;
            }
          }
      }
      setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const l9=n=>{const{inputs:e,backend:t,attrs:s}=n,{x:r,y:o,dy:a}=e,{depthRadius:l,bias:i,alpha:u,beta:c}=s,h=new i9(r.shape,l,i,u,c);return t.runWebGLProgram(h,[r,o,a],r.dtype)},u9={kernelName:Ef,backendName:"webgl",kernelFunc:l9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function c9(n,e,t,s){const r=me(e),a=me(n.shape)/r,l=Fe({inputs:{x:n},attrs:{shape:[a,r]},backend:s}),i=ia(l,n.dtype,"max",s),u=Fe({inputs:{x:i},attrs:{shape:t},backend:s});return s.disposeIntermediateTensorInfo(l),s.disposeIntermediateTensorInfo(i),u}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HS(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{reductionIndices:o,keepDims:a}=s,l=r.shape.length,i=ct(o,r.shape);let u=i;const c=jt(u,l),h=c!=null,d=t.shouldExecuteOnCPU([r]);let p=r;if(h){if(d){const v=t.texData.get(p.dataId).values,k=new Array(l);for(let N=0;N<k.length;N++)k[N]=r.shape[c[N]];const C=py(v,r.shape,r.dtype,c,k);p=t.makeTensorInfo(k,r.dtype);const I=t.texData.get(p.dataId);I.values=C}else p=pd(r,c,t);u=Qt(u.length,l)}Nn("max",u,l);const[f,g]=bn(p.shape,u);let y=f;a&&(y=Jt(f,i));let x;if(d){const v=t.texData.get(p.dataId).values,k=yH(v,me(g),y,r.dtype);x=t.makeTensorInfo(y,r.dtype);const C=t.texData.get(x.dataId);C.values=k}else x=c9(p,g,y,t);return h&&t.disposeIntermediateTensorInfo(p),x}const h9={kernelName:Jc,backendName:"webgl",kernelFunc:HS};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const d9=fy+`
  return max(a, b);
`,p9=`
  vec4 result = vec4(max(a, b));
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+aa+`
  return result;
`,f9=Tn({opSnippet:d9,packedOpSnippet:p9,cpuKernelImpl:bH}),m9={kernelName:fl,backendName:"webgl",kernelFunc:f9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function g9(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e;ru(r,"maxPool");const{filterSize:o,strides:a,pad:l,dimRoundingMode:i}=s,u=1;P(In(a,u),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${u}'`);const c=zs(r.shape,o,a,u,l,i);if(c.filterWidth===1&&c.filterHeight===1&&ft(c.inShape,c.outShape))return us({inputs:{x:r},backend:t});const h=new Bi(c,"max",!1);return t.runWebGLProgram(h,[r],r.dtype)}const y9={kernelName:Qc,backendName:"webgl",kernelFunc:g9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function b9(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{filterSize:o,strides:a,pad:l,dataFormat:i,dimRoundingMode:u}=s,c=[1,1,1],h=Ar(r.shape,o,a,c,l,u,i),d=new gy(h,"max",!1);return t.runWebGLProgram(d,[r],r.dtype)}const x9={kernelName:eh,backendName:"webgl",kernelFunc:b9};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class w9{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideHeight,s=e.strideWidth,r=e.dilationHeight,o=e.effectiveFilterHeight,a=e.effectiveFilterWidth,l=o-1-e.padInfo.top,i=a-1-e.padInfo.left,u=o*a-1;this.userCode=`
      const ivec2 pads = ivec2(${l}, ${i});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${o};
          wR += ${r}) {
          float dyR = float(dyRCorner + wR) / ${t}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${a}; wC++) {
            float dyC = float(dyCCorner + wC) / ${s}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);
            int maxPosValue = ${u} - int(getMaxPos(b, idyR, idyC, d));

            // Get the current value, check it against the value from the
            // position matrix.
            int curPosValue = wR * ${a} + wC;
            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

            dotProd += dyValue * mask;
          }
        }
        setOutput(dotProd);
      }
    `}}class v9{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideDepth,s=e.strideHeight,r=e.strideWidth,o=e.dilationDepth,a=e.dilationHeight,l=e.dilationWidth,i=e.effectiveFilterDepth,u=e.effectiveFilterHeight,c=e.effectiveFilterWidth,h=i-1-e.padInfo.front,d=u-1-e.padInfo.top,p=c-1-e.padInfo.left,f=i*u*c-1;this.userCode=`
      const ivec3 pads = ivec3(${h}, ${d}, ${p});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${i};
           wD += ${o}) {
          float dyD = float(dyDCorner + wD) / ${t}.0;

          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${u};
              wR += ${a}) {
            float dyR = float(dyRCorner + wR) / ${s}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${c};
                wC += ${l}) {
              float dyC = float(dyCCorner + wC) / ${r}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);
              int maxPosValue = ${f} -
                  int(getMaxPos(batch, idyD, idyR, idyC, ch));

              // Get the current value, check it against the value from the
              // position matrix.
              int curPosValue =
                  wD * ${u} * ${c} +
                  wR * ${c} + wC;
              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

              dotProd += dyValue * mask;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function k9(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,input:o}=e,a=o,{filterSize:l,strides:i,pad:u,dimRoundingMode:c}=s,h=[1,1,1],d=Ar(a.shape,l,i,h,u,c),p=new gy(d,"max",!0),f=t.runWebGLProgram(p,[a],a.dtype),g=new v9(d),y=t.runWebGLProgram(g,[r,f],a.dtype);return t.disposeIntermediateTensorInfo(f),y}const S9={kernelName:Df,backendName:"webgl",kernelFunc:k9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function C9(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,input:o,output:a}=e,l=o;ru([o,a],"maxPoolGrad");const{filterSize:i,strides:u,pad:c,dimRoundingMode:h}=s,d=zs(l.shape,i,u,1,c,h),p=!0,f=new Bi(d,"max",p),g=t.runWebGLProgram(f,[l],l.dtype),y=new w9(d),x=t.runWebGLProgram(y,[r,g],l.dtype);return t.disposeIntermediateTensorInfo(g),x}const I9={kernelName:Af,backendName:"webgl",kernelFunc:C9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function N9(n,e,t,s){let r=new Bi(t,"max",!1);const o=s.runWebGLProgram(r,[n],"float32");r=new Bi(t,"max",!0,!0,e);const a=s.runWebGLProgram(r,[n],"float32");return[o,a]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $9={kernelName:Rf,backendName:"webgl",kernelFunc:({inputs:n,attrs:e,backend:t})=>{const{x:s}=n,{filterSize:r,strides:o,pad:a,includeBatchInIndex:l}=e,i=t;P(s.shape.length===4,()=>`Error in maxPool: input must be rank 4 but got rank ${s.shape.length}.`);const u=[1,1];P(In(o,u),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${o} and dilations '${u}'`);const c=zs(s.shape,r,o,u,a),[h,d]=N9(s,l,c,i);return[h,d]}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function T9(n,e,t,s){const r=me(e),a=me(n.shape)/r,l=Fe({inputs:{x:n},attrs:{shape:[a,r]},backend:s}),i=ia(l,"float32","mean",s),u=Fe({inputs:{x:i},attrs:{shape:t},backend:s});return s.disposeIntermediateTensorInfo(l),s.disposeIntermediateTensorInfo(i),u}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _9={kernelName:th,backendName:"webgl",kernelFunc:({inputs:n,attrs:e,backend:t})=>{const{x:s}=n,{keepDims:r,axis:o}=e,a=t,l=s.shape.length,i=ct(o,s.shape);let u=i;const c=jt(u,l),h=c!=null,d=a.shouldExecuteOnCPU([s]),p=[];let f=s;if(h){if(d){const k=a.texData.get(f.dataId).values,C=new Array(l);for(let E=0;E<C.length;E++)C[E]=s.shape[c[E]];const I=py(k,s.shape,s.dtype,c,C);f=a.makeTensorInfo(C,s.dtype);const N=a.texData.get(f.dataId);N.values=I}else f=pd(s,c,a);p.push(f),u=Qt(u.length,l)}Nn("sum",u,l);const[g,y]=bn(f.shape,u);let x=g;r&&(x=Jt(g,i));const w=T9(f,y,x,a);for(const v of p)a.disposeIntermediateTensorInfo(v);return w}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function E9(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o,keepDims:a}=s,l=r.shape.length,i=ct(o,r.shape);let u=i;const c=jt(u,l);let h=r;c!=null&&(h=Mn({inputs:{x:r},backend:t,attrs:{perm:c}}),u=Qt(u.length,r.shape.length)),Nn("min",u,l);const[d,p]=bn(h.shape,u),f=me(p),g=Fe({inputs:{x:h},backend:t,attrs:{shape:[-1,f]}}),y=ia(g,g.dtype,"min",t);let x;if(a){const w=Jt(d,i);x=Fe({inputs:{x:y},backend:t,attrs:{shape:w}})}else x=Fe({inputs:{x:y},backend:t,attrs:{shape:d}});return t.disposeIntermediateTensorInfo(g),t.disposeIntermediateTensorInfo(y),c!=null&&t.disposeIntermediateTensorInfo(h),x}const A9={kernelName:nh,backendName:"webgl",kernelFunc:E9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const D9=fy+`
  return min(a, b);
`,R9=`
  vec4 result = vec4(min(a, b));
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+aa+`
  return result;
`,F9=Tn({opSnippet:D9,packedOpSnippet:R9,cpuKernelImpl:xH}),O9={kernelName:ml,backendName:"webgl",kernelFunc:F9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class L9{constructor(e,t,s){this.variableNames=["x"],this.outputShape=t.map((c,h)=>c[0]+e[h]+c[1]);const r=e.length,o=Tt(r),a=t.map(c=>c[0]).join(","),l=t.map((c,h)=>c[0]+e[h]).join(","),i=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r),u=s==="reflect"?0:1;if(r===1){this.userCode=`
        int start = ${a};
        int end = ${l};

        void main() {
          int outC = getOutputCoords();
          if (outC < start) {
            outC = start * 2 - outC - ${u};
          } else if(outC >= end) {
            outC = (end - 1) * 2 - outC + ${u};
          }
          setOutput(getX(outC - start));
        }
      `;return}this.userCode=`
      ${o} start = ${o}(${a});
      ${o} end = ${o}(${l});

      void main() {
        ${o} outC = getOutputCoords();
        for (int i = 0; i < ${r}; i++) {
          if (outC[i] < start[i]) {
            outC[i] = start[i] * 2 - outC[i] - ${u};
          } else if(outC[i] >= end[i]) {
            outC[i] = (end[i] - 1) * 2 - outC[i] + ${u};
          }
        }
        ${o} coords = outC - start;
        setOutput(getX(${i}));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class P9{constructor(e,t,s){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map((f,g)=>f[0]+e[g]+f[1]);const r=e.length,o=Tt(r),a=t.map(f=>f[0]).join(","),l=t.map((f,g)=>f[0]+e[g]).join(","),i=Bn("rc",r),u=Bn("source",r),c=`${i[r-1]} < ${this.outputShape[r-1]}`,h=r===1?"source":`vec2(${u.slice(-2).join()})`,d=s==="reflect"?0:1;let p="";if(r===1){const f=`
        ${o} source = rc;
        if (source < start) {
          source = start * 2 - source - ${d};
        } else if (source >= end) {
          source = (end - 1) * 2 - source + ${d};
        }
        source -= start;
      `;p=`
        ${o} rc = outputLoc;
        ${f}
        result[0] = getChannel(getX(${u.join()}), ${h});
        ${i[r-1]} += 1;
        if(${c}) {
          ${f}
          result[1] = getChannel(getX(${u.join()}), ${h});
        }
      `}else{const f=`
        ${o} source = rc;
        ${o} lt = ${o}(lessThan(source, start));
        ${o} gte = ${o}(greaterThanEqual(source, end));
        ${o} orig = 1 - (lt + gte);
        source = orig * source +
                lt * (start * 2 - source - ${d}) +
                gte * ((end - 1) * 2 - source + ${d});
        source -= start;
      `;p=`
        ${o} rc = outputLoc;
        ${f}
        result[0] = getChannel(getX(${u.join()}), ${h});
        ${i[r-1]} += 1;
        if(${c}) {
          ${f}
          result[1] = getChannel(getX(${u.join()}), ${h});
        }
        rc = outputLoc;
        ${i[r-2]} += 1;
        if(${i[r-2]} < ${this.outputShape[r-2]}) {
          ${f}
          result[2] = getChannel(getX(${u.join()}), ${h});
          ${i[r-1]} += 1;
          if(${c}) {
            ${f}
            result[3] = getChannel(getX(${u.join()}), ${h});
          }
        }
      `}this.userCode=`
      const ${o} start = ${o}(${a});
      const ${o} end = ${o}(${l});

      void main() {
        ${o} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${p}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const z9=({inputs:n,backend:e,attrs:t})=>{const{x:s}=n,{paddings:r,mode:o}=t,a=de().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new P9(s.shape,r,o):new L9(s.shape,r,o);return e.runWebGLProgram(a,[s],s.dtype)},B9={kernelName:sh,backendName:"webgl",kernelFunc:z9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const M9=`if (b == 0.0) return NAN;
  return mod(a, b);`,V9=`
  vec4 result = mod(a, b);
  bvec4 isNaN = equal(b, vec4(0.0));
  `+aa+`
  return result;
`,W9=Tn({opSnippet:M9,packedOpSnippet:V9}),U9={kernelName:gl,backendName:"webgl",kernelFunc:W9};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class G9{constructor(e,t,s){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[e,s],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];

        float r = random(seed);
        float cdf = 0.0;

        for (int i = 0; i < ${t-1}; i++) {
          cdf += getProbs(batch, i);

          if (r < cdf) {
            setOutput(float(i));
            return;
          }
        }

        // If no other event happened, last event happened.
        setOutput(float(${t-1}));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const H9=`
if (a == b) {
  return 1.0;
};
return a / b;`,j9=`
  // vec4 one = vec4(equal(a, b));
  // return one + (vec4(1.0) - one) * a / b;
  vec4 result = a / b;
  if(a.x == b.x) {
    result.x = 1.;
  }
  if(a.y == b.y) {
    result.y = 1.;
  }
  if(a.z == b.z) {
    result.z = 1.;
  }
  if(a.w == b.w) {
    result.w = 1.;
  }

  return result;
`,jS=Tn({opSnippet:H9,packedOpSnippet:j9,checkOutOfBounds:!0}),q9={kernelName:el,backendName:"webgl",kernelFunc:jS};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const P0="return a - b;",qS=Tn({opSnippet:P0,packedOpSnippet:P0,supportsComplex:!0,cpuKernelImpl:MH}),K9={kernelName:Dl,backendName:"webgl",kernelFunc:qS};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KS(n){const{inputs:e,backend:t,attrs:s}=n,{logits:r}=e,{dim:o}=s,a=ct([o],r.shape),l=HS({inputs:{x:r},backend:t,attrs:{reductionIndices:a,keepDims:!1}}),i=Jt(l.shape,a),u=Fe({inputs:{x:l},backend:t,attrs:{shape:i}}),c=qS({inputs:{a:r,b:u},backend:t}),h=WS({inputs:{x:c},backend:t}),d=fd({inputs:{x:h},backend:t,attrs:{axis:a,keepDims:!1}}),p=Fe({inputs:{x:d},backend:t,attrs:{shape:i}}),f=jS({inputs:{a:h,b:p},backend:t});return t.disposeIntermediateTensorInfo(l),t.disposeIntermediateTensorInfo(u),t.disposeIntermediateTensorInfo(c),t.disposeIntermediateTensorInfo(h),t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(p),f}const X9={kernelName:vh,backendName:"webgl",kernelFunc:KS};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Y9(n){const{inputs:e,backend:t,attrs:s}=n,{logits:r}=e,{numSamples:o,seed:a,normalized:l}=s,i=l?r:KS({inputs:{logits:r},backend:t,attrs:{dim:r.shape.length-1}}),u=i.shape[0],c=i.shape[1],h=new G9(u,c,o),d=[[a]],p=t.runWebGLProgram(h,[i],"int32",d);return l||t.disposeIntermediateTensorInfo(i),p}const Z9={kernelName:Ff,backendName:"webgl",kernelFunc:Y9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const J9=Ms+`
  return -x;
`,Q9=`
  vec4 result = -x;
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`;function e7(n){const{inputs:e,backend:t}=n,{x:s}=e;if(t.shouldExecuteOnCPU([s])){const o=t.texData.get(s.dataId),[a,l]=vH(o.values,s.shape,s.dtype);return t.makeTensorInfo(l,s.dtype,a)}let r;return de().getBool("WEBGL_PACK_UNARY_OPERATIONS")?r=new Wr(s.shape,Q9):r=new lr(s.shape,J9),t.runWebGLProgram(r,[s],s.dtype)}const t7={kernelName:rh,backendName:"webgl",kernelFunc:e7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const n7=Zm;function s7(n){ms("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:t,attrs:s}=n,{boxes:r,scores:o}=e,{maxOutputSize:a,iouThreshold:l,scoreThreshold:i}=s,u=t.readSync(r.dataId),c=t.readSync(o.dataId),{selectedIndices:h}=n7(u,c,a,l,i);return t.makeTensorInfo([h.length],"int32",new Int32Array(h))}const r7={kernelName:Of,backendName:"webgl",kernelFunc:s7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const o7=Jm;function a7(n){ms("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:t,attrs:s}=n,{boxes:r,scores:o}=e,{maxOutputSize:a,iouThreshold:l,scoreThreshold:i,padToMaxOutputSize:u}=s,c=t.readSync(r.dataId),h=t.readSync(o.dataId),{selectedIndices:d,validOutputs:p}=o7(c,h,a,l,i,u);return[t.makeTensorInfo([d.length],"int32",new Int32Array(d)),t.makeTensorInfo([],"int32",new Int32Array([p]))]}const i7={kernelName:Lf,backendName:"webgl",kernelFunc:a7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const l7=Qm;function u7(n){ms("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:t,attrs:s}=n,{boxes:r,scores:o}=e,{maxOutputSize:a,iouThreshold:l,scoreThreshold:i,softNmsSigma:u}=s,c=t.readSync(r.dataId),h=t.readSync(o.dataId),d=a,p=l,f=i,g=u,{selectedIndices:y,selectedScores:x}=l7(c,h,d,p,f,g);return[t.makeTensorInfo([y.length],"int32",new Int32Array(y)),t.makeTensorInfo([x.length],"float32",new Float32Array(x))]}const c7={kernelName:Pf,backendName:"webgl",kernelFunc:u7};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class h7{constructor(e,t,s,r){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int index = round(getIndices(coords.x));
        setOutput(mix(float(${r}), float(${s}),
                      float(index == coords.y)));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const d7=n=>{const{inputs:e,backend:t,attrs:s}=n,{indices:r}=e,{dtype:o,depth:a,onValue:l,offValue:i}=s,u=me(r.shape),c=new h7(u,a,l,i),h=Fe({inputs:{x:r},backend:t,attrs:{shape:[u]}}),d=t.runWebGLProgram(c,[h],o);t.disposeIntermediateTensorInfo(h);const p=[...r.shape,a],f=Fe({inputs:{x:d},backend:t,attrs:{shape:p}});return t.disposeIntermediateTensorInfo(d),f},p7={kernelName:ih,backendName:"webgl",kernelFunc:d7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kc(n){const{inputs:e,backend:t}=n,{x:s}=e;if(s.dtype==="complex64"){const r=au({inputs:{input:s},backend:t}),o=kc({inputs:{x:r},backend:t}),a=md({inputs:{input:s},backend:t}),l=kc({inputs:{x:a},backend:t}),i=mo({inputs:{real:o,imag:l},backend:t});return t.disposeIntermediateTensorInfo(r),t.disposeIntermediateTensorInfo(o),t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(l),i}else return iu({attrs:{shape:s.shape,dtype:s.dtype,value:s.dtype==="string"?"":0},backend:t})}const f7={kernelName:Ih,backendName:"webgl",kernelFunc:kc};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XS(n){const{inputs:e,backend:t}=n,{x:s}=e;if(s.dtype==="string")throw new Error("onesLike is not supported under string dtype");if(s.dtype==="complex64"){const r=au({inputs:{input:s},backend:t}),o=XS({inputs:{x:r},backend:t}),a=md({inputs:{input:s},backend:t}),l=kc({inputs:{x:a},backend:t}),i=mo({inputs:{real:o,imag:l},backend:t});return t.disposeIntermediateTensorInfo(r),t.disposeIntermediateTensorInfo(o),t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(l),i}else return iu({attrs:{shape:s.shape,dtype:s.dtype,value:1},backend:t})}const m7={kernelName:ah,backendName:"webgl",kernelFunc:XS};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function g7(n){const{inputs:e,backend:t,attrs:s}=n,{axis:r}=s;if(e.length===1)return Jp({inputs:{input:e[0]},backend:t,attrs:{dim:r}});const o=e[0].shape,a=e[0].dtype;e.forEach(c=>{cs(o,c.shape,"All tensors passed to stack must have matching shapes"),P(a===c.dtype,()=>"All tensors passed to stack must have matching dtypes")});const l=[],i=e.map(c=>{const h=Jp({inputs:{input:c},backend:t,attrs:{dim:r}});return l.push(h),h}),u=FS({inputs:i,backend:t,attrs:{axis:r}});return l.forEach(c=>t.disposeIntermediateTensorInfo(c)),u}const y7={kernelName:lh,backendName:"webgl",kernelFunc:g7};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class b7{constructor(e,t,s){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map((u,c)=>u[0]+e[c]+u[1]);const r=e.length,o=Tt(r),a=t.map(u=>u[0]).join(","),l=t.map((u,c)=>u[0]+e[c]).join(","),i=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r);if(r===1){this.userCode=`
        int start = ${a};
        int end = ${l};

        void main() {
          int outC = getOutputCoords();
          if (outC < start || outC >= end) {
            setOutput(value);
          } else {
            setOutput(getX(outC - start));
          }
        }
      `;return}this.userCode=`
      ${o} start = ${o}(${a});
      ${o} end = ${o}(${l});

      void main() {
        ${o} outC = getOutputCoords();
        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {
          setOutput(value);
        } else {
          ${o} coords = outC - start;
          setOutput(getX(${i}));
        }
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class x7{constructor(e,t,s){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map((g,y)=>g[0]+e[y]+g[1]);const r=e.length,o=Tt(r),a=t.map(g=>g[0]).join(","),l=t.map((g,y)=>g[0]+e[y]).join(","),i=Bn("rc",r),u=Bn("source",r),c=`${i[r-1]} < ${this.outputShape[r-1]}`,h=r===1?"source":`vec2(${u.slice(-2).join()})`,d=[`${o} rc = outputLoc;`,`${i[r-1]} += 1;
       if(${c}) {
      `,r===1?"":`}
       rc = outputLoc;
       ${i[r-2]} += 1;
       if(${i[r-2]} < ${this.outputShape[r-2]}) {`,r===1?"":`  ${i[r-1]} += 1;
         if(${c}) {`],p=r===1?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let f="";for(let g=0,y=r===1?2:4;g<y;g++)f+=`
        ${d[g]}
        if (${p}) {
          result[${g}] = float(value);
        } else {
          ${o} source = rc - start;
          result[${g}] = getChannel(getX(${u.join()}), ${h});
        }
      `;f+=r===1?"} ":"}}",this.userCode=`
      const ${o} start = ${o}(${a});
      const ${o} end = ${o}(${l});

      void main() {
        ${o} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${f}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const YS=n=>{const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{paddings:o,constantValue:a}=s;if(me(r.shape)===0){const u=o.map((c,h)=>c[0]+r.shape[h]+c[1]);return iu({backend:t,attrs:{shape:u,value:a,dtype:r.dtype}})}const l=de().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new x7(r.shape,o,a):new b7(r.shape,o,a),i=[[a]];return t.runWebGLProgram(l,[r],r.dtype,i)},w7={kernelName:uh,backendName:"webgl",kernelFunc:YS};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const v7=`
  if(a < 0.0 && floor(b) < b){
    return NAN;
  }
  if (b == 0.0) {
    return 1.0;
  }
  return (round(mod(b, 2.0)) != 1) ?
      pow(abs(a), b) : sign(a) * pow(abs(a), b);
`,k7=`
  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.
  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));
  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);
  vec4 result = multiplier * pow(abs(a), b);

  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS
  bvec4 isExpZero = equal(b, vec4(0.0));
  result.r = isExpZero.r ? 1.0 : result.r;
  result.g = isExpZero.g ? 1.0 : result.g;
  result.b = isExpZero.b ? 1.0 : result.b;
  result.a = isExpZero.a ? 1.0 : result.a;

  bvec4 isNaN1 = lessThan(a, vec4(0.0));
  bvec4 isNaN2 = lessThan(floor(b), b);
  bvec4 isNaN = bvec4(isNaN1.x && isNaN2.x, isNaN1.y && isNaN2.y, isNaN1.z && isNaN2.z, isNaN1.w && isNaN2.w);
  `+aa+`
  return result;
`,S7=Tn({opSnippet:v7,packedOpSnippet:k7}),C7={kernelName:bl,backendName:"webgl",kernelFunc:S7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function I7(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o,keepDims:a}=s,l=r.shape.length,i=[],u=ct(o,r.shape);let c=u;const h=jt(c,l);let d=r;h!=null&&(d=Mn({inputs:{x:r},backend:t,attrs:{perm:h}}),c=Qt(c.length,l),i.push(d)),Nn("prod",c,l);let p;if(t.shouldExecuteOnCPU([d])){const f=t.texData.get(d.dataId).values,{outVals:g,outShape:y,outDtype:x}=SH(d.shape,d.dtype,f,c);p=t.makeTensorInfo(y,x,g)}else{const[f,g]=bn(d.shape,c),y=me(g),x=Fe({inputs:{x:d},backend:t,attrs:{shape:[-1,y]}}),w=um(r.dtype),v=ia(x,w,"prod",t);p=Fe({inputs:{x:v},backend:t,attrs:{shape:f}}),i.push(x),i.push(v)}if(a){i.push(p);const f=Jt(p.shape,u);p=Fe({inputs:{x:p},backend:t,attrs:{shape:f}})}return i.forEach(f=>t.disposeIntermediateTensorInfo(f)),p}const N7={kernelName:hh,backendName:"webgl",kernelFunc:I7};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $7(n){const{inputs:e,backend:t,attrs:s}=n,{paramsNestedSplits:r,paramsDenseValues:o,indices:a}=e,{outputRaggedRank:l}=s,i=r.map(x=>t.readSync(x.dataId)),u=r.map(x=>x.shape),c=t.readSync(o.dataId),h=t.readSync(a.dataId),[d,p,f]=CH(i,u,c,o.shape,o.dtype,h,a.shape,l),g=d.map(x=>t.makeTensorInfo([x.length],"int32",x)),y=t.makeTensorInfo(f,o.dtype,p);return g.concat([y])}const T7={kernelName:zf,backendName:"webgl",kernelFunc:$7};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _7(n){const{inputs:e,backend:t}=n,{starts:s,limits:r,deltas:o}=e,a=t.readSync(s.dataId),l=t.readSync(r.dataId),i=t.readSync(o.dataId),[u,c]=IH(a,s.shape,s.dtype,l,r.shape,i,o.shape),h=t.makeTensorInfo([u.length],"int32",u),d=t.makeTensorInfo([c.length],s.dtype,c);return[h,d]}const E7={kernelName:Bf,backendName:"webgl",kernelFunc:_7};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function A7(n){const{inputs:e,backend:t,attrs:s}=n,{shape:r,values:o,defaultValue:a,rowPartitionTensors:l}=e,{rowPartitionTypes:i}=s,u=t.readSync(r.dataId),c=t.readSync(o.dataId),h=t.readSync(a.dataId),d=l.map(y=>t.readSync(y.dataId)),p=l.map(y=>y.shape),[f,g]=NH(u,r.shape,c,o.shape,o.dtype,h,a.shape,d,p,i);return t.makeTensorInfo(f,o.dtype,g)}const D7={kernelName:Mf,backendName:"webgl",kernelFunc:A7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ZS=n=>{const{backend:e,attrs:t}=n,{start:s,stop:r,step:o,dtype:a}=t,l=$H(s,r,o,a);return e.makeTensorInfo([l.length],a,l)},R7={kernelName:Vf,backendName:"webgl",kernelFunc:ZS};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const F7="return 1.0 / x;",O7=bt({opSnippet:F7}),L7={kernelName:xl,backendName:"webgl",kernelFunc:O7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const P7=Ms+`
  return (x < 0.0) ? 0.0 : x;
`,z7=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,B7=bt({opSnippet:P7,packedOpSnippet:z7}),M7={kernelName:wl,backendName:"webgl",kernelFunc:B7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const V7=Ms+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,W7=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,U7=bt({opSnippet:V7,packedOpSnippet:W7}),G7={kernelName:vl,backendName:"webgl",kernelFunc:U7};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class H7{constructor(e,t,s,r,o){this.variableNames=["A"],this.outputShape=[];const[a,l,i,u]=e;this.outputShape=[a,t,s,u];const c=[r&&t>1?l-1:l,r&&s>1?i-1:i],h=[r&&t>1?t-1:t,r&&s>1?s-1:s];let d;o?d="(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":d="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${c[0]/h[0]},
          ${c[1]/h[1]});
      const vec2 inputShapeRC = vec2(${l}.0, ${i}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${d};

        // Compute the four integer indices.
        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));
        ivec2 sourceCeilRC = ivec2(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);
        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);
        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);
        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);

        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);

        float top = topLeft + (topRight - topLeft) * fracRC.y;
        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;
        float newValue = top + (bottom - top) * fracRC.x;

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class j7{constructor(e,t,s,r,o){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[a,l,i,u]=e;this.outputShape=[a,t,s,u];const c=[r&&t>1?l-1:l,r&&s>1?i-1:i],h=[r&&t>1?t-1:t,r&&s>1?s-1:s];let d;o?d="(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":d="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${c[0]/h[0]},
          ${c[1]/h[1]},
          ${c[1]/h[1]});
      const vec3 inputShapeRC = vec3(${l}.0, ${i}.0,
                                     ${i}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${d};

        // Compute the four integer indices.
        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));
        ivec3 sourceCeilRC = ivec3(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${u-1};
        bool hasNextRow = coords.z < ${s-1};

        // In parallel, construct four corners for all four components in
        // packed 2x2 cell.
        vec4 topLeft = vec4(
          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 bottomLeft = vec4(
          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 topRight = vec4(
          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec4 bottomRight = vec4(
          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);

        vec4 top = mix(topLeft, topRight, fracRC.yyzz);
        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);
        vec4 newValue = mix(top, bottom, fracRC.x);

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function q7(n){const{inputs:e,backend:t,attrs:s}=n,{images:r}=e,{alignCorners:o,halfPixelCenters:a,size:l}=s,[i,u]=l,c=de().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new j7(r.shape,i,u,o,a):new H7(r.shape,i,u,o,a);return t.runWebGLProgram(c,[r],"float32")}const K7={kernelName:fh,backendName:"webgl",kernelFunc:q7};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class X7{constructor(e,t,s){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,r,o]=t,[,a,l]=e,i=[s&&a>1?r-1:r,s&&l>1?o-1:o],u=[s&&a>1?a-1:a,s&&l>1?l-1:l],c=i[0]/u[0],h=i[1]/u[1],d=1/c,p=1/h,f=Math.ceil(d)*2+2,g=Math.ceil(p)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${c});
        const float widthScale = float(${h});

        const float invHeightScale = float(${d});
        const float invWidthScale = float(${p});

        const int winHeight = int(${f});
        const int winWidth = int(${g});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(startRLerp - float(winHeight / 2));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(startCLerp - float(winWidth / 2));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${a}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${l}) {
              continue;
            }

            float dxR = float(dyR) * heightScale;
            int topDxRIndex = int(floor(dxR));
            int bottomDxRIndex = int(min(ceil(dxR), ${r-1}.0));
            float dxRLerp = dxR - float(topDxRIndex);
            float inverseDxRLerp = 1.0 - dxRLerp;

            float dxC = float(dyC) * widthScale;
            int leftDxCIndex = int(floor(dxC));
            int rightDxCIndex = int(min(ceil(dxC), ${o-1}.0));
            float dxCLerp = dxC - float(leftDxCIndex);
            float inverseDxCLerp = 1.0 - dxCLerp;

            if (r == topDxRIndex && c == leftDxCIndex) {
              // topLeft
              accumulator +=
                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;
            }

            if (r == topDxRIndex && c == rightDxCIndex) {
              // topRight
              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;
            }

            if (r == bottomDxRIndex && c == leftDxCIndex) {
              // bottomLeft
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;
            }

            if (r == bottomDxRIndex && c == rightDxCIndex) {
              // bottomRight
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Y7(n){const{inputs:e,backend:t,attrs:s}=n,{images:r,dy:o}=e,{alignCorners:a}=s,l=new X7(o.shape,r.shape,a);return t.runWebGLProgram(l,[o],o.dtype)}const Z7={kernelName:Gf,backendName:"webgl",kernelFunc:Y7};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class J7{constructor(e,t,s,r,o){this.variableNames=["A"],this.outputShape=[];const[a,l,i,u]=e;this.outputShape=[a,t,s,u];const c=[r&&t>1?l-1:l,r&&s>1?i-1:i],h=[r&&t>1?t-1:t,r&&s>1?s-1:s],d=r?"0.5":"0.0";let p;o?p="max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":p="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${c[0]/h[0]},
          ${c[1]/h[1]});
      const vec2 inputShapeRC = vec2(${l}.0, ${i}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${p};

        // Compute the coordinators of nearest neighbor point.
        ivec2 sourceNearestRC = ivec2(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${d})));
        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Q7{constructor(e,t,s,r,o){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[a,l,i,u]=e;this.outputShape=[a,t,s,u];const c=[r&&t>1?l-1:l,r&&s>1?i-1:i],h=[r&&t>1?t-1:t,r&&s>1?s-1:s],d=r?"0.5":"0.0";let p;o?p="max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":p="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${c[0]/h[0]},
          ${c[1]/h[1]},
          ${c[1]/h[1]});
      const vec3 inputShapeRC = vec3(${l}.0, ${i}.0,
                                     ${i}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${p};

        // Compute the coordinators of nearest neighbor point.
        ivec3 sourceNearestRC = ivec3(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${d})));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${u-1};
        bool hasNextRow = coords.z < ${s-1};

        vec4 newValue = vec4(
          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),
          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eY(n){const{inputs:e,backend:t,attrs:s}=n,{images:r}=e,{alignCorners:o,halfPixelCenters:a,size:l}=s,[i,u]=l,c=de().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new Q7(r.shape,i,u,o,a):new J7(r.shape,i,u,o,a);return t.runWebGLProgram(c,[r],r.dtype)}const tY={kernelName:ph,backendName:"webgl",kernelFunc:eY};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class nY{constructor(e,t,s){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,r,o]=t,[,a,l]=e,i=[s&&a>1?r-1:r,s&&l>1?o-1:o],u=[s&&a>1?a-1:a,s&&l>1?l-1:l],c=i[0]/u[0],h=i[1]/u[1],d=1/c,p=1/h,f=Math.ceil(d)*2+2,g=Math.ceil(p)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${c});
        const float widthScale = float(${h});

        const float invHeightScale = float(${d});
        const float invWidthScale = float(${p});

        const int winHeight = int(${f});
        const int winWidth = int(${g});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(floor(startRLerp - float(winHeight / 2)));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(floor(startCLerp - float(winWidth / 2)));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${a}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${l}) {
              continue;
            }

            float sourceFracRow =
              float(${i[0]}) *
                (float(dyR) / float(${u[0]}));

            float sourceFracCol =
                float(${i[1]}) *
                  (float(dyC) / float(${u[1]}));

            int sourceNearestRow = int(min(
                float(int(${r}) - 1),
                ${s} ? float(round(sourceFracRow)) :
                                  float(floor(sourceFracRow))));

            int sourceNearestCol = int(min(
                float(int(${o}) - 1),
                ${s} ? float(round(sourceFracCol)) :
                                  float(floor(sourceFracCol))));

            if (r == sourceNearestRow && c == sourceNearestCol) {
              accumulator += getDy(b, dyR, dyC, d);
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sY(n){const{inputs:e,backend:t,attrs:s}=n,{images:r,dy:o}=e,{alignCorners:a}=s,l=new nY(o.shape,r.shape,a);return t.runWebGLProgram(l,[o],o.dtype)}const rY={kernelName:Uf,backendName:"webgl",kernelFunc:sY};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class oY{constructor(e,t){this.variableNames=["x"];const s=e.length;if(s>4)throw new Error(`WebGL backend: Reverse of rank-${s} tensor is not yet supported`);if(this.outputShape=e,s===1){this.userCode=`
        void main() {
          int coord = getOutputCoords();
          setOutput(getX(${e[0]} - coord - 1));
        }
      `;return}const r=l=>t.indexOf(l)!==-1&&e[l]!==1?`${e[l]} - coords[${l}] - 1`:`coords[${l}]`,o=e.map((l,i)=>r(i)).join(","),a=Tt(s);this.userCode=`
      void main() {
        ${a} coords = getOutputCoords();
        setOutput(getX(${o}));
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class aY{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const s=e.length;if(s>4)throw new Error(`WebGL backend: Reverse of rank-${s} tensor is not yet supported`);this.outputShape=e;const r=Bn("rc",s),o=`${r[s-1]} + 1 < ${this.outputShape[s-1]}`,a=`${r[s-2]} + 1 < ${this.outputShape[s-2]}`,l=Tt(s);s===1?this.userCode=`
        void main(){
          int rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = getChannel(getX(${e[0]} - rc - 1),
            ${e[0]} - rc - 1);
          if(${o}){
              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),
                ${e[0]} - (rc  + 1) - 1);
          }
          setOutput(result);
        }
      `:this.userCode=`
        void main() {
          ${l} rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = ${i(r.slice())};
          if(${o}){
            result.g = ${u(r.slice())};
          }
          if(${a}) {
            result.b = ${c(r.slice())};
            if(${o}) {
              result.a = ${h(r.slice())};
            }
          }
          setOutput(result);
        }
    `;function i(f){return d(f)}function u(f){return f[s-1]="("+f[s-1]+" + 1)",d(f)}function c(f){return f[s-2]="("+f[s-2]+" + 1)",d(f)}function h(f){return f[s-1]="("+f[s-1]+" + 1)",f[s-2]="("+f[s-2]+" + 1)",d(f)}function d(f){const g=e.map((w,v)=>p(v,f)),y=g.join(","),x=g.slice(-2).join(",");return`getChannel(getX(${y}), vec2(${x}))`}function p(f,g){return t.indexOf(f)!==-1&&e[f]!==1?`${e[f]} - ${g[f]} - 1`:`${g[f]}`}}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iY(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{dims:o}=s,a=r.shape.length,l=ct(o,r.shape);if(a===0)return us({inputs:{x:r},backend:t});const i=de().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new aY(r.shape,l):new oY(r.shape,l);return t.runWebGLProgram(i,[r],r.dtype)}const lY={kernelName:mh,backendName:"webgl",kernelFunc:iY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class uY{constructor(e,t){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];const s=e[1],r=e[2];this.outputShape=e;let o="";typeof t=="number"?o=`float outputValue = ${t.toFixed(2)};`:o=`
        vec3 fill = vec3(${t.join(",")});
        float outputValue = fill[coords[3]];`,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];
          int y = coords[1];
          float coordXFloat = (float(x) - params[0]) * params[3] -
            (float(y) - params[1]) * params[2];
          float coordYFloat = (float(x) - params[0]) * params[2] +
            (float(y) - params[1]) * params[3];
          int coordX = int(round(coordXFloat + params[0]));
          int coordY = int(round(coordYFloat + params[1]));
          ${o}
          if(coordX >= 0 && coordX < ${r} && coordY >= 0 && coordY < ${s}) {
            outputValue = getImage(coords[0], coordY, coordX, coords[3]);
          }
          setOutput(outputValue);
        }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cY={kernelName:im,backendName:"webgl",kernelFunc:({inputs:n,attrs:e,backend:t})=>{const{image:s}=n,{radians:r,fillValue:o,center:a}=e,l=t,i=new uY(s.shape,o),[u,c]=pg(a,s.shape[1],s.shape[2]),h=[[u,c,Math.sin(r),Math.cos(r)]];return l.runWebGLProgram(i,[s],s.dtype,h)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hY=`
  // OpenGL ES does not support round function.
  // The algorithm is based on banker's rounding.
  float base = floor(x);
  if ((x - base) < 0.5) {
    return floor(x);
  } else if ((x - base) > 0.5) {
    return ceil(x);
  } else {
    if (mod(base, 2.0) == 0.0) {
      return base;
    } else {
      return base + 1.0;
    }
  }
`,dY=bt({opSnippet:hY}),pY={kernelName:kl,backendName:"webgl",kernelFunc:dY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fY="return inversesqrt(x);",mY=bt({opSnippet:fY,cpuKernelImpl:TH}),gY={kernelName:Sl,backendName:"webgl",kernelFunc:mY};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class yy{constructor(e,t,s,r,o,a,l=!0,i=!1){this.variableNames=["updates","indices","defaultValue"],this.outputShape=a;const u=Tt(o.length),c=Tt(a.length);let h="";s===1?h="i":s===2&&(h="i, j");const d=`getIndices(${h})`;let p="";r===1?p="i":r===2&&(p="i, coords[1]");const f=`getUpdates(${p})`;let g="";i&&(g="coords[0], coords[1]");const y=`getDefaultValue(${g})`,x=t>1?"strides[j]":"strides";this.userCode=`
        ${u} strides = ${u}(${o});

        void main() {
          ${c} coords = getOutputCoords();
          float sum = 0.0;
          bool found = false;
          for (int i = 0; i < ${e}; i++) {
            int flattenedIndex = 0;
            for (int j = 0; j < ${t}; j++) {
              int index = round(${d});
              flattenedIndex += index * ${x};
            }
            if (flattenedIndex == coords[0]) {
              sum += ${f};
              found = true;
            }
          }
          setOutput(mix(${y}, sum, float(found)));
        }
      `}}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class yY{constructor(e,t,s,r,o,a,l=!0,i=!1){this.variableNames=["updates","indices","defaultValue"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=a;const u=Tt(o.length),c=Tt(a.length);let h="";s===1?h="i":s===2&&(h="i, j");const d=`getIndices(${h})`;let p="";r===1?p="i":r===2&&(p="i, coords[1]");const f=`getUpdates(${p})`;let g="";i&&(g="coords[0], coords[1]");const y=`getDefaultValue(${g})`,x=t>1?"strides[j]":"strides",w=t>1?"strides[j + 1]":"strides";this.userCode=`
        ${u} strides = ${u}(${o});

        void main() {
          ${c} coords = getOutputCoords();
          vec4 sum = vec4(0.);
          vec4 found = vec4(0.);
          for (int i = 0; i < ${e}; i+=2) {
            ivec2 flattenedIndex = ivec2(0);
            for (int j = 0; j < ${t}; j+=2) {
              ivec4 index = round(${d});
              flattenedIndex += index.xz * ${x};
              if (j + 1 < ${t}) {
                flattenedIndex += index.yw * ${w};
              }
            }
            if (flattenedIndex[0] == coords[0] || flattenedIndex[1] == coords[0] ||
                flattenedIndex[0] == coords[0] + 1 || flattenedIndex[1] == coords[0] + 1) {
              vec4 updVals = ${f};
              if (flattenedIndex[0] == coords[0]) {
                sum.xy += updVals.xy;
                found.xy = vec2(1.);
              } else if (flattenedIndex[0] == coords[0] + 1) {
                sum.zw += updVals.xy;
                found.zw = vec2(1.);
              }
              if (flattenedIndex[1] == coords[0]) {
                sum.xy += updVals.zw;
                found.xy = vec2(1.);
              } else if (flattenedIndex[1] == coords[0] + 1) {
                sum.zw += updVals.zw;
                found.zw = vec2(1.);
              }
            }
          }
          setOutput(mix(${y}, sum, found));
        }
      `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bY(n){const{inputs:e,backend:t,attrs:s}=n,{indices:r,updates:o}=e,{shape:a}=s,{sliceRank:l,numUpdates:i,sliceSize:u,strides:c,outputSize:h}=ta(o,r,a),d=[h/u,u];if(h===0)return t.makeTensorInfo(a,r.dtype);const p=Fe({inputs:{x:r},backend:t,attrs:{shape:[i,l]}}),f=Fe({inputs:{x:o},backend:t,attrs:{shape:[i,u]}}),g=t.makeTensorInfo([],"float32",new Float32Array([0]));let y;de().getBool("WEBGL_PACK")?y=new yY(i,l,p.shape.length,f.shape.length,c,d):y=new yy(i,l,p.shape.length,f.shape.length,c,d);const x=t.runWebGLProgram(y,[f,p,g],f.dtype),w=Fe({inputs:{x},backend:t,attrs:{shape:a}});return t.disposeIntermediateTensorInfo(p),t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(x),t.disposeIntermediateTensorInfo(g),w}const xY={kernelName:Hf,backendName:"webgl",kernelFunc:bY};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class wY{constructor(e,t,s,r){this.variableNames=["sortedSequence","values"],this.customUniforms=[{name:"numInputs",type:"int"}],this.outputShape=[e,s];const o="while (left < right) {",a=`for (int i = 0; i < ${Math.ceil(Math.log2(t+1))}; ++i) { if (left >= right) break;`,l=de().getNumber("WEBGL_VERSION")===2?o:a,i=r==="left"?"<":"<=";this.userCode=`
       int findBound(int batch, float value) {
         int left = 0;
         int right = numInputs;
         int mid;
         ${l}
           mid = (left + right) / 2;
           if (getSortedSequence(batch, mid) ${i} value) {
             left = mid + 1;
           } else {
             right = mid;
           }
         }
         return right;
       }

       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int valueIndex = coords[1];

         float value = getValues(batch, valueIndex);

         setOutput(float(findBound(batch, value)));
       }
     `}}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vY(n){const{inputs:e,backend:t,attrs:s}=n,{sortedSequence:r,values:o}=e,{side:a}=s,l=new wY(r.shape[0],r.shape[1],o.shape[1],a),i=[[r.shape[1]]];return t.runWebGLProgram(l,[r,o],"int32",i)}const kY={kernelName:qf,backendName:"webgl",kernelFunc:vY};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class SY{constructor(e,t,s){this.variableNames=["c","a","b"],this.outputShape=t;let r,o;if(s>4)throw Error(`Where for rank ${s} is not yet supported`);if(s===1)o="resRC",r="resRC";else{const l=["resRC.x","resRC.y","resRC.z","resRC.w"],i=[],u=[];for(let c=0;c<t.length;c++)u.push(`${l[c]}`),c<e&&i.push(`${l[c]}`);r=i.join(),o=u.join()}const a=Tt(s);this.userCode=`
      void main() {
        ${a} resRC = getOutputCoords();
        float cVal = getC(${r});
        if (cVal >= 1.0) {
          setOutput(getA(${o}));
        } else {
          setOutput(getB(${o}));
        }
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CY(n){const{inputs:e,backend:t}=n,{condition:s,t:r,e:o}=e,a=new SY(s.shape.length,r.shape,r.shape.length);return t.runWebGLProgram(a,[s,r,o],rs(r.dtype,o.dtype))}const IY={kernelName:gh,backendName:"webgl",kernelFunc:CY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const NY=`
  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.
  // see: https://arxiv.org/abs/1706.02515
  float scaleAlpha = ${Zh};
  float scale = ${Jh};
  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);
`,$Y=bt({opSnippet:NY}),TY={kernelName:Cl,backendName:"webgl",kernelFunc:$Y};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _Y=ri+`
  return 1.0 / (1.0 + exp(-1.0 * x));
`,EY=`
  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,AY=bt({opSnippet:_Y,packedOpSnippet:EY,cpuKernelImpl:EH}),DY={kernelName:Tl,backendName:"webgl",kernelFunc:AY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const RY=`
  if (isnan(x)) { return 0.0; }
  return sign(x);
`,FY=bt({opSnippet:RY}),OY={kernelName:$l,backendName:"webgl",kernelFunc:FY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LY=ri+`
  return sin(x);
`,PY=`
  vec4 result = sin(x);
  bvec4 isNaN = isnan(x);
  ${aa}
  return result;
`,zY=bt({opSnippet:LY,packedOpSnippet:PY}),BY={kernelName:Il,backendName:"webgl",kernelFunc:zY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const MY=`
  float e2x = exp(x);
  return (e2x - 1.0 / e2x) / 2.0;
`,VY=bt({opSnippet:MY}),WY={kernelName:Nl,backendName:"webgl",kernelFunc:VY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const UY=`
  float epsilon = 1.1920928955078125e-7;
  float threshold = log(epsilon) + 2.0;

  bool too_large = x > -threshold;
  bool too_small = x < threshold;

  float result;
  float exp_x = exp(x);

  if (too_large){
    result = x;
  }
  else if (too_small){
    result = exp_x;
  }
  else{
    result = log(exp_x + 1.0);
  }
  return result;
`,GY=bt({opSnippet:UY}),HY={kernelName:_l,backendName:"webgl",kernelFunc:GY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jY=n=>{const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{blockShape:o,paddings:a}=s;P(r.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet");const l=o.reduce((x,w)=>x*w),i=[[0,0]];i.push(...a);for(let x=1+o.length;x<r.shape.length;++x)i.push([0,0]);const u=[],c=YS({inputs:{x:r},backend:t,attrs:{paddings:i,constantValue:0}}),h=Hl(c.shape,o,l,!1),d=jl(h.length,o.length,!1),p=ql(c.shape,o,l,!1),f=Fe({inputs:{x:c},backend:t,attrs:{shape:h}}),g=Mn({inputs:{x:f},backend:t,attrs:{perm:d}}),y=Fe({inputs:{x:g},backend:t,attrs:{shape:p}});return u.push(c),u.push(f),u.push(g),u.forEach(x=>t.disposeIntermediateTensorInfo(x)),y},qY={kernelName:xh,backendName:"webgl",kernelFunc:jY};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KY(n){const{inputs:e,backend:t}=n,{indices:s,values:r,denseShape:o,defaultValue:a}=e;if(o.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
         ${o.shape}`);if(s.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
         ${s.shape}`);if(r.shape.length!==1)throw new Error(`Values must be a vector, saw:
         ${r.shape}`);if(a.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${a.shape}`);const l=t.readSync(s.dataId),i=t.readSync(r.dataId),u=t.readSync(o.dataId),c=t.readSync(a.dataId)[0],[h,d,p,f,g]=DH(l,s.shape,s.dtype,i,r.dtype,u,c);return[t.makeTensorInfo(d,s.dtype,h),t.makeTensorInfo([d[0]],r.dtype,p),t.makeTensorInfo([f.length],"bool",new Uint8Array(f.map(y=>Number(y)))),t.makeTensorInfo([g.length],s.dtype,new Int32Array(g))]}const XY={kernelName:Kf,backendName:"webgl",kernelFunc:KY};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YY(n){const{inputs:e,backend:t}=n,{inputIndices:s,inputShape:r,newShape:o}=e;if(s.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape ${s.shape}`);if(r.shape.length!==1)throw new Error(`Input shape should be a vector but received shape ${r.shape}`);if(o.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${o.shape}`);const a=Array.from(t.readSync(r.dataId)),l=t.readSync(s.dataId),i=Array.from(t.readSync(o.dataId)),[u,c,h]=RH(l,s.shape,s.dtype,a,i);return[t.makeTensorInfo(c,s.dtype,u),t.makeTensorInfo([h.length],o.dtype,new Int32Array(h))]}const ZY={kernelName:Xf,backendName:"webgl",kernelFunc:YY};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JY(n){const{inputs:e,backend:t}=n,{data:s,indices:r,segmentIds:o}=e;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.shape.length!==1)throw new Error(`Indices should be a vector but received shape
              ${r.shape}`);if(o.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
              ${o.shape}`);const a=t.readSync(s.dataId),l=t.readSync(r.dataId),i=t.readSync(o.dataId),[u,c]=vS(a,s.shape,s.dtype,l,i,!0);return t.makeTensorInfo(c,s.dtype,u)}const QY={kernelName:Yf,backendName:"webgl",kernelFunc:JY};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eZ(n){const{inputs:e,backend:t}=n,{data:s,indices:r,segmentIds:o}=e;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.shape.length!==1)throw new Error(`Indices should be a vector but received shape
             ${r.shape}`);if(o.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
             ${o.shape}`);const a=t.readSync(s.dataId),l=t.readSync(r.dataId),i=t.readSync(o.dataId),[u,c]=vS(a,s.shape,s.dtype,l,i);return t.makeTensorInfo(c,s.dtype,u)}const tZ={kernelName:Zf,backendName:"webgl",kernelFunc:eZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nZ(n){const{inputs:e,backend:t,attrs:s}=n,{sparseIndices:r,sparseValues:o,defaultValue:a}=e,{outputShape:l}=s,{sliceRank:i,numUpdates:u,sliceSize:c,strides:h,outputSize:d}=ta(o,r,l),p=!1;if(o.dtype==="string"){const x=t.bufferSync(r),w=t.bufferSync(o),v=qr(t.readSync(a.dataId)[0]),k=_H(x,w,l,d,c,u,i,h,v,p);return t.makeTensorInfo(l,k.dtype,k.values)}const f=new yy(u,i,r.shape.length,o.shape.length,h,[d,1],p),g=t.runWebGLProgram(f,[o,r,a],o.dtype),y=Fe({inputs:{x:g},backend:t,attrs:{shape:l}});return t.disposeIntermediateTensorInfo(g),y}const sZ={kernelName:Jf,backendName:"webgl",kernelFunc:nZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rZ(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{numOrSizeSplits:o,axis:a}=s,l=ct(a,r.shape)[0],i=Tg(r,o,l),u=r.shape.length,c=new Array(u).fill(0),h=r.shape.slice();return i.map(d=>{const p=[...h];p[l]=d;const f=oi({inputs:{x:r},backend:t,attrs:{begin:c,size:p}});return c[l]+=d,f})}const oZ={kernelName:wh,backendName:"webgl",kernelFunc:rZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const z0="return sqrt(x);",aZ=bt({opSnippet:z0,packedOpSnippet:z0,cpuKernelImpl:FH}),iZ={kernelName:El,backendName:"webgl",kernelFunc:aZ};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lZ="return x * x;",uZ=bt({opSnippet:lZ}),cZ={kernelName:Qf,backendName:"webgl",kernelFunc:uZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const B0="return (a - b) * (a - b);",hZ=Tn({opSnippet:B0,packedOpSnippet:B0}),dZ={kernelName:Al,backendName:"webgl",kernelFunc:hZ};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pZ(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e;if(r.dtype!=="string")throw new Error("Input must be of datatype string");const o=t.readSync(r.dataId),a=Er(o),l=OH(a,"string",s);return t.makeTensorInfo(r.shape,"string",l)}const fZ={kernelName:kh,backendName:"webgl",kernelFunc:pZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mZ({inputs:n,attrs:e,backend:t}){const{x:s}=n,r=Ms+`
    return x > 0.0 ? 1.0 : float(${e.alpha});
  `,o=new lr(s.shape,r);return t.runWebGLProgram(o,[s],s.dtype)}const gZ={kernelName:Ll,backendName:"webgl",kernelFunc:mZ};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class yZ{constructor(e,t,s){this.variableNames=["x"],this.outputShape=s;const r=s.length,o=Tt(s.length),a=Tt(s.length);let l="";if(r===1)l="coords * strides + begin";else{let i=0;l=s.map((u,c)=>(i++,s.length===1?`coords * strides[${c}] + begin[${c}]`:`coords[${i-1}] * strides[${c}] + begin[${c}]`)).join(",")}this.userCode=`
      ${o} begin = ${o}(${e});
      ${o} strides = ${o}(${t});

      void main() {
        ${a} coords = getOutputCoords();
        setOutput(getX(${l}));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bZ(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{begin:o,end:a,strides:l,beginMask:i,endMask:u,ellipsisMask:c,newAxisMask:h,shrinkAxisMask:d}=s,{finalShapeSparse:p,finalShape:f,isIdentity:g,sliceDim0:y,isSimpleSlice:x,begin:w,end:v,strides:k}=cg(r.shape,o,a,l,i,u,c,h,d);let C;if(g)C=Fe({inputs:{x:r},backend:t,attrs:{shape:f}});else if(y||x){P(r.shape.length>=1,()=>`Input must have rank at least 1, got: ${r.shape.length}`);const N=ig(w,v,k),E=oi({inputs:{x:r},backend:t,attrs:{begin:w,size:N}});C=Fe({inputs:{x:E},backend:t,attrs:{shape:f}}),t.disposeIntermediateTensorInfo(E)}else if(t.shouldExecuteOnCPU([r])){const E=t.readSync(r.dataId),R=lt(r.shape,r.dtype,E),O=LH(p,R,k,w);C=t.makeTensorInfo(f,r.dtype,O.values)}else{const E=new yZ(w,k,p);C=t.runWebGLProgram(E,[r],r.dtype)}const I=Fe({inputs:{x:C},backend:t,attrs:{shape:f}});return t.disposeIntermediateTensorInfo(C),I}const xZ={kernelName:em,backendName:"webgl",kernelFunc:bZ};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wZ(n){const{inputs:e,backend:t,attrs:s}=n,{separator:r,nGramWidths:o,leftPad:a,rightPad:l,padWidth:i,preserveShortSequences:u}=s,{data:c,dataSplits:h}=e,d=t.readSync(c.dataId),p=t.readSync(h.dataId),[f,g]=PH(d,p,r,o,a,l,i,u);return[t.makeTensorInfo([f.length],"string",f),t.makeTensorInfo(h.shape,"int32",g)]}const vZ={kernelName:tm,backendName:"webgl",kernelFunc:wZ};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kZ(n){const{inputs:e,backend:t,attrs:s}=n,{skipEmpty:r}=s,{input:o,delimiter:a}=e;if(o.dtype!=="string")throw new Error("Input must be of datatype string");if(o.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${o.shape}`);if(a.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${a.shape}`);const l=t.readSync(o.dataId),i=t.readSync(a.dataId)[0],[u,c,h]=zH(l,i,r),d=c.length;return[t.makeTensorInfo([d,2],"int32",u),t.makeTensorInfo([d],"string",c),t.makeTensorInfo([2],"int32",new Int32Array(h))]}const SZ={kernelName:nm,backendName:"webgl",kernelFunc:kZ};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CZ(n){const{inputs:e,backend:t,attrs:s}=n,{numBuckets:r}=s,{input:o}=e;if(o.dtype!=="string")throw new Error("Input must be of datatype string");if(r<=0)throw new Error("Number of buckets must be at least 1");const a=t.readSync(o.dataId),l=BH(a,r);return t.makeTensorInfo(o.shape,"int32",l)}const IZ={kernelName:sm,backendName:"webgl",kernelFunc:CZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const NZ="return tan(x);",$Z=bt({opSnippet:NZ}),TZ={kernelName:Rl,backendName:"webgl",kernelFunc:$Z};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _Z=`
  float e2x = exp(-2.0 * abs(x));
  return sign(x) * (1.0 - e2x) / (1.0 + e2x);
`,EZ=bt({opSnippet:_Z}),AZ={kernelName:Fl,backendName:"webgl",kernelFunc:EZ};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DZ(n){const{inputs:e,backend:t,attrs:s}=n,{tensor:r,indices:o,updates:a}=e,{sliceRank:l,numUpdates:i,sliceSize:u,strides:c,outputSize:h}=ta(a,o,r.shape),d=[h/u,u];if(h===0)return t.makeTensorInfo(r.shape,o.dtype);const p=Fe({inputs:{x:o},backend:t,attrs:{shape:[i,l]}}),f=Fe({inputs:{x:a},backend:t,attrs:{shape:[i,u]}}),g=Fe({inputs:{x:r},backend:t,attrs:{shape:d}}),y=new yy(i,l,p.shape.length,f.shape.length,c,d,!1,!0),x=t.runWebGLProgram(y,[f,p,g],g.dtype),w=Fe({inputs:{x},backend:t,attrs:{shape:r.shape}});return t.disposeIntermediateTensorInfo(p),t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(g),t.disposeIntermediateTensorInfo(x),w}const RZ={kernelName:jf,backendName:"webgl",kernelFunc:DZ};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class FZ{constructor(e,t){this.variableNames=["A"];const s=new Array(e.length);for(let a=0;a<s.length;a++)s[a]=e[a]*t[a];this.outputShape=s,this.rank=s.length;const r=Tt(this.rank),o=OZ(e);this.userCode=`
      void main() {
        ${r} resRC = getOutputCoords();
        setOutput(getA(${o}));
      }
    `}}function OZ(n){const e=n.length;if(e>5)throw Error(`Tile for rank ${e} is not yet supported`);if(e===1)return`imod(resRC, ${n[0]})`;const t=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],s=[];for(let r=0;r<n.length;r++)s.push(`imod(${t[r]}, ${n[r]})`);return s.join()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JS(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{reps:o}=s;if(r.dtype==="string"||r.shape.length>5){const i=t.readSync(r.dataId),u=r.dtype==="string"?i.map(d=>qr(d)):i,c=lt(r.shape,r.dtype,u),h=VH(c,o);return t.makeTensorInfo(h.shape,h.dtype,h.values)}const a=new FZ(r.shape,o);return t.runWebGLProgram(a,[r],r.dtype)}const LZ={kernelName:Ol,backendName:"webgl",kernelFunc:JS};class PZ{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=e,this.userCode=`
       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // We compare elements pair-wise within a group of size 2 * inc.
         // The comparing rule for each group alternates between ascending
         // and descending. Within each group, we compare each pair at
         // positions i and i+inc. To decide whether an element at position i
         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than
         // inc, it is in the first half of the group, we denote it as x0,
         // otherwise we denote it as x1.
         // For example, as shown in the Bitonic top K paper referenced above,
         // Figure5(a) shows that element[1] is in the
         // second half of the group when group size is 2, but it is in the
         // first half of the group when group size is 4.

         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;
         int i = isFirstInPair ? elemIdx : elemIdx - inc;

         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));
         float x0 = i0 < n ? getX(batch, i0) : negativeInf;
         float x1 = i1 < n ? getX(batch, i1) : negativeInf;

         // Denotes which direction indices are in (ascending or descending).
         bool reverse = imod(elemIdx, 2 * dir) >= dir;
         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);
         if (reverse == isGreater) { // Elements in opposite order of direction
           int iTemp = i0;
           i0 = i1;
           i1 = iTemp;
         }
         if (isFirstInPair) {
            setOutput(float(i0));
         } else {
            setOutput(float(i1));
         }
       }
     `}}class zZ{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=e,this.userCode=`
    void main() {
         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // The output size is half of the previous size.
         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),
         // we only need to output the indices at positions |, the indices at
         // positions _ can be thrown away, see Figure5(b) After Phase 2
         // (Merge phase) in the Bitonic Top K paper referenced above.
         // For example, the paper shows we only need to output the orange bars.
         // The output sequence should look like this | | | | | | | |.
         // Because the sequence is halved, to map the output index back
         // to the previous sequence to find the corresponding value,
         // we need to double the index. When we double the index,
         // we basically interpolate a position, so 2i looks like
         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position
         // of each 2k positions by - elemIdx % k. E.g. for output at
         // index 4,5,6,7, we want to get the corresponding element at
         // original index 8,9,10,11, for output at index 8,9,10,11,
         // we want to get the corresponding element at original index
         // 16,17,18,19, so on and so forth.

         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));
         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));

         float x0 = getX(batch, i0);
         float x1 = i1 < n ? getX(batch, i1) : x0;

         setOutput(x0 >= x1 ? float(i0) : float(i1));
       }
     `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ko(n,e){e!==null&&n.disposeIntermediateTensorInfo(e)}function M0(n){let e=1;for(;e<n;)e*=2;return e}function BZ(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{k:o,sorted:a}=s,l=de().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),i=de().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),u=r.shape,c=u[u.length-1];if(t.shouldExecuteOnCPU([r])||c<l||o>i){const O=t.readSync(r.dataId),[B,j]=WH(O,u,r.dtype,o,a);return[t.makeTensorInfo(B.shape,B.dtype,B.values),t.makeTensorInfo(j.shape,j.dtype,j.values)]}if(o===0)return u[u.length-1]=0,[t.makeTensorInfo(u,r.dtype,[]),t.makeTensorInfo(u,"int32",[])];if(c===1)return[r,iu({attrs:{shape:u,dtype:"int32",value:0},backend:t})];const h=t.texData.get(r.dataId),d=h!==null&&h.isPacked,p=d?t.unpackTensor(r):r,g=me(u)/c,y=Fe({inputs:{x:p},attrs:{shape:[g,c]},backend:t});d&&ko(t,p);const x=M0(o),w=M0(c);let v=null;const k=()=>v===null?[y,y]:[y,v],C=(O,B,j)=>{const U=k(),K=new PZ(j),Z=[[c],[v===null?1:0],[Number.NEGATIVE_INFINITY],[O],[B]],ue=v;v=t.runWebGLProgram(K,U,"int32",Z),ko(t,ue)};for(let O=1;O<x;O*=2){const B=O*2;for(let j=O;j>=1;j/=2)C(B,j,[g,w])}for(let O=w;O>x;O/=2){const B=k(),j=new zZ([g,O/2]),K=[[c],[v===null?1:0],[x]],H=v;v=t.runWebGLProgram(j,B,"int32",K),ko(t,H);const Z=x/2,ue=Z*2;for(let M=Z;M>=1;M/=2)C(ue,M,v.shape)}let I=v;v=oi({inputs:{x:v},backend:t,attrs:{begin:0,size:[g,o]}}),ko(t,I);let N=GS({inputs:{x:y,indices:v},backend:t,attrs:{axis:1,batchDims:1}});ko(t,y);const E=u.slice(0,-1);E.push(o),I=v,v=Fe({inputs:{x:v},attrs:{shape:E},backend:t}),ko(t,I);const R=N;return N=Fe({inputs:{x:N},attrs:{shape:E},backend:t}),ko(t,R),[N,v]}const MZ={kernelName:rm,backendName:"webgl",kernelFunc:BZ};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class VZ{constructor(e,t,s,r,o,a){this.variableNames=["Image","Transforms"],this.outputShape=a;const l=s==="nearest"?1:2;let i;switch(r){case"constant":i=1;break;case"reflect":i=2;break;case"wrap":i=3;break;case"nearest":i=4;break;default:i=1;break}this.userCode=`
            float mapCoord(float outCoord, float len) {
              float inCoord = outCoord;
              if(${i} == 2) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    if (inCoord < sz2) {
                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +
                      inCoord;
                    }
                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    inCoord -= sz2 * float(int(float(inCoord / sz2)));
                    if (inCoord >= len) {
                      inCoord = sz2 - inCoord - 1.0;
                    }
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${i} == 3) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord -= len * float(int(float(inCoord / sz)));
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${i} == 4) {
                return clamp(outCoord, 0.0, len - 1.0);
              } else {
                return outCoord;
              }
            }

            float readWithFillValue(int batch, int coordY, int coordX,
              int channel) {
              float outputValue;
              if (0 <= coordY && coordY < ${e} && 0 <= coordX && coordX < ${t}) {
                  outputValue = getImage(batch, coordY, coordX, channel);
              } else {
                outputValue = float(${o});
              }
              return outputValue;
            }

            void main() {
              ivec4 coords = getOutputCoords();
              float outputValue;
              int batch = coords[0];
              int x = coords[2];
              int y = coords[1];
              int channel = coords[3];
              float xf = float(x);
              float yf = float(y);
              float a1 = getTransforms(batch, 0);
              float a2 = getTransforms(batch, 1);
              float a3 = getTransforms(batch, 2);
              float b1 = getTransforms(batch, 3);
              float b2 = getTransforms(batch, 4);
              float b3 = getTransforms(batch, 5);
              float c1 = getTransforms(batch, 6);
              float c2 = getTransforms(batch, 7);
              float projection = c1 * xf + c2 * yf + 1.0;
              if (projection == 0.0) {
                outputValue = float(${o});
              } else {
                float inX = (a1 * xf + a2 * yf + a3) / projection;
                float inY = (b1 * xf + b2 * yf + b3) / projection;
                float mapX = mapCoord(inX, float(${t}));
                float mapY = mapCoord(inY, float(${e}));

                if (${l} == 1) {
                  int coordY = int(round(mapY));
                  int coordX = int(round(mapX));
                  outputValue = readWithFillValue(batch, coordY, coordX,
                    channel);
                } else {
                  float yFloor = floor(mapY);
                  float xFloor = floor(mapX);
                  float yCeil = yFloor + 1.0;
                  float xCeil = xFloor + 1.0;
                  float valueYFloor = (xCeil - mapX) *
                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);
                  float valueYCeil = (xCeil - mapX) *
                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);
                  outputValue = (yCeil - mapY) * valueYFloor +
                  (mapY - yFloor) * valueYCeil;
                }
              }
              setOutput(outputValue);
            }
        `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WZ(n){const{inputs:e,backend:t,attrs:s}=n,{image:r,transforms:o}=e,{interpolation:a,fillMode:l,fillValue:i,outputShape:u}=s,[c,h,d,p]=r.shape,[f,g]=u??[h,d],y=[c,f,g,p],x=new VZ(h,d,a,l,i,y);return t.runWebGLProgram(x,[r,o],"float32")}const UZ={kernelName:om,backendName:"webgl",kernelFunc:WZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GZ(n){const{inputs:e,attrs:t,backend:s}=n,{axis:r}=t,{x:o}=e;ru(o,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const a=s.readSync(o.dataId),{outputValues:l,outputShape:i,indices:u}=UH(a,r,o.shape,o.dtype);return[s.makeTensorInfo(i,o.dtype,l),s.makeTensorInfo([u.length],"int32",u)]}const HZ={kernelName:am,backendName:"webgl",kernelFunc:GZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jZ(n){const{inputs:e,backend:t,attrs:s}=n,{value:r}=e;let{axis:o}=s;o<0&&(o+=r.shape.length);const a=r,l=a.shape.length,i=r.shape[o],u=new Array(l-1);let c=0;for(let g=0;g<l;g++)g!==o&&(u[c++]=a.shape[g]);const h=[],d=new Array(l).fill(0),p=a.shape.slice();p[o]=1;const f=new Array(i);for(let g=0;g<f.length;g++){d[o]=g;const y=oi({inputs:{x:a},backend:t,attrs:{begin:d,size:p}}),x=Fe({inputs:{x:y},backend:t,attrs:{shape:u}});f[g]=x,h.push(y)}return h.forEach(g=>t.disposeIntermediateTensorInfo(g)),f}const qZ={kernelName:Sh,backendName:"webgl",kernelFunc:jZ};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class KZ{constructor(e,t){this.variableNames=["x","segmentIds"];const s=e.windowSize,r=e.batchSize,o=e.inSize,a=e.numSegments,l=a*Math.ceil(o/s);this.outputShape=[r,l];const i="0.0",u="sumValue",c=Math.floor(s/4)*4,h=s%4,d=`
        sumValue += dot(values, segFilter);
    `;let p="";o%s>0&&(p=`
        if (inIdx < 0 || inIdx >= ${o}) {
          return initializationValue;
        }
      `);let f="";o%s>0&&(f=`
        if (inIdx < 0 || inIdx >= ${o}) {
          return -1.0;
        }
      `),this.userCode=`
      const float initializationValue = ${i};

      float getValue(int batch, int inIdx) {
        ${p}
        return getX(batch, inIdx);
      }

      float getSegmentIdAtIndex(int inIdx) {
        ${f}
        return getSegmentIds(inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = int(floor(float(outIdx) / float(
          ${a})) * float(${s}));
        int currentSeg = int(mod(float(outIdx), float(${a})));

        float sumValue = 0.0;

        for (int i = 0; i < ${c}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0
          );

          ${d}
        }

        int inIdx = inOffset + ${c};
        if (${h===1}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            0,
            0,
            0
          );

          ${d}
        } else if (${h===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
              0,
              0
          );

          ${d}
        } else if (${h===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            0
          );

          ${d}
        }
        setOutput(${u});
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XZ(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,segmentIds:o}=e,{numSegments:a}=s,l=r.shape.length,i=[];let u=0;const c=jt([u],l);let h=r;c!=null&&(h=Mn({inputs:{x:r},backend:t,attrs:{perm:c}}),i.push(h),u=Qt(1,l)[0]);const d=Nw(h.shape,u,a),p=me([h.shape[u]]),f=Fe({inputs:{x:h},backend:t,attrs:{shape:[-1,p]}});i.push(f);const g=um(r.dtype),y=(k,C,I,N,E)=>{const R=k.shape[0],O=k.shape[1],B=Iw(O,E),j={windowSize:B,inSize:O,batchSize:R,numSegments:E},U=new KZ(j,C),K=t.compileAndRun(U,[k,I],N);if(i.push(K),K.shape[1]===E)return K;const H=ZS({backend:t,attrs:{start:0,stop:E,step:1,dtype:"float32"}}),Z=JS({inputs:{x:H},backend:t,attrs:{reps:[O/B]}});return i.push(H),i.push(Z),y(K,C,Z,N,E)},x=y(f,"unsortedSegmentSum",o,g,a),w=Fe({inputs:{x},backend:t,attrs:{shape:d}});let v=w;if(c!=null){i.push(w);const k=lo(c);v=Mn({inputs:{x:v},backend:t,attrs:{perm:k}})}return i.forEach(k=>t.disposeIntermediateTensorInfo(k)),v}const YZ={kernelName:Ch,backendName:"webgl",kernelFunc:XZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ZZ=[Fj,Lj,Bj,Wj,Gj,qj,Xj,Zj,t8,s8,a8,u8,d8,g8,x8,v8,S8,$8,_8,A8,O8,W8,G8,K8,Y8,nq,rq,lq,yj,hq,gq,wq,Nq,_q,Aq,Rq,Oq,Bq,Wq,Hq,qq,Xq,Zq,eK,nK,aK,lK,hK,fK,gK,wK,CK,TK,AK,FK,OK,PK,BK,VK,UK,HK,XK,JK,tX,sX,aX,uX,pX,yX,gj,xX,fq,kX,IX,TX,xj,DX,LX,zX,WX,HX,XX,JX,n9,a9,u9,h9,m9,y9,x9,S9,I9,$9,_9,A9,O9,B9,U9,Z9,kj,t7,r7,i7,c7,J8,p7,m7,y7,w7,C7,vj,N7,T7,E7,D7,R7,Q8,q9,L7,M7,G7,Cj,K7,Z7,tY,rY,lY,cY,pY,gY,xY,kY,IY,TY,DY,OY,BY,WY,M8,X9,HY,qY,XY,ZY,QY,tZ,sZ,oZ,iZ,cZ,dZ,fZ,gZ,xZ,vZ,SZ,IZ,K9,Aj,TZ,AZ,RZ,LZ,MZ,UZ,Dj,HZ,qZ,YZ,f7];for(const n of ZZ)K0(n);chrome.runtime.onInstalled.addListener(async()=>{await chrome.tabs.create({url:"./src/startup/index.html"})});chrome.alarms.onAlarm.addListener(n=>{n.name==="checkTmp"&&wN(tp.Tmp).then(e=>{const t=e.filter(s=>Date.now()-parseInt(s.split("@")[1])<0);vN(tp.Tmp,t).then()})});chrome.runtime.onMessage.addListener((n,e,t)=>(chrome.tabs.query({active:!0,lastFocusedWindow:!0}).then(([s])=>{switch(n.type){case"detection":return chrome.tabs.sendMessage(s.id,{type:"detection"}).then(r=>t(r)),!0;case"close":return chrome.tabs.remove(s.id).then(),!0;case"list":return chrome.tabs.create({url:`./src/list/index.html?listType=${n.listType}`}).then(),!0;case"predict":R3(()=>`chrome-extension://${chrome.runtime.id}/inference.wasm`),O3(`chrome-extension://${chrome.runtime.id}/tfjs_model/model.json`).then(r=>{r.executeAsync({copied:Yt(n.copied,[1],"int32"),google_analytics:Yt(n.googleAnalytics,[1],"int32"),script_tag_count:Yt(n.scriptTagCount,[1],"int32"),external_link_percentage:Yt(n.externalLinkPercentage,[1]),no_title:Yt(n.noTitle,[1],"int32"),same_page_link_count:Yt(n.samePageLink,[1],"int32"),iframe_tag_count:Yt(n.iframeTagCount,[1],"int32"),tag_count_in_head_tag:Yt(n.tagCountInHeadTag,[1],"int32"),no_domain_in_internal_link:Yt(n.noDomainInInternalLink,[1]),invalid_kiyaku:Yt(n.invalidKiyaku,[1],"int32"),ip_address_in_link:Yt(n.ipAddressInLink,[1],"int32")}).then(o=>t(o.dataSync()[0]))})}}),!0));chrome.tabs.onRemoved.addListener(n=>{kN(tp.Tmp,String(n),!0).then()});const JZ=async()=>{await chrome.alarms.get("checkTmp")===void 0&&await chrome.alarms.create("checkTmp",{periodInMinutes:.5})};JZ().then();
